//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8745
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BaseModule_Economic {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataSet : global::System.Data.DataSet {
        
        private View_Bus_PurchasingMG_AccountDataTable tableView_Bus_PurchasingMG_Account;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ReportDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View_Bus_PurchasingMG_Account"] != null)) {
                    base.Tables.Add(new View_Bus_PurchasingMG_AccountDataTable(ds.Tables["View_Bus_PurchasingMG_Account"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Bus_PurchasingMG_AccountDataTable View_Bus_PurchasingMG_Account {
            get {
                return this.tableView_Bus_PurchasingMG_Account;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ReportDataSet cln = ((ReportDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View_Bus_PurchasingMG_Account"] != null)) {
                    base.Tables.Add(new View_Bus_PurchasingMG_AccountDataTable(ds.Tables["View_Bus_PurchasingMG_Account"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableView_Bus_PurchasingMG_Account = ((View_Bus_PurchasingMG_AccountDataTable)(base.Tables["View_Bus_PurchasingMG_Account"]));
            if ((initTable == true)) {
                if ((this.tableView_Bus_PurchasingMG_Account != null)) {
                    this.tableView_Bus_PurchasingMG_Account.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ReportDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView_Bus_PurchasingMG_Account = new View_Bus_PurchasingMG_AccountDataTable();
            base.Tables.Add(this.tableView_Bus_PurchasingMG_Account);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Bus_PurchasingMG_Account() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataSet ds = new ReportDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void View_Bus_PurchasingMG_AccountRowChangeEventHandler(object sender, View_Bus_PurchasingMG_AccountRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Bus_PurchasingMG_AccountDataTable : global::System.Data.TypedTableBase<View_Bus_PurchasingMG_AccountRow> {
            
            private global::System.Data.DataColumn column挂账年月;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column挂账方式;
            
            private global::System.Data.DataColumn column协议单价;
            
            private global::System.Data.DataColumn column税率;
            
            private global::System.Data.DataColumn column上月未挂;
            
            private global::System.Data.DataColumn column本月入库;
            
            private global::System.Data.DataColumn column本月应挂;
            
            private global::System.Data.DataColumn column本月未挂;
            
            private global::System.Data.DataColumn column到票数量;
            
            private global::System.Data.DataColumn column到票金额;
            
            private global::System.Data.DataColumn columnF_Id;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn column计量单位;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountDataTable() {
                this.TableName = "View_Bus_PurchasingMG_Account";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Bus_PurchasingMG_AccountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Bus_PurchasingMG_AccountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挂账年月Column {
                get {
                    return this.column挂账年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挂账方式Column {
                get {
                    return this.column挂账方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 协议单价Column {
                get {
                    return this.column协议单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 税率Column {
                get {
                    return this.column税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 上月未挂Column {
                get {
                    return this.column上月未挂;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 本月入库Column {
                get {
                    return this.column本月入库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 本月应挂Column {
                get {
                    return this.column本月应挂;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 本月未挂Column {
                get {
                    return this.column本月未挂;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到票数量Column {
                get {
                    return this.column到票数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到票金额Column {
                get {
                    return this.column到票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F_IdColumn {
                get {
                    return this.columnF_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计量单位Column {
                get {
                    return this.column计量单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRow this[int index] {
                get {
                    return ((View_Bus_PurchasingMG_AccountRow)(this.Rows[index]));
                }
            }
            
            public event View_Bus_PurchasingMG_AccountRowChangeEventHandler View_Bus_PurchasingMG_AccountRowChanging;
            
            public event View_Bus_PurchasingMG_AccountRowChangeEventHandler View_Bus_PurchasingMG_AccountRowChanged;
            
            public event View_Bus_PurchasingMG_AccountRowChangeEventHandler View_Bus_PurchasingMG_AccountRowDeleting;
            
            public event View_Bus_PurchasingMG_AccountRowChangeEventHandler View_Bus_PurchasingMG_AccountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Bus_PurchasingMG_AccountRow(View_Bus_PurchasingMG_AccountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRow AddView_Bus_PurchasingMG_AccountRow(
                        string 挂账年月, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供应商, 
                        string 挂账方式, 
                        string 协议单价, 
                        string 税率, 
                        string 上月未挂, 
                        string 本月入库, 
                        string 本月应挂, 
                        string 本月未挂, 
                        string 到票数量, 
                        string 到票金额, 
                        string F_Id, 
                        string GoodsID, 
                        string 计量单位) {
                View_Bus_PurchasingMG_AccountRow rowView_Bus_PurchasingMG_AccountRow = ((View_Bus_PurchasingMG_AccountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        挂账年月,
                        图号型号,
                        物品名称,
                        规格,
                        供应商,
                        挂账方式,
                        协议单价,
                        税率,
                        上月未挂,
                        本月入库,
                        本月应挂,
                        本月未挂,
                        到票数量,
                        到票金额,
                        F_Id,
                        GoodsID,
                        计量单位};
                rowView_Bus_PurchasingMG_AccountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Bus_PurchasingMG_AccountRow);
                return rowView_Bus_PurchasingMG_AccountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRow FindByF_Id(string F_Id) {
                return ((View_Bus_PurchasingMG_AccountRow)(this.Rows.Find(new object[] {
                            F_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Bus_PurchasingMG_AccountDataTable cln = ((View_Bus_PurchasingMG_AccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Bus_PurchasingMG_AccountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column挂账年月 = base.Columns["挂账年月"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商 = base.Columns["供应商"];
                this.column挂账方式 = base.Columns["挂账方式"];
                this.column协议单价 = base.Columns["协议单价"];
                this.column税率 = base.Columns["税率"];
                this.column上月未挂 = base.Columns["上月未挂"];
                this.column本月入库 = base.Columns["本月入库"];
                this.column本月应挂 = base.Columns["本月应挂"];
                this.column本月未挂 = base.Columns["本月未挂"];
                this.column到票数量 = base.Columns["到票数量"];
                this.column到票金额 = base.Columns["到票金额"];
                this.columnF_Id = base.Columns["F_Id"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.column计量单位 = base.Columns["计量单位"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column挂账年月 = new global::System.Data.DataColumn("挂账年月", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挂账年月);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column挂账方式 = new global::System.Data.DataColumn("挂账方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挂账方式);
                this.column协议单价 = new global::System.Data.DataColumn("协议单价", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column协议单价);
                this.column税率 = new global::System.Data.DataColumn("税率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税率);
                this.column上月未挂 = new global::System.Data.DataColumn("上月未挂", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上月未挂);
                this.column本月入库 = new global::System.Data.DataColumn("本月入库", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本月入库);
                this.column本月应挂 = new global::System.Data.DataColumn("本月应挂", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本月应挂);
                this.column本月未挂 = new global::System.Data.DataColumn("本月未挂", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本月未挂);
                this.column到票数量 = new global::System.Data.DataColumn("到票数量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到票数量);
                this.column到票金额 = new global::System.Data.DataColumn("到票金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到票金额);
                this.columnF_Id = new global::System.Data.DataColumn("F_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Id);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.column计量单位 = new global::System.Data.DataColumn("计量单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计量单位);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("View_Bus_PurchasingMG_AccountKey1", new global::System.Data.DataColumn[] {
                                this.columnF_Id}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("View_Bus_PurchasingMG_AccountKey2", new global::System.Data.DataColumn[] {
                                this.column挂账年月,
                                this.column供应商,
                                this.columnGoodsID}, false));
                this.column挂账年月.AllowDBNull = false;
                this.column供应商.AllowDBNull = false;
                this.columnF_Id.AllowDBNull = false;
                this.columnF_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRow NewView_Bus_PurchasingMG_AccountRow() {
                return ((View_Bus_PurchasingMG_AccountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Bus_PurchasingMG_AccountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Bus_PurchasingMG_AccountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Bus_PurchasingMG_AccountRowChanged != null)) {
                    this.View_Bus_PurchasingMG_AccountRowChanged(this, new View_Bus_PurchasingMG_AccountRowChangeEvent(((View_Bus_PurchasingMG_AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Bus_PurchasingMG_AccountRowChanging != null)) {
                    this.View_Bus_PurchasingMG_AccountRowChanging(this, new View_Bus_PurchasingMG_AccountRowChangeEvent(((View_Bus_PurchasingMG_AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Bus_PurchasingMG_AccountRowDeleted != null)) {
                    this.View_Bus_PurchasingMG_AccountRowDeleted(this, new View_Bus_PurchasingMG_AccountRowChangeEvent(((View_Bus_PurchasingMG_AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Bus_PurchasingMG_AccountRowDeleting != null)) {
                    this.View_Bus_PurchasingMG_AccountRowDeleting(this, new View_Bus_PurchasingMG_AccountRowChangeEvent(((View_Bus_PurchasingMG_AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Bus_PurchasingMG_AccountRow(View_Bus_PurchasingMG_AccountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataSet ds = new ReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Bus_PurchasingMG_AccountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Bus_PurchasingMG_AccountRow : global::System.Data.DataRow {
            
            private View_Bus_PurchasingMG_AccountDataTable tableView_Bus_PurchasingMG_Account;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Bus_PurchasingMG_AccountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Bus_PurchasingMG_Account = ((View_Bus_PurchasingMG_AccountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挂账年月 {
                get {
                    return ((string)(this[this.tableView_Bus_PurchasingMG_Account.挂账年月Column]));
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.挂账年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.图号型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“图号型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.物品名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“物品名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_Bus_PurchasingMG_Account.供应商Column]));
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挂账方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.挂账方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“挂账方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.挂账方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 协议单价 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.协议单价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“协议单价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.协议单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 税率 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“税率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 上月未挂 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.上月未挂Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“上月未挂”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.上月未挂Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 本月入库 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.本月入库Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“本月入库”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.本月入库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 本月应挂 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.本月应挂Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“本月应挂”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.本月应挂Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 本月未挂 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.本月未挂Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“本月未挂”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.本月未挂Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 到票数量 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.到票数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“到票数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.到票数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 到票金额 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.到票金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“到票金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.到票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F_Id {
                get {
                    return ((string)(this[this.tableView_Bus_PurchasingMG_Account.F_IdColumn]));
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.F_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsID {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.GoodsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“GoodsID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 计量单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_Bus_PurchasingMG_Account.计量单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Bus_PurchasingMG_Account”中列“计量单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Bus_PurchasingMG_Account.计量单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is图号型号Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.图号型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set图号型号Null() {
                this[this.tableView_Bus_PurchasingMG_Account.图号型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品名称Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.物品名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品名称Null() {
                this[this.tableView_Bus_PurchasingMG_Account.物品名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is规格Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set规格Null() {
                this[this.tableView_Bus_PurchasingMG_Account.规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is挂账方式Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.挂账方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set挂账方式Null() {
                this[this.tableView_Bus_PurchasingMG_Account.挂账方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is协议单价Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.协议单价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set协议单价Null() {
                this[this.tableView_Bus_PurchasingMG_Account.协议单价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is税率Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set税率Null() {
                this[this.tableView_Bus_PurchasingMG_Account.税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is上月未挂Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.上月未挂Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set上月未挂Null() {
                this[this.tableView_Bus_PurchasingMG_Account.上月未挂Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is本月入库Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.本月入库Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set本月入库Null() {
                this[this.tableView_Bus_PurchasingMG_Account.本月入库Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is本月应挂Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.本月应挂Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set本月应挂Null() {
                this[this.tableView_Bus_PurchasingMG_Account.本月应挂Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is本月未挂Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.本月未挂Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set本月未挂Null() {
                this[this.tableView_Bus_PurchasingMG_Account.本月未挂Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is到票数量Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.到票数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set到票数量Null() {
                this[this.tableView_Bus_PurchasingMG_Account.到票数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is到票金额Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.到票金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set到票金额Null() {
                this[this.tableView_Bus_PurchasingMG_Account.到票金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsIDNull() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.GoodsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsIDNull() {
                this[this.tableView_Bus_PurchasingMG_Account.GoodsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is计量单位Null() {
                return this.IsNull(this.tableView_Bus_PurchasingMG_Account.计量单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set计量单位Null() {
                this[this.tableView_Bus_PurchasingMG_Account.计量单位Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Bus_PurchasingMG_AccountRowChangeEvent : global::System.EventArgs {
            
            private View_Bus_PurchasingMG_AccountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRowChangeEvent(View_Bus_PurchasingMG_AccountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Bus_PurchasingMG_AccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591