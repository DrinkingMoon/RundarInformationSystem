//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8745
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Form_Peripheral_HR {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DepotManagementDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DepotManagementDataSet : global::System.Data.DataSet {
        
        private HR_LeaveBillDataTable tableHR_LeaveBill;
        
        private HR_LeaveTypeDataTable tableHR_LeaveType;
        
        private HR_OnBusinessPersonnelDataTable tableHR_OnBusinessPersonnel;
        
        private HR_OnBusinessScheduleDataTable tableHR_OnBusinessSchedule;
        
        private HR_PersonnelArchiveDataTable tableHR_PersonnelArchive;
        
        private HR_PersonnelArchiveChangeDataTable tableHR_PersonnelArchiveChange;
        
        private HR_PersonnelStatusDataTable tableHR_PersonnelStatus;
        
        private HR_ResumeDataTable tableHR_Resume;
        
        private HR_WorkSchedulingDataTable tableHR_WorkScheduling;
        
        private View_HR_DeptDataTable tableView_HR_Dept;
        
        private View_HR_PersonnelLaborContractDataTable tableView_HR_PersonnelLaborContract;
        
        private View_HR_OperatingPostDataTable tableView_HR_OperatingPost;
        
        private View_HR_PersonnelArchiveDataTable tableView_HR_PersonnelArchive;
        
        private View_HR_PersonnelArchiveChangeDataTable tableView_HR_PersonnelArchiveChange;
        
        private HR_OnBusinessBillDataTable tableHR_OnBusinessBill;
        
        private HR_PostTypeDataTable tableHR_PostType;
        
        private View_HR_OnBusinessPersonnelDataTable tableView_HR_OnBusinessPersonnel;
        
        private View_HR_OnBusinessBillDataTable tableView_HR_OnBusinessBill;
        
        private HR_PersonnelArchiveListDataTable tableHR_PersonnelArchiveList;
        
        private global::System.Data.DataRelation relationFK_HR_LEAVE_REFERENCE_HR_LEAVE;
        
        private global::System.Data.DataRelation relationFK_HR_LEAVE_REFERENCE_HR_PERSO;
        
        private global::System.Data.DataRelation relationFK_HR_PERSO_REFERENCE_HR_PERSO;
        
        private global::System.Data.DataRelation relationFK_HR_PERSO_REFERENCE_HR_RESUM;
        
        private global::System.Data.DataRelation relationFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM;
        
        private global::System.Data.DataRelation relationFK_HR_ONBUS_REFERENCE_HR_ONBUS_1;
        
        private global::System.Data.DataRelation relationFK_HR_ONBUS_REFERENCE_HR_ONBUS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepotManagementDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DepotManagementDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HR_LeaveBill"] != null)) {
                    base.Tables.Add(new HR_LeaveBillDataTable(ds.Tables["HR_LeaveBill"]));
                }
                if ((ds.Tables["HR_LeaveType"] != null)) {
                    base.Tables.Add(new HR_LeaveTypeDataTable(ds.Tables["HR_LeaveType"]));
                }
                if ((ds.Tables["HR_OnBusinessPersonnel"] != null)) {
                    base.Tables.Add(new HR_OnBusinessPersonnelDataTable(ds.Tables["HR_OnBusinessPersonnel"]));
                }
                if ((ds.Tables["HR_OnBusinessSchedule"] != null)) {
                    base.Tables.Add(new HR_OnBusinessScheduleDataTable(ds.Tables["HR_OnBusinessSchedule"]));
                }
                if ((ds.Tables["HR_PersonnelArchive"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveDataTable(ds.Tables["HR_PersonnelArchive"]));
                }
                if ((ds.Tables["HR_PersonnelArchiveChange"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveChangeDataTable(ds.Tables["HR_PersonnelArchiveChange"]));
                }
                if ((ds.Tables["HR_PersonnelStatus"] != null)) {
                    base.Tables.Add(new HR_PersonnelStatusDataTable(ds.Tables["HR_PersonnelStatus"]));
                }
                if ((ds.Tables["HR_Resume"] != null)) {
                    base.Tables.Add(new HR_ResumeDataTable(ds.Tables["HR_Resume"]));
                }
                if ((ds.Tables["HR_WorkScheduling"] != null)) {
                    base.Tables.Add(new HR_WorkSchedulingDataTable(ds.Tables["HR_WorkScheduling"]));
                }
                if ((ds.Tables["View_HR_Dept"] != null)) {
                    base.Tables.Add(new View_HR_DeptDataTable(ds.Tables["View_HR_Dept"]));
                }
                if ((ds.Tables["View_HR_PersonnelLaborContract"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelLaborContractDataTable(ds.Tables["View_HR_PersonnelLaborContract"]));
                }
                if ((ds.Tables["View_HR_OperatingPost"] != null)) {
                    base.Tables.Add(new View_HR_OperatingPostDataTable(ds.Tables["View_HR_OperatingPost"]));
                }
                if ((ds.Tables["View_HR_PersonnelArchive"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelArchiveDataTable(ds.Tables["View_HR_PersonnelArchive"]));
                }
                if ((ds.Tables["View_HR_PersonnelArchiveChange"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelArchiveChangeDataTable(ds.Tables["View_HR_PersonnelArchiveChange"]));
                }
                if ((ds.Tables["HR_OnBusinessBill"] != null)) {
                    base.Tables.Add(new HR_OnBusinessBillDataTable(ds.Tables["HR_OnBusinessBill"]));
                }
                if ((ds.Tables["HR_PostType"] != null)) {
                    base.Tables.Add(new HR_PostTypeDataTable(ds.Tables["HR_PostType"]));
                }
                if ((ds.Tables["View_HR_OnBusinessPersonnel"] != null)) {
                    base.Tables.Add(new View_HR_OnBusinessPersonnelDataTable(ds.Tables["View_HR_OnBusinessPersonnel"]));
                }
                if ((ds.Tables["View_HR_OnBusinessBill"] != null)) {
                    base.Tables.Add(new View_HR_OnBusinessBillDataTable(ds.Tables["View_HR_OnBusinessBill"]));
                }
                if ((ds.Tables["HR_PersonnelArchiveList"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveListDataTable(ds.Tables["HR_PersonnelArchiveList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_LeaveBillDataTable HR_LeaveBill {
            get {
                return this.tableHR_LeaveBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_LeaveTypeDataTable HR_LeaveType {
            get {
                return this.tableHR_LeaveType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_OnBusinessPersonnelDataTable HR_OnBusinessPersonnel {
            get {
                return this.tableHR_OnBusinessPersonnel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_OnBusinessScheduleDataTable HR_OnBusinessSchedule {
            get {
                return this.tableHR_OnBusinessSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_PersonnelArchiveDataTable HR_PersonnelArchive {
            get {
                return this.tableHR_PersonnelArchive;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_PersonnelArchiveChangeDataTable HR_PersonnelArchiveChange {
            get {
                return this.tableHR_PersonnelArchiveChange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_PersonnelStatusDataTable HR_PersonnelStatus {
            get {
                return this.tableHR_PersonnelStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_ResumeDataTable HR_Resume {
            get {
                return this.tableHR_Resume;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_WorkSchedulingDataTable HR_WorkScheduling {
            get {
                return this.tableHR_WorkScheduling;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_DeptDataTable View_HR_Dept {
            get {
                return this.tableView_HR_Dept;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_PersonnelLaborContractDataTable View_HR_PersonnelLaborContract {
            get {
                return this.tableView_HR_PersonnelLaborContract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_OperatingPostDataTable View_HR_OperatingPost {
            get {
                return this.tableView_HR_OperatingPost;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_PersonnelArchiveDataTable View_HR_PersonnelArchive {
            get {
                return this.tableView_HR_PersonnelArchive;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_PersonnelArchiveChangeDataTable View_HR_PersonnelArchiveChange {
            get {
                return this.tableView_HR_PersonnelArchiveChange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_OnBusinessBillDataTable HR_OnBusinessBill {
            get {
                return this.tableHR_OnBusinessBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_PostTypeDataTable HR_PostType {
            get {
                return this.tableHR_PostType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_OnBusinessPersonnelDataTable View_HR_OnBusinessPersonnel {
            get {
                return this.tableView_HR_OnBusinessPersonnel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_HR_OnBusinessBillDataTable View_HR_OnBusinessBill {
            get {
                return this.tableView_HR_OnBusinessBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HR_PersonnelArchiveListDataTable HR_PersonnelArchiveList {
            get {
                return this.tableHR_PersonnelArchiveList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DepotManagementDataSet cln = ((DepotManagementDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HR_LeaveBill"] != null)) {
                    base.Tables.Add(new HR_LeaveBillDataTable(ds.Tables["HR_LeaveBill"]));
                }
                if ((ds.Tables["HR_LeaveType"] != null)) {
                    base.Tables.Add(new HR_LeaveTypeDataTable(ds.Tables["HR_LeaveType"]));
                }
                if ((ds.Tables["HR_OnBusinessPersonnel"] != null)) {
                    base.Tables.Add(new HR_OnBusinessPersonnelDataTable(ds.Tables["HR_OnBusinessPersonnel"]));
                }
                if ((ds.Tables["HR_OnBusinessSchedule"] != null)) {
                    base.Tables.Add(new HR_OnBusinessScheduleDataTable(ds.Tables["HR_OnBusinessSchedule"]));
                }
                if ((ds.Tables["HR_PersonnelArchive"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveDataTable(ds.Tables["HR_PersonnelArchive"]));
                }
                if ((ds.Tables["HR_PersonnelArchiveChange"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveChangeDataTable(ds.Tables["HR_PersonnelArchiveChange"]));
                }
                if ((ds.Tables["HR_PersonnelStatus"] != null)) {
                    base.Tables.Add(new HR_PersonnelStatusDataTable(ds.Tables["HR_PersonnelStatus"]));
                }
                if ((ds.Tables["HR_Resume"] != null)) {
                    base.Tables.Add(new HR_ResumeDataTable(ds.Tables["HR_Resume"]));
                }
                if ((ds.Tables["HR_WorkScheduling"] != null)) {
                    base.Tables.Add(new HR_WorkSchedulingDataTable(ds.Tables["HR_WorkScheduling"]));
                }
                if ((ds.Tables["View_HR_Dept"] != null)) {
                    base.Tables.Add(new View_HR_DeptDataTable(ds.Tables["View_HR_Dept"]));
                }
                if ((ds.Tables["View_HR_PersonnelLaborContract"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelLaborContractDataTable(ds.Tables["View_HR_PersonnelLaborContract"]));
                }
                if ((ds.Tables["View_HR_OperatingPost"] != null)) {
                    base.Tables.Add(new View_HR_OperatingPostDataTable(ds.Tables["View_HR_OperatingPost"]));
                }
                if ((ds.Tables["View_HR_PersonnelArchive"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelArchiveDataTable(ds.Tables["View_HR_PersonnelArchive"]));
                }
                if ((ds.Tables["View_HR_PersonnelArchiveChange"] != null)) {
                    base.Tables.Add(new View_HR_PersonnelArchiveChangeDataTable(ds.Tables["View_HR_PersonnelArchiveChange"]));
                }
                if ((ds.Tables["HR_OnBusinessBill"] != null)) {
                    base.Tables.Add(new HR_OnBusinessBillDataTable(ds.Tables["HR_OnBusinessBill"]));
                }
                if ((ds.Tables["HR_PostType"] != null)) {
                    base.Tables.Add(new HR_PostTypeDataTable(ds.Tables["HR_PostType"]));
                }
                if ((ds.Tables["View_HR_OnBusinessPersonnel"] != null)) {
                    base.Tables.Add(new View_HR_OnBusinessPersonnelDataTable(ds.Tables["View_HR_OnBusinessPersonnel"]));
                }
                if ((ds.Tables["View_HR_OnBusinessBill"] != null)) {
                    base.Tables.Add(new View_HR_OnBusinessBillDataTable(ds.Tables["View_HR_OnBusinessBill"]));
                }
                if ((ds.Tables["HR_PersonnelArchiveList"] != null)) {
                    base.Tables.Add(new HR_PersonnelArchiveListDataTable(ds.Tables["HR_PersonnelArchiveList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHR_LeaveBill = ((HR_LeaveBillDataTable)(base.Tables["HR_LeaveBill"]));
            if ((initTable == true)) {
                if ((this.tableHR_LeaveBill != null)) {
                    this.tableHR_LeaveBill.InitVars();
                }
            }
            this.tableHR_LeaveType = ((HR_LeaveTypeDataTable)(base.Tables["HR_LeaveType"]));
            if ((initTable == true)) {
                if ((this.tableHR_LeaveType != null)) {
                    this.tableHR_LeaveType.InitVars();
                }
            }
            this.tableHR_OnBusinessPersonnel = ((HR_OnBusinessPersonnelDataTable)(base.Tables["HR_OnBusinessPersonnel"]));
            if ((initTable == true)) {
                if ((this.tableHR_OnBusinessPersonnel != null)) {
                    this.tableHR_OnBusinessPersonnel.InitVars();
                }
            }
            this.tableHR_OnBusinessSchedule = ((HR_OnBusinessScheduleDataTable)(base.Tables["HR_OnBusinessSchedule"]));
            if ((initTable == true)) {
                if ((this.tableHR_OnBusinessSchedule != null)) {
                    this.tableHR_OnBusinessSchedule.InitVars();
                }
            }
            this.tableHR_PersonnelArchive = ((HR_PersonnelArchiveDataTable)(base.Tables["HR_PersonnelArchive"]));
            if ((initTable == true)) {
                if ((this.tableHR_PersonnelArchive != null)) {
                    this.tableHR_PersonnelArchive.InitVars();
                }
            }
            this.tableHR_PersonnelArchiveChange = ((HR_PersonnelArchiveChangeDataTable)(base.Tables["HR_PersonnelArchiveChange"]));
            if ((initTable == true)) {
                if ((this.tableHR_PersonnelArchiveChange != null)) {
                    this.tableHR_PersonnelArchiveChange.InitVars();
                }
            }
            this.tableHR_PersonnelStatus = ((HR_PersonnelStatusDataTable)(base.Tables["HR_PersonnelStatus"]));
            if ((initTable == true)) {
                if ((this.tableHR_PersonnelStatus != null)) {
                    this.tableHR_PersonnelStatus.InitVars();
                }
            }
            this.tableHR_Resume = ((HR_ResumeDataTable)(base.Tables["HR_Resume"]));
            if ((initTable == true)) {
                if ((this.tableHR_Resume != null)) {
                    this.tableHR_Resume.InitVars();
                }
            }
            this.tableHR_WorkScheduling = ((HR_WorkSchedulingDataTable)(base.Tables["HR_WorkScheduling"]));
            if ((initTable == true)) {
                if ((this.tableHR_WorkScheduling != null)) {
                    this.tableHR_WorkScheduling.InitVars();
                }
            }
            this.tableView_HR_Dept = ((View_HR_DeptDataTable)(base.Tables["View_HR_Dept"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_Dept != null)) {
                    this.tableView_HR_Dept.InitVars();
                }
            }
            this.tableView_HR_PersonnelLaborContract = ((View_HR_PersonnelLaborContractDataTable)(base.Tables["View_HR_PersonnelLaborContract"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_PersonnelLaborContract != null)) {
                    this.tableView_HR_PersonnelLaborContract.InitVars();
                }
            }
            this.tableView_HR_OperatingPost = ((View_HR_OperatingPostDataTable)(base.Tables["View_HR_OperatingPost"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_OperatingPost != null)) {
                    this.tableView_HR_OperatingPost.InitVars();
                }
            }
            this.tableView_HR_PersonnelArchive = ((View_HR_PersonnelArchiveDataTable)(base.Tables["View_HR_PersonnelArchive"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_PersonnelArchive != null)) {
                    this.tableView_HR_PersonnelArchive.InitVars();
                }
            }
            this.tableView_HR_PersonnelArchiveChange = ((View_HR_PersonnelArchiveChangeDataTable)(base.Tables["View_HR_PersonnelArchiveChange"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_PersonnelArchiveChange != null)) {
                    this.tableView_HR_PersonnelArchiveChange.InitVars();
                }
            }
            this.tableHR_OnBusinessBill = ((HR_OnBusinessBillDataTable)(base.Tables["HR_OnBusinessBill"]));
            if ((initTable == true)) {
                if ((this.tableHR_OnBusinessBill != null)) {
                    this.tableHR_OnBusinessBill.InitVars();
                }
            }
            this.tableHR_PostType = ((HR_PostTypeDataTable)(base.Tables["HR_PostType"]));
            if ((initTable == true)) {
                if ((this.tableHR_PostType != null)) {
                    this.tableHR_PostType.InitVars();
                }
            }
            this.tableView_HR_OnBusinessPersonnel = ((View_HR_OnBusinessPersonnelDataTable)(base.Tables["View_HR_OnBusinessPersonnel"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_OnBusinessPersonnel != null)) {
                    this.tableView_HR_OnBusinessPersonnel.InitVars();
                }
            }
            this.tableView_HR_OnBusinessBill = ((View_HR_OnBusinessBillDataTable)(base.Tables["View_HR_OnBusinessBill"]));
            if ((initTable == true)) {
                if ((this.tableView_HR_OnBusinessBill != null)) {
                    this.tableView_HR_OnBusinessBill.InitVars();
                }
            }
            this.tableHR_PersonnelArchiveList = ((HR_PersonnelArchiveListDataTable)(base.Tables["HR_PersonnelArchiveList"]));
            if ((initTable == true)) {
                if ((this.tableHR_PersonnelArchiveList != null)) {
                    this.tableHR_PersonnelArchiveList.InitVars();
                }
            }
            this.relationFK_HR_LEAVE_REFERENCE_HR_LEAVE = this.Relations["FK_HR_LEAVE_REFERENCE_HR_LEAVE"];
            this.relationFK_HR_LEAVE_REFERENCE_HR_PERSO = this.Relations["FK_HR_LEAVE_REFERENCE_HR_PERSO"];
            this.relationFK_HR_PERSO_REFERENCE_HR_PERSO = this.Relations["FK_HR_PERSO_REFERENCE_HR_PERSO"];
            this.relationFK_HR_PERSO_REFERENCE_HR_RESUM = this.Relations["FK_HR_PERSO_REFERENCE_HR_RESUM"];
            this.relationFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM = this.Relations["FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM"];
            this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS_1 = this.Relations["FK_HR_ONBUS_REFERENCE_HR_ONBUS_1"];
            this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS = this.Relations["FK_HR_ONBUS_REFERENCE_HR_ONBUS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DepotManagementDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DepotManagementDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHR_LeaveBill = new HR_LeaveBillDataTable();
            base.Tables.Add(this.tableHR_LeaveBill);
            this.tableHR_LeaveType = new HR_LeaveTypeDataTable();
            base.Tables.Add(this.tableHR_LeaveType);
            this.tableHR_OnBusinessPersonnel = new HR_OnBusinessPersonnelDataTable();
            base.Tables.Add(this.tableHR_OnBusinessPersonnel);
            this.tableHR_OnBusinessSchedule = new HR_OnBusinessScheduleDataTable();
            base.Tables.Add(this.tableHR_OnBusinessSchedule);
            this.tableHR_PersonnelArchive = new HR_PersonnelArchiveDataTable();
            base.Tables.Add(this.tableHR_PersonnelArchive);
            this.tableHR_PersonnelArchiveChange = new HR_PersonnelArchiveChangeDataTable();
            base.Tables.Add(this.tableHR_PersonnelArchiveChange);
            this.tableHR_PersonnelStatus = new HR_PersonnelStatusDataTable();
            base.Tables.Add(this.tableHR_PersonnelStatus);
            this.tableHR_Resume = new HR_ResumeDataTable();
            base.Tables.Add(this.tableHR_Resume);
            this.tableHR_WorkScheduling = new HR_WorkSchedulingDataTable();
            base.Tables.Add(this.tableHR_WorkScheduling);
            this.tableView_HR_Dept = new View_HR_DeptDataTable();
            base.Tables.Add(this.tableView_HR_Dept);
            this.tableView_HR_PersonnelLaborContract = new View_HR_PersonnelLaborContractDataTable();
            base.Tables.Add(this.tableView_HR_PersonnelLaborContract);
            this.tableView_HR_OperatingPost = new View_HR_OperatingPostDataTable();
            base.Tables.Add(this.tableView_HR_OperatingPost);
            this.tableView_HR_PersonnelArchive = new View_HR_PersonnelArchiveDataTable();
            base.Tables.Add(this.tableView_HR_PersonnelArchive);
            this.tableView_HR_PersonnelArchiveChange = new View_HR_PersonnelArchiveChangeDataTable();
            base.Tables.Add(this.tableView_HR_PersonnelArchiveChange);
            this.tableHR_OnBusinessBill = new HR_OnBusinessBillDataTable();
            base.Tables.Add(this.tableHR_OnBusinessBill);
            this.tableHR_PostType = new HR_PostTypeDataTable();
            base.Tables.Add(this.tableHR_PostType);
            this.tableView_HR_OnBusinessPersonnel = new View_HR_OnBusinessPersonnelDataTable();
            base.Tables.Add(this.tableView_HR_OnBusinessPersonnel);
            this.tableView_HR_OnBusinessBill = new View_HR_OnBusinessBillDataTable();
            base.Tables.Add(this.tableView_HR_OnBusinessBill);
            this.tableHR_PersonnelArchiveList = new HR_PersonnelArchiveListDataTable();
            base.Tables.Add(this.tableHR_PersonnelArchiveList);
            this.relationFK_HR_LEAVE_REFERENCE_HR_LEAVE = new global::System.Data.DataRelation("FK_HR_LEAVE_REFERENCE_HR_LEAVE", new global::System.Data.DataColumn[] {
                        this.tableHR_LeaveType.TypeCodeColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_LeaveBill.LeaveTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_HR_LEAVE_REFERENCE_HR_LEAVE);
            this.relationFK_HR_LEAVE_REFERENCE_HR_PERSO = new global::System.Data.DataRelation("FK_HR_LEAVE_REFERENCE_HR_PERSO", new global::System.Data.DataColumn[] {
                        this.tableHR_PersonnelArchive.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_LeaveBill.ApplicantColumn}, false);
            this.Relations.Add(this.relationFK_HR_LEAVE_REFERENCE_HR_PERSO);
            this.relationFK_HR_PERSO_REFERENCE_HR_PERSO = new global::System.Data.DataRelation("FK_HR_PERSO_REFERENCE_HR_PERSO", new global::System.Data.DataColumn[] {
                        this.tableHR_PersonnelStatus.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_PersonnelArchive.PersonnelStatusColumn}, false);
            this.Relations.Add(this.relationFK_HR_PERSO_REFERENCE_HR_PERSO);
            this.relationFK_HR_PERSO_REFERENCE_HR_RESUM = new global::System.Data.DataRelation("FK_HR_PERSO_REFERENCE_HR_RESUM", new global::System.Data.DataColumn[] {
                        this.tableHR_Resume.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_PersonnelArchive.ResumeIDColumn}, false);
            this.Relations.Add(this.relationFK_HR_PERSO_REFERENCE_HR_RESUM);
            this.relationFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM = new global::System.Data.DataRelation("FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM", new global::System.Data.DataColumn[] {
                        this.tableHR_Resume.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_PersonnelArchiveChange.ResumeIDColumn}, false);
            this.Relations.Add(this.relationFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM);
            this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS_1 = new global::System.Data.DataRelation("FK_HR_ONBUS_REFERENCE_HR_ONBUS_1", new global::System.Data.DataColumn[] {
                        this.tableHR_OnBusinessBill.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_OnBusinessSchedule.BillIDColumn}, false);
            this.Relations.Add(this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS_1);
            this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS = new global::System.Data.DataRelation("FK_HR_ONBUS_REFERENCE_HR_ONBUS", new global::System.Data.DataColumn[] {
                        this.tableHR_OnBusinessBill.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHR_OnBusinessPersonnel.BillIDColumn}, false);
            this.Relations.Add(this.relationFK_HR_ONBUS_REFERENCE_HR_ONBUS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_LeaveBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_LeaveType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_OnBusinessPersonnel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_OnBusinessSchedule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_PersonnelArchive() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_PersonnelArchiveChange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_PersonnelStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_Resume() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_WorkScheduling() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_Dept() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_PersonnelLaborContract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_OperatingPost() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_PersonnelArchive() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_PersonnelArchiveChange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_OnBusinessBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_PostType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_OnBusinessPersonnel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_HR_OnBusinessBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHR_PersonnelArchiveList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DepotManagementDataSet ds = new DepotManagementDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HR_LeaveBillRowChangeEventHandler(object sender, HR_LeaveBillRowChangeEvent e);
        
        public delegate void HR_LeaveTypeRowChangeEventHandler(object sender, HR_LeaveTypeRowChangeEvent e);
        
        public delegate void HR_OnBusinessPersonnelRowChangeEventHandler(object sender, HR_OnBusinessPersonnelRowChangeEvent e);
        
        public delegate void HR_OnBusinessScheduleRowChangeEventHandler(object sender, HR_OnBusinessScheduleRowChangeEvent e);
        
        public delegate void HR_PersonnelArchiveRowChangeEventHandler(object sender, HR_PersonnelArchiveRowChangeEvent e);
        
        public delegate void HR_PersonnelArchiveChangeRowChangeEventHandler(object sender, HR_PersonnelArchiveChangeRowChangeEvent e);
        
        public delegate void HR_PersonnelStatusRowChangeEventHandler(object sender, HR_PersonnelStatusRowChangeEvent e);
        
        public delegate void HR_ResumeRowChangeEventHandler(object sender, HR_ResumeRowChangeEvent e);
        
        public delegate void HR_WorkSchedulingRowChangeEventHandler(object sender, HR_WorkSchedulingRowChangeEvent e);
        
        public delegate void View_HR_DeptRowChangeEventHandler(object sender, View_HR_DeptRowChangeEvent e);
        
        public delegate void View_HR_PersonnelLaborContractRowChangeEventHandler(object sender, View_HR_PersonnelLaborContractRowChangeEvent e);
        
        public delegate void View_HR_OperatingPostRowChangeEventHandler(object sender, View_HR_OperatingPostRowChangeEvent e);
        
        public delegate void View_HR_PersonnelArchiveRowChangeEventHandler(object sender, View_HR_PersonnelArchiveRowChangeEvent e);
        
        public delegate void View_HR_PersonnelArchiveChangeRowChangeEventHandler(object sender, View_HR_PersonnelArchiveChangeRowChangeEvent e);
        
        public delegate void HR_OnBusinessBillRowChangeEventHandler(object sender, HR_OnBusinessBillRowChangeEvent e);
        
        public delegate void HR_PostTypeRowChangeEventHandler(object sender, HR_PostTypeRowChangeEvent e);
        
        public delegate void View_HR_OnBusinessPersonnelRowChangeEventHandler(object sender, View_HR_OnBusinessPersonnelRowChangeEvent e);
        
        public delegate void View_HR_OnBusinessBillRowChangeEventHandler(object sender, View_HR_OnBusinessBillRowChangeEvent e);
        
        public delegate void HR_PersonnelArchiveListRowChangeEventHandler(object sender, HR_PersonnelArchiveListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_LeaveBillDataTable : global::System.Data.TypedTableBase<HR_LeaveBillRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBillStatus;
            
            private global::System.Data.DataColumn columnApplicant;
            
            private global::System.Data.DataColumn columnLeaveTypeID;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnOtherExplanation;
            
            private global::System.Data.DataColumn columnBeginTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnDeptDirector;
            
            private global::System.Data.DataColumn columnDeptPrincipal;
            
            private global::System.Data.DataColumn columnLeader;
            
            private global::System.Data.DataColumn columnGeneralManager;
            
            private global::System.Data.DataColumn columnAuthorize;
            
            private global::System.Data.DataColumn columnUnexcusedReason;
            
            private global::System.Data.DataColumn columnDeptDirectorSignatureDate;
            
            private global::System.Data.DataColumn columnDeptPrincipalSignatureDate;
            
            private global::System.Data.DataColumn columnLeaderSignatureDate;
            
            private global::System.Data.DataColumn columnGM_SignatureDate;
            
            private global::System.Data.DataColumn columnHR_Signature;
            
            private global::System.Data.DataColumn columnHR_SignatureDate;
            
            private global::System.Data.DataColumn columnRealHours;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillDataTable() {
                this.TableName = "HR_LeaveBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_LeaveBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_LeaveBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillStatusColumn {
                get {
                    return this.columnBillStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicantColumn {
                get {
                    return this.columnApplicant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaveTypeIDColumn {
                get {
                    return this.columnLeaveTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExplanationColumn {
                get {
                    return this.columnOtherExplanation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeginTimeColumn {
                get {
                    return this.columnBeginTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptDirectorColumn {
                get {
                    return this.columnDeptDirector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptPrincipalColumn {
                get {
                    return this.columnDeptPrincipal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderColumn {
                get {
                    return this.columnLeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralManagerColumn {
                get {
                    return this.columnGeneralManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorizeColumn {
                get {
                    return this.columnAuthorize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnexcusedReasonColumn {
                get {
                    return this.columnUnexcusedReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptDirectorSignatureDateColumn {
                get {
                    return this.columnDeptDirectorSignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptPrincipalSignatureDateColumn {
                get {
                    return this.columnDeptPrincipalSignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderSignatureDateColumn {
                get {
                    return this.columnLeaderSignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GM_SignatureDateColumn {
                get {
                    return this.columnGM_SignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_SignatureColumn {
                get {
                    return this.columnHR_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_SignatureDateColumn {
                get {
                    return this.columnHR_SignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealHoursColumn {
                get {
                    return this.columnRealHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow this[int index] {
                get {
                    return ((HR_LeaveBillRow)(this.Rows[index]));
                }
            }
            
            public event HR_LeaveBillRowChangeEventHandler HR_LeaveBillRowChanging;
            
            public event HR_LeaveBillRowChangeEventHandler HR_LeaveBillRowChanged;
            
            public event HR_LeaveBillRowChangeEventHandler HR_LeaveBillRowDeleting;
            
            public event HR_LeaveBillRowChangeEventHandler HR_LeaveBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_LeaveBillRow(HR_LeaveBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow AddHR_LeaveBillRow(
                        string BillStatus, 
                        HR_PersonnelArchiveRow parentHR_PersonnelArchiveRowByFK_HR_LEAVE_REFERENCE_HR_PERSO, 
                        HR_LeaveTypeRow parentHR_LeaveTypeRowByFK_HR_LEAVE_REFERENCE_HR_LEAVE, 
                        string Reason, 
                        string OtherExplanation, 
                        System.DateTime BeginTime, 
                        System.DateTime EndTime, 
                        string DeptDirector, 
                        string DeptPrincipal, 
                        string Leader, 
                        string GeneralManager, 
                        bool Authorize, 
                        string UnexcusedReason, 
                        System.DateTime DeptDirectorSignatureDate, 
                        System.DateTime DeptPrincipalSignatureDate, 
                        System.DateTime LeaderSignatureDate, 
                        System.DateTime GM_SignatureDate, 
                        string HR_Signature, 
                        string HR_SignatureDate, 
                        double RealHours) {
                HR_LeaveBillRow rowHR_LeaveBillRow = ((HR_LeaveBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BillStatus,
                        null,
                        null,
                        Reason,
                        OtherExplanation,
                        BeginTime,
                        EndTime,
                        DeptDirector,
                        DeptPrincipal,
                        Leader,
                        GeneralManager,
                        Authorize,
                        UnexcusedReason,
                        DeptDirectorSignatureDate,
                        DeptPrincipalSignatureDate,
                        LeaderSignatureDate,
                        GM_SignatureDate,
                        HR_Signature,
                        HR_SignatureDate,
                        RealHours};
                if ((parentHR_PersonnelArchiveRowByFK_HR_LEAVE_REFERENCE_HR_PERSO != null)) {
                    columnValuesArray[2] = parentHR_PersonnelArchiveRowByFK_HR_LEAVE_REFERENCE_HR_PERSO[0];
                }
                if ((parentHR_LeaveTypeRowByFK_HR_LEAVE_REFERENCE_HR_LEAVE != null)) {
                    columnValuesArray[3] = parentHR_LeaveTypeRowByFK_HR_LEAVE_REFERENCE_HR_LEAVE[0];
                }
                rowHR_LeaveBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_LeaveBillRow);
                return rowHR_LeaveBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow FindByID(int ID) {
                return ((HR_LeaveBillRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_LeaveBillDataTable cln = ((HR_LeaveBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_LeaveBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBillStatus = base.Columns["BillStatus"];
                this.columnApplicant = base.Columns["Applicant"];
                this.columnLeaveTypeID = base.Columns["LeaveTypeID"];
                this.columnReason = base.Columns["Reason"];
                this.columnOtherExplanation = base.Columns["OtherExplanation"];
                this.columnBeginTime = base.Columns["BeginTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnDeptDirector = base.Columns["DeptDirector"];
                this.columnDeptPrincipal = base.Columns["DeptPrincipal"];
                this.columnLeader = base.Columns["Leader"];
                this.columnGeneralManager = base.Columns["GeneralManager"];
                this.columnAuthorize = base.Columns["Authorize"];
                this.columnUnexcusedReason = base.Columns["UnexcusedReason"];
                this.columnDeptDirectorSignatureDate = base.Columns["DeptDirectorSignatureDate"];
                this.columnDeptPrincipalSignatureDate = base.Columns["DeptPrincipalSignatureDate"];
                this.columnLeaderSignatureDate = base.Columns["LeaderSignatureDate"];
                this.columnGM_SignatureDate = base.Columns["GM_SignatureDate"];
                this.columnHR_Signature = base.Columns["HR_Signature"];
                this.columnHR_SignatureDate = base.Columns["HR_SignatureDate"];
                this.columnRealHours = base.Columns["RealHours"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBillStatus = new global::System.Data.DataColumn("BillStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillStatus);
                this.columnApplicant = new global::System.Data.DataColumn("Applicant", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicant);
                this.columnLeaveTypeID = new global::System.Data.DataColumn("LeaveTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaveTypeID);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnOtherExplanation = new global::System.Data.DataColumn("OtherExplanation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExplanation);
                this.columnBeginTime = new global::System.Data.DataColumn("BeginTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnDeptDirector = new global::System.Data.DataColumn("DeptDirector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptDirector);
                this.columnDeptPrincipal = new global::System.Data.DataColumn("DeptPrincipal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptPrincipal);
                this.columnLeader = new global::System.Data.DataColumn("Leader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeader);
                this.columnGeneralManager = new global::System.Data.DataColumn("GeneralManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralManager);
                this.columnAuthorize = new global::System.Data.DataColumn("Authorize", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorize);
                this.columnUnexcusedReason = new global::System.Data.DataColumn("UnexcusedReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnexcusedReason);
                this.columnDeptDirectorSignatureDate = new global::System.Data.DataColumn("DeptDirectorSignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptDirectorSignatureDate);
                this.columnDeptPrincipalSignatureDate = new global::System.Data.DataColumn("DeptPrincipalSignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptPrincipalSignatureDate);
                this.columnLeaderSignatureDate = new global::System.Data.DataColumn("LeaderSignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderSignatureDate);
                this.columnGM_SignatureDate = new global::System.Data.DataColumn("GM_SignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGM_SignatureDate);
                this.columnHR_Signature = new global::System.Data.DataColumn("HR_Signature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_Signature);
                this.columnHR_SignatureDate = new global::System.Data.DataColumn("HR_SignatureDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_SignatureDate);
                this.columnRealHours = new global::System.Data.DataColumn("RealHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealHours);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBillStatus.AllowDBNull = false;
                this.columnBillStatus.MaxLength = 50;
                this.columnApplicant.AllowDBNull = false;
                this.columnApplicant.MaxLength = 50;
                this.columnLeaveTypeID.AllowDBNull = false;
                this.columnLeaveTypeID.MaxLength = 6;
                this.columnReason.AllowDBNull = false;
                this.columnReason.MaxLength = 200;
                this.columnOtherExplanation.AllowDBNull = false;
                this.columnOtherExplanation.MaxLength = 200;
                this.columnBeginTime.AllowDBNull = false;
                this.columnEndTime.AllowDBNull = false;
                this.columnDeptDirector.MaxLength = 50;
                this.columnDeptPrincipal.MaxLength = 50;
                this.columnLeader.MaxLength = 50;
                this.columnGeneralManager.MaxLength = 50;
                this.columnAuthorize.AllowDBNull = false;
                this.columnUnexcusedReason.AllowDBNull = false;
                this.columnUnexcusedReason.MaxLength = 50;
                this.columnHR_Signature.MaxLength = 50;
                this.columnHR_SignatureDate.MaxLength = 50;
                this.columnRealHours.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow NewHR_LeaveBillRow() {
                return ((HR_LeaveBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_LeaveBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_LeaveBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_LeaveBillRowChanged != null)) {
                    this.HR_LeaveBillRowChanged(this, new HR_LeaveBillRowChangeEvent(((HR_LeaveBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_LeaveBillRowChanging != null)) {
                    this.HR_LeaveBillRowChanging(this, new HR_LeaveBillRowChangeEvent(((HR_LeaveBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_LeaveBillRowDeleted != null)) {
                    this.HR_LeaveBillRowDeleted(this, new HR_LeaveBillRowChangeEvent(((HR_LeaveBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_LeaveBillRowDeleting != null)) {
                    this.HR_LeaveBillRowDeleting(this, new HR_LeaveBillRowChangeEvent(((HR_LeaveBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_LeaveBillRow(HR_LeaveBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_LeaveBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_LeaveTypeDataTable : global::System.Data.TypedTableBase<HR_LeaveTypeRow> {
            
            private global::System.Data.DataColumn columnTypeCode;
            
            private global::System.Data.DataColumn columnTypeName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            private global::System.Data.DataColumn columnRecorder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeDataTable() {
                this.TableName = "HR_LeaveType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_LeaveTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_LeaveTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeCodeColumn {
                get {
                    return this.columnTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorderColumn {
                get {
                    return this.columnRecorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow this[int index] {
                get {
                    return ((HR_LeaveTypeRow)(this.Rows[index]));
                }
            }
            
            public event HR_LeaveTypeRowChangeEventHandler HR_LeaveTypeRowChanging;
            
            public event HR_LeaveTypeRowChangeEventHandler HR_LeaveTypeRowChanged;
            
            public event HR_LeaveTypeRowChangeEventHandler HR_LeaveTypeRowDeleting;
            
            public event HR_LeaveTypeRowChangeEventHandler HR_LeaveTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_LeaveTypeRow(HR_LeaveTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow AddHR_LeaveTypeRow(string TypeCode, string TypeName, string Remark, System.DateTime RecordTime, string Recorder) {
                HR_LeaveTypeRow rowHR_LeaveTypeRow = ((HR_LeaveTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TypeCode,
                        TypeName,
                        Remark,
                        RecordTime,
                        Recorder};
                rowHR_LeaveTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_LeaveTypeRow);
                return rowHR_LeaveTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow FindByTypeCode(string TypeCode) {
                return ((HR_LeaveTypeRow)(this.Rows.Find(new object[] {
                            TypeCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_LeaveTypeDataTable cln = ((HR_LeaveTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_LeaveTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTypeCode = base.Columns["TypeCode"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRecordTime = base.Columns["RecordTime"];
                this.columnRecorder = base.Columns["Recorder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTypeCode = new global::System.Data.DataColumn("TypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeCode);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.columnRecorder = new global::System.Data.DataColumn("Recorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTypeCode}, true));
                this.columnTypeCode.AllowDBNull = false;
                this.columnTypeCode.Unique = true;
                this.columnTypeCode.MaxLength = 6;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 50;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnRecordTime.AllowDBNull = false;
                this.columnRecorder.AllowDBNull = false;
                this.columnRecorder.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow NewHR_LeaveTypeRow() {
                return ((HR_LeaveTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_LeaveTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_LeaveTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_LeaveTypeRowChanged != null)) {
                    this.HR_LeaveTypeRowChanged(this, new HR_LeaveTypeRowChangeEvent(((HR_LeaveTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_LeaveTypeRowChanging != null)) {
                    this.HR_LeaveTypeRowChanging(this, new HR_LeaveTypeRowChangeEvent(((HR_LeaveTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_LeaveTypeRowDeleted != null)) {
                    this.HR_LeaveTypeRowDeleted(this, new HR_LeaveTypeRowChangeEvent(((HR_LeaveTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_LeaveTypeRowDeleting != null)) {
                    this.HR_LeaveTypeRowDeleting(this, new HR_LeaveTypeRowChangeEvent(((HR_LeaveTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_LeaveTypeRow(HR_LeaveTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_LeaveTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_OnBusinessPersonnelDataTable : global::System.Data.TypedTableBase<HR_OnBusinessPersonnelRow> {
            
            private global::System.Data.DataColumn columnBillID;
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnPersonnelType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelDataTable() {
                this.TableName = "HR_OnBusinessPersonnel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessPersonnelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_OnBusinessPersonnelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillIDColumn {
                get {
                    return this.columnBillID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonnelTypeColumn {
                get {
                    return this.columnPersonnelType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow this[int index] {
                get {
                    return ((HR_OnBusinessPersonnelRow)(this.Rows[index]));
                }
            }
            
            public event HR_OnBusinessPersonnelRowChangeEventHandler HR_OnBusinessPersonnelRowChanging;
            
            public event HR_OnBusinessPersonnelRowChangeEventHandler HR_OnBusinessPersonnelRowChanged;
            
            public event HR_OnBusinessPersonnelRowChangeEventHandler HR_OnBusinessPersonnelRowDeleting;
            
            public event HR_OnBusinessPersonnelRowChangeEventHandler HR_OnBusinessPersonnelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_OnBusinessPersonnelRow(HR_OnBusinessPersonnelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow AddHR_OnBusinessPersonnelRow(HR_OnBusinessBillRow parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS, System.DateTime WorkID, string PersonnelType) {
                HR_OnBusinessPersonnelRow rowHR_OnBusinessPersonnelRow = ((HR_OnBusinessPersonnelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        WorkID,
                        PersonnelType};
                if ((parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS != null)) {
                    columnValuesArray[0] = parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS[0];
                }
                rowHR_OnBusinessPersonnelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_OnBusinessPersonnelRow);
                return rowHR_OnBusinessPersonnelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow FindByBillIDWorkID(int BillID, System.DateTime WorkID) {
                return ((HR_OnBusinessPersonnelRow)(this.Rows.Find(new object[] {
                            BillID,
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_OnBusinessPersonnelDataTable cln = ((HR_OnBusinessPersonnelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_OnBusinessPersonnelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBillID = base.Columns["BillID"];
                this.columnWorkID = base.Columns["WorkID"];
                this.columnPersonnelType = base.Columns["PersonnelType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBillID = new global::System.Data.DataColumn("BillID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillID);
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnPersonnelType = new global::System.Data.DataColumn("PersonnelType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonnelType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBillID,
                                this.columnWorkID}, true));
                this.columnBillID.AllowDBNull = false;
                this.columnWorkID.AllowDBNull = false;
                this.columnPersonnelType.AllowDBNull = false;
                this.columnPersonnelType.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow NewHR_OnBusinessPersonnelRow() {
                return ((HR_OnBusinessPersonnelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_OnBusinessPersonnelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_OnBusinessPersonnelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_OnBusinessPersonnelRowChanged != null)) {
                    this.HR_OnBusinessPersonnelRowChanged(this, new HR_OnBusinessPersonnelRowChangeEvent(((HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_OnBusinessPersonnelRowChanging != null)) {
                    this.HR_OnBusinessPersonnelRowChanging(this, new HR_OnBusinessPersonnelRowChangeEvent(((HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_OnBusinessPersonnelRowDeleted != null)) {
                    this.HR_OnBusinessPersonnelRowDeleted(this, new HR_OnBusinessPersonnelRowChangeEvent(((HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_OnBusinessPersonnelRowDeleting != null)) {
                    this.HR_OnBusinessPersonnelRowDeleting(this, new HR_OnBusinessPersonnelRowChangeEvent(((HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_OnBusinessPersonnelRow(HR_OnBusinessPersonnelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_OnBusinessPersonnelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_OnBusinessScheduleDataTable : global::System.Data.TypedTableBase<HR_OnBusinessScheduleRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBillID;
            
            private global::System.Data.DataColumn columnPlace;
            
            private global::System.Data.DataColumn columnWorkContent;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnVehicle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleDataTable() {
                this.TableName = "HR_OnBusinessSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessScheduleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_OnBusinessScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillIDColumn {
                get {
                    return this.columnBillID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkContentColumn {
                get {
                    return this.columnWorkContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleColumn {
                get {
                    return this.columnVehicle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow this[int index] {
                get {
                    return ((HR_OnBusinessScheduleRow)(this.Rows[index]));
                }
            }
            
            public event HR_OnBusinessScheduleRowChangeEventHandler HR_OnBusinessScheduleRowChanging;
            
            public event HR_OnBusinessScheduleRowChangeEventHandler HR_OnBusinessScheduleRowChanged;
            
            public event HR_OnBusinessScheduleRowChangeEventHandler HR_OnBusinessScheduleRowDeleting;
            
            public event HR_OnBusinessScheduleRowChangeEventHandler HR_OnBusinessScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_OnBusinessScheduleRow(HR_OnBusinessScheduleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow AddHR_OnBusinessScheduleRow(HR_OnBusinessBillRow parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS_1, string Place, string WorkContent, string Contact, string Remark, System.DateTime StartTime, System.DateTime EndTime, string Vehicle) {
                HR_OnBusinessScheduleRow rowHR_OnBusinessScheduleRow = ((HR_OnBusinessScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Place,
                        WorkContent,
                        Contact,
                        Remark,
                        StartTime,
                        EndTime,
                        Vehicle};
                if ((parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS_1 != null)) {
                    columnValuesArray[1] = parentHR_OnBusinessBillRowByFK_HR_ONBUS_REFERENCE_HR_ONBUS_1[0];
                }
                rowHR_OnBusinessScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_OnBusinessScheduleRow);
                return rowHR_OnBusinessScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow FindByID(int ID) {
                return ((HR_OnBusinessScheduleRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_OnBusinessScheduleDataTable cln = ((HR_OnBusinessScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_OnBusinessScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBillID = base.Columns["BillID"];
                this.columnPlace = base.Columns["Place"];
                this.columnWorkContent = base.Columns["WorkContent"];
                this.columnContact = base.Columns["Contact"];
                this.columnRemark = base.Columns["Remark"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnVehicle = base.Columns["Vehicle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBillID = new global::System.Data.DataColumn("BillID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillID);
                this.columnPlace = new global::System.Data.DataColumn("Place", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlace);
                this.columnWorkContent = new global::System.Data.DataColumn("WorkContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkContent);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnVehicle = new global::System.Data.DataColumn("Vehicle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBillID.AllowDBNull = false;
                this.columnPlace.AllowDBNull = false;
                this.columnPlace.MaxLength = 200;
                this.columnWorkContent.AllowDBNull = false;
                this.columnWorkContent.MaxLength = 200;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnStartTime.AllowDBNull = false;
                this.columnEndTime.AllowDBNull = false;
                this.columnVehicle.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow NewHR_OnBusinessScheduleRow() {
                return ((HR_OnBusinessScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_OnBusinessScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_OnBusinessScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_OnBusinessScheduleRowChanged != null)) {
                    this.HR_OnBusinessScheduleRowChanged(this, new HR_OnBusinessScheduleRowChangeEvent(((HR_OnBusinessScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_OnBusinessScheduleRowChanging != null)) {
                    this.HR_OnBusinessScheduleRowChanging(this, new HR_OnBusinessScheduleRowChangeEvent(((HR_OnBusinessScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_OnBusinessScheduleRowDeleted != null)) {
                    this.HR_OnBusinessScheduleRowDeleted(this, new HR_OnBusinessScheduleRowChangeEvent(((HR_OnBusinessScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_OnBusinessScheduleRowDeleting != null)) {
                    this.HR_OnBusinessScheduleRowDeleting(this, new HR_OnBusinessScheduleRowChangeEvent(((HR_OnBusinessScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_OnBusinessScheduleRow(HR_OnBusinessScheduleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_OnBusinessScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_PersonnelArchiveDataTable : global::System.Data.TypedTableBase<HR_PersonnelArchiveRow> {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnWorkPost;
            
            private global::System.Data.DataColumn columnJobTitleID;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnRace;
            
            private global::System.Data.DataColumn columnBirthplace;
            
            private global::System.Data.DataColumn columnParty;
            
            private global::System.Data.DataColumn columnID_Card;
            
            private global::System.Data.DataColumn columnCollege;
            
            private global::System.Data.DataColumn columnEducatedDegree;
            
            private global::System.Data.DataColumn columnEducatedMajor;
            
            private global::System.Data.DataColumn columnFamilyAddress;
            
            private global::System.Data.DataColumn columnPostCode;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnMobilePhone;
            
            private global::System.Data.DataColumn columnBank;
            
            private global::System.Data.DataColumn columnBankAccount;
            
            private global::System.Data.DataColumn columnSocietySecurityNumber;
            
            private global::System.Data.DataColumn columnQQ;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnHobby;
            
            private global::System.Data.DataColumn columnSpeciality;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnResumeID;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columnAnnex;
            
            private global::System.Data.DataColumn columnAnnexName;
            
            private global::System.Data.DataColumn columnChangePostAmount;
            
            private global::System.Data.DataColumn columnTrainingAmount;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRecorder;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            private global::System.Data.DataColumn columnChangeAmount;
            
            private global::System.Data.DataColumn columnPersonnelStatus;
            
            private global::System.Data.DataColumn columnPY;
            
            private global::System.Data.DataColumn columnWB;
            
            private global::System.Data.DataColumn columnJoinDate;
            
            private global::System.Data.DataColumn columnBecomeRegularEmployeeDate;
            
            private global::System.Data.DataColumn columnTakeJobDate;
            
            private global::System.Data.DataColumn columnJobNature;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnGraduationYear;
            
            private global::System.Data.DataColumn columnLengthOfSchooling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveDataTable() {
                this.TableName = "HR_PersonnelArchive";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_PersonnelArchiveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkPostColumn {
                get {
                    return this.columnWorkPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobTitleIDColumn {
                get {
                    return this.columnJobTitleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RaceColumn {
                get {
                    return this.columnRace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthplaceColumn {
                get {
                    return this.columnBirthplace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartyColumn {
                get {
                    return this.columnParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_CardColumn {
                get {
                    return this.columnID_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollegeColumn {
                get {
                    return this.columnCollege;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedDegreeColumn {
                get {
                    return this.columnEducatedDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedMajorColumn {
                get {
                    return this.columnEducatedMajor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyAddressColumn {
                get {
                    return this.columnFamilyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostCodeColumn {
                get {
                    return this.columnPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobilePhoneColumn {
                get {
                    return this.columnMobilePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankColumn {
                get {
                    return this.columnBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAccountColumn {
                get {
                    return this.columnBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocietySecurityNumberColumn {
                get {
                    return this.columnSocietySecurityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QQColumn {
                get {
                    return this.columnQQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HobbyColumn {
                get {
                    return this.columnHobby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialityColumn {
                get {
                    return this.columnSpeciality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResumeIDColumn {
                get {
                    return this.columnResumeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexColumn {
                get {
                    return this.columnAnnex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexNameColumn {
                get {
                    return this.columnAnnexName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangePostAmountColumn {
                get {
                    return this.columnChangePostAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrainingAmountColumn {
                get {
                    return this.columnTrainingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorderColumn {
                get {
                    return this.columnRecorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangeAmountColumn {
                get {
                    return this.columnChangeAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonnelStatusColumn {
                get {
                    return this.columnPersonnelStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PYColumn {
                get {
                    return this.columnPY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WBColumn {
                get {
                    return this.columnWB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDateColumn {
                get {
                    return this.columnJoinDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BecomeRegularEmployeeDateColumn {
                get {
                    return this.columnBecomeRegularEmployeeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakeJobDateColumn {
                get {
                    return this.columnTakeJobDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNatureColumn {
                get {
                    return this.columnJobNature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraduationYearColumn {
                get {
                    return this.columnGraduationYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthOfSchoolingColumn {
                get {
                    return this.columnLengthOfSchooling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow this[int index] {
                get {
                    return ((HR_PersonnelArchiveRow)(this.Rows[index]));
                }
            }
            
            public event HR_PersonnelArchiveRowChangeEventHandler HR_PersonnelArchiveRowChanging;
            
            public event HR_PersonnelArchiveRowChangeEventHandler HR_PersonnelArchiveRowChanged;
            
            public event HR_PersonnelArchiveRowChangeEventHandler HR_PersonnelArchiveRowDeleting;
            
            public event HR_PersonnelArchiveRowChangeEventHandler HR_PersonnelArchiveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_PersonnelArchiveRow(HR_PersonnelArchiveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow AddHR_PersonnelArchiveRow(
                        string WorkID, 
                        string Name, 
                        string Dept, 
                        int WorkPost, 
                        int JobTitleID, 
                        System.DateTime Birthday, 
                        string Nationality, 
                        string Race, 
                        string Birthplace, 
                        string Party, 
                        string ID_Card, 
                        string College, 
                        string EducatedDegree, 
                        string EducatedMajor, 
                        string FamilyAddress, 
                        string PostCode, 
                        string Phone, 
                        string MobilePhone, 
                        string Bank, 
                        string BankAccount, 
                        string SocietySecurityNumber, 
                        string QQ, 
                        string Email, 
                        string Hobby, 
                        string Speciality, 
                        string Sex, 
                        HR_ResumeRow parentHR_ResumeRowByFK_HR_PERSO_REFERENCE_HR_RESUM, 
                        byte[] Photo, 
                        byte[] Annex, 
                        string AnnexName, 
                        int ChangePostAmount, 
                        int TrainingAmount, 
                        string Remark, 
                        string Recorder, 
                        System.DateTime RecordTime, 
                        int ChangeAmount, 
                        HR_PersonnelStatusRow parentHR_PersonnelStatusRowByFK_HR_PERSO_REFERENCE_HR_PERSO, 
                        string PY, 
                        string WB, 
                        System.DateTime JoinDate, 
                        System.DateTime BecomeRegularEmployeeDate, 
                        System.DateTime TakeJobDate, 
                        string JobNature, 
                        string MaritalStatus, 
                        int GraduationYear, 
                        string LengthOfSchooling) {
                HR_PersonnelArchiveRow rowHR_PersonnelArchiveRow = ((HR_PersonnelArchiveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        Name,
                        Dept,
                        WorkPost,
                        JobTitleID,
                        Birthday,
                        Nationality,
                        Race,
                        Birthplace,
                        Party,
                        ID_Card,
                        College,
                        EducatedDegree,
                        EducatedMajor,
                        FamilyAddress,
                        PostCode,
                        Phone,
                        MobilePhone,
                        Bank,
                        BankAccount,
                        SocietySecurityNumber,
                        QQ,
                        Email,
                        Hobby,
                        Speciality,
                        Sex,
                        null,
                        Photo,
                        Annex,
                        AnnexName,
                        ChangePostAmount,
                        TrainingAmount,
                        Remark,
                        Recorder,
                        RecordTime,
                        ChangeAmount,
                        null,
                        PY,
                        WB,
                        JoinDate,
                        BecomeRegularEmployeeDate,
                        TakeJobDate,
                        JobNature,
                        MaritalStatus,
                        GraduationYear,
                        LengthOfSchooling};
                if ((parentHR_ResumeRowByFK_HR_PERSO_REFERENCE_HR_RESUM != null)) {
                    columnValuesArray[26] = parentHR_ResumeRowByFK_HR_PERSO_REFERENCE_HR_RESUM[0];
                }
                if ((parentHR_PersonnelStatusRowByFK_HR_PERSO_REFERENCE_HR_PERSO != null)) {
                    columnValuesArray[36] = parentHR_PersonnelStatusRowByFK_HR_PERSO_REFERENCE_HR_PERSO[0];
                }
                rowHR_PersonnelArchiveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_PersonnelArchiveRow);
                return rowHR_PersonnelArchiveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow FindByWorkID(string WorkID) {
                return ((HR_PersonnelArchiveRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_PersonnelArchiveDataTable cln = ((HR_PersonnelArchiveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_PersonnelArchiveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnName = base.Columns["Name"];
                this.columnDept = base.Columns["Dept"];
                this.columnWorkPost = base.Columns["WorkPost"];
                this.columnJobTitleID = base.Columns["JobTitleID"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnRace = base.Columns["Race"];
                this.columnBirthplace = base.Columns["Birthplace"];
                this.columnParty = base.Columns["Party"];
                this.columnID_Card = base.Columns["ID_Card"];
                this.columnCollege = base.Columns["College"];
                this.columnEducatedDegree = base.Columns["EducatedDegree"];
                this.columnEducatedMajor = base.Columns["EducatedMajor"];
                this.columnFamilyAddress = base.Columns["FamilyAddress"];
                this.columnPostCode = base.Columns["PostCode"];
                this.columnPhone = base.Columns["Phone"];
                this.columnMobilePhone = base.Columns["MobilePhone"];
                this.columnBank = base.Columns["Bank"];
                this.columnBankAccount = base.Columns["BankAccount"];
                this.columnSocietySecurityNumber = base.Columns["SocietySecurityNumber"];
                this.columnQQ = base.Columns["QQ"];
                this.columnEmail = base.Columns["Email"];
                this.columnHobby = base.Columns["Hobby"];
                this.columnSpeciality = base.Columns["Speciality"];
                this.columnSex = base.Columns["Sex"];
                this.columnResumeID = base.Columns["ResumeID"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnAnnex = base.Columns["Annex"];
                this.columnAnnexName = base.Columns["AnnexName"];
                this.columnChangePostAmount = base.Columns["ChangePostAmount"];
                this.columnTrainingAmount = base.Columns["TrainingAmount"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRecorder = base.Columns["Recorder"];
                this.columnRecordTime = base.Columns["RecordTime"];
                this.columnChangeAmount = base.Columns["ChangeAmount"];
                this.columnPersonnelStatus = base.Columns["PersonnelStatus"];
                this.columnPY = base.Columns["PY"];
                this.columnWB = base.Columns["WB"];
                this.columnJoinDate = base.Columns["JoinDate"];
                this.columnBecomeRegularEmployeeDate = base.Columns["BecomeRegularEmployeeDate"];
                this.columnTakeJobDate = base.Columns["TakeJobDate"];
                this.columnJobNature = base.Columns["JobNature"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnGraduationYear = base.Columns["GraduationYear"];
                this.columnLengthOfSchooling = base.Columns["LengthOfSchooling"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnWorkPost = new global::System.Data.DataColumn("WorkPost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkPost);
                this.columnJobTitleID = new global::System.Data.DataColumn("JobTitleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitleID);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnRace = new global::System.Data.DataColumn("Race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRace);
                this.columnBirthplace = new global::System.Data.DataColumn("Birthplace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthplace);
                this.columnParty = new global::System.Data.DataColumn("Party", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParty);
                this.columnID_Card = new global::System.Data.DataColumn("ID_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Card);
                this.columnCollege = new global::System.Data.DataColumn("College", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollege);
                this.columnEducatedDegree = new global::System.Data.DataColumn("EducatedDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedDegree);
                this.columnEducatedMajor = new global::System.Data.DataColumn("EducatedMajor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedMajor);
                this.columnFamilyAddress = new global::System.Data.DataColumn("FamilyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyAddress);
                this.columnPostCode = new global::System.Data.DataColumn("PostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostCode);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnMobilePhone = new global::System.Data.DataColumn("MobilePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobilePhone);
                this.columnBank = new global::System.Data.DataColumn("Bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank);
                this.columnBankAccount = new global::System.Data.DataColumn("BankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccount);
                this.columnSocietySecurityNumber = new global::System.Data.DataColumn("SocietySecurityNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocietySecurityNumber);
                this.columnQQ = new global::System.Data.DataColumn("QQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQQ);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnHobby = new global::System.Data.DataColumn("Hobby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHobby);
                this.columnSpeciality = new global::System.Data.DataColumn("Speciality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciality);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnResumeID = new global::System.Data.DataColumn("ResumeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResumeID);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnAnnex = new global::System.Data.DataColumn("Annex", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnex);
                this.columnAnnexName = new global::System.Data.DataColumn("AnnexName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnexName);
                this.columnChangePostAmount = new global::System.Data.DataColumn("ChangePostAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangePostAmount);
                this.columnTrainingAmount = new global::System.Data.DataColumn("TrainingAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainingAmount);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRecorder = new global::System.Data.DataColumn("Recorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorder);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.columnChangeAmount = new global::System.Data.DataColumn("ChangeAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeAmount);
                this.columnPersonnelStatus = new global::System.Data.DataColumn("PersonnelStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonnelStatus);
                this.columnPY = new global::System.Data.DataColumn("PY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPY);
                this.columnWB = new global::System.Data.DataColumn("WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWB);
                this.columnJoinDate = new global::System.Data.DataColumn("JoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDate);
                this.columnBecomeRegularEmployeeDate = new global::System.Data.DataColumn("BecomeRegularEmployeeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBecomeRegularEmployeeDate);
                this.columnTakeJobDate = new global::System.Data.DataColumn("TakeJobDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakeJobDate);
                this.columnJobNature = new global::System.Data.DataColumn("JobNature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNature);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnGraduationYear = new global::System.Data.DataColumn("GraduationYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraduationYear);
                this.columnLengthOfSchooling = new global::System.Data.DataColumn("LengthOfSchooling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthOfSchooling);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnWorkID.MaxLength = 50;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDept.AllowDBNull = false;
                this.columnDept.MaxLength = 50;
                this.columnWorkPost.AllowDBNull = false;
                this.columnJobTitleID.AllowDBNull = false;
                this.columnBirthday.AllowDBNull = false;
                this.columnNationality.AllowDBNull = false;
                this.columnNationality.MaxLength = 50;
                this.columnRace.AllowDBNull = false;
                this.columnRace.MaxLength = 50;
                this.columnBirthplace.AllowDBNull = false;
                this.columnBirthplace.MaxLength = 100;
                this.columnParty.AllowDBNull = false;
                this.columnParty.MaxLength = 20;
                this.columnID_Card.AllowDBNull = false;
                this.columnID_Card.MaxLength = 20;
                this.columnCollege.AllowDBNull = false;
                this.columnCollege.MaxLength = 200;
                this.columnEducatedDegree.AllowDBNull = false;
                this.columnEducatedDegree.MaxLength = 20;
                this.columnEducatedMajor.AllowDBNull = false;
                this.columnEducatedMajor.MaxLength = 100;
                this.columnFamilyAddress.AllowDBNull = false;
                this.columnFamilyAddress.MaxLength = 200;
                this.columnPostCode.AllowDBNull = false;
                this.columnPostCode.MaxLength = 20;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 20;
                this.columnMobilePhone.AllowDBNull = false;
                this.columnMobilePhone.MaxLength = 20;
                this.columnBank.AllowDBNull = false;
                this.columnBank.MaxLength = 50;
                this.columnBankAccount.AllowDBNull = false;
                this.columnBankAccount.MaxLength = 50;
                this.columnSocietySecurityNumber.AllowDBNull = false;
                this.columnSocietySecurityNumber.MaxLength = 50;
                this.columnQQ.AllowDBNull = false;
                this.columnQQ.MaxLength = 20;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnHobby.AllowDBNull = false;
                this.columnHobby.MaxLength = 200;
                this.columnSpeciality.AllowDBNull = false;
                this.columnSpeciality.MaxLength = 200;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 2;
                this.columnAnnexName.MaxLength = 2147483647;
                this.columnChangePostAmount.AllowDBNull = false;
                this.columnTrainingAmount.AllowDBNull = false;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnRecorder.AllowDBNull = false;
                this.columnRecorder.MaxLength = 50;
                this.columnRecordTime.AllowDBNull = false;
                this.columnChangeAmount.AllowDBNull = false;
                this.columnPersonnelStatus.AllowDBNull = false;
                this.columnPY.MaxLength = 50;
                this.columnWB.MaxLength = 50;
                this.columnJobNature.AllowDBNull = false;
                this.columnJobNature.MaxLength = 20;
                this.columnMaritalStatus.AllowDBNull = false;
                this.columnMaritalStatus.MaxLength = 4;
                this.columnLengthOfSchooling.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow NewHR_PersonnelArchiveRow() {
                return ((HR_PersonnelArchiveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_PersonnelArchiveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_PersonnelArchiveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_PersonnelArchiveRowChanged != null)) {
                    this.HR_PersonnelArchiveRowChanged(this, new HR_PersonnelArchiveRowChangeEvent(((HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_PersonnelArchiveRowChanging != null)) {
                    this.HR_PersonnelArchiveRowChanging(this, new HR_PersonnelArchiveRowChangeEvent(((HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_PersonnelArchiveRowDeleted != null)) {
                    this.HR_PersonnelArchiveRowDeleted(this, new HR_PersonnelArchiveRowChangeEvent(((HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_PersonnelArchiveRowDeleting != null)) {
                    this.HR_PersonnelArchiveRowDeleting(this, new HR_PersonnelArchiveRowChangeEvent(((HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_PersonnelArchiveRow(HR_PersonnelArchiveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_PersonnelArchiveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_PersonnelArchiveChangeDataTable : global::System.Data.TypedTableBase<HR_PersonnelArchiveChangeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnDeptName;
            
            private global::System.Data.DataColumn columnWorkPost;
            
            private global::System.Data.DataColumn columnJobTitle;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnRace;
            
            private global::System.Data.DataColumn columnBirthplace;
            
            private global::System.Data.DataColumn columnParty;
            
            private global::System.Data.DataColumn columnID_Card;
            
            private global::System.Data.DataColumn columnCollege;
            
            private global::System.Data.DataColumn columnEducatedDegree;
            
            private global::System.Data.DataColumn columnEducatedMajor;
            
            private global::System.Data.DataColumn columnFamilyAddress;
            
            private global::System.Data.DataColumn columnPostCode;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnMobilePhone;
            
            private global::System.Data.DataColumn columnBank;
            
            private global::System.Data.DataColumn columnBankAccount;
            
            private global::System.Data.DataColumn columnSocietySecurityNumber;
            
            private global::System.Data.DataColumn columnQQ;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnHobby;
            
            private global::System.Data.DataColumn columnSpeciality;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnResumeID;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columnAnnex;
            
            private global::System.Data.DataColumn columnAnnexName;
            
            private global::System.Data.DataColumn columnChangePostAmount;
            
            private global::System.Data.DataColumn columnTrainingAmount;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnChangerCode;
            
            private global::System.Data.DataColumn columnChangeTime;
            
            private global::System.Data.DataColumn columnJoinDate;
            
            private global::System.Data.DataColumn columnBecomeRegularEmployeeDate;
            
            private global::System.Data.DataColumn columnTakeJobDate;
            
            private global::System.Data.DataColumn columnJobNature;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnGraduationYear;
            
            private global::System.Data.DataColumn columnLengthOfSchooling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeDataTable() {
                this.TableName = "HR_PersonnelArchiveChange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveChangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_PersonnelArchiveChangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptNameColumn {
                get {
                    return this.columnDeptName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkPostColumn {
                get {
                    return this.columnWorkPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobTitleColumn {
                get {
                    return this.columnJobTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RaceColumn {
                get {
                    return this.columnRace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthplaceColumn {
                get {
                    return this.columnBirthplace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartyColumn {
                get {
                    return this.columnParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_CardColumn {
                get {
                    return this.columnID_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollegeColumn {
                get {
                    return this.columnCollege;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedDegreeColumn {
                get {
                    return this.columnEducatedDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedMajorColumn {
                get {
                    return this.columnEducatedMajor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyAddressColumn {
                get {
                    return this.columnFamilyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostCodeColumn {
                get {
                    return this.columnPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobilePhoneColumn {
                get {
                    return this.columnMobilePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankColumn {
                get {
                    return this.columnBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAccountColumn {
                get {
                    return this.columnBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocietySecurityNumberColumn {
                get {
                    return this.columnSocietySecurityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QQColumn {
                get {
                    return this.columnQQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HobbyColumn {
                get {
                    return this.columnHobby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialityColumn {
                get {
                    return this.columnSpeciality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResumeIDColumn {
                get {
                    return this.columnResumeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexColumn {
                get {
                    return this.columnAnnex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexNameColumn {
                get {
                    return this.columnAnnexName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangePostAmountColumn {
                get {
                    return this.columnChangePostAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrainingAmountColumn {
                get {
                    return this.columnTrainingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangerCodeColumn {
                get {
                    return this.columnChangerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangeTimeColumn {
                get {
                    return this.columnChangeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDateColumn {
                get {
                    return this.columnJoinDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BecomeRegularEmployeeDateColumn {
                get {
                    return this.columnBecomeRegularEmployeeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakeJobDateColumn {
                get {
                    return this.columnTakeJobDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNatureColumn {
                get {
                    return this.columnJobNature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraduationYearColumn {
                get {
                    return this.columnGraduationYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthOfSchoolingColumn {
                get {
                    return this.columnLengthOfSchooling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow this[int index] {
                get {
                    return ((HR_PersonnelArchiveChangeRow)(this.Rows[index]));
                }
            }
            
            public event HR_PersonnelArchiveChangeRowChangeEventHandler HR_PersonnelArchiveChangeRowChanging;
            
            public event HR_PersonnelArchiveChangeRowChangeEventHandler HR_PersonnelArchiveChangeRowChanged;
            
            public event HR_PersonnelArchiveChangeRowChangeEventHandler HR_PersonnelArchiveChangeRowDeleting;
            
            public event HR_PersonnelArchiveChangeRowChangeEventHandler HR_PersonnelArchiveChangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_PersonnelArchiveChangeRow(HR_PersonnelArchiveChangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow AddHR_PersonnelArchiveChangeRow(
                        string WorkID, 
                        string Name, 
                        string Dept, 
                        string DeptName, 
                        string WorkPost, 
                        string JobTitle, 
                        System.DateTime Birthday, 
                        string Nationality, 
                        string Race, 
                        string Birthplace, 
                        string Party, 
                        string ID_Card, 
                        string College, 
                        string EducatedDegree, 
                        string EducatedMajor, 
                        string FamilyAddress, 
                        string PostCode, 
                        string Phone, 
                        string MobilePhone, 
                        string Bank, 
                        string BankAccount, 
                        string SocietySecurityNumber, 
                        string QQ, 
                        string Email, 
                        string Hobby, 
                        string Speciality, 
                        string Sex, 
                        HR_ResumeRow parentHR_ResumeRowByFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM, 
                        byte[] Photo, 
                        byte[] Annex, 
                        string AnnexName, 
                        int ChangePostAmount, 
                        int TrainingAmount, 
                        string Remark, 
                        string ChangerCode, 
                        System.DateTime ChangeTime, 
                        System.DateTime JoinDate, 
                        System.DateTime BecomeRegularEmployeeDate, 
                        System.DateTime TakeJobDate, 
                        string JobNature, 
                        string MaritalStatus, 
                        int GraduationYear, 
                        string LengthOfSchooling) {
                HR_PersonnelArchiveChangeRow rowHR_PersonnelArchiveChangeRow = ((HR_PersonnelArchiveChangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        WorkID,
                        Name,
                        Dept,
                        DeptName,
                        WorkPost,
                        JobTitle,
                        Birthday,
                        Nationality,
                        Race,
                        Birthplace,
                        Party,
                        ID_Card,
                        College,
                        EducatedDegree,
                        EducatedMajor,
                        FamilyAddress,
                        PostCode,
                        Phone,
                        MobilePhone,
                        Bank,
                        BankAccount,
                        SocietySecurityNumber,
                        QQ,
                        Email,
                        Hobby,
                        Speciality,
                        Sex,
                        null,
                        Photo,
                        Annex,
                        AnnexName,
                        ChangePostAmount,
                        TrainingAmount,
                        Remark,
                        ChangerCode,
                        ChangeTime,
                        JoinDate,
                        BecomeRegularEmployeeDate,
                        TakeJobDate,
                        JobNature,
                        MaritalStatus,
                        GraduationYear,
                        LengthOfSchooling};
                if ((parentHR_ResumeRowByFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM != null)) {
                    columnValuesArray[28] = parentHR_ResumeRowByFK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM[0];
                }
                rowHR_PersonnelArchiveChangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_PersonnelArchiveChangeRow);
                return rowHR_PersonnelArchiveChangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow FindByID(int ID) {
                return ((HR_PersonnelArchiveChangeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_PersonnelArchiveChangeDataTable cln = ((HR_PersonnelArchiveChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_PersonnelArchiveChangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnWorkID = base.Columns["WorkID"];
                this.columnName = base.Columns["Name"];
                this.columnDept = base.Columns["Dept"];
                this.columnDeptName = base.Columns["DeptName"];
                this.columnWorkPost = base.Columns["WorkPost"];
                this.columnJobTitle = base.Columns["JobTitle"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnRace = base.Columns["Race"];
                this.columnBirthplace = base.Columns["Birthplace"];
                this.columnParty = base.Columns["Party"];
                this.columnID_Card = base.Columns["ID_Card"];
                this.columnCollege = base.Columns["College"];
                this.columnEducatedDegree = base.Columns["EducatedDegree"];
                this.columnEducatedMajor = base.Columns["EducatedMajor"];
                this.columnFamilyAddress = base.Columns["FamilyAddress"];
                this.columnPostCode = base.Columns["PostCode"];
                this.columnPhone = base.Columns["Phone"];
                this.columnMobilePhone = base.Columns["MobilePhone"];
                this.columnBank = base.Columns["Bank"];
                this.columnBankAccount = base.Columns["BankAccount"];
                this.columnSocietySecurityNumber = base.Columns["SocietySecurityNumber"];
                this.columnQQ = base.Columns["QQ"];
                this.columnEmail = base.Columns["Email"];
                this.columnHobby = base.Columns["Hobby"];
                this.columnSpeciality = base.Columns["Speciality"];
                this.columnSex = base.Columns["Sex"];
                this.columnResumeID = base.Columns["ResumeID"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnAnnex = base.Columns["Annex"];
                this.columnAnnexName = base.Columns["AnnexName"];
                this.columnChangePostAmount = base.Columns["ChangePostAmount"];
                this.columnTrainingAmount = base.Columns["TrainingAmount"];
                this.columnRemark = base.Columns["Remark"];
                this.columnChangerCode = base.Columns["ChangerCode"];
                this.columnChangeTime = base.Columns["ChangeTime"];
                this.columnJoinDate = base.Columns["JoinDate"];
                this.columnBecomeRegularEmployeeDate = base.Columns["BecomeRegularEmployeeDate"];
                this.columnTakeJobDate = base.Columns["TakeJobDate"];
                this.columnJobNature = base.Columns["JobNature"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnGraduationYear = base.Columns["GraduationYear"];
                this.columnLengthOfSchooling = base.Columns["LengthOfSchooling"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnDeptName = new global::System.Data.DataColumn("DeptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptName);
                this.columnWorkPost = new global::System.Data.DataColumn("WorkPost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkPost);
                this.columnJobTitle = new global::System.Data.DataColumn("JobTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitle);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnRace = new global::System.Data.DataColumn("Race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRace);
                this.columnBirthplace = new global::System.Data.DataColumn("Birthplace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthplace);
                this.columnParty = new global::System.Data.DataColumn("Party", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParty);
                this.columnID_Card = new global::System.Data.DataColumn("ID_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Card);
                this.columnCollege = new global::System.Data.DataColumn("College", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollege);
                this.columnEducatedDegree = new global::System.Data.DataColumn("EducatedDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedDegree);
                this.columnEducatedMajor = new global::System.Data.DataColumn("EducatedMajor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedMajor);
                this.columnFamilyAddress = new global::System.Data.DataColumn("FamilyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyAddress);
                this.columnPostCode = new global::System.Data.DataColumn("PostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostCode);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnMobilePhone = new global::System.Data.DataColumn("MobilePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobilePhone);
                this.columnBank = new global::System.Data.DataColumn("Bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank);
                this.columnBankAccount = new global::System.Data.DataColumn("BankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccount);
                this.columnSocietySecurityNumber = new global::System.Data.DataColumn("SocietySecurityNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocietySecurityNumber);
                this.columnQQ = new global::System.Data.DataColumn("QQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQQ);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnHobby = new global::System.Data.DataColumn("Hobby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHobby);
                this.columnSpeciality = new global::System.Data.DataColumn("Speciality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciality);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnResumeID = new global::System.Data.DataColumn("ResumeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResumeID);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnAnnex = new global::System.Data.DataColumn("Annex", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnex);
                this.columnAnnexName = new global::System.Data.DataColumn("AnnexName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnexName);
                this.columnChangePostAmount = new global::System.Data.DataColumn("ChangePostAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangePostAmount);
                this.columnTrainingAmount = new global::System.Data.DataColumn("TrainingAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainingAmount);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnChangerCode = new global::System.Data.DataColumn("ChangerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangerCode);
                this.columnChangeTime = new global::System.Data.DataColumn("ChangeTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeTime);
                this.columnJoinDate = new global::System.Data.DataColumn("JoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDate);
                this.columnBecomeRegularEmployeeDate = new global::System.Data.DataColumn("BecomeRegularEmployeeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBecomeRegularEmployeeDate);
                this.columnTakeJobDate = new global::System.Data.DataColumn("TakeJobDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakeJobDate);
                this.columnJobNature = new global::System.Data.DataColumn("JobNature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNature);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnGraduationYear = new global::System.Data.DataColumn("GraduationYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraduationYear);
                this.columnLengthOfSchooling = new global::System.Data.DataColumn("LengthOfSchooling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthOfSchooling);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.MaxLength = 50;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDept.AllowDBNull = false;
                this.columnDept.MaxLength = 50;
                this.columnDeptName.AllowDBNull = false;
                this.columnDeptName.MaxLength = 200;
                this.columnWorkPost.MaxLength = 200;
                this.columnJobTitle.MaxLength = 200;
                this.columnBirthday.AllowDBNull = false;
                this.columnNationality.AllowDBNull = false;
                this.columnNationality.MaxLength = 50;
                this.columnRace.AllowDBNull = false;
                this.columnRace.MaxLength = 50;
                this.columnBirthplace.AllowDBNull = false;
                this.columnBirthplace.MaxLength = 100;
                this.columnParty.AllowDBNull = false;
                this.columnParty.MaxLength = 20;
                this.columnID_Card.AllowDBNull = false;
                this.columnID_Card.MaxLength = 20;
                this.columnCollege.AllowDBNull = false;
                this.columnCollege.MaxLength = 200;
                this.columnEducatedDegree.AllowDBNull = false;
                this.columnEducatedDegree.MaxLength = 20;
                this.columnEducatedMajor.AllowDBNull = false;
                this.columnEducatedMajor.MaxLength = 100;
                this.columnFamilyAddress.AllowDBNull = false;
                this.columnFamilyAddress.MaxLength = 200;
                this.columnPostCode.AllowDBNull = false;
                this.columnPostCode.MaxLength = 20;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 20;
                this.columnMobilePhone.AllowDBNull = false;
                this.columnMobilePhone.MaxLength = 20;
                this.columnBank.AllowDBNull = false;
                this.columnBank.MaxLength = 50;
                this.columnBankAccount.AllowDBNull = false;
                this.columnBankAccount.MaxLength = 50;
                this.columnSocietySecurityNumber.AllowDBNull = false;
                this.columnSocietySecurityNumber.MaxLength = 50;
                this.columnQQ.AllowDBNull = false;
                this.columnQQ.MaxLength = 20;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnHobby.AllowDBNull = false;
                this.columnHobby.MaxLength = 200;
                this.columnSpeciality.AllowDBNull = false;
                this.columnSpeciality.MaxLength = 200;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 2;
                this.columnAnnexName.MaxLength = 2147483647;
                this.columnChangePostAmount.AllowDBNull = false;
                this.columnTrainingAmount.AllowDBNull = false;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnChangerCode.AllowDBNull = false;
                this.columnChangerCode.MaxLength = 50;
                this.columnChangeTime.AllowDBNull = false;
                this.columnJoinDate.AllowDBNull = false;
                this.columnJobNature.AllowDBNull = false;
                this.columnJobNature.MaxLength = 20;
                this.columnMaritalStatus.AllowDBNull = false;
                this.columnMaritalStatus.MaxLength = 4;
                this.columnLengthOfSchooling.AllowDBNull = false;
                this.columnLengthOfSchooling.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow NewHR_PersonnelArchiveChangeRow() {
                return ((HR_PersonnelArchiveChangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_PersonnelArchiveChangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_PersonnelArchiveChangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_PersonnelArchiveChangeRowChanged != null)) {
                    this.HR_PersonnelArchiveChangeRowChanged(this, new HR_PersonnelArchiveChangeRowChangeEvent(((HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_PersonnelArchiveChangeRowChanging != null)) {
                    this.HR_PersonnelArchiveChangeRowChanging(this, new HR_PersonnelArchiveChangeRowChangeEvent(((HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_PersonnelArchiveChangeRowDeleted != null)) {
                    this.HR_PersonnelArchiveChangeRowDeleted(this, new HR_PersonnelArchiveChangeRowChangeEvent(((HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_PersonnelArchiveChangeRowDeleting != null)) {
                    this.HR_PersonnelArchiveChangeRowDeleting(this, new HR_PersonnelArchiveChangeRowChangeEvent(((HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_PersonnelArchiveChangeRow(HR_PersonnelArchiveChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_PersonnelArchiveChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_PersonnelStatusDataTable : global::System.Data.TypedTableBase<HR_PersonnelStatusRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnRecorder;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusDataTable() {
                this.TableName = "HR_PersonnelStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_PersonnelStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorderColumn {
                get {
                    return this.columnRecorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow this[int index] {
                get {
                    return ((HR_PersonnelStatusRow)(this.Rows[index]));
                }
            }
            
            public event HR_PersonnelStatusRowChangeEventHandler HR_PersonnelStatusRowChanging;
            
            public event HR_PersonnelStatusRowChangeEventHandler HR_PersonnelStatusRowChanged;
            
            public event HR_PersonnelStatusRowChangeEventHandler HR_PersonnelStatusRowDeleting;
            
            public event HR_PersonnelStatusRowChangeEventHandler HR_PersonnelStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_PersonnelStatusRow(HR_PersonnelStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow AddHR_PersonnelStatusRow(string Status, string Recorder, System.DateTime RecordTime) {
                HR_PersonnelStatusRow rowHR_PersonnelStatusRow = ((HR_PersonnelStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Status,
                        Recorder,
                        RecordTime};
                rowHR_PersonnelStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_PersonnelStatusRow);
                return rowHR_PersonnelStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow FindByID(int ID) {
                return ((HR_PersonnelStatusRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_PersonnelStatusDataTable cln = ((HR_PersonnelStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_PersonnelStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStatus = base.Columns["Status"];
                this.columnRecorder = base.Columns["Recorder"];
                this.columnRecordTime = base.Columns["RecordTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnRecorder = new global::System.Data.DataColumn("Recorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorder);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 20;
                this.columnRecorder.AllowDBNull = false;
                this.columnRecorder.MaxLength = 50;
                this.columnRecordTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow NewHR_PersonnelStatusRow() {
                return ((HR_PersonnelStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_PersonnelStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_PersonnelStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_PersonnelStatusRowChanged != null)) {
                    this.HR_PersonnelStatusRowChanged(this, new HR_PersonnelStatusRowChangeEvent(((HR_PersonnelStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_PersonnelStatusRowChanging != null)) {
                    this.HR_PersonnelStatusRowChanging(this, new HR_PersonnelStatusRowChangeEvent(((HR_PersonnelStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_PersonnelStatusRowDeleted != null)) {
                    this.HR_PersonnelStatusRowDeleted(this, new HR_PersonnelStatusRowChangeEvent(((HR_PersonnelStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_PersonnelStatusRowDeleting != null)) {
                    this.HR_PersonnelStatusRowDeleting(this, new HR_PersonnelStatusRowChangeEvent(((HR_PersonnelStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_PersonnelStatusRow(HR_PersonnelStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_PersonnelStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_ResumeDataTable : global::System.Data.TypedTableBase<HR_ResumeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnRecruitmentType;
            
            private global::System.Data.DataColumn columnResumeStatusID;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnHeight;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnRace;
            
            private global::System.Data.DataColumn columnBirthplace;
            
            private global::System.Data.DataColumn columnParty;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnID_Card;
            
            private global::System.Data.DataColumn columnCollege;
            
            private global::System.Data.DataColumn columnEducatedDegree;
            
            private global::System.Data.DataColumn columnEducatedMajor;
            
            private global::System.Data.DataColumn columnFamilyAddress;
            
            private global::System.Data.DataColumn columnPostcode;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnEmergencyPhone;
            
            private global::System.Data.DataColumn columnSpeciality;
            
            private global::System.Data.DataColumn columnEnglishLevel;
            
            private global::System.Data.DataColumn columnComputerLevel;
            
            private global::System.Data.DataColumn columnExistThirdPartyRelation;
            
            private global::System.Data.DataColumn columnThirdPartyRelation;
            
            private global::System.Data.DataColumn columnWorkingTenure;
            
            private global::System.Data.DataColumn columnDesiredSalary;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columnAnnex;
            
            private global::System.Data.DataColumn columnPathName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnEducatedHistory;
            
            private global::System.Data.DataColumn columnWorkHistory;
            
            private global::System.Data.DataColumn columnFamilyMember;
            
            private global::System.Data.DataColumn columnRecorder;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeDataTable() {
                this.TableName = "HR_Resume";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_ResumeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_ResumeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecruitmentTypeColumn {
                get {
                    return this.columnRecruitmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResumeStatusIDColumn {
                get {
                    return this.columnResumeStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeightColumn {
                get {
                    return this.columnHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RaceColumn {
                get {
                    return this.columnRace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthplaceColumn {
                get {
                    return this.columnBirthplace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartyColumn {
                get {
                    return this.columnParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_CardColumn {
                get {
                    return this.columnID_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollegeColumn {
                get {
                    return this.columnCollege;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedDegreeColumn {
                get {
                    return this.columnEducatedDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedMajorColumn {
                get {
                    return this.columnEducatedMajor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyAddressColumn {
                get {
                    return this.columnFamilyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostcodeColumn {
                get {
                    return this.columnPostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmergencyPhoneColumn {
                get {
                    return this.columnEmergencyPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialityColumn {
                get {
                    return this.columnSpeciality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnglishLevelColumn {
                get {
                    return this.columnEnglishLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComputerLevelColumn {
                get {
                    return this.columnComputerLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistThirdPartyRelationColumn {
                get {
                    return this.columnExistThirdPartyRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThirdPartyRelationColumn {
                get {
                    return this.columnThirdPartyRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingTenureColumn {
                get {
                    return this.columnWorkingTenure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesiredSalaryColumn {
                get {
                    return this.columnDesiredSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexColumn {
                get {
                    return this.columnAnnex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PathNameColumn {
                get {
                    return this.columnPathName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducatedHistoryColumn {
                get {
                    return this.columnEducatedHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkHistoryColumn {
                get {
                    return this.columnWorkHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberColumn {
                get {
                    return this.columnFamilyMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorderColumn {
                get {
                    return this.columnRecorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow this[int index] {
                get {
                    return ((HR_ResumeRow)(this.Rows[index]));
                }
            }
            
            public event HR_ResumeRowChangeEventHandler HR_ResumeRowChanging;
            
            public event HR_ResumeRowChangeEventHandler HR_ResumeRowChanged;
            
            public event HR_ResumeRowChangeEventHandler HR_ResumeRowDeleting;
            
            public event HR_ResumeRowChangeEventHandler HR_ResumeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_ResumeRow(HR_ResumeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow AddHR_ResumeRow(
                        string Name, 
                        string RecruitmentType, 
                        int ResumeStatusID, 
                        string Sex, 
                        System.DateTime Birthday, 
                        int Age, 
                        decimal Height, 
                        string Nationality, 
                        string Race, 
                        string Birthplace, 
                        string Party, 
                        string MaritalStatus, 
                        string ID_Card, 
                        string College, 
                        string EducatedDegree, 
                        string EducatedMajor, 
                        string FamilyAddress, 
                        string Postcode, 
                        string Phone, 
                        string EmergencyPhone, 
                        string Speciality, 
                        string EnglishLevel, 
                        string ComputerLevel, 
                        bool ExistThirdPartyRelation, 
                        string ThirdPartyRelation, 
                        decimal WorkingTenure, 
                        decimal DesiredSalary, 
                        byte[] Photo, 
                        byte[] Annex, 
                        string PathName, 
                        string Remark, 
                        string EducatedHistory, 
                        string WorkHistory, 
                        string FamilyMember, 
                        string Recorder, 
                        System.DateTime RecordTime) {
                HR_ResumeRow rowHR_ResumeRow = ((HR_ResumeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        RecruitmentType,
                        ResumeStatusID,
                        Sex,
                        Birthday,
                        Age,
                        Height,
                        Nationality,
                        Race,
                        Birthplace,
                        Party,
                        MaritalStatus,
                        ID_Card,
                        College,
                        EducatedDegree,
                        EducatedMajor,
                        FamilyAddress,
                        Postcode,
                        Phone,
                        EmergencyPhone,
                        Speciality,
                        EnglishLevel,
                        ComputerLevel,
                        ExistThirdPartyRelation,
                        ThirdPartyRelation,
                        WorkingTenure,
                        DesiredSalary,
                        Photo,
                        Annex,
                        PathName,
                        Remark,
                        EducatedHistory,
                        WorkHistory,
                        FamilyMember,
                        Recorder,
                        RecordTime};
                rowHR_ResumeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_ResumeRow);
                return rowHR_ResumeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow FindByID_Card(string ID_Card) {
                return ((HR_ResumeRow)(this.Rows.Find(new object[] {
                            ID_Card})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_ResumeDataTable cln = ((HR_ResumeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_ResumeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnRecruitmentType = base.Columns["RecruitmentType"];
                this.columnResumeStatusID = base.Columns["ResumeStatusID"];
                this.columnSex = base.Columns["Sex"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnHeight = base.Columns["Height"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnRace = base.Columns["Race"];
                this.columnBirthplace = base.Columns["Birthplace"];
                this.columnParty = base.Columns["Party"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnID_Card = base.Columns["ID_Card"];
                this.columnCollege = base.Columns["College"];
                this.columnEducatedDegree = base.Columns["EducatedDegree"];
                this.columnEducatedMajor = base.Columns["EducatedMajor"];
                this.columnFamilyAddress = base.Columns["FamilyAddress"];
                this.columnPostcode = base.Columns["Postcode"];
                this.columnPhone = base.Columns["Phone"];
                this.columnEmergencyPhone = base.Columns["EmergencyPhone"];
                this.columnSpeciality = base.Columns["Speciality"];
                this.columnEnglishLevel = base.Columns["EnglishLevel"];
                this.columnComputerLevel = base.Columns["ComputerLevel"];
                this.columnExistThirdPartyRelation = base.Columns["ExistThirdPartyRelation"];
                this.columnThirdPartyRelation = base.Columns["ThirdPartyRelation"];
                this.columnWorkingTenure = base.Columns["WorkingTenure"];
                this.columnDesiredSalary = base.Columns["DesiredSalary"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnAnnex = base.Columns["Annex"];
                this.columnPathName = base.Columns["PathName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnEducatedHistory = base.Columns["EducatedHistory"];
                this.columnWorkHistory = base.Columns["WorkHistory"];
                this.columnFamilyMember = base.Columns["FamilyMember"];
                this.columnRecorder = base.Columns["Recorder"];
                this.columnRecordTime = base.Columns["RecordTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnRecruitmentType = new global::System.Data.DataColumn("RecruitmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecruitmentType);
                this.columnResumeStatusID = new global::System.Data.DataColumn("ResumeStatusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResumeStatusID);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnHeight = new global::System.Data.DataColumn("Height", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeight);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnRace = new global::System.Data.DataColumn("Race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRace);
                this.columnBirthplace = new global::System.Data.DataColumn("Birthplace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthplace);
                this.columnParty = new global::System.Data.DataColumn("Party", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParty);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnID_Card = new global::System.Data.DataColumn("ID_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Card);
                this.columnCollege = new global::System.Data.DataColumn("College", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollege);
                this.columnEducatedDegree = new global::System.Data.DataColumn("EducatedDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedDegree);
                this.columnEducatedMajor = new global::System.Data.DataColumn("EducatedMajor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedMajor);
                this.columnFamilyAddress = new global::System.Data.DataColumn("FamilyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyAddress);
                this.columnPostcode = new global::System.Data.DataColumn("Postcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostcode);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnEmergencyPhone = new global::System.Data.DataColumn("EmergencyPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmergencyPhone);
                this.columnSpeciality = new global::System.Data.DataColumn("Speciality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciality);
                this.columnEnglishLevel = new global::System.Data.DataColumn("EnglishLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnglishLevel);
                this.columnComputerLevel = new global::System.Data.DataColumn("ComputerLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerLevel);
                this.columnExistThirdPartyRelation = new global::System.Data.DataColumn("ExistThirdPartyRelation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistThirdPartyRelation);
                this.columnThirdPartyRelation = new global::System.Data.DataColumn("ThirdPartyRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdPartyRelation);
                this.columnWorkingTenure = new global::System.Data.DataColumn("WorkingTenure", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingTenure);
                this.columnDesiredSalary = new global::System.Data.DataColumn("DesiredSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesiredSalary);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnAnnex = new global::System.Data.DataColumn("Annex", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnex);
                this.columnPathName = new global::System.Data.DataColumn("PathName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPathName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnEducatedHistory = new global::System.Data.DataColumn("EducatedHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducatedHistory);
                this.columnWorkHistory = new global::System.Data.DataColumn("WorkHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkHistory);
                this.columnFamilyMember = new global::System.Data.DataColumn("FamilyMember", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMember);
                this.columnRecorder = new global::System.Data.DataColumn("Recorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorder);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Card}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnRecruitmentType.AllowDBNull = false;
                this.columnRecruitmentType.MaxLength = 20;
                this.columnResumeStatusID.AllowDBNull = false;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 2;
                this.columnBirthday.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnHeight.AllowDBNull = false;
                this.columnNationality.AllowDBNull = false;
                this.columnNationality.MaxLength = 50;
                this.columnRace.AllowDBNull = false;
                this.columnRace.MaxLength = 50;
                this.columnBirthplace.AllowDBNull = false;
                this.columnBirthplace.MaxLength = 100;
                this.columnParty.AllowDBNull = false;
                this.columnParty.MaxLength = 20;
                this.columnMaritalStatus.AllowDBNull = false;
                this.columnMaritalStatus.MaxLength = 4;
                this.columnID_Card.AllowDBNull = false;
                this.columnID_Card.Unique = true;
                this.columnID_Card.MaxLength = 20;
                this.columnCollege.AllowDBNull = false;
                this.columnCollege.MaxLength = 200;
                this.columnEducatedDegree.AllowDBNull = false;
                this.columnEducatedDegree.MaxLength = 20;
                this.columnEducatedMajor.AllowDBNull = false;
                this.columnEducatedMajor.MaxLength = 100;
                this.columnFamilyAddress.MaxLength = 200;
                this.columnPostcode.AllowDBNull = false;
                this.columnPostcode.MaxLength = 20;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 20;
                this.columnEmergencyPhone.AllowDBNull = false;
                this.columnEmergencyPhone.MaxLength = 20;
                this.columnSpeciality.AllowDBNull = false;
                this.columnSpeciality.MaxLength = 100;
                this.columnEnglishLevel.AllowDBNull = false;
                this.columnEnglishLevel.MaxLength = 20;
                this.columnComputerLevel.AllowDBNull = false;
                this.columnComputerLevel.MaxLength = 20;
                this.columnExistThirdPartyRelation.AllowDBNull = false;
                this.columnThirdPartyRelation.AllowDBNull = false;
                this.columnThirdPartyRelation.MaxLength = 200;
                this.columnWorkingTenure.AllowDBNull = false;
                this.columnDesiredSalary.AllowDBNull = false;
                this.columnPathName.MaxLength = 2147483647;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnEducatedHistory.AllowDBNull = false;
                this.columnEducatedHistory.MaxLength = 2147483647;
                this.columnWorkHistory.AllowDBNull = false;
                this.columnWorkHistory.MaxLength = 2147483647;
                this.columnFamilyMember.AllowDBNull = false;
                this.columnFamilyMember.MaxLength = 2147483647;
                this.columnRecorder.AllowDBNull = false;
                this.columnRecorder.MaxLength = 50;
                this.columnRecordTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow NewHR_ResumeRow() {
                return ((HR_ResumeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_ResumeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_ResumeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_ResumeRowChanged != null)) {
                    this.HR_ResumeRowChanged(this, new HR_ResumeRowChangeEvent(((HR_ResumeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_ResumeRowChanging != null)) {
                    this.HR_ResumeRowChanging(this, new HR_ResumeRowChangeEvent(((HR_ResumeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_ResumeRowDeleted != null)) {
                    this.HR_ResumeRowDeleted(this, new HR_ResumeRowChangeEvent(((HR_ResumeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_ResumeRowDeleting != null)) {
                    this.HR_ResumeRowDeleting(this, new HR_ResumeRowChangeEvent(((HR_ResumeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_ResumeRow(HR_ResumeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_ResumeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_WorkSchedulingDataTable : global::System.Data.TypedTableBase<HR_WorkSchedulingRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCreaterWorkID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingDataTable() {
                this.TableName = "HR_WorkScheduling";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_WorkSchedulingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_WorkSchedulingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreaterWorkIDColumn {
                get {
                    return this.columnCreaterWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRow this[int index] {
                get {
                    return ((HR_WorkSchedulingRow)(this.Rows[index]));
                }
            }
            
            public event HR_WorkSchedulingRowChangeEventHandler HR_WorkSchedulingRowChanging;
            
            public event HR_WorkSchedulingRowChangeEventHandler HR_WorkSchedulingRowChanged;
            
            public event HR_WorkSchedulingRowChangeEventHandler HR_WorkSchedulingRowDeleting;
            
            public event HR_WorkSchedulingRowChangeEventHandler HR_WorkSchedulingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_WorkSchedulingRow(HR_WorkSchedulingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRow AddHR_WorkSchedulingRow(string CreaterWorkID, System.DateTime CreateDate, int Year, byte Month, string Remark) {
                HR_WorkSchedulingRow rowHR_WorkSchedulingRow = ((HR_WorkSchedulingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreaterWorkID,
                        CreateDate,
                        Year,
                        Month,
                        Remark};
                rowHR_WorkSchedulingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_WorkSchedulingRow);
                return rowHR_WorkSchedulingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRow FindByID(int ID) {
                return ((HR_WorkSchedulingRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_WorkSchedulingDataTable cln = ((HR_WorkSchedulingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_WorkSchedulingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCreaterWorkID = base.Columns["CreaterWorkID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnYear = base.Columns["Year"];
                this.columnMonth = base.Columns["Month"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCreaterWorkID = new global::System.Data.DataColumn("CreaterWorkID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreaterWorkID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCreaterWorkID.AllowDBNull = false;
                this.columnCreaterWorkID.MaxLength = 50;
                this.columnCreateDate.AllowDBNull = false;
                this.columnYear.AllowDBNull = false;
                this.columnMonth.AllowDBNull = false;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRow NewHR_WorkSchedulingRow() {
                return ((HR_WorkSchedulingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_WorkSchedulingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_WorkSchedulingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_WorkSchedulingRowChanged != null)) {
                    this.HR_WorkSchedulingRowChanged(this, new HR_WorkSchedulingRowChangeEvent(((HR_WorkSchedulingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_WorkSchedulingRowChanging != null)) {
                    this.HR_WorkSchedulingRowChanging(this, new HR_WorkSchedulingRowChangeEvent(((HR_WorkSchedulingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_WorkSchedulingRowDeleted != null)) {
                    this.HR_WorkSchedulingRowDeleted(this, new HR_WorkSchedulingRowChangeEvent(((HR_WorkSchedulingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_WorkSchedulingRowDeleting != null)) {
                    this.HR_WorkSchedulingRowDeleting(this, new HR_WorkSchedulingRowChangeEvent(((HR_WorkSchedulingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_WorkSchedulingRow(HR_WorkSchedulingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_WorkSchedulingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_DeptDataTable : global::System.Data.TypedTableBase<View_HR_DeptRow> {
            
            private global::System.Data.DataColumn column部门代码;
            
            private global::System.Data.DataColumn column部门名称;
            
            private global::System.Data.DataColumn column部门类型;
            
            private global::System.Data.DataColumn column电话;
            
            private global::System.Data.DataColumn column传真;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptDataTable() {
                this.TableName = "View_HR_Dept";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_DeptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_DeptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门代码Column {
                get {
                    return this.column部门代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门类型Column {
                get {
                    return this.column部门类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电话Column {
                get {
                    return this.column电话;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 传真Column {
                get {
                    return this.column传真;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRow this[int index] {
                get {
                    return ((View_HR_DeptRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_DeptRowChangeEventHandler View_HR_DeptRowChanging;
            
            public event View_HR_DeptRowChangeEventHandler View_HR_DeptRowChanged;
            
            public event View_HR_DeptRowChangeEventHandler View_HR_DeptRowDeleting;
            
            public event View_HR_DeptRowChangeEventHandler View_HR_DeptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_DeptRow(View_HR_DeptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRow AddView_HR_DeptRow(string 部门代码, string 部门名称, string 部门类型, string 电话, string 传真, string 备注) {
                View_HR_DeptRow rowView_HR_DeptRow = ((View_HR_DeptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        部门代码,
                        部门名称,
                        部门类型,
                        电话,
                        传真,
                        备注};
                rowView_HR_DeptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_DeptRow);
                return rowView_HR_DeptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRow FindBy部门代码(string 部门代码) {
                return ((View_HR_DeptRow)(this.Rows.Find(new object[] {
                            部门代码})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_DeptDataTable cln = ((View_HR_DeptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_DeptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column部门代码 = base.Columns["部门代码"];
                this.column部门名称 = base.Columns["部门名称"];
                this.column部门类型 = base.Columns["部门类型"];
                this.column电话 = base.Columns["电话"];
                this.column传真 = base.Columns["传真"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column部门代码 = new global::System.Data.DataColumn("部门代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门代码);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.column部门类型 = new global::System.Data.DataColumn("部门类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门类型);
                this.column电话 = new global::System.Data.DataColumn("电话", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电话);
                this.column传真 = new global::System.Data.DataColumn("传真", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column传真);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column部门代码}, true));
                this.column部门代码.AllowDBNull = false;
                this.column部门代码.Unique = true;
                this.column部门代码.MaxLength = 50;
                this.column部门名称.AllowDBNull = false;
                this.column部门名称.MaxLength = 50;
                this.column部门类型.AllowDBNull = false;
                this.column部门类型.MaxLength = 50;
                this.column电话.AllowDBNull = false;
                this.column电话.MaxLength = 50;
                this.column传真.AllowDBNull = false;
                this.column传真.MaxLength = 50;
                this.column备注.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRow NewView_HR_DeptRow() {
                return ((View_HR_DeptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_DeptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_DeptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_DeptRowChanged != null)) {
                    this.View_HR_DeptRowChanged(this, new View_HR_DeptRowChangeEvent(((View_HR_DeptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_DeptRowChanging != null)) {
                    this.View_HR_DeptRowChanging(this, new View_HR_DeptRowChangeEvent(((View_HR_DeptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_DeptRowDeleted != null)) {
                    this.View_HR_DeptRowDeleted(this, new View_HR_DeptRowChangeEvent(((View_HR_DeptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_DeptRowDeleting != null)) {
                    this.View_HR_DeptRowDeleting(this, new View_HR_DeptRowChangeEvent(((View_HR_DeptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_DeptRow(View_HR_DeptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_DeptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_PersonnelLaborContractDataTable : global::System.Data.TypedTableBase<View_HR_PersonnelLaborContractRow> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column员工姓名;
            
            private global::System.Data.DataColumn column合同模板;
            
            private global::System.Data.DataColumn column合同状态;
            
            private global::System.Data.DataColumn column合同起始时间;
            
            private global::System.Data.DataColumn column合同终止时间;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column记录人员;
            
            private global::System.Data.DataColumn column记录时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractDataTable() {
                this.TableName = "View_HR_PersonnelLaborContract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelLaborContractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_PersonnelLaborContractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工姓名Column {
                get {
                    return this.column员工姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同模板Column {
                get {
                    return this.column合同模板;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同状态Column {
                get {
                    return this.column合同状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同起始时间Column {
                get {
                    return this.column合同起始时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同终止时间Column {
                get {
                    return this.column合同终止时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录人员Column {
                get {
                    return this.column记录人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录时间Column {
                get {
                    return this.column记录时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRow this[int index] {
                get {
                    return ((View_HR_PersonnelLaborContractRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_PersonnelLaborContractRowChangeEventHandler View_HR_PersonnelLaborContractRowChanging;
            
            public event View_HR_PersonnelLaborContractRowChangeEventHandler View_HR_PersonnelLaborContractRowChanged;
            
            public event View_HR_PersonnelLaborContractRowChangeEventHandler View_HR_PersonnelLaborContractRowDeleting;
            
            public event View_HR_PersonnelLaborContractRowChangeEventHandler View_HR_PersonnelLaborContractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_PersonnelLaborContractRow(View_HR_PersonnelLaborContractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRow AddView_HR_PersonnelLaborContractRow(int 编号, string 员工编号, string 员工姓名, string 合同模板, string 合同状态, System.DateTime 合同起始时间, System.DateTime 合同终止时间, string 备注, string 记录人员, System.DateTime 记录时间) {
                View_HR_PersonnelLaborContractRow rowView_HR_PersonnelLaborContractRow = ((View_HR_PersonnelLaborContractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        编号,
                        员工编号,
                        员工姓名,
                        合同模板,
                        合同状态,
                        合同起始时间,
                        合同终止时间,
                        备注,
                        记录人员,
                        记录时间};
                rowView_HR_PersonnelLaborContractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_PersonnelLaborContractRow);
                return rowView_HR_PersonnelLaborContractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRow FindBy编号(int 编号) {
                return ((View_HR_PersonnelLaborContractRow)(this.Rows.Find(new object[] {
                            编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_PersonnelLaborContractDataTable cln = ((View_HR_PersonnelLaborContractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_PersonnelLaborContractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column员工编号 = base.Columns["员工编号"];
                this.column员工姓名 = base.Columns["员工姓名"];
                this.column合同模板 = base.Columns["合同模板"];
                this.column合同状态 = base.Columns["合同状态"];
                this.column合同起始时间 = base.Columns["合同起始时间"];
                this.column合同终止时间 = base.Columns["合同终止时间"];
                this.column备注 = base.Columns["备注"];
                this.column记录人员 = base.Columns["记录人员"];
                this.column记录时间 = base.Columns["记录时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column员工姓名 = new global::System.Data.DataColumn("员工姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工姓名);
                this.column合同模板 = new global::System.Data.DataColumn("合同模板", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同模板);
                this.column合同状态 = new global::System.Data.DataColumn("合同状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同状态);
                this.column合同起始时间 = new global::System.Data.DataColumn("合同起始时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同起始时间);
                this.column合同终止时间 = new global::System.Data.DataColumn("合同终止时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同终止时间);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column记录人员 = new global::System.Data.DataColumn("记录人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录人员);
                this.column记录时间 = new global::System.Data.DataColumn("记录时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录时间);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column编号}, true));
                this.column编号.AllowDBNull = false;
                this.column编号.Unique = true;
                this.column员工编号.AllowDBNull = false;
                this.column员工编号.MaxLength = 50;
                this.column员工姓名.AllowDBNull = false;
                this.column员工姓名.MaxLength = 50;
                this.column合同模板.ReadOnly = true;
                this.column合同模板.MaxLength = 81;
                this.column合同状态.AllowDBNull = false;
                this.column合同状态.MaxLength = 50;
                this.column合同起始时间.AllowDBNull = false;
                this.column合同终止时间.AllowDBNull = false;
                this.column备注.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column记录人员.MaxLength = 50;
                this.column记录时间.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRow NewView_HR_PersonnelLaborContractRow() {
                return ((View_HR_PersonnelLaborContractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_PersonnelLaborContractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_PersonnelLaborContractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_PersonnelLaborContractRowChanged != null)) {
                    this.View_HR_PersonnelLaborContractRowChanged(this, new View_HR_PersonnelLaborContractRowChangeEvent(((View_HR_PersonnelLaborContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_PersonnelLaborContractRowChanging != null)) {
                    this.View_HR_PersonnelLaborContractRowChanging(this, new View_HR_PersonnelLaborContractRowChangeEvent(((View_HR_PersonnelLaborContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_PersonnelLaborContractRowDeleted != null)) {
                    this.View_HR_PersonnelLaborContractRowDeleted(this, new View_HR_PersonnelLaborContractRowChangeEvent(((View_HR_PersonnelLaborContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_PersonnelLaborContractRowDeleting != null)) {
                    this.View_HR_PersonnelLaborContractRowDeleting(this, new View_HR_PersonnelLaborContractRowChangeEvent(((View_HR_PersonnelLaborContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_PersonnelLaborContractRow(View_HR_PersonnelLaborContractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_PersonnelLaborContractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_OperatingPostDataTable : global::System.Data.TypedTableBase<View_HR_OperatingPostRow> {
            
            private global::System.Data.DataColumn column岗位编号;
            
            private global::System.Data.DataColumn column岗位名称;
            
            private global::System.Data.DataColumn column职位类别;
            
            private global::System.Data.DataColumn column岗位说明;
            
            private global::System.Data.DataColumn column岗位规范;
            
            private global::System.Data.DataColumn column是否中层人员;
            
            private global::System.Data.DataColumn column是否高层人员;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column记录人员;
            
            private global::System.Data.DataColumn column记录时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostDataTable() {
                this.TableName = "View_HR_OperatingPost";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OperatingPostDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_OperatingPostDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 岗位编号Column {
                get {
                    return this.column岗位编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 岗位名称Column {
                get {
                    return this.column岗位名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 职位类别Column {
                get {
                    return this.column职位类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 岗位说明Column {
                get {
                    return this.column岗位说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 岗位规范Column {
                get {
                    return this.column岗位规范;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否中层人员Column {
                get {
                    return this.column是否中层人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否高层人员Column {
                get {
                    return this.column是否高层人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录人员Column {
                get {
                    return this.column记录人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录时间Column {
                get {
                    return this.column记录时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRow this[int index] {
                get {
                    return ((View_HR_OperatingPostRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_OperatingPostRowChangeEventHandler View_HR_OperatingPostRowChanging;
            
            public event View_HR_OperatingPostRowChangeEventHandler View_HR_OperatingPostRowChanged;
            
            public event View_HR_OperatingPostRowChangeEventHandler View_HR_OperatingPostRowDeleting;
            
            public event View_HR_OperatingPostRowChangeEventHandler View_HR_OperatingPostRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_OperatingPostRow(View_HR_OperatingPostRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRow AddView_HR_OperatingPostRow(int 岗位编号, string 岗位名称, string 职位类别, string 岗位说明, string 岗位规范, bool 是否中层人员, bool 是否高层人员, string 备注, string 记录人员, System.DateTime 记录时间) {
                View_HR_OperatingPostRow rowView_HR_OperatingPostRow = ((View_HR_OperatingPostRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        岗位编号,
                        岗位名称,
                        职位类别,
                        岗位说明,
                        岗位规范,
                        是否中层人员,
                        是否高层人员,
                        备注,
                        记录人员,
                        记录时间};
                rowView_HR_OperatingPostRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_OperatingPostRow);
                return rowView_HR_OperatingPostRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRow FindBy岗位编号(int 岗位编号) {
                return ((View_HR_OperatingPostRow)(this.Rows.Find(new object[] {
                            岗位编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_OperatingPostDataTable cln = ((View_HR_OperatingPostDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_OperatingPostDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column岗位编号 = base.Columns["岗位编号"];
                this.column岗位名称 = base.Columns["岗位名称"];
                this.column职位类别 = base.Columns["职位类别"];
                this.column岗位说明 = base.Columns["岗位说明"];
                this.column岗位规范 = base.Columns["岗位规范"];
                this.column是否中层人员 = base.Columns["是否中层人员"];
                this.column是否高层人员 = base.Columns["是否高层人员"];
                this.column备注 = base.Columns["备注"];
                this.column记录人员 = base.Columns["记录人员"];
                this.column记录时间 = base.Columns["记录时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column岗位编号 = new global::System.Data.DataColumn("岗位编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column岗位编号);
                this.column岗位名称 = new global::System.Data.DataColumn("岗位名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column岗位名称);
                this.column职位类别 = new global::System.Data.DataColumn("职位类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column职位类别);
                this.column岗位说明 = new global::System.Data.DataColumn("岗位说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column岗位说明);
                this.column岗位规范 = new global::System.Data.DataColumn("岗位规范", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column岗位规范);
                this.column是否中层人员 = new global::System.Data.DataColumn("是否中层人员", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否中层人员);
                this.column是否高层人员 = new global::System.Data.DataColumn("是否高层人员", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否高层人员);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column记录人员 = new global::System.Data.DataColumn("记录人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录人员);
                this.column记录时间 = new global::System.Data.DataColumn("记录时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录时间);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column岗位编号}, true));
                this.column岗位编号.AllowDBNull = false;
                this.column岗位编号.Unique = true;
                this.column岗位名称.MaxLength = 50;
                this.column职位类别.MaxLength = 50;
                this.column岗位说明.MaxLength = 2147483647;
                this.column岗位规范.MaxLength = 2147483647;
                this.column备注.MaxLength = 2147483647;
                this.column记录人员.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRow NewView_HR_OperatingPostRow() {
                return ((View_HR_OperatingPostRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_OperatingPostRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_OperatingPostRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_OperatingPostRowChanged != null)) {
                    this.View_HR_OperatingPostRowChanged(this, new View_HR_OperatingPostRowChangeEvent(((View_HR_OperatingPostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_OperatingPostRowChanging != null)) {
                    this.View_HR_OperatingPostRowChanging(this, new View_HR_OperatingPostRowChangeEvent(((View_HR_OperatingPostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_OperatingPostRowDeleted != null)) {
                    this.View_HR_OperatingPostRowDeleted(this, new View_HR_OperatingPostRowChangeEvent(((View_HR_OperatingPostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_OperatingPostRowDeleting != null)) {
                    this.View_HR_OperatingPostRowDeleting(this, new View_HR_OperatingPostRowChangeEvent(((View_HR_OperatingPostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_OperatingPostRow(View_HR_OperatingPostRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_OperatingPostDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_PersonnelArchiveDataTable : global::System.Data.TypedTableBase<View_HR_PersonnelArchiveRow> {
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column员工姓名;
            
            private global::System.Data.DataColumn column部门;
            
            private global::System.Data.DataColumn column入司时间;
            
            private global::System.Data.DataColumn column离职时间;
            
            private global::System.Data.DataColumn column出生日期;
            
            private global::System.Data.DataColumn column国籍;
            
            private global::System.Data.DataColumn column民族;
            
            private global::System.Data.DataColumn column籍贯;
            
            private global::System.Data.DataColumn column政治面貌;
            
            private global::System.Data.DataColumn column身份证;
            
            private global::System.Data.DataColumn column毕业院校;
            
            private global::System.Data.DataColumn column专业;
            
            private global::System.Data.DataColumn column家庭地址;
            
            private global::System.Data.DataColumn column电话;
            
            private global::System.Data.DataColumn column手机;
            
            private global::System.Data.DataColumn columnQQ号码;
            
            private global::System.Data.DataColumn column电子邮箱;
            
            private global::System.Data.DataColumn column爱好;
            
            private global::System.Data.DataColumn column特长;
            
            private global::System.Data.DataColumn column性别;
            
            private global::System.Data.DataColumn column照片;
            
            private global::System.Data.DataColumn column附件;
            
            private global::System.Data.DataColumn column附件名;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column记录人员;
            
            private global::System.Data.DataColumn column记录时间;
            
            private global::System.Data.DataColumn column人员状态;
            
            private global::System.Data.DataColumn column拼音;
            
            private global::System.Data.DataColumn column五笔;
            
            private global::System.Data.DataColumn column转正日期;
            
            private global::System.Data.DataColumn column参加工作的时间;
            
            private global::System.Data.DataColumn column工作性质;
            
            private global::System.Data.DataColumn column婚姻状况;
            
            private global::System.Data.DataColumn column文化程度;
            
            private global::System.Data.DataColumn column学制;
            
            private global::System.Data.DataColumn column毕业年份;
            
            private global::System.Data.DataColumn column岗位;
            
            private global::System.Data.DataColumn column外部职称;
            
            private global::System.Data.DataColumn column内部级别;
            
            private global::System.Data.DataColumn column是否核心员工;
            
            private global::System.Data.DataColumn column合同到期日;
            
            private global::System.Data.DataColumn column关联编号;
            
            private global::System.Data.DataColumn column个人档案所在地;
            
            private global::System.Data.DataColumn column在司相关人员姓名;
            
            private global::System.Data.DataColumn column与相关人员关系;
            
            private global::System.Data.DataColumn column部门编号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveDataTable() {
                this.TableName = "View_HR_PersonnelArchive";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelArchiveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_PersonnelArchiveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工姓名Column {
                get {
                    return this.column员工姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门Column {
                get {
                    return this.column部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入司时间Column {
                get {
                    return this.column入司时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 离职时间Column {
                get {
                    return this.column离职时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出生日期Column {
                get {
                    return this.column出生日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 国籍Column {
                get {
                    return this.column国籍;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 民族Column {
                get {
                    return this.column民族;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 籍贯Column {
                get {
                    return this.column籍贯;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 政治面貌Column {
                get {
                    return this.column政治面貌;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 身份证Column {
                get {
                    return this.column身份证;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 毕业院校Column {
                get {
                    return this.column毕业院校;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 专业Column {
                get {
                    return this.column专业;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 家庭地址Column {
                get {
                    return this.column家庭地址;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电话Column {
                get {
                    return this.column电话;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 手机Column {
                get {
                    return this.column手机;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QQ号码Column {
                get {
                    return this.columnQQ号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电子邮箱Column {
                get {
                    return this.column电子邮箱;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 爱好Column {
                get {
                    return this.column爱好;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 特长Column {
                get {
                    return this.column特长;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 性别Column {
                get {
                    return this.column性别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 照片Column {
                get {
                    return this.column照片;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 附件Column {
                get {
                    return this.column附件;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 附件名Column {
                get {
                    return this.column附件名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录人员Column {
                get {
                    return this.column记录人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录时间Column {
                get {
                    return this.column记录时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 人员状态Column {
                get {
                    return this.column人员状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 拼音Column {
                get {
                    return this.column拼音;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 五笔Column {
                get {
                    return this.column五笔;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 转正日期Column {
                get {
                    return this.column转正日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 参加工作的时间Column {
                get {
                    return this.column参加工作的时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工作性质Column {
                get {
                    return this.column工作性质;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 婚姻状况Column {
                get {
                    return this.column婚姻状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 文化程度Column {
                get {
                    return this.column文化程度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 学制Column {
                get {
                    return this.column学制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 毕业年份Column {
                get {
                    return this.column毕业年份;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 岗位Column {
                get {
                    return this.column岗位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 外部职称Column {
                get {
                    return this.column外部职称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 内部级别Column {
                get {
                    return this.column内部级别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否核心员工Column {
                get {
                    return this.column是否核心员工;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同到期日Column {
                get {
                    return this.column合同到期日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联编号Column {
                get {
                    return this.column关联编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 个人档案所在地Column {
                get {
                    return this.column个人档案所在地;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 在司相关人员姓名Column {
                get {
                    return this.column在司相关人员姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 与相关人员关系Column {
                get {
                    return this.column与相关人员关系;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门编号Column {
                get {
                    return this.column部门编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveRow this[int index] {
                get {
                    return ((View_HR_PersonnelArchiveRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_PersonnelArchiveRowChangeEventHandler View_HR_PersonnelArchiveRowChanging;
            
            public event View_HR_PersonnelArchiveRowChangeEventHandler View_HR_PersonnelArchiveRowChanged;
            
            public event View_HR_PersonnelArchiveRowChangeEventHandler View_HR_PersonnelArchiveRowDeleting;
            
            public event View_HR_PersonnelArchiveRowChangeEventHandler View_HR_PersonnelArchiveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_PersonnelArchiveRow(View_HR_PersonnelArchiveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveRow AddView_HR_PersonnelArchiveRow(
                        string 员工编号, 
                        string 员工姓名, 
                        string 部门, 
                        System.DateTime 入司时间, 
                        System.DateTime 离职时间, 
                        System.DateTime 出生日期, 
                        string 国籍, 
                        string 民族, 
                        string 籍贯, 
                        string 政治面貌, 
                        string 身份证, 
                        string 毕业院校, 
                        string 专业, 
                        string 家庭地址, 
                        string 电话, 
                        string 手机, 
                        string QQ号码, 
                        string 电子邮箱, 
                        string 爱好, 
                        string 特长, 
                        string 性别, 
                        byte[] 照片, 
                        byte[] 附件, 
                        string 附件名, 
                        string 备注, 
                        string 记录人员, 
                        System.DateTime 记录时间, 
                        string 人员状态, 
                        string 拼音, 
                        string 五笔, 
                        System.DateTime 转正日期, 
                        System.DateTime 参加工作的时间, 
                        string 工作性质, 
                        string 婚姻状况, 
                        string 文化程度, 
                        string 学制, 
                        int 毕业年份, 
                        string 岗位, 
                        string 外部职称, 
                        string 内部级别, 
                        bool 是否核心员工, 
                        System.DateTime 合同到期日, 
                        int 关联编号, 
                        string 个人档案所在地, 
                        string 在司相关人员姓名, 
                        string 与相关人员关系, 
                        string 部门编号) {
                View_HR_PersonnelArchiveRow rowView_HR_PersonnelArchiveRow = ((View_HR_PersonnelArchiveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        员工编号,
                        员工姓名,
                        部门,
                        入司时间,
                        离职时间,
                        出生日期,
                        国籍,
                        民族,
                        籍贯,
                        政治面貌,
                        身份证,
                        毕业院校,
                        专业,
                        家庭地址,
                        电话,
                        手机,
                        QQ号码,
                        电子邮箱,
                        爱好,
                        特长,
                        性别,
                        照片,
                        附件,
                        附件名,
                        备注,
                        记录人员,
                        记录时间,
                        人员状态,
                        拼音,
                        五笔,
                        转正日期,
                        参加工作的时间,
                        工作性质,
                        婚姻状况,
                        文化程度,
                        学制,
                        毕业年份,
                        岗位,
                        外部职称,
                        内部级别,
                        是否核心员工,
                        合同到期日,
                        关联编号,
                        个人档案所在地,
                        在司相关人员姓名,
                        与相关人员关系,
                        部门编号};
                rowView_HR_PersonnelArchiveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_PersonnelArchiveRow);
                return rowView_HR_PersonnelArchiveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_PersonnelArchiveDataTable cln = ((View_HR_PersonnelArchiveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_PersonnelArchiveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column员工编号 = base.Columns["员工编号"];
                this.column员工姓名 = base.Columns["员工姓名"];
                this.column部门 = base.Columns["部门"];
                this.column入司时间 = base.Columns["入司时间"];
                this.column离职时间 = base.Columns["离职时间"];
                this.column出生日期 = base.Columns["出生日期"];
                this.column国籍 = base.Columns["国籍"];
                this.column民族 = base.Columns["民族"];
                this.column籍贯 = base.Columns["籍贯"];
                this.column政治面貌 = base.Columns["政治面貌"];
                this.column身份证 = base.Columns["身份证"];
                this.column毕业院校 = base.Columns["毕业院校"];
                this.column专业 = base.Columns["专业"];
                this.column家庭地址 = base.Columns["家庭地址"];
                this.column电话 = base.Columns["电话"];
                this.column手机 = base.Columns["手机"];
                this.columnQQ号码 = base.Columns["QQ号码"];
                this.column电子邮箱 = base.Columns["电子邮箱"];
                this.column爱好 = base.Columns["爱好"];
                this.column特长 = base.Columns["特长"];
                this.column性别 = base.Columns["性别"];
                this.column照片 = base.Columns["照片"];
                this.column附件 = base.Columns["附件"];
                this.column附件名 = base.Columns["附件名"];
                this.column备注 = base.Columns["备注"];
                this.column记录人员 = base.Columns["记录人员"];
                this.column记录时间 = base.Columns["记录时间"];
                this.column人员状态 = base.Columns["人员状态"];
                this.column拼音 = base.Columns["拼音"];
                this.column五笔 = base.Columns["五笔"];
                this.column转正日期 = base.Columns["转正日期"];
                this.column参加工作的时间 = base.Columns["参加工作的时间"];
                this.column工作性质 = base.Columns["工作性质"];
                this.column婚姻状况 = base.Columns["婚姻状况"];
                this.column文化程度 = base.Columns["文化程度"];
                this.column学制 = base.Columns["学制"];
                this.column毕业年份 = base.Columns["毕业年份"];
                this.column岗位 = base.Columns["岗位"];
                this.column外部职称 = base.Columns["外部职称"];
                this.column内部级别 = base.Columns["内部级别"];
                this.column是否核心员工 = base.Columns["是否核心员工"];
                this.column合同到期日 = base.Columns["合同到期日"];
                this.column关联编号 = base.Columns["关联编号"];
                this.column个人档案所在地 = base.Columns["个人档案所在地"];
                this.column在司相关人员姓名 = base.Columns["在司相关人员姓名"];
                this.column与相关人员关系 = base.Columns["与相关人员关系"];
                this.column部门编号 = base.Columns["部门编号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column员工姓名 = new global::System.Data.DataColumn("员工姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工姓名);
                this.column部门 = new global::System.Data.DataColumn("部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门);
                this.column入司时间 = new global::System.Data.DataColumn("入司时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入司时间);
                this.column离职时间 = new global::System.Data.DataColumn("离职时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column离职时间);
                this.column出生日期 = new global::System.Data.DataColumn("出生日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出生日期);
                this.column国籍 = new global::System.Data.DataColumn("国籍", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column国籍);
                this.column民族 = new global::System.Data.DataColumn("民族", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column民族);
                this.column籍贯 = new global::System.Data.DataColumn("籍贯", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column籍贯);
                this.column政治面貌 = new global::System.Data.DataColumn("政治面貌", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column政治面貌);
                this.column身份证 = new global::System.Data.DataColumn("身份证", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column身份证);
                this.column毕业院校 = new global::System.Data.DataColumn("毕业院校", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毕业院校);
                this.column专业 = new global::System.Data.DataColumn("专业", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column专业);
                this.column家庭地址 = new global::System.Data.DataColumn("家庭地址", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column家庭地址);
                this.column电话 = new global::System.Data.DataColumn("电话", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电话);
                this.column手机 = new global::System.Data.DataColumn("手机", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column手机);
                this.columnQQ号码 = new global::System.Data.DataColumn("QQ号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQQ号码);
                this.column电子邮箱 = new global::System.Data.DataColumn("电子邮箱", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电子邮箱);
                this.column爱好 = new global::System.Data.DataColumn("爱好", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column爱好);
                this.column特长 = new global::System.Data.DataColumn("特长", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column特长);
                this.column性别 = new global::System.Data.DataColumn("性别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column性别);
                this.column照片 = new global::System.Data.DataColumn("照片", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column照片);
                this.column附件 = new global::System.Data.DataColumn("附件", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column附件);
                this.column附件名 = new global::System.Data.DataColumn("附件名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column附件名);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column记录人员 = new global::System.Data.DataColumn("记录人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录人员);
                this.column记录时间 = new global::System.Data.DataColumn("记录时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录时间);
                this.column人员状态 = new global::System.Data.DataColumn("人员状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column人员状态);
                this.column拼音 = new global::System.Data.DataColumn("拼音", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column拼音);
                this.column五笔 = new global::System.Data.DataColumn("五笔", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column五笔);
                this.column转正日期 = new global::System.Data.DataColumn("转正日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转正日期);
                this.column参加工作的时间 = new global::System.Data.DataColumn("参加工作的时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column参加工作的时间);
                this.column工作性质 = new global::System.Data.DataColumn("工作性质", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工作性质);
                this.column婚姻状况 = new global::System.Data.DataColumn("婚姻状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column婚姻状况);
                this.column文化程度 = new global::System.Data.DataColumn("文化程度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column文化程度);
                this.column学制 = new global::System.Data.DataColumn("学制", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column学制);
                this.column毕业年份 = new global::System.Data.DataColumn("毕业年份", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毕业年份);
                this.column岗位 = new global::System.Data.DataColumn("岗位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column岗位);
                this.column外部职称 = new global::System.Data.DataColumn("外部职称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外部职称);
                this.column内部级别 = new global::System.Data.DataColumn("内部级别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column内部级别);
                this.column是否核心员工 = new global::System.Data.DataColumn("是否核心员工", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否核心员工);
                this.column合同到期日 = new global::System.Data.DataColumn("合同到期日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同到期日);
                this.column关联编号 = new global::System.Data.DataColumn("关联编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联编号);
                this.column个人档案所在地 = new global::System.Data.DataColumn("个人档案所在地", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column个人档案所在地);
                this.column在司相关人员姓名 = new global::System.Data.DataColumn("在司相关人员姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在司相关人员姓名);
                this.column与相关人员关系 = new global::System.Data.DataColumn("与相关人员关系", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column与相关人员关系);
                this.column部门编号 = new global::System.Data.DataColumn("部门编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门编号);
                this.column员工编号.AllowDBNull = false;
                this.column员工编号.MaxLength = 50;
                this.column员工姓名.AllowDBNull = false;
                this.column员工姓名.MaxLength = 50;
                this.column部门.AllowDBNull = false;
                this.column部门.MaxLength = 50;
                this.column入司时间.AllowDBNull = false;
                this.column出生日期.AllowDBNull = false;
                this.column国籍.AllowDBNull = false;
                this.column国籍.MaxLength = 50;
                this.column民族.AllowDBNull = false;
                this.column民族.MaxLength = 50;
                this.column籍贯.AllowDBNull = false;
                this.column籍贯.MaxLength = 100;
                this.column政治面貌.AllowDBNull = false;
                this.column政治面貌.MaxLength = 20;
                this.column身份证.AllowDBNull = false;
                this.column身份证.MaxLength = 20;
                this.column毕业院校.AllowDBNull = false;
                this.column毕业院校.MaxLength = 200;
                this.column专业.AllowDBNull = false;
                this.column专业.MaxLength = 100;
                this.column家庭地址.AllowDBNull = false;
                this.column家庭地址.MaxLength = 200;
                this.column电话.AllowDBNull = false;
                this.column电话.MaxLength = 20;
                this.column手机.AllowDBNull = false;
                this.column手机.MaxLength = 20;
                this.columnQQ号码.AllowDBNull = false;
                this.columnQQ号码.MaxLength = 20;
                this.column电子邮箱.AllowDBNull = false;
                this.column电子邮箱.MaxLength = 50;
                this.column爱好.AllowDBNull = false;
                this.column爱好.MaxLength = 200;
                this.column特长.AllowDBNull = false;
                this.column特长.MaxLength = 200;
                this.column性别.AllowDBNull = false;
                this.column性别.MaxLength = 2;
                this.column附件名.MaxLength = 2147483647;
                this.column备注.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column记录人员.MaxLength = 50;
                this.column记录时间.AllowDBNull = false;
                this.column人员状态.AllowDBNull = false;
                this.column人员状态.MaxLength = 20;
                this.column拼音.MaxLength = 50;
                this.column五笔.MaxLength = 50;
                this.column工作性质.AllowDBNull = false;
                this.column工作性质.MaxLength = 20;
                this.column婚姻状况.AllowDBNull = false;
                this.column婚姻状况.MaxLength = 4;
                this.column文化程度.AllowDBNull = false;
                this.column文化程度.MaxLength = 20;
                this.column学制.MaxLength = 20;
                this.column岗位.AllowDBNull = false;
                this.column岗位.MaxLength = 50;
                this.column外部职称.MaxLength = 50;
                this.column内部级别.MaxLength = 50;
                this.column是否核心员工.AllowDBNull = false;
                this.column个人档案所在地.AllowDBNull = false;
                this.column个人档案所在地.MaxLength = 100;
                this.column在司相关人员姓名.MaxLength = 50;
                this.column与相关人员关系.MaxLength = 50;
                this.column部门编号.AllowDBNull = false;
                this.column部门编号.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveRow NewView_HR_PersonnelArchiveRow() {
                return ((View_HR_PersonnelArchiveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_PersonnelArchiveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_PersonnelArchiveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_PersonnelArchiveRowChanged != null)) {
                    this.View_HR_PersonnelArchiveRowChanged(this, new View_HR_PersonnelArchiveRowChangeEvent(((View_HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_PersonnelArchiveRowChanging != null)) {
                    this.View_HR_PersonnelArchiveRowChanging(this, new View_HR_PersonnelArchiveRowChangeEvent(((View_HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_PersonnelArchiveRowDeleted != null)) {
                    this.View_HR_PersonnelArchiveRowDeleted(this, new View_HR_PersonnelArchiveRowChangeEvent(((View_HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_PersonnelArchiveRowDeleting != null)) {
                    this.View_HR_PersonnelArchiveRowDeleting(this, new View_HR_PersonnelArchiveRowChangeEvent(((View_HR_PersonnelArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_PersonnelArchiveRow(View_HR_PersonnelArchiveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_PersonnelArchiveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_PersonnelArchiveChangeDataTable : global::System.Data.TypedTableBase<View_HR_PersonnelArchiveChangeRow> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column员工姓名;
            
            private global::System.Data.DataColumn column部门;
            
            private global::System.Data.DataColumn column部门名称;
            
            private global::System.Data.DataColumn column工作岗位;
            
            private global::System.Data.DataColumn column入司时间;
            
            private global::System.Data.DataColumn column离职时间;
            
            private global::System.Data.DataColumn column出生日期;
            
            private global::System.Data.DataColumn column国籍;
            
            private global::System.Data.DataColumn column民族;
            
            private global::System.Data.DataColumn column籍贯;
            
            private global::System.Data.DataColumn column政治面貌;
            
            private global::System.Data.DataColumn column身份证;
            
            private global::System.Data.DataColumn column毕业院校;
            
            private global::System.Data.DataColumn column专业;
            
            private global::System.Data.DataColumn column家庭住址;
            
            private global::System.Data.DataColumn column邮编;
            
            private global::System.Data.DataColumn column电话;
            
            private global::System.Data.DataColumn column手机;
            
            private global::System.Data.DataColumn column开户银行;
            
            private global::System.Data.DataColumn column银行账号;
            
            private global::System.Data.DataColumn column社会保障号;
            
            private global::System.Data.DataColumn columnQQ号码;
            
            private global::System.Data.DataColumn column电子邮箱;
            
            private global::System.Data.DataColumn column爱好;
            
            private global::System.Data.DataColumn column特长;
            
            private global::System.Data.DataColumn column性别;
            
            private global::System.Data.DataColumn column简历编号;
            
            private global::System.Data.DataColumn column照片;
            
            private global::System.Data.DataColumn column附件;
            
            private global::System.Data.DataColumn column附件名;
            
            private global::System.Data.DataColumn column调动次数;
            
            private global::System.Data.DataColumn column培训次数;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column记录人员;
            
            private global::System.Data.DataColumn column记录时间;
            
            private global::System.Data.DataColumn column转正日期;
            
            private global::System.Data.DataColumn column参加工作的时间;
            
            private global::System.Data.DataColumn column工作性质;
            
            private global::System.Data.DataColumn column婚姻状况;
            
            private global::System.Data.DataColumn column文化程度;
            
            private global::System.Data.DataColumn column学制;
            
            private global::System.Data.DataColumn column毕业年份;
            
            private global::System.Data.DataColumn column外部职称;
            
            private global::System.Data.DataColumn column内部级别;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeDataTable() {
                this.TableName = "View_HR_PersonnelArchiveChange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelArchiveChangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_PersonnelArchiveChangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工姓名Column {
                get {
                    return this.column员工姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门Column {
                get {
                    return this.column部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工作岗位Column {
                get {
                    return this.column工作岗位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入司时间Column {
                get {
                    return this.column入司时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 离职时间Column {
                get {
                    return this.column离职时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出生日期Column {
                get {
                    return this.column出生日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 国籍Column {
                get {
                    return this.column国籍;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 民族Column {
                get {
                    return this.column民族;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 籍贯Column {
                get {
                    return this.column籍贯;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 政治面貌Column {
                get {
                    return this.column政治面貌;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 身份证Column {
                get {
                    return this.column身份证;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 毕业院校Column {
                get {
                    return this.column毕业院校;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 专业Column {
                get {
                    return this.column专业;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 家庭住址Column {
                get {
                    return this.column家庭住址;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 邮编Column {
                get {
                    return this.column邮编;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电话Column {
                get {
                    return this.column电话;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 手机Column {
                get {
                    return this.column手机;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 开户银行Column {
                get {
                    return this.column开户银行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行账号Column {
                get {
                    return this.column银行账号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 社会保障号Column {
                get {
                    return this.column社会保障号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QQ号码Column {
                get {
                    return this.columnQQ号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电子邮箱Column {
                get {
                    return this.column电子邮箱;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 爱好Column {
                get {
                    return this.column爱好;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 特长Column {
                get {
                    return this.column特长;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 性别Column {
                get {
                    return this.column性别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 简历编号Column {
                get {
                    return this.column简历编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 照片Column {
                get {
                    return this.column照片;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 附件Column {
                get {
                    return this.column附件;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 附件名Column {
                get {
                    return this.column附件名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调动次数Column {
                get {
                    return this.column调动次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 培训次数Column {
                get {
                    return this.column培训次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录人员Column {
                get {
                    return this.column记录人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 记录时间Column {
                get {
                    return this.column记录时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 转正日期Column {
                get {
                    return this.column转正日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 参加工作的时间Column {
                get {
                    return this.column参加工作的时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工作性质Column {
                get {
                    return this.column工作性质;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 婚姻状况Column {
                get {
                    return this.column婚姻状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 文化程度Column {
                get {
                    return this.column文化程度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 学制Column {
                get {
                    return this.column学制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 毕业年份Column {
                get {
                    return this.column毕业年份;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 外部职称Column {
                get {
                    return this.column外部职称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 内部级别Column {
                get {
                    return this.column内部级别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRow this[int index] {
                get {
                    return ((View_HR_PersonnelArchiveChangeRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_PersonnelArchiveChangeRowChangeEventHandler View_HR_PersonnelArchiveChangeRowChanging;
            
            public event View_HR_PersonnelArchiveChangeRowChangeEventHandler View_HR_PersonnelArchiveChangeRowChanged;
            
            public event View_HR_PersonnelArchiveChangeRowChangeEventHandler View_HR_PersonnelArchiveChangeRowDeleting;
            
            public event View_HR_PersonnelArchiveChangeRowChangeEventHandler View_HR_PersonnelArchiveChangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_PersonnelArchiveChangeRow(View_HR_PersonnelArchiveChangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRow AddView_HR_PersonnelArchiveChangeRow(
                        int 编号, 
                        string 员工编号, 
                        string 员工姓名, 
                        string 部门, 
                        string 部门名称, 
                        string 工作岗位, 
                        System.DateTime 入司时间, 
                        System.DateTime 离职时间, 
                        System.DateTime 出生日期, 
                        string 国籍, 
                        string 民族, 
                        string 籍贯, 
                        string 政治面貌, 
                        string 身份证, 
                        string 毕业院校, 
                        string 专业, 
                        string 家庭住址, 
                        string 邮编, 
                        string 电话, 
                        string 手机, 
                        string 开户银行, 
                        string 银行账号, 
                        string 社会保障号, 
                        string QQ号码, 
                        string 电子邮箱, 
                        string 爱好, 
                        string 特长, 
                        string 性别, 
                        int 简历编号, 
                        byte[] 照片, 
                        byte[] 附件, 
                        string 附件名, 
                        int 调动次数, 
                        int 培训次数, 
                        string 备注, 
                        string 记录人员, 
                        System.DateTime 记录时间, 
                        System.DateTime 转正日期, 
                        System.DateTime 参加工作的时间, 
                        string 工作性质, 
                        string 婚姻状况, 
                        string 文化程度, 
                        string 学制, 
                        int 毕业年份, 
                        string 外部职称, 
                        string 内部级别) {
                View_HR_PersonnelArchiveChangeRow rowView_HR_PersonnelArchiveChangeRow = ((View_HR_PersonnelArchiveChangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        编号,
                        员工编号,
                        员工姓名,
                        部门,
                        部门名称,
                        工作岗位,
                        入司时间,
                        离职时间,
                        出生日期,
                        国籍,
                        民族,
                        籍贯,
                        政治面貌,
                        身份证,
                        毕业院校,
                        专业,
                        家庭住址,
                        邮编,
                        电话,
                        手机,
                        开户银行,
                        银行账号,
                        社会保障号,
                        QQ号码,
                        电子邮箱,
                        爱好,
                        特长,
                        性别,
                        简历编号,
                        照片,
                        附件,
                        附件名,
                        调动次数,
                        培训次数,
                        备注,
                        记录人员,
                        记录时间,
                        转正日期,
                        参加工作的时间,
                        工作性质,
                        婚姻状况,
                        文化程度,
                        学制,
                        毕业年份,
                        外部职称,
                        内部级别};
                rowView_HR_PersonnelArchiveChangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_PersonnelArchiveChangeRow);
                return rowView_HR_PersonnelArchiveChangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRow FindBy编号(int 编号) {
                return ((View_HR_PersonnelArchiveChangeRow)(this.Rows.Find(new object[] {
                            编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_PersonnelArchiveChangeDataTable cln = ((View_HR_PersonnelArchiveChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_PersonnelArchiveChangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column员工编号 = base.Columns["员工编号"];
                this.column员工姓名 = base.Columns["员工姓名"];
                this.column部门 = base.Columns["部门"];
                this.column部门名称 = base.Columns["部门名称"];
                this.column工作岗位 = base.Columns["工作岗位"];
                this.column入司时间 = base.Columns["入司时间"];
                this.column离职时间 = base.Columns["离职时间"];
                this.column出生日期 = base.Columns["出生日期"];
                this.column国籍 = base.Columns["国籍"];
                this.column民族 = base.Columns["民族"];
                this.column籍贯 = base.Columns["籍贯"];
                this.column政治面貌 = base.Columns["政治面貌"];
                this.column身份证 = base.Columns["身份证"];
                this.column毕业院校 = base.Columns["毕业院校"];
                this.column专业 = base.Columns["专业"];
                this.column家庭住址 = base.Columns["家庭住址"];
                this.column邮编 = base.Columns["邮编"];
                this.column电话 = base.Columns["电话"];
                this.column手机 = base.Columns["手机"];
                this.column开户银行 = base.Columns["开户银行"];
                this.column银行账号 = base.Columns["银行账号"];
                this.column社会保障号 = base.Columns["社会保障号"];
                this.columnQQ号码 = base.Columns["QQ号码"];
                this.column电子邮箱 = base.Columns["电子邮箱"];
                this.column爱好 = base.Columns["爱好"];
                this.column特长 = base.Columns["特长"];
                this.column性别 = base.Columns["性别"];
                this.column简历编号 = base.Columns["简历编号"];
                this.column照片 = base.Columns["照片"];
                this.column附件 = base.Columns["附件"];
                this.column附件名 = base.Columns["附件名"];
                this.column调动次数 = base.Columns["调动次数"];
                this.column培训次数 = base.Columns["培训次数"];
                this.column备注 = base.Columns["备注"];
                this.column记录人员 = base.Columns["记录人员"];
                this.column记录时间 = base.Columns["记录时间"];
                this.column转正日期 = base.Columns["转正日期"];
                this.column参加工作的时间 = base.Columns["参加工作的时间"];
                this.column工作性质 = base.Columns["工作性质"];
                this.column婚姻状况 = base.Columns["婚姻状况"];
                this.column文化程度 = base.Columns["文化程度"];
                this.column学制 = base.Columns["学制"];
                this.column毕业年份 = base.Columns["毕业年份"];
                this.column外部职称 = base.Columns["外部职称"];
                this.column内部级别 = base.Columns["内部级别"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column员工姓名 = new global::System.Data.DataColumn("员工姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工姓名);
                this.column部门 = new global::System.Data.DataColumn("部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.column工作岗位 = new global::System.Data.DataColumn("工作岗位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工作岗位);
                this.column入司时间 = new global::System.Data.DataColumn("入司时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入司时间);
                this.column离职时间 = new global::System.Data.DataColumn("离职时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column离职时间);
                this.column出生日期 = new global::System.Data.DataColumn("出生日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出生日期);
                this.column国籍 = new global::System.Data.DataColumn("国籍", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column国籍);
                this.column民族 = new global::System.Data.DataColumn("民族", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column民族);
                this.column籍贯 = new global::System.Data.DataColumn("籍贯", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column籍贯);
                this.column政治面貌 = new global::System.Data.DataColumn("政治面貌", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column政治面貌);
                this.column身份证 = new global::System.Data.DataColumn("身份证", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column身份证);
                this.column毕业院校 = new global::System.Data.DataColumn("毕业院校", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毕业院校);
                this.column专业 = new global::System.Data.DataColumn("专业", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column专业);
                this.column家庭住址 = new global::System.Data.DataColumn("家庭住址", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column家庭住址);
                this.column邮编 = new global::System.Data.DataColumn("邮编", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column邮编);
                this.column电话 = new global::System.Data.DataColumn("电话", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电话);
                this.column手机 = new global::System.Data.DataColumn("手机", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column手机);
                this.column开户银行 = new global::System.Data.DataColumn("开户银行", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开户银行);
                this.column银行账号 = new global::System.Data.DataColumn("银行账号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行账号);
                this.column社会保障号 = new global::System.Data.DataColumn("社会保障号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column社会保障号);
                this.columnQQ号码 = new global::System.Data.DataColumn("QQ号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQQ号码);
                this.column电子邮箱 = new global::System.Data.DataColumn("电子邮箱", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电子邮箱);
                this.column爱好 = new global::System.Data.DataColumn("爱好", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column爱好);
                this.column特长 = new global::System.Data.DataColumn("特长", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column特长);
                this.column性别 = new global::System.Data.DataColumn("性别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column性别);
                this.column简历编号 = new global::System.Data.DataColumn("简历编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column简历编号);
                this.column照片 = new global::System.Data.DataColumn("照片", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column照片);
                this.column附件 = new global::System.Data.DataColumn("附件", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column附件);
                this.column附件名 = new global::System.Data.DataColumn("附件名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column附件名);
                this.column调动次数 = new global::System.Data.DataColumn("调动次数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调动次数);
                this.column培训次数 = new global::System.Data.DataColumn("培训次数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column培训次数);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column记录人员 = new global::System.Data.DataColumn("记录人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录人员);
                this.column记录时间 = new global::System.Data.DataColumn("记录时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column记录时间);
                this.column转正日期 = new global::System.Data.DataColumn("转正日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转正日期);
                this.column参加工作的时间 = new global::System.Data.DataColumn("参加工作的时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column参加工作的时间);
                this.column工作性质 = new global::System.Data.DataColumn("工作性质", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工作性质);
                this.column婚姻状况 = new global::System.Data.DataColumn("婚姻状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column婚姻状况);
                this.column文化程度 = new global::System.Data.DataColumn("文化程度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column文化程度);
                this.column学制 = new global::System.Data.DataColumn("学制", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column学制);
                this.column毕业年份 = new global::System.Data.DataColumn("毕业年份", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毕业年份);
                this.column外部职称 = new global::System.Data.DataColumn("外部职称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外部职称);
                this.column内部级别 = new global::System.Data.DataColumn("内部级别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column内部级别);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column编号}, true));
                this.column编号.AllowDBNull = false;
                this.column编号.Unique = true;
                this.column员工编号.AllowDBNull = false;
                this.column员工编号.MaxLength = 50;
                this.column员工姓名.AllowDBNull = false;
                this.column员工姓名.MaxLength = 50;
                this.column部门.AllowDBNull = false;
                this.column部门.MaxLength = 50;
                this.column部门名称.AllowDBNull = false;
                this.column部门名称.MaxLength = 200;
                this.column工作岗位.MaxLength = 200;
                this.column入司时间.AllowDBNull = false;
                this.column出生日期.AllowDBNull = false;
                this.column国籍.AllowDBNull = false;
                this.column国籍.MaxLength = 50;
                this.column民族.AllowDBNull = false;
                this.column民族.MaxLength = 50;
                this.column籍贯.AllowDBNull = false;
                this.column籍贯.MaxLength = 100;
                this.column政治面貌.AllowDBNull = false;
                this.column政治面貌.MaxLength = 20;
                this.column身份证.AllowDBNull = false;
                this.column身份证.MaxLength = 20;
                this.column毕业院校.AllowDBNull = false;
                this.column毕业院校.MaxLength = 200;
                this.column专业.AllowDBNull = false;
                this.column专业.MaxLength = 100;
                this.column家庭住址.AllowDBNull = false;
                this.column家庭住址.MaxLength = 200;
                this.column邮编.AllowDBNull = false;
                this.column邮编.MaxLength = 20;
                this.column电话.AllowDBNull = false;
                this.column电话.MaxLength = 20;
                this.column手机.AllowDBNull = false;
                this.column手机.MaxLength = 20;
                this.column开户银行.AllowDBNull = false;
                this.column开户银行.MaxLength = 50;
                this.column银行账号.AllowDBNull = false;
                this.column银行账号.MaxLength = 50;
                this.column社会保障号.AllowDBNull = false;
                this.column社会保障号.MaxLength = 50;
                this.columnQQ号码.AllowDBNull = false;
                this.columnQQ号码.MaxLength = 20;
                this.column电子邮箱.AllowDBNull = false;
                this.column电子邮箱.MaxLength = 50;
                this.column爱好.AllowDBNull = false;
                this.column爱好.MaxLength = 200;
                this.column特长.AllowDBNull = false;
                this.column特长.MaxLength = 200;
                this.column性别.AllowDBNull = false;
                this.column性别.MaxLength = 2;
                this.column附件名.MaxLength = 2147483647;
                this.column调动次数.AllowDBNull = false;
                this.column培训次数.AllowDBNull = false;
                this.column备注.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column记录人员.MaxLength = 50;
                this.column记录时间.AllowDBNull = false;
                this.column工作性质.AllowDBNull = false;
                this.column工作性质.MaxLength = 20;
                this.column婚姻状况.AllowDBNull = false;
                this.column婚姻状况.MaxLength = 4;
                this.column文化程度.AllowDBNull = false;
                this.column文化程度.MaxLength = 20;
                this.column学制.AllowDBNull = false;
                this.column学制.MaxLength = 20;
                this.column外部职称.AllowDBNull = false;
                this.column外部职称.MaxLength = 200;
                this.column内部级别.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRow NewView_HR_PersonnelArchiveChangeRow() {
                return ((View_HR_PersonnelArchiveChangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_PersonnelArchiveChangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_PersonnelArchiveChangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_PersonnelArchiveChangeRowChanged != null)) {
                    this.View_HR_PersonnelArchiveChangeRowChanged(this, new View_HR_PersonnelArchiveChangeRowChangeEvent(((View_HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_PersonnelArchiveChangeRowChanging != null)) {
                    this.View_HR_PersonnelArchiveChangeRowChanging(this, new View_HR_PersonnelArchiveChangeRowChangeEvent(((View_HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_PersonnelArchiveChangeRowDeleted != null)) {
                    this.View_HR_PersonnelArchiveChangeRowDeleted(this, new View_HR_PersonnelArchiveChangeRowChangeEvent(((View_HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_PersonnelArchiveChangeRowDeleting != null)) {
                    this.View_HR_PersonnelArchiveChangeRowDeleting(this, new View_HR_PersonnelArchiveChangeRowChangeEvent(((View_HR_PersonnelArchiveChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_PersonnelArchiveChangeRow(View_HR_PersonnelArchiveChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_PersonnelArchiveChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_OnBusinessBillDataTable : global::System.Data.TypedTableBase<HR_OnBusinessBillRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBillStatus;
            
            private global::System.Data.DataColumn columnApplicant;
            
            private global::System.Data.DataColumn columnApplicantDate;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnETD;
            
            private global::System.Data.DataColumn columnVehicle;
            
            private global::System.Data.DataColumn columnEntertainmentExprense;
            
            private global::System.Data.DataColumn columnOtherExprense;
            
            private global::System.Data.DataColumn columnIsBorrowing;
            
            private global::System.Data.DataColumn columnBorrowingAmount;
            
            private global::System.Data.DataColumn columnDeptPrincipal;
            
            private global::System.Data.DataColumn columnGeneralManager;
            
            private global::System.Data.DataColumn columnAuthorize;
            
            private global::System.Data.DataColumn columnConfirmor;
            
            private global::System.Data.DataColumn columnConfirmorDate;
            
            private global::System.Data.DataColumn columnWithinBudget;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnETC;
            
            private global::System.Data.DataColumn columnRealBeginTime;
            
            private global::System.Data.DataColumn columnRealEndTime;
            
            private global::System.Data.DataColumn columnDeptSignatureDate;
            
            private global::System.Data.DataColumn columnLeaderSignature;
            
            private global::System.Data.DataColumn columnLeaderSignatureDate;
            
            private global::System.Data.DataColumn columnGM_SignatureDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillDataTable() {
                this.TableName = "HR_OnBusinessBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_OnBusinessBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillStatusColumn {
                get {
                    return this.columnBillStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicantColumn {
                get {
                    return this.columnApplicant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicantDateColumn {
                get {
                    return this.columnApplicantDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETDColumn {
                get {
                    return this.columnETD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleColumn {
                get {
                    return this.columnVehicle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntertainmentExprenseColumn {
                get {
                    return this.columnEntertainmentExprense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExprenseColumn {
                get {
                    return this.columnOtherExprense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBorrowingColumn {
                get {
                    return this.columnIsBorrowing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BorrowingAmountColumn {
                get {
                    return this.columnBorrowingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptPrincipalColumn {
                get {
                    return this.columnDeptPrincipal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralManagerColumn {
                get {
                    return this.columnGeneralManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorizeColumn {
                get {
                    return this.columnAuthorize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmorColumn {
                get {
                    return this.columnConfirmor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmorDateColumn {
                get {
                    return this.columnConfirmorDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WithinBudgetColumn {
                get {
                    return this.columnWithinBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCColumn {
                get {
                    return this.columnETC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealBeginTimeColumn {
                get {
                    return this.columnRealBeginTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealEndTimeColumn {
                get {
                    return this.columnRealEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptSignatureDateColumn {
                get {
                    return this.columnDeptSignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderSignatureColumn {
                get {
                    return this.columnLeaderSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderSignatureDateColumn {
                get {
                    return this.columnLeaderSignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GM_SignatureDateColumn {
                get {
                    return this.columnGM_SignatureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow this[int index] {
                get {
                    return ((HR_OnBusinessBillRow)(this.Rows[index]));
                }
            }
            
            public event HR_OnBusinessBillRowChangeEventHandler HR_OnBusinessBillRowChanging;
            
            public event HR_OnBusinessBillRowChangeEventHandler HR_OnBusinessBillRowChanged;
            
            public event HR_OnBusinessBillRowChangeEventHandler HR_OnBusinessBillRowDeleting;
            
            public event HR_OnBusinessBillRowChangeEventHandler HR_OnBusinessBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_OnBusinessBillRow(HR_OnBusinessBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow AddHR_OnBusinessBillRow(
                        string BillStatus, 
                        string Applicant, 
                        System.DateTime ApplicantDate, 
                        string Purpose, 
                        System.DateTime ETD, 
                        string Vehicle, 
                        decimal EntertainmentExprense, 
                        decimal OtherExprense, 
                        bool IsBorrowing, 
                        decimal BorrowingAmount, 
                        string DeptPrincipal, 
                        string GeneralManager, 
                        bool Authorize, 
                        string Confirmor, 
                        System.DateTime ConfirmorDate, 
                        bool WithinBudget, 
                        string Result, 
                        System.DateTime ETC, 
                        System.DateTime RealBeginTime, 
                        System.DateTime RealEndTime, 
                        System.DateTime DeptSignatureDate, 
                        string LeaderSignature, 
                        System.DateTime LeaderSignatureDate, 
                        System.DateTime GM_SignatureDate) {
                HR_OnBusinessBillRow rowHR_OnBusinessBillRow = ((HR_OnBusinessBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BillStatus,
                        Applicant,
                        ApplicantDate,
                        Purpose,
                        ETD,
                        Vehicle,
                        EntertainmentExprense,
                        OtherExprense,
                        IsBorrowing,
                        BorrowingAmount,
                        DeptPrincipal,
                        GeneralManager,
                        Authorize,
                        Confirmor,
                        ConfirmorDate,
                        WithinBudget,
                        Result,
                        ETC,
                        RealBeginTime,
                        RealEndTime,
                        DeptSignatureDate,
                        LeaderSignature,
                        LeaderSignatureDate,
                        GM_SignatureDate};
                rowHR_OnBusinessBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_OnBusinessBillRow);
                return rowHR_OnBusinessBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow FindByID(int ID) {
                return ((HR_OnBusinessBillRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_OnBusinessBillDataTable cln = ((HR_OnBusinessBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_OnBusinessBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBillStatus = base.Columns["BillStatus"];
                this.columnApplicant = base.Columns["Applicant"];
                this.columnApplicantDate = base.Columns["ApplicantDate"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnETD = base.Columns["ETD"];
                this.columnVehicle = base.Columns["Vehicle"];
                this.columnEntertainmentExprense = base.Columns["EntertainmentExprense"];
                this.columnOtherExprense = base.Columns["OtherExprense"];
                this.columnIsBorrowing = base.Columns["IsBorrowing"];
                this.columnBorrowingAmount = base.Columns["BorrowingAmount"];
                this.columnDeptPrincipal = base.Columns["DeptPrincipal"];
                this.columnGeneralManager = base.Columns["GeneralManager"];
                this.columnAuthorize = base.Columns["Authorize"];
                this.columnConfirmor = base.Columns["Confirmor"];
                this.columnConfirmorDate = base.Columns["ConfirmorDate"];
                this.columnWithinBudget = base.Columns["WithinBudget"];
                this.columnResult = base.Columns["Result"];
                this.columnETC = base.Columns["ETC"];
                this.columnRealBeginTime = base.Columns["RealBeginTime"];
                this.columnRealEndTime = base.Columns["RealEndTime"];
                this.columnDeptSignatureDate = base.Columns["DeptSignatureDate"];
                this.columnLeaderSignature = base.Columns["LeaderSignature"];
                this.columnLeaderSignatureDate = base.Columns["LeaderSignatureDate"];
                this.columnGM_SignatureDate = base.Columns["GM_SignatureDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBillStatus = new global::System.Data.DataColumn("BillStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillStatus);
                this.columnApplicant = new global::System.Data.DataColumn("Applicant", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicant);
                this.columnApplicantDate = new global::System.Data.DataColumn("ApplicantDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicantDate);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnETD = new global::System.Data.DataColumn("ETD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETD);
                this.columnVehicle = new global::System.Data.DataColumn("Vehicle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle);
                this.columnEntertainmentExprense = new global::System.Data.DataColumn("EntertainmentExprense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntertainmentExprense);
                this.columnOtherExprense = new global::System.Data.DataColumn("OtherExprense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExprense);
                this.columnIsBorrowing = new global::System.Data.DataColumn("IsBorrowing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBorrowing);
                this.columnBorrowingAmount = new global::System.Data.DataColumn("BorrowingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBorrowingAmount);
                this.columnDeptPrincipal = new global::System.Data.DataColumn("DeptPrincipal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptPrincipal);
                this.columnGeneralManager = new global::System.Data.DataColumn("GeneralManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralManager);
                this.columnAuthorize = new global::System.Data.DataColumn("Authorize", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorize);
                this.columnConfirmor = new global::System.Data.DataColumn("Confirmor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmor);
                this.columnConfirmorDate = new global::System.Data.DataColumn("ConfirmorDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmorDate);
                this.columnWithinBudget = new global::System.Data.DataColumn("WithinBudget", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithinBudget);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnETC = new global::System.Data.DataColumn("ETC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC);
                this.columnRealBeginTime = new global::System.Data.DataColumn("RealBeginTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealBeginTime);
                this.columnRealEndTime = new global::System.Data.DataColumn("RealEndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealEndTime);
                this.columnDeptSignatureDate = new global::System.Data.DataColumn("DeptSignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptSignatureDate);
                this.columnLeaderSignature = new global::System.Data.DataColumn("LeaderSignature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderSignature);
                this.columnLeaderSignatureDate = new global::System.Data.DataColumn("LeaderSignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderSignatureDate);
                this.columnGM_SignatureDate = new global::System.Data.DataColumn("GM_SignatureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGM_SignatureDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBillStatus.AllowDBNull = false;
                this.columnBillStatus.MaxLength = 50;
                this.columnApplicant.AllowDBNull = false;
                this.columnApplicant.MaxLength = 50;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 2147483647;
                this.columnETD.AllowDBNull = false;
                this.columnVehicle.AllowDBNull = false;
                this.columnVehicle.MaxLength = 20;
                this.columnEntertainmentExprense.AllowDBNull = false;
                this.columnIsBorrowing.AllowDBNull = false;
                this.columnBorrowingAmount.AllowDBNull = false;
                this.columnDeptPrincipal.MaxLength = 50;
                this.columnGeneralManager.MaxLength = 50;
                this.columnAuthorize.AllowDBNull = false;
                this.columnConfirmor.MaxLength = 50;
                this.columnWithinBudget.AllowDBNull = false;
                this.columnResult.AllowDBNull = false;
                this.columnResult.MaxLength = 2147483647;
                this.columnETC.AllowDBNull = false;
                this.columnRealBeginTime.AllowDBNull = false;
                this.columnRealEndTime.AllowDBNull = false;
                this.columnDeptSignatureDate.AllowDBNull = false;
                this.columnLeaderSignature.MaxLength = 50;
                this.columnLeaderSignatureDate.AllowDBNull = false;
                this.columnGM_SignatureDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow NewHR_OnBusinessBillRow() {
                return ((HR_OnBusinessBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_OnBusinessBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_OnBusinessBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_OnBusinessBillRowChanged != null)) {
                    this.HR_OnBusinessBillRowChanged(this, new HR_OnBusinessBillRowChangeEvent(((HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_OnBusinessBillRowChanging != null)) {
                    this.HR_OnBusinessBillRowChanging(this, new HR_OnBusinessBillRowChangeEvent(((HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_OnBusinessBillRowDeleted != null)) {
                    this.HR_OnBusinessBillRowDeleted(this, new HR_OnBusinessBillRowChangeEvent(((HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_OnBusinessBillRowDeleting != null)) {
                    this.HR_OnBusinessBillRowDeleting(this, new HR_OnBusinessBillRowChangeEvent(((HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_OnBusinessBillRow(HR_OnBusinessBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_OnBusinessBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_PostTypeDataTable : global::System.Data.TypedTableBase<HR_PostTypeRow> {
            
            private global::System.Data.DataColumn columnTypeID;
            
            private global::System.Data.DataColumn columnTypeName;
            
            private global::System.Data.DataColumn columnIsMiddleLevel;
            
            private global::System.Data.DataColumn columnIsHighLevel;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRecorder;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeDataTable() {
                this.TableName = "HR_PostType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PostTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_PostTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeIDColumn {
                get {
                    return this.columnTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMiddleLevelColumn {
                get {
                    return this.columnIsMiddleLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHighLevelColumn {
                get {
                    return this.columnIsHighLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorderColumn {
                get {
                    return this.columnRecorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRow this[int index] {
                get {
                    return ((HR_PostTypeRow)(this.Rows[index]));
                }
            }
            
            public event HR_PostTypeRowChangeEventHandler HR_PostTypeRowChanging;
            
            public event HR_PostTypeRowChangeEventHandler HR_PostTypeRowChanged;
            
            public event HR_PostTypeRowChangeEventHandler HR_PostTypeRowDeleting;
            
            public event HR_PostTypeRowChangeEventHandler HR_PostTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_PostTypeRow(HR_PostTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRow AddHR_PostTypeRow(int TypeID, string TypeName, bool IsMiddleLevel, bool IsHighLevel, string Remark, string Recorder, System.DateTime RecordTime) {
                HR_PostTypeRow rowHR_PostTypeRow = ((HR_PostTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TypeID,
                        TypeName,
                        IsMiddleLevel,
                        IsHighLevel,
                        Remark,
                        Recorder,
                        RecordTime};
                rowHR_PostTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_PostTypeRow);
                return rowHR_PostTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRow FindByTypeID(int TypeID) {
                return ((HR_PostTypeRow)(this.Rows.Find(new object[] {
                            TypeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_PostTypeDataTable cln = ((HR_PostTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_PostTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTypeID = base.Columns["TypeID"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnIsMiddleLevel = base.Columns["IsMiddleLevel"];
                this.columnIsHighLevel = base.Columns["IsHighLevel"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRecorder = base.Columns["Recorder"];
                this.columnRecordTime = base.Columns["RecordTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTypeID = new global::System.Data.DataColumn("TypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeID);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnIsMiddleLevel = new global::System.Data.DataColumn("IsMiddleLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMiddleLevel);
                this.columnIsHighLevel = new global::System.Data.DataColumn("IsHighLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHighLevel);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRecorder = new global::System.Data.DataColumn("Recorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorder);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTypeID}, true));
                this.columnTypeID.AllowDBNull = false;
                this.columnTypeID.Unique = true;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 50;
                this.columnIsMiddleLevel.AllowDBNull = false;
                this.columnIsHighLevel.AllowDBNull = false;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnRecorder.AllowDBNull = false;
                this.columnRecorder.MaxLength = 50;
                this.columnRecordTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRow NewHR_PostTypeRow() {
                return ((HR_PostTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_PostTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_PostTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_PostTypeRowChanged != null)) {
                    this.HR_PostTypeRowChanged(this, new HR_PostTypeRowChangeEvent(((HR_PostTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_PostTypeRowChanging != null)) {
                    this.HR_PostTypeRowChanging(this, new HR_PostTypeRowChangeEvent(((HR_PostTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_PostTypeRowDeleted != null)) {
                    this.HR_PostTypeRowDeleted(this, new HR_PostTypeRowChangeEvent(((HR_PostTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_PostTypeRowDeleting != null)) {
                    this.HR_PostTypeRowDeleting(this, new HR_PostTypeRowChangeEvent(((HR_PostTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_PostTypeRow(HR_PostTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_PostTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_OnBusinessPersonnelDataTable : global::System.Data.TypedTableBase<View_HR_OnBusinessPersonnelRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column员工姓名;
            
            private global::System.Data.DataColumn column人员类别;
            
            private global::System.Data.DataColumn column随行人员部门确认;
            
            private global::System.Data.DataColumn column随行人员部门确认时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelDataTable() {
                this.TableName = "View_HR_OnBusinessPersonnel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OnBusinessPersonnelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_OnBusinessPersonnelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工姓名Column {
                get {
                    return this.column员工姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 人员类别Column {
                get {
                    return this.column人员类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 随行人员部门确认Column {
                get {
                    return this.column随行人员部门确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 随行人员部门确认时间Column {
                get {
                    return this.column随行人员部门确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRow this[int index] {
                get {
                    return ((View_HR_OnBusinessPersonnelRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_OnBusinessPersonnelRowChangeEventHandler View_HR_OnBusinessPersonnelRowChanging;
            
            public event View_HR_OnBusinessPersonnelRowChangeEventHandler View_HR_OnBusinessPersonnelRowChanged;
            
            public event View_HR_OnBusinessPersonnelRowChangeEventHandler View_HR_OnBusinessPersonnelRowDeleting;
            
            public event View_HR_OnBusinessPersonnelRowChangeEventHandler View_HR_OnBusinessPersonnelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_OnBusinessPersonnelRow(View_HR_OnBusinessPersonnelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRow AddView_HR_OnBusinessPersonnelRow(int 单据号, string 员工编号, string 员工姓名, string 人员类别, string 随行人员部门确认, System.DateTime 随行人员部门确认时间) {
                View_HR_OnBusinessPersonnelRow rowView_HR_OnBusinessPersonnelRow = ((View_HR_OnBusinessPersonnelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        员工编号,
                        员工姓名,
                        人员类别,
                        随行人员部门确认,
                        随行人员部门确认时间};
                rowView_HR_OnBusinessPersonnelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_OnBusinessPersonnelRow);
                return rowView_HR_OnBusinessPersonnelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRow FindBy单据号员工编号(int 单据号, string 员工编号) {
                return ((View_HR_OnBusinessPersonnelRow)(this.Rows.Find(new object[] {
                            单据号,
                            员工编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_OnBusinessPersonnelDataTable cln = ((View_HR_OnBusinessPersonnelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_OnBusinessPersonnelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column员工编号 = base.Columns["员工编号"];
                this.column员工姓名 = base.Columns["员工姓名"];
                this.column人员类别 = base.Columns["人员类别"];
                this.column随行人员部门确认 = base.Columns["随行人员部门确认"];
                this.column随行人员部门确认时间 = base.Columns["随行人员部门确认时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column员工姓名 = new global::System.Data.DataColumn("员工姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工姓名);
                this.column人员类别 = new global::System.Data.DataColumn("人员类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column人员类别);
                this.column随行人员部门确认 = new global::System.Data.DataColumn("随行人员部门确认", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column随行人员部门确认);
                this.column随行人员部门确认时间 = new global::System.Data.DataColumn("随行人员部门确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column随行人员部门确认时间);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column单据号,
                                this.column员工编号}, true));
                this.column单据号.AllowDBNull = false;
                this.column员工编号.AllowDBNull = false;
                this.column员工编号.MaxLength = 50;
                this.column员工姓名.MaxLength = 50;
                this.column人员类别.AllowDBNull = false;
                this.column人员类别.MaxLength = 8;
                this.column随行人员部门确认.MaxLength = 50;
                this.column随行人员部门确认时间.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRow NewView_HR_OnBusinessPersonnelRow() {
                return ((View_HR_OnBusinessPersonnelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_OnBusinessPersonnelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_OnBusinessPersonnelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_OnBusinessPersonnelRowChanged != null)) {
                    this.View_HR_OnBusinessPersonnelRowChanged(this, new View_HR_OnBusinessPersonnelRowChangeEvent(((View_HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_OnBusinessPersonnelRowChanging != null)) {
                    this.View_HR_OnBusinessPersonnelRowChanging(this, new View_HR_OnBusinessPersonnelRowChangeEvent(((View_HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_OnBusinessPersonnelRowDeleted != null)) {
                    this.View_HR_OnBusinessPersonnelRowDeleted(this, new View_HR_OnBusinessPersonnelRowChangeEvent(((View_HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_OnBusinessPersonnelRowDeleting != null)) {
                    this.View_HR_OnBusinessPersonnelRowDeleting(this, new View_HR_OnBusinessPersonnelRowChangeEvent(((View_HR_OnBusinessPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_OnBusinessPersonnelRow(View_HR_OnBusinessPersonnelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_OnBusinessPersonnelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_HR_OnBusinessBillDataTable : global::System.Data.TypedTableBase<View_HR_OnBusinessBillRow> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column申请人姓名;
            
            private global::System.Data.DataColumn column申请时间;
            
            private global::System.Data.DataColumn column申请部门;
            
            private global::System.Data.DataColumn column出差目的;
            
            private global::System.Data.DataColumn column预定出发时间;
            
            private global::System.Data.DataColumn column预定返程时间;
            
            private global::System.Data.DataColumn column交通工具;
            
            private global::System.Data.DataColumn column预计招待费;
            
            private global::System.Data.DataColumn column预计其他费用;
            
            private global::System.Data.DataColumn column是否借款;
            
            private global::System.Data.DataColumn column借款金额;
            
            private global::System.Data.DataColumn column是否在预算范围内;
            
            private global::System.Data.DataColumn column部门负责人;
            
            private global::System.Data.DataColumn column签定时间;
            
            private global::System.Data.DataColumn column分管领导;
            
            private global::System.Data.DataColumn column领导签定时间;
            
            private global::System.Data.DataColumn column总经理;
            
            private global::System.Data.DataColumn column总经理签定时间;
            
            private global::System.Data.DataColumn column是否批准;
            
            private global::System.Data.DataColumn column销差确认人;
            
            private global::System.Data.DataColumn column销差确认时间;
            
            private global::System.Data.DataColumn column实际出发时间;
            
            private global::System.Data.DataColumn column实际返程时间;
            
            private global::System.Data.DataColumn column部门编码;
            
            private global::System.Data.DataColumn column出差结果说明;
            
            private global::System.Data.DataColumn column大写金额;
            
            private global::System.Data.DataColumn column出差人员;
            
            private global::System.Data.DataColumn column关联部门;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillDataTable() {
                this.TableName = "View_HR_OnBusinessBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OnBusinessBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_HR_OnBusinessBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人姓名Column {
                get {
                    return this.column申请人姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请时间Column {
                get {
                    return this.column申请时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门Column {
                get {
                    return this.column申请部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出差目的Column {
                get {
                    return this.column出差目的;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预定出发时间Column {
                get {
                    return this.column预定出发时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预定返程时间Column {
                get {
                    return this.column预定返程时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交通工具Column {
                get {
                    return this.column交通工具;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预计招待费Column {
                get {
                    return this.column预计招待费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预计其他费用Column {
                get {
                    return this.column预计其他费用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否借款Column {
                get {
                    return this.column是否借款;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 借款金额Column {
                get {
                    return this.column借款金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否在预算范围内Column {
                get {
                    return this.column是否在预算范围内;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门负责人Column {
                get {
                    return this.column部门负责人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 签定时间Column {
                get {
                    return this.column签定时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导Column {
                get {
                    return this.column分管领导;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领导签定时间Column {
                get {
                    return this.column领导签定时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总经理Column {
                get {
                    return this.column总经理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总经理签定时间Column {
                get {
                    return this.column总经理签定时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否批准Column {
                get {
                    return this.column是否批准;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 销差确认人Column {
                get {
                    return this.column销差确认人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 销差确认时间Column {
                get {
                    return this.column销差确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际出发时间Column {
                get {
                    return this.column实际出发时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际返程时间Column {
                get {
                    return this.column实际返程时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门编码Column {
                get {
                    return this.column部门编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出差结果说明Column {
                get {
                    return this.column出差结果说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大写金额Column {
                get {
                    return this.column大写金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出差人员Column {
                get {
                    return this.column出差人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联部门Column {
                get {
                    return this.column关联部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRow this[int index] {
                get {
                    return ((View_HR_OnBusinessBillRow)(this.Rows[index]));
                }
            }
            
            public event View_HR_OnBusinessBillRowChangeEventHandler View_HR_OnBusinessBillRowChanging;
            
            public event View_HR_OnBusinessBillRowChangeEventHandler View_HR_OnBusinessBillRowChanged;
            
            public event View_HR_OnBusinessBillRowChangeEventHandler View_HR_OnBusinessBillRowDeleting;
            
            public event View_HR_OnBusinessBillRowChangeEventHandler View_HR_OnBusinessBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_HR_OnBusinessBillRow(View_HR_OnBusinessBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRow AddView_HR_OnBusinessBillRow(
                        int 编号, 
                        string 单据状态, 
                        string 员工编号, 
                        string 申请人姓名, 
                        System.DateTime 申请时间, 
                        string 申请部门, 
                        string 出差目的, 
                        System.DateTime 预定出发时间, 
                        System.DateTime 预定返程时间, 
                        string 交通工具, 
                        decimal 预计招待费, 
                        decimal 预计其他费用, 
                        string 是否借款, 
                        decimal 借款金额, 
                        string 是否在预算范围内, 
                        string 部门负责人, 
                        System.DateTime 签定时间, 
                        string 分管领导, 
                        System.DateTime 领导签定时间, 
                        string 总经理, 
                        System.DateTime 总经理签定时间, 
                        bool 是否批准, 
                        string 销差确认人, 
                        System.DateTime 销差确认时间, 
                        System.DateTime 实际出发时间, 
                        System.DateTime 实际返程时间, 
                        string 部门编码, 
                        string 出差结果说明, 
                        string 大写金额, 
                        string 出差人员, 
                        string 关联部门) {
                View_HR_OnBusinessBillRow rowView_HR_OnBusinessBillRow = ((View_HR_OnBusinessBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        编号,
                        单据状态,
                        员工编号,
                        申请人姓名,
                        申请时间,
                        申请部门,
                        出差目的,
                        预定出发时间,
                        预定返程时间,
                        交通工具,
                        预计招待费,
                        预计其他费用,
                        是否借款,
                        借款金额,
                        是否在预算范围内,
                        部门负责人,
                        签定时间,
                        分管领导,
                        领导签定时间,
                        总经理,
                        总经理签定时间,
                        是否批准,
                        销差确认人,
                        销差确认时间,
                        实际出发时间,
                        实际返程时间,
                        部门编码,
                        出差结果说明,
                        大写金额,
                        出差人员,
                        关联部门};
                rowView_HR_OnBusinessBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_HR_OnBusinessBillRow);
                return rowView_HR_OnBusinessBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRow FindBy编号(int 编号) {
                return ((View_HR_OnBusinessBillRow)(this.Rows.Find(new object[] {
                            编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_HR_OnBusinessBillDataTable cln = ((View_HR_OnBusinessBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_HR_OnBusinessBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column员工编号 = base.Columns["员工编号"];
                this.column申请人姓名 = base.Columns["申请人姓名"];
                this.column申请时间 = base.Columns["申请时间"];
                this.column申请部门 = base.Columns["申请部门"];
                this.column出差目的 = base.Columns["出差目的"];
                this.column预定出发时间 = base.Columns["预定出发时间"];
                this.column预定返程时间 = base.Columns["预定返程时间"];
                this.column交通工具 = base.Columns["交通工具"];
                this.column预计招待费 = base.Columns["预计招待费"];
                this.column预计其他费用 = base.Columns["预计其他费用"];
                this.column是否借款 = base.Columns["是否借款"];
                this.column借款金额 = base.Columns["借款金额"];
                this.column是否在预算范围内 = base.Columns["是否在预算范围内"];
                this.column部门负责人 = base.Columns["部门负责人"];
                this.column签定时间 = base.Columns["签定时间"];
                this.column分管领导 = base.Columns["分管领导"];
                this.column领导签定时间 = base.Columns["领导签定时间"];
                this.column总经理 = base.Columns["总经理"];
                this.column总经理签定时间 = base.Columns["总经理签定时间"];
                this.column是否批准 = base.Columns["是否批准"];
                this.column销差确认人 = base.Columns["销差确认人"];
                this.column销差确认时间 = base.Columns["销差确认时间"];
                this.column实际出发时间 = base.Columns["实际出发时间"];
                this.column实际返程时间 = base.Columns["实际返程时间"];
                this.column部门编码 = base.Columns["部门编码"];
                this.column出差结果说明 = base.Columns["出差结果说明"];
                this.column大写金额 = base.Columns["大写金额"];
                this.column出差人员 = base.Columns["出差人员"];
                this.column关联部门 = base.Columns["关联部门"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column申请人姓名 = new global::System.Data.DataColumn("申请人姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人姓名);
                this.column申请时间 = new global::System.Data.DataColumn("申请时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请时间);
                this.column申请部门 = new global::System.Data.DataColumn("申请部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门);
                this.column出差目的 = new global::System.Data.DataColumn("出差目的", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出差目的);
                this.column预定出发时间 = new global::System.Data.DataColumn("预定出发时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预定出发时间);
                this.column预定返程时间 = new global::System.Data.DataColumn("预定返程时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预定返程时间);
                this.column交通工具 = new global::System.Data.DataColumn("交通工具", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交通工具);
                this.column预计招待费 = new global::System.Data.DataColumn("预计招待费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预计招待费);
                this.column预计其他费用 = new global::System.Data.DataColumn("预计其他费用", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预计其他费用);
                this.column是否借款 = new global::System.Data.DataColumn("是否借款", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否借款);
                this.column借款金额 = new global::System.Data.DataColumn("借款金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column借款金额);
                this.column是否在预算范围内 = new global::System.Data.DataColumn("是否在预算范围内", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否在预算范围内);
                this.column部门负责人 = new global::System.Data.DataColumn("部门负责人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门负责人);
                this.column签定时间 = new global::System.Data.DataColumn("签定时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column签定时间);
                this.column分管领导 = new global::System.Data.DataColumn("分管领导", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导);
                this.column领导签定时间 = new global::System.Data.DataColumn("领导签定时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领导签定时间);
                this.column总经理 = new global::System.Data.DataColumn("总经理", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总经理);
                this.column总经理签定时间 = new global::System.Data.DataColumn("总经理签定时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总经理签定时间);
                this.column是否批准 = new global::System.Data.DataColumn("是否批准", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否批准);
                this.column销差确认人 = new global::System.Data.DataColumn("销差确认人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column销差确认人);
                this.column销差确认时间 = new global::System.Data.DataColumn("销差确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column销差确认时间);
                this.column实际出发时间 = new global::System.Data.DataColumn("实际出发时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际出发时间);
                this.column实际返程时间 = new global::System.Data.DataColumn("实际返程时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际返程时间);
                this.column部门编码 = new global::System.Data.DataColumn("部门编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门编码);
                this.column出差结果说明 = new global::System.Data.DataColumn("出差结果说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出差结果说明);
                this.column大写金额 = new global::System.Data.DataColumn("大写金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大写金额);
                this.column出差人员 = new global::System.Data.DataColumn("出差人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出差人员);
                this.column关联部门 = new global::System.Data.DataColumn("关联部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联部门);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column编号}, true));
                this.column编号.AllowDBNull = false;
                this.column编号.Unique = true;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column员工编号.MaxLength = 50;
                this.column申请人姓名.MaxLength = 50;
                this.column申请时间.AllowDBNull = false;
                this.column申请部门.MaxLength = 50;
                this.column出差目的.AllowDBNull = false;
                this.column出差目的.MaxLength = 2147483647;
                this.column预定出发时间.AllowDBNull = false;
                this.column预定返程时间.AllowDBNull = false;
                this.column交通工具.AllowDBNull = false;
                this.column交通工具.MaxLength = 20;
                this.column预计招待费.AllowDBNull = false;
                this.column是否借款.AllowDBNull = false;
                this.column借款金额.AllowDBNull = false;
                this.column是否在预算范围内.AllowDBNull = false;
                this.column部门负责人.ReadOnly = true;
                this.column部门负责人.MaxLength = 4000;
                this.column分管领导.ReadOnly = true;
                this.column分管领导.MaxLength = 4000;
                this.column总经理.ReadOnly = true;
                this.column总经理.MaxLength = 4000;
                this.column是否批准.AllowDBNull = false;
                this.column销差确认人.ReadOnly = true;
                this.column销差确认人.MaxLength = 4000;
                this.column实际出发时间.AllowDBNull = false;
                this.column实际返程时间.AllowDBNull = false;
                this.column部门编码.MaxLength = 50;
                this.column出差结果说明.AllowDBNull = false;
                this.column出差结果说明.MaxLength = 2147483647;
                this.column大写金额.MaxLength = 2147483647;
                this.column出差人员.ReadOnly = true;
                this.column出差人员.MaxLength = 4000;
                this.column关联部门.ReadOnly = true;
                this.column关联部门.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRow NewView_HR_OnBusinessBillRow() {
                return ((View_HR_OnBusinessBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_HR_OnBusinessBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_HR_OnBusinessBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_HR_OnBusinessBillRowChanged != null)) {
                    this.View_HR_OnBusinessBillRowChanged(this, new View_HR_OnBusinessBillRowChangeEvent(((View_HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_HR_OnBusinessBillRowChanging != null)) {
                    this.View_HR_OnBusinessBillRowChanging(this, new View_HR_OnBusinessBillRowChangeEvent(((View_HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_HR_OnBusinessBillRowDeleted != null)) {
                    this.View_HR_OnBusinessBillRowDeleted(this, new View_HR_OnBusinessBillRowChangeEvent(((View_HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_HR_OnBusinessBillRowDeleting != null)) {
                    this.View_HR_OnBusinessBillRowDeleting(this, new View_HR_OnBusinessBillRowChangeEvent(((View_HR_OnBusinessBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_HR_OnBusinessBillRow(View_HR_OnBusinessBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_HR_OnBusinessBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HR_PersonnelArchiveListDataTable : global::System.Data.TypedTableBase<HR_PersonnelArchiveListRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnworkID;
            
            private global::System.Data.DataColumn columnRewardPunish;
            
            private global::System.Data.DataColumn columnRegularization;
            
            private global::System.Data.DataColumn columnPerformance;
            
            private global::System.Data.DataColumn columnDimission;
            
            private global::System.Data.DataColumn columnDimissionView;
            
            private global::System.Data.DataColumn columnIsMedicalHistory;
            
            private global::System.Data.DataColumn columnMedicalHistory;
            
            private global::System.Data.DataColumn columnInMedicalHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListDataTable() {
                this.TableName = "HR_PersonnelArchiveList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HR_PersonnelArchiveListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn workIDColumn {
                get {
                    return this.columnworkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RewardPunishColumn {
                get {
                    return this.columnRewardPunish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegularizationColumn {
                get {
                    return this.columnRegularization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerformanceColumn {
                get {
                    return this.columnPerformance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DimissionColumn {
                get {
                    return this.columnDimission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DimissionViewColumn {
                get {
                    return this.columnDimissionView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMedicalHistoryColumn {
                get {
                    return this.columnIsMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalHistoryColumn {
                get {
                    return this.columnMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InMedicalHistoryColumn {
                get {
                    return this.columnInMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRow this[int index] {
                get {
                    return ((HR_PersonnelArchiveListRow)(this.Rows[index]));
                }
            }
            
            public event HR_PersonnelArchiveListRowChangeEventHandler HR_PersonnelArchiveListRowChanging;
            
            public event HR_PersonnelArchiveListRowChangeEventHandler HR_PersonnelArchiveListRowChanged;
            
            public event HR_PersonnelArchiveListRowChangeEventHandler HR_PersonnelArchiveListRowDeleting;
            
            public event HR_PersonnelArchiveListRowChangeEventHandler HR_PersonnelArchiveListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHR_PersonnelArchiveListRow(HR_PersonnelArchiveListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRow AddHR_PersonnelArchiveListRow(string workID, string RewardPunish, string Regularization, string Performance, string Dimission, string DimissionView, bool IsMedicalHistory, string MedicalHistory, string InMedicalHistory) {
                HR_PersonnelArchiveListRow rowHR_PersonnelArchiveListRow = ((HR_PersonnelArchiveListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        workID,
                        RewardPunish,
                        Regularization,
                        Performance,
                        Dimission,
                        DimissionView,
                        IsMedicalHistory,
                        MedicalHistory,
                        InMedicalHistory};
                rowHR_PersonnelArchiveListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHR_PersonnelArchiveListRow);
                return rowHR_PersonnelArchiveListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRow FindByID(int ID) {
                return ((HR_PersonnelArchiveListRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HR_PersonnelArchiveListDataTable cln = ((HR_PersonnelArchiveListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HR_PersonnelArchiveListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnworkID = base.Columns["workID"];
                this.columnRewardPunish = base.Columns["RewardPunish"];
                this.columnRegularization = base.Columns["Regularization"];
                this.columnPerformance = base.Columns["Performance"];
                this.columnDimission = base.Columns["Dimission"];
                this.columnDimissionView = base.Columns["DimissionView"];
                this.columnIsMedicalHistory = base.Columns["IsMedicalHistory"];
                this.columnMedicalHistory = base.Columns["MedicalHistory"];
                this.columnInMedicalHistory = base.Columns["InMedicalHistory"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnworkID = new global::System.Data.DataColumn("workID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworkID);
                this.columnRewardPunish = new global::System.Data.DataColumn("RewardPunish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRewardPunish);
                this.columnRegularization = new global::System.Data.DataColumn("Regularization", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegularization);
                this.columnPerformance = new global::System.Data.DataColumn("Performance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerformance);
                this.columnDimission = new global::System.Data.DataColumn("Dimission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimission);
                this.columnDimissionView = new global::System.Data.DataColumn("DimissionView", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimissionView);
                this.columnIsMedicalHistory = new global::System.Data.DataColumn("IsMedicalHistory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMedicalHistory);
                this.columnMedicalHistory = new global::System.Data.DataColumn("MedicalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalHistory);
                this.columnInMedicalHistory = new global::System.Data.DataColumn("InMedicalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInMedicalHistory);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnworkID.AllowDBNull = false;
                this.columnworkID.MaxLength = 50;
                this.columnRewardPunish.MaxLength = 2147483647;
                this.columnRegularization.MaxLength = 2147483647;
                this.columnPerformance.MaxLength = 2147483647;
                this.columnDimission.MaxLength = 2147483647;
                this.columnDimissionView.MaxLength = 2147483647;
                this.columnMedicalHistory.MaxLength = 2147483647;
                this.columnInMedicalHistory.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRow NewHR_PersonnelArchiveListRow() {
                return ((HR_PersonnelArchiveListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HR_PersonnelArchiveListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HR_PersonnelArchiveListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HR_PersonnelArchiveListRowChanged != null)) {
                    this.HR_PersonnelArchiveListRowChanged(this, new HR_PersonnelArchiveListRowChangeEvent(((HR_PersonnelArchiveListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HR_PersonnelArchiveListRowChanging != null)) {
                    this.HR_PersonnelArchiveListRowChanging(this, new HR_PersonnelArchiveListRowChangeEvent(((HR_PersonnelArchiveListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HR_PersonnelArchiveListRowDeleted != null)) {
                    this.HR_PersonnelArchiveListRowDeleted(this, new HR_PersonnelArchiveListRowChangeEvent(((HR_PersonnelArchiveListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HR_PersonnelArchiveListRowDeleting != null)) {
                    this.HR_PersonnelArchiveListRowDeleting(this, new HR_PersonnelArchiveListRowChangeEvent(((HR_PersonnelArchiveListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHR_PersonnelArchiveListRow(HR_PersonnelArchiveListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HR_PersonnelArchiveListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_LeaveBillRow : global::System.Data.DataRow {
            
            private HR_LeaveBillDataTable tableHR_LeaveBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_LeaveBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_LeaveBill = ((HR_LeaveBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_LeaveBill.IDColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillStatus {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.BillStatusColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.BillStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Applicant {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.ApplicantColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.ApplicantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaveTypeID {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.LeaveTypeIDColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.LeaveTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.ReasonColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExplanation {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.OtherExplanationColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.OtherExplanationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BeginTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_LeaveBill.BeginTimeColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.BeginTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_LeaveBill.EndTimeColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptDirector {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.DeptDirectorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“DeptDirector”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.DeptDirectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptPrincipal {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.DeptPrincipalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“DeptPrincipal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.DeptPrincipalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Leader {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.LeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“Leader”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.LeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralManager {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.GeneralManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“GeneralManager”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.GeneralManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Authorize {
                get {
                    return ((bool)(this[this.tableHR_LeaveBill.AuthorizeColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.AuthorizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnexcusedReason {
                get {
                    return ((string)(this[this.tableHR_LeaveBill.UnexcusedReasonColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.UnexcusedReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeptDirectorSignatureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_LeaveBill.DeptDirectorSignatureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“DeptDirectorSignatureDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.DeptDirectorSignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeptPrincipalSignatureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_LeaveBill.DeptPrincipalSignatureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“DeptPrincipalSignatureDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.DeptPrincipalSignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LeaderSignatureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_LeaveBill.LeaderSignatureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“LeaderSignatureDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.LeaderSignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GM_SignatureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_LeaveBill.GM_SignatureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“GM_SignatureDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.GM_SignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_Signature {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.HR_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“HR_Signature”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.HR_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_SignatureDate {
                get {
                    try {
                        return ((string)(this[this.tableHR_LeaveBill.HR_SignatureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_LeaveBill”中列“HR_SignatureDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_LeaveBill.HR_SignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RealHours {
                get {
                    return ((double)(this[this.tableHR_LeaveBill.RealHoursColumn]));
                }
                set {
                    this[this.tableHR_LeaveBill.RealHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow HR_LeaveTypeRow {
                get {
                    return ((HR_LeaveTypeRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_LEAVE_REFERENCE_HR_LEAVE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_LEAVE_REFERENCE_HR_LEAVE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow HR_PersonnelArchiveRow {
                get {
                    return ((HR_PersonnelArchiveRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_LEAVE_REFERENCE_HR_PERSO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_LEAVE_REFERENCE_HR_PERSO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptDirectorNull() {
                return this.IsNull(this.tableHR_LeaveBill.DeptDirectorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptDirectorNull() {
                this[this.tableHR_LeaveBill.DeptDirectorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptPrincipalNull() {
                return this.IsNull(this.tableHR_LeaveBill.DeptPrincipalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptPrincipalNull() {
                this[this.tableHR_LeaveBill.DeptPrincipalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderNull() {
                return this.IsNull(this.tableHR_LeaveBill.LeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderNull() {
                this[this.tableHR_LeaveBill.LeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralManagerNull() {
                return this.IsNull(this.tableHR_LeaveBill.GeneralManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralManagerNull() {
                this[this.tableHR_LeaveBill.GeneralManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptDirectorSignatureDateNull() {
                return this.IsNull(this.tableHR_LeaveBill.DeptDirectorSignatureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptDirectorSignatureDateNull() {
                this[this.tableHR_LeaveBill.DeptDirectorSignatureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptPrincipalSignatureDateNull() {
                return this.IsNull(this.tableHR_LeaveBill.DeptPrincipalSignatureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptPrincipalSignatureDateNull() {
                this[this.tableHR_LeaveBill.DeptPrincipalSignatureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderSignatureDateNull() {
                return this.IsNull(this.tableHR_LeaveBill.LeaderSignatureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderSignatureDateNull() {
                this[this.tableHR_LeaveBill.LeaderSignatureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGM_SignatureDateNull() {
                return this.IsNull(this.tableHR_LeaveBill.GM_SignatureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGM_SignatureDateNull() {
                this[this.tableHR_LeaveBill.GM_SignatureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_SignatureNull() {
                return this.IsNull(this.tableHR_LeaveBill.HR_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_SignatureNull() {
                this[this.tableHR_LeaveBill.HR_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_SignatureDateNull() {
                return this.IsNull(this.tableHR_LeaveBill.HR_SignatureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_SignatureDateNull() {
                this[this.tableHR_LeaveBill.HR_SignatureDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_LeaveTypeRow : global::System.Data.DataRow {
            
            private HR_LeaveTypeDataTable tableHR_LeaveType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_LeaveTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_LeaveType = ((HR_LeaveTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeCode {
                get {
                    return ((string)(this[this.tableHR_LeaveType.TypeCodeColumn]));
                }
                set {
                    this[this.tableHR_LeaveType.TypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeName {
                get {
                    return ((string)(this[this.tableHR_LeaveType.TypeNameColumn]));
                }
                set {
                    this[this.tableHR_LeaveType.TypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_LeaveType.RemarkColumn]));
                }
                set {
                    this[this.tableHR_LeaveType.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_LeaveType.RecordTimeColumn]));
                }
                set {
                    this[this.tableHR_LeaveType.RecordTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recorder {
                get {
                    return ((string)(this[this.tableHR_LeaveType.RecorderColumn]));
                }
                set {
                    this[this.tableHR_LeaveType.RecorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow[] GetHR_LeaveBillRows() {
                if ((this.Table.ChildRelations["FK_HR_LEAVE_REFERENCE_HR_LEAVE"] == null)) {
                    return new HR_LeaveBillRow[0];
                }
                else {
                    return ((HR_LeaveBillRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_LEAVE_REFERENCE_HR_LEAVE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_OnBusinessPersonnelRow : global::System.Data.DataRow {
            
            private HR_OnBusinessPersonnelDataTable tableHR_OnBusinessPersonnel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessPersonnelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_OnBusinessPersonnel = ((HR_OnBusinessPersonnelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BillID {
                get {
                    return ((int)(this[this.tableHR_OnBusinessPersonnel.BillIDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessPersonnel.BillIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WorkID {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessPersonnel.WorkIDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessPersonnel.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonnelType {
                get {
                    return ((string)(this[this.tableHR_OnBusinessPersonnel.PersonnelTypeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessPersonnel.PersonnelTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow HR_OnBusinessBillRow {
                get {
                    return ((HR_OnBusinessBillRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_OnBusinessScheduleRow : global::System.Data.DataRow {
            
            private HR_OnBusinessScheduleDataTable tableHR_OnBusinessSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_OnBusinessSchedule = ((HR_OnBusinessScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_OnBusinessSchedule.IDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BillID {
                get {
                    return ((int)(this[this.tableHR_OnBusinessSchedule.BillIDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.BillIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Place {
                get {
                    return ((string)(this[this.tableHR_OnBusinessSchedule.PlaceColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.PlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkContent {
                get {
                    return ((string)(this[this.tableHR_OnBusinessSchedule.WorkContentColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.WorkContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    return ((string)(this[this.tableHR_OnBusinessSchedule.ContactColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_OnBusinessSchedule.RemarkColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessSchedule.StartTimeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessSchedule.EndTimeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vehicle {
                get {
                    try {
                        return ((string)(this[this.tableHR_OnBusinessSchedule.VehicleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessSchedule”中列“Vehicle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessSchedule.VehicleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow HR_OnBusinessBillRow {
                get {
                    return ((HR_OnBusinessBillRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS_1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS_1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleNull() {
                return this.IsNull(this.tableHR_OnBusinessSchedule.VehicleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleNull() {
                this[this.tableHR_OnBusinessSchedule.VehicleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_PersonnelArchiveRow : global::System.Data.DataRow {
            
            private HR_PersonnelArchiveDataTable tableHR_PersonnelArchive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_PersonnelArchive = ((HR_PersonnelArchiveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkID {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.WorkIDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.NameColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.DeptColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkPost {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.WorkPostColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.WorkPostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JobTitleID {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.JobTitleIDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.JobTitleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelArchive.BirthdayColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nationality {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.NationalityColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Race {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.RaceColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.RaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthplace {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.BirthplaceColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.BirthplaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Party {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.PartyColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.PartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Card {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.ID_CardColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.ID_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string College {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.CollegeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.CollegeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedDegree {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.EducatedDegreeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.EducatedDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedMajor {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.EducatedMajorColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.EducatedMajorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyAddress {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.FamilyAddressColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.FamilyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostCode {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.PostCodeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.PostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.PhoneColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobilePhone {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.MobilePhoneColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.MobilePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.BankColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.BankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAccount {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.BankAccountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.BankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SocietySecurityNumber {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.SocietySecurityNumberColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.SocietySecurityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QQ {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.QQColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.QQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.EmailColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hobby {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.HobbyColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.HobbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Speciality {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.SpecialityColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.SpecialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.SexColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResumeID {
                get {
                    try {
                        return ((int)(this[this.tableHR_PersonnelArchive.ResumeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“ResumeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.ResumeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_PersonnelArchive.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“Photo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Annex {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_PersonnelArchive.AnnexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“Annex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.AnnexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnnexName {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchive.AnnexNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“AnnexName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.AnnexNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangePostAmount {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.ChangePostAmountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.ChangePostAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TrainingAmount {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.TrainingAmountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.TrainingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.RemarkColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recorder {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.RecorderColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.RecorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelArchive.RecordTimeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.RecordTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangeAmount {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.ChangeAmountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.ChangeAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PersonnelStatus {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchive.PersonnelStatusColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.PersonnelStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PY {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchive.PYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“PY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.PYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WB {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchive.WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoinDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_PersonnelArchive.JoinDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“JoinDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.JoinDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BecomeRegularEmployeeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_PersonnelArchive.BecomeRegularEmployeeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“BecomeRegularEmployeeDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.BecomeRegularEmployeeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TakeJobDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_PersonnelArchive.TakeJobDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“TakeJobDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.TakeJobDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNature {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.JobNatureColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.JobNatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchive.MaritalStatusColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchive.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GraduationYear {
                get {
                    try {
                        return ((int)(this[this.tableHR_PersonnelArchive.GraduationYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“GraduationYear”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.GraduationYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LengthOfSchooling {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchive.LengthOfSchoolingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchive”中列“LengthOfSchooling”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchive.LengthOfSchoolingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow HR_PersonnelStatusRow {
                get {
                    return ((HR_PersonnelStatusRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_PERSO_REFERENCE_HR_PERSO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_PERSO_REFERENCE_HR_PERSO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow HR_ResumeRow {
                get {
                    return ((HR_ResumeRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_PERSO_REFERENCE_HR_RESUM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_PERSO_REFERENCE_HR_RESUM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResumeIDNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.ResumeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResumeIDNull() {
                this[this.tableHR_PersonnelArchive.ResumeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoNull() {
                this[this.tableHR_PersonnelArchive.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.AnnexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexNull() {
                this[this.tableHR_PersonnelArchive.AnnexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexNameNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.AnnexNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexNameNull() {
                this[this.tableHR_PersonnelArchive.AnnexNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPYNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.PYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPYNull() {
                this[this.tableHR_PersonnelArchive.PYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWBNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWBNull() {
                this[this.tableHR_PersonnelArchive.WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinDateNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.JoinDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinDateNull() {
                this[this.tableHR_PersonnelArchive.JoinDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBecomeRegularEmployeeDateNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.BecomeRegularEmployeeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBecomeRegularEmployeeDateNull() {
                this[this.tableHR_PersonnelArchive.BecomeRegularEmployeeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakeJobDateNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.TakeJobDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakeJobDateNull() {
                this[this.tableHR_PersonnelArchive.TakeJobDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraduationYearNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.GraduationYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraduationYearNull() {
                this[this.tableHR_PersonnelArchive.GraduationYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthOfSchoolingNull() {
                return this.IsNull(this.tableHR_PersonnelArchive.LengthOfSchoolingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthOfSchoolingNull() {
                this[this.tableHR_PersonnelArchive.LengthOfSchoolingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow[] GetHR_LeaveBillRows() {
                if ((this.Table.ChildRelations["FK_HR_LEAVE_REFERENCE_HR_PERSO"] == null)) {
                    return new HR_LeaveBillRow[0];
                }
                else {
                    return ((HR_LeaveBillRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_LEAVE_REFERENCE_HR_PERSO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_PersonnelArchiveChangeRow : global::System.Data.DataRow {
            
            private HR_PersonnelArchiveChangeDataTable tableHR_PersonnelArchiveChange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveChangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_PersonnelArchiveChange = ((HR_PersonnelArchiveChangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchiveChange.IDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkID {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.WorkIDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.NameColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.DeptColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptName {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.DeptNameColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.DeptNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkPost {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveChange.WorkPostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“WorkPost”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.WorkPostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobTitle {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveChange.JobTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“JobTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.JobTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelArchiveChange.BirthdayColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nationality {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.NationalityColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Race {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.RaceColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.RaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthplace {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.BirthplaceColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.BirthplaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Party {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.PartyColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.PartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Card {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.ID_CardColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.ID_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string College {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.CollegeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.CollegeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedDegree {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.EducatedDegreeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.EducatedDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedMajor {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.EducatedMajorColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.EducatedMajorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyAddress {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.FamilyAddressColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.FamilyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostCode {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.PostCodeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.PostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.PhoneColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobilePhone {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.MobilePhoneColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.MobilePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.BankColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.BankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAccount {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.BankAccountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.BankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SocietySecurityNumber {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.SocietySecurityNumberColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.SocietySecurityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QQ {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.QQColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.QQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.EmailColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hobby {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.HobbyColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.HobbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Speciality {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.SpecialityColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.SpecialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.SexColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResumeID {
                get {
                    try {
                        return ((int)(this[this.tableHR_PersonnelArchiveChange.ResumeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“ResumeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.ResumeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_PersonnelArchiveChange.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“Photo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Annex {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_PersonnelArchiveChange.AnnexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“Annex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.AnnexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnnexName {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveChange.AnnexNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“AnnexName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.AnnexNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangePostAmount {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchiveChange.ChangePostAmountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.ChangePostAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TrainingAmount {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchiveChange.TrainingAmountColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.TrainingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.RemarkColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChangerCode {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.ChangerCodeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.ChangerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ChangeTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelArchiveChange.ChangeTimeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.ChangeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoinDate {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelArchiveChange.JoinDateColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.JoinDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BecomeRegularEmployeeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_PersonnelArchiveChange.BecomeRegularEmployeeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“BecomeRegularEmployeeDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.BecomeRegularEmployeeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TakeJobDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_PersonnelArchiveChange.TakeJobDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“TakeJobDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.TakeJobDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNature {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.JobNatureColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.JobNatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.MaritalStatusColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GraduationYear {
                get {
                    try {
                        return ((int)(this[this.tableHR_PersonnelArchiveChange.GraduationYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveChange”中列“GraduationYear”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.GraduationYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LengthOfSchooling {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveChange.LengthOfSchoolingColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveChange.LengthOfSchoolingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow HR_ResumeRow {
                get {
                    return ((HR_ResumeRow)(this.GetParentRow(this.Table.ParentRelations["FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkPostNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.WorkPostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkPostNull() {
                this[this.tableHR_PersonnelArchiveChange.WorkPostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobTitleNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.JobTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobTitleNull() {
                this[this.tableHR_PersonnelArchiveChange.JobTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResumeIDNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.ResumeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResumeIDNull() {
                this[this.tableHR_PersonnelArchiveChange.ResumeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoNull() {
                this[this.tableHR_PersonnelArchiveChange.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.AnnexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexNull() {
                this[this.tableHR_PersonnelArchiveChange.AnnexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexNameNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.AnnexNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexNameNull() {
                this[this.tableHR_PersonnelArchiveChange.AnnexNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBecomeRegularEmployeeDateNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.BecomeRegularEmployeeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBecomeRegularEmployeeDateNull() {
                this[this.tableHR_PersonnelArchiveChange.BecomeRegularEmployeeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakeJobDateNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.TakeJobDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakeJobDateNull() {
                this[this.tableHR_PersonnelArchiveChange.TakeJobDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraduationYearNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveChange.GraduationYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraduationYearNull() {
                this[this.tableHR_PersonnelArchiveChange.GraduationYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_PersonnelStatusRow : global::System.Data.DataRow {
            
            private HR_PersonnelStatusDataTable tableHR_PersonnelStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_PersonnelStatus = ((HR_PersonnelStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_PersonnelStatus.IDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelStatus.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableHR_PersonnelStatus.StatusColumn]));
                }
                set {
                    this[this.tableHR_PersonnelStatus.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recorder {
                get {
                    return ((string)(this[this.tableHR_PersonnelStatus.RecorderColumn]));
                }
                set {
                    this[this.tableHR_PersonnelStatus.RecorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PersonnelStatus.RecordTimeColumn]));
                }
                set {
                    this[this.tableHR_PersonnelStatus.RecordTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow[] GetHR_PersonnelArchiveRows() {
                if ((this.Table.ChildRelations["FK_HR_PERSO_REFERENCE_HR_PERSO"] == null)) {
                    return new HR_PersonnelArchiveRow[0];
                }
                else {
                    return ((HR_PersonnelArchiveRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_PERSO_REFERENCE_HR_PERSO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_ResumeRow : global::System.Data.DataRow {
            
            private HR_ResumeDataTable tableHR_Resume;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_ResumeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_Resume = ((HR_ResumeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_Resume.IDColumn]));
                }
                set {
                    this[this.tableHR_Resume.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableHR_Resume.NameColumn]));
                }
                set {
                    this[this.tableHR_Resume.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecruitmentType {
                get {
                    return ((string)(this[this.tableHR_Resume.RecruitmentTypeColumn]));
                }
                set {
                    this[this.tableHR_Resume.RecruitmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResumeStatusID {
                get {
                    return ((int)(this[this.tableHR_Resume.ResumeStatusIDColumn]));
                }
                set {
                    this[this.tableHR_Resume.ResumeStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    return ((string)(this[this.tableHR_Resume.SexColumn]));
                }
                set {
                    this[this.tableHR_Resume.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_Resume.BirthdayColumn]));
                }
                set {
                    this[this.tableHR_Resume.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Age {
                get {
                    return ((int)(this[this.tableHR_Resume.AgeColumn]));
                }
                set {
                    this[this.tableHR_Resume.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Height {
                get {
                    return ((decimal)(this[this.tableHR_Resume.HeightColumn]));
                }
                set {
                    this[this.tableHR_Resume.HeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nationality {
                get {
                    return ((string)(this[this.tableHR_Resume.NationalityColumn]));
                }
                set {
                    this[this.tableHR_Resume.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Race {
                get {
                    return ((string)(this[this.tableHR_Resume.RaceColumn]));
                }
                set {
                    this[this.tableHR_Resume.RaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthplace {
                get {
                    return ((string)(this[this.tableHR_Resume.BirthplaceColumn]));
                }
                set {
                    this[this.tableHR_Resume.BirthplaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Party {
                get {
                    return ((string)(this[this.tableHR_Resume.PartyColumn]));
                }
                set {
                    this[this.tableHR_Resume.PartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    return ((string)(this[this.tableHR_Resume.MaritalStatusColumn]));
                }
                set {
                    this[this.tableHR_Resume.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Card {
                get {
                    return ((string)(this[this.tableHR_Resume.ID_CardColumn]));
                }
                set {
                    this[this.tableHR_Resume.ID_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string College {
                get {
                    return ((string)(this[this.tableHR_Resume.CollegeColumn]));
                }
                set {
                    this[this.tableHR_Resume.CollegeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedDegree {
                get {
                    return ((string)(this[this.tableHR_Resume.EducatedDegreeColumn]));
                }
                set {
                    this[this.tableHR_Resume.EducatedDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedMajor {
                get {
                    return ((string)(this[this.tableHR_Resume.EducatedMajorColumn]));
                }
                set {
                    this[this.tableHR_Resume.EducatedMajorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyAddress {
                get {
                    try {
                        return ((string)(this[this.tableHR_Resume.FamilyAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_Resume”中列“FamilyAddress”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_Resume.FamilyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Postcode {
                get {
                    return ((string)(this[this.tableHR_Resume.PostcodeColumn]));
                }
                set {
                    this[this.tableHR_Resume.PostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tableHR_Resume.PhoneColumn]));
                }
                set {
                    this[this.tableHR_Resume.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmergencyPhone {
                get {
                    return ((string)(this[this.tableHR_Resume.EmergencyPhoneColumn]));
                }
                set {
                    this[this.tableHR_Resume.EmergencyPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Speciality {
                get {
                    return ((string)(this[this.tableHR_Resume.SpecialityColumn]));
                }
                set {
                    this[this.tableHR_Resume.SpecialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnglishLevel {
                get {
                    return ((string)(this[this.tableHR_Resume.EnglishLevelColumn]));
                }
                set {
                    this[this.tableHR_Resume.EnglishLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComputerLevel {
                get {
                    return ((string)(this[this.tableHR_Resume.ComputerLevelColumn]));
                }
                set {
                    this[this.tableHR_Resume.ComputerLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExistThirdPartyRelation {
                get {
                    return ((bool)(this[this.tableHR_Resume.ExistThirdPartyRelationColumn]));
                }
                set {
                    this[this.tableHR_Resume.ExistThirdPartyRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThirdPartyRelation {
                get {
                    return ((string)(this[this.tableHR_Resume.ThirdPartyRelationColumn]));
                }
                set {
                    this[this.tableHR_Resume.ThirdPartyRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WorkingTenure {
                get {
                    return ((decimal)(this[this.tableHR_Resume.WorkingTenureColumn]));
                }
                set {
                    this[this.tableHR_Resume.WorkingTenureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DesiredSalary {
                get {
                    return ((decimal)(this[this.tableHR_Resume.DesiredSalaryColumn]));
                }
                set {
                    this[this.tableHR_Resume.DesiredSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_Resume.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_Resume”中列“Photo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_Resume.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Annex {
                get {
                    try {
                        return ((byte[])(this[this.tableHR_Resume.AnnexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_Resume”中列“Annex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_Resume.AnnexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PathName {
                get {
                    try {
                        return ((string)(this[this.tableHR_Resume.PathNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_Resume”中列“PathName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_Resume.PathNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_Resume.RemarkColumn]));
                }
                set {
                    this[this.tableHR_Resume.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducatedHistory {
                get {
                    return ((string)(this[this.tableHR_Resume.EducatedHistoryColumn]));
                }
                set {
                    this[this.tableHR_Resume.EducatedHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkHistory {
                get {
                    return ((string)(this[this.tableHR_Resume.WorkHistoryColumn]));
                }
                set {
                    this[this.tableHR_Resume.WorkHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyMember {
                get {
                    return ((string)(this[this.tableHR_Resume.FamilyMemberColumn]));
                }
                set {
                    this[this.tableHR_Resume.FamilyMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recorder {
                get {
                    return ((string)(this[this.tableHR_Resume.RecorderColumn]));
                }
                set {
                    this[this.tableHR_Resume.RecorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_Resume.RecordTimeColumn]));
                }
                set {
                    this[this.tableHR_Resume.RecordTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyAddressNull() {
                return this.IsNull(this.tableHR_Resume.FamilyAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyAddressNull() {
                this[this.tableHR_Resume.FamilyAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableHR_Resume.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoNull() {
                this[this.tableHR_Resume.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexNull() {
                return this.IsNull(this.tableHR_Resume.AnnexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexNull() {
                this[this.tableHR_Resume.AnnexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPathNameNull() {
                return this.IsNull(this.tableHR_Resume.PathNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPathNameNull() {
                this[this.tableHR_Resume.PathNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow[] GetHR_PersonnelArchiveRows() {
                if ((this.Table.ChildRelations["FK_HR_PERSO_REFERENCE_HR_RESUM"] == null)) {
                    return new HR_PersonnelArchiveRow[0];
                }
                else {
                    return ((HR_PersonnelArchiveRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_PERSO_REFERENCE_HR_RESUM"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow[] GetHR_PersonnelArchiveChangeRows() {
                if ((this.Table.ChildRelations["FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM"] == null)) {
                    return new HR_PersonnelArchiveChangeRow[0];
                }
                else {
                    return ((HR_PersonnelArchiveChangeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_PERSO_CHANGE_REFERENCE_HR_RESUM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_WorkSchedulingRow : global::System.Data.DataRow {
            
            private HR_WorkSchedulingDataTable tableHR_WorkScheduling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_WorkSchedulingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_WorkScheduling = ((HR_WorkSchedulingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_WorkScheduling.IDColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreaterWorkID {
                get {
                    return ((string)(this[this.tableHR_WorkScheduling.CreaterWorkIDColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.CreaterWorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_WorkScheduling.CreateDateColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Year {
                get {
                    return ((int)(this[this.tableHR_WorkScheduling.YearColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Month {
                get {
                    return ((byte)(this[this.tableHR_WorkScheduling.MonthColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_WorkScheduling.RemarkColumn]));
                }
                set {
                    this[this.tableHR_WorkScheduling.RemarkColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_DeptRow : global::System.Data.DataRow {
            
            private View_HR_DeptDataTable tableView_HR_Dept;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_DeptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_Dept = ((View_HR_DeptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门代码 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.部门代码Column]));
                }
                set {
                    this[this.tableView_HR_Dept.部门代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.部门名称Column]));
                }
                set {
                    this[this.tableView_HR_Dept.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门类型 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.部门类型Column]));
                }
                set {
                    this[this.tableView_HR_Dept.部门类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电话 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.电话Column]));
                }
                set {
                    this[this.tableView_HR_Dept.电话Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 传真 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.传真Column]));
                }
                set {
                    this[this.tableView_HR_Dept.传真Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    return ((string)(this[this.tableView_HR_Dept.备注Column]));
                }
                set {
                    this[this.tableView_HR_Dept.备注Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_PersonnelLaborContractRow : global::System.Data.DataRow {
            
            private View_HR_PersonnelLaborContractDataTable tableView_HR_PersonnelLaborContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelLaborContractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_PersonnelLaborContract = ((View_HR_PersonnelLaborContractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_HR_PersonnelLaborContract.编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelLaborContract.员工编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工姓名 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelLaborContract.员工姓名Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.员工姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同模板 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelLaborContract.合同模板Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelLaborContract”中列“合同模板”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.合同模板Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同状态 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelLaborContract.合同状态Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.合同状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 合同起始时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelLaborContract.合同起始时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.合同起始时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 合同终止时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelLaborContract.合同终止时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.合同终止时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelLaborContract.备注Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 记录人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelLaborContract.记录人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelLaborContract”中列“记录人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.记录人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 记录时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelLaborContract.记录时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelLaborContract.记录时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is合同模板Null() {
                return this.IsNull(this.tableView_HR_PersonnelLaborContract.合同模板Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set合同模板Null() {
                this[this.tableView_HR_PersonnelLaborContract.合同模板Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is记录人员Null() {
                return this.IsNull(this.tableView_HR_PersonnelLaborContract.记录人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set记录人员Null() {
                this[this.tableView_HR_PersonnelLaborContract.记录人员Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_OperatingPostRow : global::System.Data.DataRow {
            
            private View_HR_OperatingPostDataTable tableView_HR_OperatingPost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OperatingPostRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_OperatingPost = ((View_HR_OperatingPostDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 岗位编号 {
                get {
                    return ((int)(this[this.tableView_HR_OperatingPost.岗位编号Column]));
                }
                set {
                    this[this.tableView_HR_OperatingPost.岗位编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 岗位名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.岗位名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“岗位名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.岗位名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 职位类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.职位类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“职位类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.职位类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 岗位说明 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.岗位说明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“岗位说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.岗位说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 岗位规范 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.岗位规范Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“岗位规范”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.岗位规范Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否中层人员 {
                get {
                    try {
                        return ((bool)(this[this.tableView_HR_OperatingPost.是否中层人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“是否中层人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.是否中层人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否高层人员 {
                get {
                    try {
                        return ((bool)(this[this.tableView_HR_OperatingPost.是否高层人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“是否高层人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.是否高层人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 记录人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OperatingPost.记录人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“记录人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.记录人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 记录时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_OperatingPost.记录时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OperatingPost”中列“记录时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OperatingPost.记录时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is岗位名称Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.岗位名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set岗位名称Null() {
                this[this.tableView_HR_OperatingPost.岗位名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is职位类别Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.职位类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set职位类别Null() {
                this[this.tableView_HR_OperatingPost.职位类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is岗位说明Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.岗位说明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set岗位说明Null() {
                this[this.tableView_HR_OperatingPost.岗位说明Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is岗位规范Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.岗位规范Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set岗位规范Null() {
                this[this.tableView_HR_OperatingPost.岗位规范Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否中层人员Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.是否中层人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否中层人员Null() {
                this[this.tableView_HR_OperatingPost.是否中层人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否高层人员Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.是否高层人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否高层人员Null() {
                this[this.tableView_HR_OperatingPost.是否高层人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_HR_OperatingPost.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is记录人员Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.记录人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set记录人员Null() {
                this[this.tableView_HR_OperatingPost.记录人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is记录时间Null() {
                return this.IsNull(this.tableView_HR_OperatingPost.记录时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set记录时间Null() {
                this[this.tableView_HR_OperatingPost.记录时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_PersonnelArchiveRow : global::System.Data.DataRow {
            
            private View_HR_PersonnelArchiveDataTable tableView_HR_PersonnelArchive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelArchiveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_PersonnelArchive = ((View_HR_PersonnelArchiveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.员工编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工姓名 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.员工姓名Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.员工姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.部门Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入司时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.入司时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.入司时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 离职时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.离职时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“离职时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.离职时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出生日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.出生日期Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.出生日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 国籍 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.国籍Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.国籍Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 民族 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.民族Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.民族Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 籍贯 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.籍贯Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.籍贯Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 政治面貌 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.政治面貌Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.政治面貌Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 身份证 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.身份证Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.身份证Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 毕业院校 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.毕业院校Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.毕业院校Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 专业 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.专业Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.专业Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 家庭地址 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.家庭地址Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.家庭地址Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电话 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.电话Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.电话Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 手机 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.手机Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.手机Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QQ号码 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.QQ号码Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.QQ号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电子邮箱 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.电子邮箱Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.电子邮箱Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 爱好 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.爱好Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.爱好Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 特长 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.特长Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.特长Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 性别 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.性别Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.性别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] 照片 {
                get {
                    try {
                        return ((byte[])(this[this.tableView_HR_PersonnelArchive.照片Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“照片”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.照片Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] 附件 {
                get {
                    try {
                        return ((byte[])(this[this.tableView_HR_PersonnelArchive.附件Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“附件”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.附件Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 附件名 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.附件名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“附件名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.附件名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.备注Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 记录人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.记录人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“记录人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.记录人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 记录时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.记录时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.记录时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 人员状态 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.人员状态Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.人员状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 拼音 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.拼音Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“拼音”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.拼音Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 五笔 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.五笔Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“五笔”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.五笔Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 转正日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.转正日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“转正日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.转正日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 参加工作的时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.参加工作的时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“参加工作的时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.参加工作的时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工作性质 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.工作性质Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.工作性质Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 婚姻状况 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.婚姻状况Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.婚姻状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 文化程度 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.文化程度Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.文化程度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 学制 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.学制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“学制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.学制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 毕业年份 {
                get {
                    try {
                        return ((int)(this[this.tableView_HR_PersonnelArchive.毕业年份Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“毕业年份”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.毕业年份Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 岗位 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.岗位Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.岗位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 外部职称 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.外部职称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“外部职称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.外部职称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 内部级别 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.内部级别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“内部级别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.内部级别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否核心员工 {
                get {
                    return ((bool)(this[this.tableView_HR_PersonnelArchive.是否核心员工Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.是否核心员工Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 合同到期日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchive.合同到期日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“合同到期日”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.合同到期日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 关联编号 {
                get {
                    try {
                        return ((int)(this[this.tableView_HR_PersonnelArchive.关联编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“关联编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.关联编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 个人档案所在地 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.个人档案所在地Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.个人档案所在地Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 在司相关人员姓名 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.在司相关人员姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“在司相关人员姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.在司相关人员姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 与相关人员关系 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchive.与相关人员关系Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchive”中列“与相关人员关系”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.与相关人员关系Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门编号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchive.部门编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchive.部门编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is离职时间Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.离职时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set离职时间Null() {
                this[this.tableView_HR_PersonnelArchive.离职时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is照片Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.照片Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set照片Null() {
                this[this.tableView_HR_PersonnelArchive.照片Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is附件Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.附件Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set附件Null() {
                this[this.tableView_HR_PersonnelArchive.附件Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is附件名Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.附件名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set附件名Null() {
                this[this.tableView_HR_PersonnelArchive.附件名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is记录人员Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.记录人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set记录人员Null() {
                this[this.tableView_HR_PersonnelArchive.记录人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is拼音Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.拼音Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set拼音Null() {
                this[this.tableView_HR_PersonnelArchive.拼音Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is五笔Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.五笔Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set五笔Null() {
                this[this.tableView_HR_PersonnelArchive.五笔Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is转正日期Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.转正日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set转正日期Null() {
                this[this.tableView_HR_PersonnelArchive.转正日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is参加工作的时间Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.参加工作的时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set参加工作的时间Null() {
                this[this.tableView_HR_PersonnelArchive.参加工作的时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is学制Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.学制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set学制Null() {
                this[this.tableView_HR_PersonnelArchive.学制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is毕业年份Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.毕业年份Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set毕业年份Null() {
                this[this.tableView_HR_PersonnelArchive.毕业年份Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is外部职称Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.外部职称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set外部职称Null() {
                this[this.tableView_HR_PersonnelArchive.外部职称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is内部级别Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.内部级别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set内部级别Null() {
                this[this.tableView_HR_PersonnelArchive.内部级别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is合同到期日Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.合同到期日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set合同到期日Null() {
                this[this.tableView_HR_PersonnelArchive.合同到期日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联编号Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.关联编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联编号Null() {
                this[this.tableView_HR_PersonnelArchive.关联编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is在司相关人员姓名Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.在司相关人员姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set在司相关人员姓名Null() {
                this[this.tableView_HR_PersonnelArchive.在司相关人员姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is与相关人员关系Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchive.与相关人员关系Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set与相关人员关系Null() {
                this[this.tableView_HR_PersonnelArchive.与相关人员关系Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_PersonnelArchiveChangeRow : global::System.Data.DataRow {
            
            private View_HR_PersonnelArchiveChangeDataTable tableView_HR_PersonnelArchiveChange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_PersonnelArchiveChangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_PersonnelArchiveChange = ((View_HR_PersonnelArchiveChangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_HR_PersonnelArchiveChange.编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.员工编号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工姓名 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.员工姓名Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.员工姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.部门Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.部门名称Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工作岗位 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchiveChange.工作岗位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“工作岗位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.工作岗位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入司时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.入司时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.入司时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 离职时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.离职时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“离职时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.离职时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出生日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.出生日期Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.出生日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 国籍 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.国籍Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.国籍Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 民族 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.民族Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.民族Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 籍贯 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.籍贯Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.籍贯Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 政治面貌 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.政治面貌Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.政治面貌Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 身份证 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.身份证Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.身份证Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 毕业院校 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.毕业院校Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.毕业院校Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 专业 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.专业Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.专业Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 家庭住址 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.家庭住址Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.家庭住址Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 邮编 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.邮编Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.邮编Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电话 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.电话Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.电话Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 手机 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.手机Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.手机Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 开户银行 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.开户银行Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.开户银行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行账号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.银行账号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.银行账号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 社会保障号 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.社会保障号Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.社会保障号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QQ号码 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.QQ号码Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.QQ号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电子邮箱 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.电子邮箱Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.电子邮箱Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 爱好 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.爱好Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.爱好Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 特长 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.特长Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.特长Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 性别 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.性别Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.性别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 简历编号 {
                get {
                    try {
                        return ((int)(this[this.tableView_HR_PersonnelArchiveChange.简历编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“简历编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.简历编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] 照片 {
                get {
                    try {
                        return ((byte[])(this[this.tableView_HR_PersonnelArchiveChange.照片Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“照片”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.照片Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] 附件 {
                get {
                    try {
                        return ((byte[])(this[this.tableView_HR_PersonnelArchiveChange.附件Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“附件”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.附件Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 附件名 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchiveChange.附件名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“附件名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.附件名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 调动次数 {
                get {
                    return ((int)(this[this.tableView_HR_PersonnelArchiveChange.调动次数Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.调动次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 培训次数 {
                get {
                    return ((int)(this[this.tableView_HR_PersonnelArchiveChange.培训次数Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.培训次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.备注Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 记录人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchiveChange.记录人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“记录人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.记录人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 记录时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.记录时间Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.记录时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 转正日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.转正日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“转正日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.转正日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 参加工作的时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_PersonnelArchiveChange.参加工作的时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“参加工作的时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.参加工作的时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工作性质 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.工作性质Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.工作性质Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 婚姻状况 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.婚姻状况Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.婚姻状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 文化程度 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.文化程度Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.文化程度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 学制 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.学制Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.学制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 毕业年份 {
                get {
                    try {
                        return ((int)(this[this.tableView_HR_PersonnelArchiveChange.毕业年份Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“毕业年份”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.毕业年份Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 外部职称 {
                get {
                    return ((string)(this[this.tableView_HR_PersonnelArchiveChange.外部职称Column]));
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.外部职称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 内部级别 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_PersonnelArchiveChange.内部级别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_PersonnelArchiveChange”中列“内部级别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_PersonnelArchiveChange.内部级别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工作岗位Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.工作岗位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工作岗位Null() {
                this[this.tableView_HR_PersonnelArchiveChange.工作岗位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is离职时间Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.离职时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set离职时间Null() {
                this[this.tableView_HR_PersonnelArchiveChange.离职时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is简历编号Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.简历编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set简历编号Null() {
                this[this.tableView_HR_PersonnelArchiveChange.简历编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is照片Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.照片Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set照片Null() {
                this[this.tableView_HR_PersonnelArchiveChange.照片Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is附件Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.附件Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set附件Null() {
                this[this.tableView_HR_PersonnelArchiveChange.附件Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is附件名Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.附件名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set附件名Null() {
                this[this.tableView_HR_PersonnelArchiveChange.附件名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is记录人员Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.记录人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set记录人员Null() {
                this[this.tableView_HR_PersonnelArchiveChange.记录人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is转正日期Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.转正日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set转正日期Null() {
                this[this.tableView_HR_PersonnelArchiveChange.转正日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is参加工作的时间Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.参加工作的时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set参加工作的时间Null() {
                this[this.tableView_HR_PersonnelArchiveChange.参加工作的时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is毕业年份Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.毕业年份Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set毕业年份Null() {
                this[this.tableView_HR_PersonnelArchiveChange.毕业年份Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is内部级别Null() {
                return this.IsNull(this.tableView_HR_PersonnelArchiveChange.内部级别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set内部级别Null() {
                this[this.tableView_HR_PersonnelArchiveChange.内部级别Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_OnBusinessBillRow : global::System.Data.DataRow {
            
            private HR_OnBusinessBillDataTable tableHR_OnBusinessBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_OnBusinessBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_OnBusinessBill = ((HR_OnBusinessBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_OnBusinessBill.IDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillStatus {
                get {
                    return ((string)(this[this.tableHR_OnBusinessBill.BillStatusColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.BillStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Applicant {
                get {
                    return ((string)(this[this.tableHR_OnBusinessBill.ApplicantColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.ApplicantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApplicantDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.ApplicantDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“ApplicantDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.ApplicantDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purpose {
                get {
                    return ((string)(this[this.tableHR_OnBusinessBill.PurposeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ETD {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.ETDColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.ETDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vehicle {
                get {
                    return ((string)(this[this.tableHR_OnBusinessBill.VehicleColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.VehicleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EntertainmentExprense {
                get {
                    return ((decimal)(this[this.tableHR_OnBusinessBill.EntertainmentExprenseColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.EntertainmentExprenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExprense {
                get {
                    try {
                        return ((decimal)(this[this.tableHR_OnBusinessBill.OtherExprenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“OtherExprense”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.OtherExprenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBorrowing {
                get {
                    return ((bool)(this[this.tableHR_OnBusinessBill.IsBorrowingColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.IsBorrowingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BorrowingAmount {
                get {
                    return ((decimal)(this[this.tableHR_OnBusinessBill.BorrowingAmountColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.BorrowingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptPrincipal {
                get {
                    try {
                        return ((string)(this[this.tableHR_OnBusinessBill.DeptPrincipalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“DeptPrincipal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.DeptPrincipalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralManager {
                get {
                    try {
                        return ((string)(this[this.tableHR_OnBusinessBill.GeneralManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“GeneralManager”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.GeneralManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Authorize {
                get {
                    return ((bool)(this[this.tableHR_OnBusinessBill.AuthorizeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.AuthorizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Confirmor {
                get {
                    try {
                        return ((string)(this[this.tableHR_OnBusinessBill.ConfirmorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“Confirmor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.ConfirmorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ConfirmorDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.ConfirmorDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“ConfirmorDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.ConfirmorDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WithinBudget {
                get {
                    return ((bool)(this[this.tableHR_OnBusinessBill.WithinBudgetColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.WithinBudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Result {
                get {
                    return ((string)(this[this.tableHR_OnBusinessBill.ResultColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ETC {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.ETCColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.ETCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RealBeginTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.RealBeginTimeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.RealBeginTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RealEndTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.RealEndTimeColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.RealEndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeptSignatureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.DeptSignatureDateColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.DeptSignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderSignature {
                get {
                    try {
                        return ((string)(this[this.tableHR_OnBusinessBill.LeaderSignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_OnBusinessBill”中列“LeaderSignature”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_OnBusinessBill.LeaderSignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LeaderSignatureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.LeaderSignatureDateColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.LeaderSignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GM_SignatureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_OnBusinessBill.GM_SignatureDateColumn]));
                }
                set {
                    this[this.tableHR_OnBusinessBill.GM_SignatureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicantDateNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.ApplicantDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicantDateNull() {
                this[this.tableHR_OnBusinessBill.ApplicantDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExprenseNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.OtherExprenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExprenseNull() {
                this[this.tableHR_OnBusinessBill.OtherExprenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptPrincipalNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.DeptPrincipalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptPrincipalNull() {
                this[this.tableHR_OnBusinessBill.DeptPrincipalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralManagerNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.GeneralManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralManagerNull() {
                this[this.tableHR_OnBusinessBill.GeneralManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmorNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.ConfirmorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmorNull() {
                this[this.tableHR_OnBusinessBill.ConfirmorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmorDateNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.ConfirmorDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmorDateNull() {
                this[this.tableHR_OnBusinessBill.ConfirmorDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderSignatureNull() {
                return this.IsNull(this.tableHR_OnBusinessBill.LeaderSignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderSignatureNull() {
                this[this.tableHR_OnBusinessBill.LeaderSignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow[] GetHR_OnBusinessScheduleRows() {
                if ((this.Table.ChildRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS_1"] == null)) {
                    return new HR_OnBusinessScheduleRow[0];
                }
                else {
                    return ((HR_OnBusinessScheduleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS_1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow[] GetHR_OnBusinessPersonnelRows() {
                if ((this.Table.ChildRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS"] == null)) {
                    return new HR_OnBusinessPersonnelRow[0];
                }
                else {
                    return ((HR_OnBusinessPersonnelRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HR_ONBUS_REFERENCE_HR_ONBUS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_PostTypeRow : global::System.Data.DataRow {
            
            private HR_PostTypeDataTable tableHR_PostType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PostTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_PostType = ((HR_PostTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeID {
                get {
                    return ((int)(this[this.tableHR_PostType.TypeIDColumn]));
                }
                set {
                    this[this.tableHR_PostType.TypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeName {
                get {
                    return ((string)(this[this.tableHR_PostType.TypeNameColumn]));
                }
                set {
                    this[this.tableHR_PostType.TypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleLevel {
                get {
                    return ((bool)(this[this.tableHR_PostType.IsMiddleLevelColumn]));
                }
                set {
                    this[this.tableHR_PostType.IsMiddleLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighLevel {
                get {
                    return ((bool)(this[this.tableHR_PostType.IsHighLevelColumn]));
                }
                set {
                    this[this.tableHR_PostType.IsHighLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    return ((string)(this[this.tableHR_PostType.RemarkColumn]));
                }
                set {
                    this[this.tableHR_PostType.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recorder {
                get {
                    return ((string)(this[this.tableHR_PostType.RecorderColumn]));
                }
                set {
                    this[this.tableHR_PostType.RecorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHR_PostType.RecordTimeColumn]));
                }
                set {
                    this[this.tableHR_PostType.RecordTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_OnBusinessPersonnelRow : global::System.Data.DataRow {
            
            private View_HR_OnBusinessPersonnelDataTable tableView_HR_OnBusinessPersonnel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OnBusinessPersonnelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_OnBusinessPersonnel = ((View_HR_OnBusinessPersonnelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 单据号 {
                get {
                    return ((int)(this[this.tableView_HR_OnBusinessPersonnel.单据号Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessPersonnel.员工编号Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工姓名 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessPersonnel.员工姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessPersonnel”中列“员工姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.员工姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 人员类别 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessPersonnel.人员类别Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.人员类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 随行人员部门确认 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessPersonnel.随行人员部门确认Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessPersonnel”中列“随行人员部门确认”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.随行人员部门确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 随行人员部门确认时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessPersonnel.随行人员部门确认时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessPersonnel.随行人员部门确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is员工姓名Null() {
                return this.IsNull(this.tableView_HR_OnBusinessPersonnel.员工姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set员工姓名Null() {
                this[this.tableView_HR_OnBusinessPersonnel.员工姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is随行人员部门确认Null() {
                return this.IsNull(this.tableView_HR_OnBusinessPersonnel.随行人员部门确认Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set随行人员部门确认Null() {
                this[this.tableView_HR_OnBusinessPersonnel.随行人员部门确认Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_HR_OnBusinessBillRow : global::System.Data.DataRow {
            
            private View_HR_OnBusinessBillDataTable tableView_HR_OnBusinessBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_HR_OnBusinessBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_HR_OnBusinessBill = ((View_HR_OnBusinessBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_HR_OnBusinessBill.编号Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.单据状态Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.员工编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“员工编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人姓名 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.申请人姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“申请人姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.申请人姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.申请时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.申请时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.申请部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“申请部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.申请部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 出差目的 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.出差目的Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.出差目的Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 预定出发时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.预定出发时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.预定出发时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 预定返程时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.预定返程时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.预定返程时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交通工具 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.交通工具Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.交通工具Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预计招待费 {
                get {
                    return ((decimal)(this[this.tableView_HR_OnBusinessBill.预计招待费Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.预计招待费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预计其他费用 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_HR_OnBusinessBill.预计其他费用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“预计其他费用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.预计其他费用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否借款 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.是否借款Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.是否借款Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 借款金额 {
                get {
                    return ((decimal)(this[this.tableView_HR_OnBusinessBill.借款金额Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.借款金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否在预算范围内 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.是否在预算范围内Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.是否在预算范围内Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门负责人 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.部门负责人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“部门负责人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.部门负责人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 签定时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.签定时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“签定时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.签定时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.分管领导Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“分管领导”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.分管领导Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 领导签定时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.领导签定时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“领导签定时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.领导签定时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 总经理 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.总经理Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“总经理”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.总经理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 总经理签定时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.总经理签定时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“总经理签定时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.总经理签定时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否批准 {
                get {
                    return ((bool)(this[this.tableView_HR_OnBusinessBill.是否批准Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.是否批准Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 销差确认人 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.销差确认人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“销差确认人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.销差确认人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 销差确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.销差确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“销差确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.销差确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 实际出发时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.实际出发时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.实际出发时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 实际返程时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_HR_OnBusinessBill.实际返程时间Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.实际返程时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.部门编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“部门编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.部门编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 出差结果说明 {
                get {
                    return ((string)(this[this.tableView_HR_OnBusinessBill.出差结果说明Column]));
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.出差结果说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 大写金额 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.大写金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“大写金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.大写金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 出差人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.出差人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“出差人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.出差人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_HR_OnBusinessBill.关联部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_HR_OnBusinessBill”中列“关联部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_HR_OnBusinessBill.关联部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is员工编号Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.员工编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set员工编号Null() {
                this[this.tableView_HR_OnBusinessBill.员工编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人姓名Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.申请人姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人姓名Null() {
                this[this.tableView_HR_OnBusinessBill.申请人姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请部门Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.申请部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请部门Null() {
                this[this.tableView_HR_OnBusinessBill.申请部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预计其他费用Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.预计其他费用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预计其他费用Null() {
                this[this.tableView_HR_OnBusinessBill.预计其他费用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门负责人Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.部门负责人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门负责人Null() {
                this[this.tableView_HR_OnBusinessBill.部门负责人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is签定时间Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.签定时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set签定时间Null() {
                this[this.tableView_HR_OnBusinessBill.签定时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.分管领导Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导Null() {
                this[this.tableView_HR_OnBusinessBill.分管领导Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is领导签定时间Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.领导签定时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set领导签定时间Null() {
                this[this.tableView_HR_OnBusinessBill.领导签定时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总经理Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.总经理Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总经理Null() {
                this[this.tableView_HR_OnBusinessBill.总经理Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总经理签定时间Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.总经理签定时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总经理签定时间Null() {
                this[this.tableView_HR_OnBusinessBill.总经理签定时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is销差确认人Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.销差确认人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set销差确认人Null() {
                this[this.tableView_HR_OnBusinessBill.销差确认人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is销差确认时间Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.销差确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set销差确认时间Null() {
                this[this.tableView_HR_OnBusinessBill.销差确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门编码Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.部门编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门编码Null() {
                this[this.tableView_HR_OnBusinessBill.部门编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is大写金额Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.大写金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set大写金额Null() {
                this[this.tableView_HR_OnBusinessBill.大写金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出差人员Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.出差人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出差人员Null() {
                this[this.tableView_HR_OnBusinessBill.出差人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联部门Null() {
                return this.IsNull(this.tableView_HR_OnBusinessBill.关联部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联部门Null() {
                this[this.tableView_HR_OnBusinessBill.关联部门Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HR_PersonnelArchiveListRow : global::System.Data.DataRow {
            
            private HR_PersonnelArchiveListDataTable tableHR_PersonnelArchiveList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HR_PersonnelArchiveListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHR_PersonnelArchiveList = ((HR_PersonnelArchiveListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableHR_PersonnelArchiveList.IDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string workID {
                get {
                    return ((string)(this[this.tableHR_PersonnelArchiveList.workIDColumn]));
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.workIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RewardPunish {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.RewardPunishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“RewardPunish”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.RewardPunishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Regularization {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.RegularizationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“Regularization”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.RegularizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Performance {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.PerformanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“Performance”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.PerformanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dimission {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.DimissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“Dimission”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.DimissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DimissionView {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.DimissionViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“DimissionView”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.DimissionViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalHistory {
                get {
                    try {
                        return ((bool)(this[this.tableHR_PersonnelArchiveList.IsMedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“IsMedicalHistory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.IsMedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalHistory {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.MedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“MedicalHistory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.MedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InMedicalHistory {
                get {
                    try {
                        return ((string)(this[this.tableHR_PersonnelArchiveList.InMedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HR_PersonnelArchiveList”中列“InMedicalHistory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHR_PersonnelArchiveList.InMedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRewardPunishNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.RewardPunishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRewardPunishNull() {
                this[this.tableHR_PersonnelArchiveList.RewardPunishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegularizationNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.RegularizationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegularizationNull() {
                this[this.tableHR_PersonnelArchiveList.RegularizationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerformanceNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.PerformanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerformanceNull() {
                this[this.tableHR_PersonnelArchiveList.PerformanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDimissionNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.DimissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDimissionNull() {
                this[this.tableHR_PersonnelArchiveList.DimissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDimissionViewNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.DimissionViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDimissionViewNull() {
                this[this.tableHR_PersonnelArchiveList.DimissionViewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsMedicalHistoryNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.IsMedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsMedicalHistoryNull() {
                this[this.tableHR_PersonnelArchiveList.IsMedicalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalHistoryNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.MedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalHistoryNull() {
                this[this.tableHR_PersonnelArchiveList.MedicalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInMedicalHistoryNull() {
                return this.IsNull(this.tableHR_PersonnelArchiveList.InMedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInMedicalHistoryNull() {
                this[this.tableHR_PersonnelArchiveList.InMedicalHistoryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_LeaveBillRowChangeEvent : global::System.EventArgs {
            
            private HR_LeaveBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRowChangeEvent(HR_LeaveBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_LeaveTypeRowChangeEvent : global::System.EventArgs {
            
            private HR_LeaveTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRowChangeEvent(HR_LeaveTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_LeaveTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_OnBusinessPersonnelRowChangeEvent : global::System.EventArgs {
            
            private HR_OnBusinessPersonnelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRowChangeEvent(HR_OnBusinessPersonnelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessPersonnelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_OnBusinessScheduleRowChangeEvent : global::System.EventArgs {
            
            private HR_OnBusinessScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRowChangeEvent(HR_OnBusinessScheduleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessScheduleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_PersonnelArchiveRowChangeEvent : global::System.EventArgs {
            
            private HR_PersonnelArchiveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRowChangeEvent(HR_PersonnelArchiveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_PersonnelArchiveChangeRowChangeEvent : global::System.EventArgs {
            
            private HR_PersonnelArchiveChangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRowChangeEvent(HR_PersonnelArchiveChangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_PersonnelStatusRowChangeEvent : global::System.EventArgs {
            
            private HR_PersonnelStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRowChangeEvent(HR_PersonnelStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_ResumeRowChangeEvent : global::System.EventArgs {
            
            private HR_ResumeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRowChangeEvent(HR_ResumeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_ResumeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_WorkSchedulingRowChangeEvent : global::System.EventArgs {
            
            private HR_WorkSchedulingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRowChangeEvent(HR_WorkSchedulingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_WorkSchedulingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_DeptRowChangeEvent : global::System.EventArgs {
            
            private View_HR_DeptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRowChangeEvent(View_HR_DeptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_DeptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_PersonnelLaborContractRowChangeEvent : global::System.EventArgs {
            
            private View_HR_PersonnelLaborContractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRowChangeEvent(View_HR_PersonnelLaborContractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelLaborContractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_OperatingPostRowChangeEvent : global::System.EventArgs {
            
            private View_HR_OperatingPostRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRowChangeEvent(View_HR_OperatingPostRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OperatingPostRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_PersonnelArchiveRowChangeEvent : global::System.EventArgs {
            
            private View_HR_PersonnelArchiveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveRowChangeEvent(View_HR_PersonnelArchiveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_PersonnelArchiveChangeRowChangeEvent : global::System.EventArgs {
            
            private View_HR_PersonnelArchiveChangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRowChangeEvent(View_HR_PersonnelArchiveChangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_PersonnelArchiveChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_OnBusinessBillRowChangeEvent : global::System.EventArgs {
            
            private HR_OnBusinessBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRowChangeEvent(HR_OnBusinessBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_OnBusinessBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_PostTypeRowChangeEvent : global::System.EventArgs {
            
            private HR_PostTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRowChangeEvent(HR_PostTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PostTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_OnBusinessPersonnelRowChangeEvent : global::System.EventArgs {
            
            private View_HR_OnBusinessPersonnelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRowChangeEvent(View_HR_OnBusinessPersonnelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessPersonnelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_HR_OnBusinessBillRowChangeEvent : global::System.EventArgs {
            
            private View_HR_OnBusinessBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRowChangeEvent(View_HR_OnBusinessBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_HR_OnBusinessBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HR_PersonnelArchiveListRowChangeEvent : global::System.EventArgs {
            
            private HR_PersonnelArchiveListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRowChangeEvent(HR_PersonnelArchiveListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HR_PersonnelArchiveListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Form_Peripheral_HR.DepotManagementDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_LeaveBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_LeaveBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_LeaveBill";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BillStatus", "BillStatus");
            tableMapping.ColumnMappings.Add("Applicant", "Applicant");
            tableMapping.ColumnMappings.Add("LeaveTypeID", "LeaveTypeID");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("OtherExplanation", "OtherExplanation");
            tableMapping.ColumnMappings.Add("BeginTime", "BeginTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("DeptDirector", "DeptDirector");
            tableMapping.ColumnMappings.Add("DeptPrincipal", "DeptPrincipal");
            tableMapping.ColumnMappings.Add("Leader", "Leader");
            tableMapping.ColumnMappings.Add("GeneralManager", "GeneralManager");
            tableMapping.ColumnMappings.Add("Authorize", "Authorize");
            tableMapping.ColumnMappings.Add("UnexcusedReason", "UnexcusedReason");
            tableMapping.ColumnMappings.Add("DeptDirectorSignatureDate", "DeptDirectorSignatureDate");
            tableMapping.ColumnMappings.Add("DeptPrincipalSignatureDate", "DeptPrincipalSignatureDate");
            tableMapping.ColumnMappings.Add("LeaderSignatureDate", "LeaderSignatureDate");
            tableMapping.ColumnMappings.Add("GM_SignatureDate", "GM_SignatureDate");
            tableMapping.ColumnMappings.Add("HR_Signature", "HR_Signature");
            tableMapping.ColumnMappings.Add("HR_SignatureDate", "HR_SignatureDate");
            tableMapping.ColumnMappings.Add("RealHours", "RealHours");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [HR_LeaveBill] WHERE (([ID] = @Original_ID) AND ([BillStatus] = @Orig" +
                "inal_BillStatus) AND ([Applicant] = @Original_Applicant) AND ([LeaveTypeID] = @O" +
                "riginal_LeaveTypeID) AND ([Reason] = @Original_Reason) AND ([OtherExplanation] =" +
                " @Original_OtherExplanation) AND ([BeginTime] = @Original_BeginTime) AND ([EndTi" +
                "me] = @Original_EndTime) AND ((@IsNull_DeptDirector = 1 AND [DeptDirector] IS NU" +
                "LL) OR ([DeptDirector] = @Original_DeptDirector)) AND ((@IsNull_DeptPrincipal = " +
                "1 AND [DeptPrincipal] IS NULL) OR ([DeptPrincipal] = @Original_DeptPrincipal)) A" +
                "ND ((@IsNull_Leader = 1 AND [Leader] IS NULL) OR ([Leader] = @Original_Leader)) " +
                "AND ((@IsNull_GeneralManager = 1 AND [GeneralManager] IS NULL) OR ([GeneralManag" +
                "er] = @Original_GeneralManager)) AND ((@IsNull_Authorize = 1 AND [Authorize] IS " +
                "NULL) OR ([Authorize] = @Original_Authorize)) AND ((@IsNull_UnexcusedReason = 1 " +
                "AND [UnexcusedReason] IS NULL) OR ([UnexcusedReason] = @Original_UnexcusedReason" +
                ")) AND ((@IsNull_DeptDirectorSignatureDate = 1 AND [DeptDirectorSignatureDate] I" +
                "S NULL) OR ([DeptDirectorSignatureDate] = @Original_DeptDirectorSignatureDate)) " +
                "AND ((@IsNull_DeptPrincipalSignatureDate = 1 AND [DeptPrincipalSignatureDate] IS" +
                " NULL) OR ([DeptPrincipalSignatureDate] = @Original_DeptPrincipalSignatureDate))" +
                " AND ((@IsNull_GM_SignatureDate = 1 AND [GM_SignatureDate] IS NULL) OR ([GM_Sign" +
                "atureDate] = @Original_GM_SignatureDate)) AND ((@IsNull_HR_Signature = 1 AND [HR" +
                "_Signature] IS NULL) OR ([HR_Signature] = @Original_HR_Signature)) AND ((@IsNull" +
                "_HR_SignatureDate = 1 AND [HR_SignatureDate] IS NULL) OR ([HR_SignatureDate] = @" +
                "Original_HR_SignatureDate)) AND ((@IsNull_LeaderSignatureDate = 1 AND [LeaderSig" +
                "natureDate] IS NULL) OR ([LeaderSignatureDate] = @Original_LeaderSignatureDate))" +
                " AND ([RealHours] = @Original_RealHours))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaveTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherExplanation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExplanation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptDirector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptDirector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Leader", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leader", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Authorize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnexcusedReason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnexcusedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptDirectorSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptDirectorSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipalSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipalSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GM_SignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_Signature", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_Signature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_SignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [HR_LeaveBill] ([BillStatus], [Applicant], [LeaveTypeID], [Reason], [OtherExplanation], [BeginTime], [EndTime], [DeptDirector], [DeptPrincipal], [Leader], [GeneralManager], [Authorize], [UnexcusedReason], [DeptDirectorSignatureDate], [DeptPrincipalSignatureDate], [GM_SignatureDate], [HR_Signature], [HR_SignatureDate], [LeaderSignatureDate], [RealHours]) VALUES (@BillStatus, @Applicant, @LeaveTypeID, @Reason, @OtherExplanation, @BeginTime, @EndTime, @DeptDirector, @DeptPrincipal, @Leader, @GeneralManager, @Authorize, @UnexcusedReason, @DeptDirectorSignatureDate, @DeptPrincipalSignatureDate, @GM_SignatureDate, @HR_Signature, @HR_SignatureDate, @LeaderSignatureDate, @RealHours);
SELECT ID, BillStatus, Applicant, LeaveTypeID, Reason, OtherExplanation, BeginTime, EndTime, DeptDirector, DeptPrincipal, Leader, GeneralManager, Authorize, UnexcusedReason, DeptDirectorSignatureDate, DeptPrincipalSignatureDate, GM_SignatureDate, HR_Signature, HR_SignatureDate, LeaderSignatureDate, RealHours FROM HR_LeaveBill WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaveTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherExplanation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptDirector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leader", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnexcusedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptDirectorSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipalSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_Signature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [HR_LeaveBill] SET [BillStatus] = @BillStatus, [Applicant] = @Applicant, [" +
                "LeaveTypeID] = @LeaveTypeID, [Reason] = @Reason, [OtherExplanation] = @OtherExpl" +
                "anation, [BeginTime] = @BeginTime, [EndTime] = @EndTime, [DeptDirector] = @DeptD" +
                "irector, [DeptPrincipal] = @DeptPrincipal, [Leader] = @Leader, [GeneralManager] " +
                "= @GeneralManager, [Authorize] = @Authorize, [UnexcusedReason] = @UnexcusedReaso" +
                "n, [DeptDirectorSignatureDate] = @DeptDirectorSignatureDate, [DeptPrincipalSigna" +
                "tureDate] = @DeptPrincipalSignatureDate, [GM_SignatureDate] = @GM_SignatureDate," +
                " [HR_Signature] = @HR_Signature, [HR_SignatureDate] = @HR_SignatureDate, [Leader" +
                "SignatureDate] = @LeaderSignatureDate, [RealHours] = @RealHours WHERE (([ID] = @" +
                "Original_ID) AND ([BillStatus] = @Original_BillStatus) AND ([Applicant] = @Origi" +
                "nal_Applicant) AND ([LeaveTypeID] = @Original_LeaveTypeID) AND ([Reason] = @Orig" +
                "inal_Reason) AND ([OtherExplanation] = @Original_OtherExplanation) AND ([BeginTi" +
                "me] = @Original_BeginTime) AND ([EndTime] = @Original_EndTime) AND ((@IsNull_Dep" +
                "tDirector = 1 AND [DeptDirector] IS NULL) OR ([DeptDirector] = @Original_DeptDir" +
                "ector)) AND ((@IsNull_DeptPrincipal = 1 AND [DeptPrincipal] IS NULL) OR ([DeptPr" +
                "incipal] = @Original_DeptPrincipal)) AND ((@IsNull_Leader = 1 AND [Leader] IS NU" +
                "LL) OR ([Leader] = @Original_Leader)) AND ((@IsNull_GeneralManager = 1 AND [Gene" +
                "ralManager] IS NULL) OR ([GeneralManager] = @Original_GeneralManager)) AND ((@Is" +
                "Null_Authorize = 1 AND [Authorize] IS NULL) OR ([Authorize] = @Original_Authoriz" +
                "e)) AND ((@IsNull_UnexcusedReason = 1 AND [UnexcusedReason] IS NULL) OR ([Unexcu" +
                "sedReason] = @Original_UnexcusedReason)) AND ((@IsNull_DeptDirectorSignatureDate" +
                " = 1 AND [DeptDirectorSignatureDate] IS NULL) OR ([DeptDirectorSignatureDate] = " +
                "@Original_DeptDirectorSignatureDate)) AND ((@IsNull_DeptPrincipalSignatureDate =" +
                " 1 AND [DeptPrincipalSignatureDate] IS NULL) OR ([DeptPrincipalSignatureDate] = " +
                "@Original_DeptPrincipalSignatureDate)) AND ((@IsNull_GM_SignatureDate = 1 AND [G" +
                "M_SignatureDate] IS NULL) OR ([GM_SignatureDate] = @Original_GM_SignatureDate)) " +
                "AND ((@IsNull_HR_Signature = 1 AND [HR_Signature] IS NULL) OR ([HR_Signature] = " +
                "@Original_HR_Signature)) AND ((@IsNull_HR_SignatureDate = 1 AND [HR_SignatureDat" +
                "e] IS NULL) OR ([HR_SignatureDate] = @Original_HR_SignatureDate)) AND ((@IsNull_" +
                "LeaderSignatureDate = 1 AND [LeaderSignatureDate] IS NULL) OR ([LeaderSignatureD" +
                "ate] = @Original_LeaderSignatureDate)) AND ([RealHours] = @Original_RealHours));" +
                "\r\nSELECT ID, BillStatus, Applicant, LeaveTypeID, Reason, OtherExplanation, Begin" +
                "Time, EndTime, DeptDirector, DeptPrincipal, Leader, GeneralManager, Authorize, U" +
                "nexcusedReason, DeptDirectorSignatureDate, DeptPrincipalSignatureDate, GM_Signat" +
                "ureDate, HR_Signature, HR_SignatureDate, LeaderSignatureDate, RealHours FROM HR_" +
                "LeaveBill WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaveTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherExplanation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptDirector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leader", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnexcusedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptDirectorSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipalSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_Signature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaveTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherExplanation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExplanation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptDirector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptDirector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Leader", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leader", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leader", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Authorize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnexcusedReason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnexcusedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnexcusedReason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptDirectorSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptDirectorSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptDirectorSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipalSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipalSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipalSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GM_SignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_Signature", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_Signature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_Signature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_SignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderSignatureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, BillStatus, Applicant, LeaveTypeID, Reason, OtherExplanation, BeginTime, EndTime, DeptDirector, DeptPrincipal, Leader, GeneralManager, Authorize, UnexcusedReason, DeptDirectorSignatureDate, DeptPrincipalSignatureDate, GM_SignatureDate, HR_Signature, HR_SignatureDate, LeaderSignatureDate, RealHours FROM HR_LeaveBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_LeaveBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_LeaveBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_LeaveBillDataTable dataTable = new DepotManagementDataSet.HR_LeaveBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_LeaveBillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_LeaveBill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    string Original_LeaveTypeID, 
                    string Original_Reason, 
                    string Original_OtherExplanation, 
                    System.DateTime Original_BeginTime, 
                    System.DateTime Original_EndTime, 
                    string Original_DeptDirector, 
                    string Original_DeptPrincipal, 
                    string Original_Leader, 
                    string Original_GeneralManager, 
                    global::System.Nullable<bool> Original_Authorize, 
                    string Original_UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> Original_DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_GM_SignatureDate, 
                    string Original_HR_Signature, 
                    global::System.Nullable<global::System.DateTime> Original_HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_LeaderSignatureDate, 
                    double Original_RealHours) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_BillStatus == null)) {
                throw new global::System.ArgumentNullException("Original_BillStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_BillStatus));
            }
            if ((Original_Applicant == null)) {
                throw new global::System.ArgumentNullException("Original_Applicant");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Applicant));
            }
            if ((Original_LeaveTypeID == null)) {
                throw new global::System.ArgumentNullException("Original_LeaveTypeID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LeaveTypeID));
            }
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Reason));
            }
            if ((Original_OtherExplanation == null)) {
                throw new global::System.ArgumentNullException("Original_OtherExplanation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_OtherExplanation));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_BeginTime));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_EndTime));
            if ((Original_DeptDirector == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_DeptDirector));
            }
            if ((Original_DeptPrincipal == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_DeptPrincipal));
            }
            if ((Original_Leader == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Leader));
            }
            if ((Original_GeneralManager == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_GeneralManager));
            }
            if ((Original_Authorize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_Authorize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_UnexcusedReason == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_UnexcusedReason));
            }
            if ((Original_DeptDirectorSignatureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_DeptDirectorSignatureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_DeptPrincipalSignatureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_DeptPrincipalSignatureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_GM_SignatureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_GM_SignatureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_Signature == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_HR_Signature));
            }
            if ((Original_HR_SignatureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_HR_SignatureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_LeaderSignatureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_LeaderSignatureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_RealHours));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BillStatus, 
                    string Applicant, 
                    string LeaveTypeID, 
                    string Reason, 
                    string OtherExplanation, 
                    System.DateTime BeginTime, 
                    System.DateTime EndTime, 
                    string DeptDirector, 
                    string DeptPrincipal, 
                    string Leader, 
                    string GeneralManager, 
                    global::System.Nullable<bool> Authorize, 
                    string UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> GM_SignatureDate, 
                    string HR_Signature, 
                    global::System.Nullable<global::System.DateTime> HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> LeaderSignatureDate, 
                    double RealHours) {
            if ((BillStatus == null)) {
                throw new global::System.ArgumentNullException("BillStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BillStatus));
            }
            if ((Applicant == null)) {
                throw new global::System.ArgumentNullException("Applicant");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Applicant));
            }
            if ((LeaveTypeID == null)) {
                throw new global::System.ArgumentNullException("LeaveTypeID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LeaveTypeID));
            }
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Reason));
            }
            if ((OtherExplanation == null)) {
                throw new global::System.ArgumentNullException("OtherExplanation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(OtherExplanation));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(BeginTime));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(EndTime));
            if ((DeptDirector == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DeptDirector));
            }
            if ((DeptPrincipal == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DeptPrincipal));
            }
            if ((Leader == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Leader));
            }
            if ((GeneralManager == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(GeneralManager));
            }
            if ((Authorize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Authorize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UnexcusedReason == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(UnexcusedReason));
            }
            if ((DeptDirectorSignatureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(DeptDirectorSignatureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((DeptPrincipalSignatureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(DeptPrincipalSignatureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GM_SignatureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(GM_SignatureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((HR_Signature == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(HR_Signature));
            }
            if ((HR_SignatureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(HR_SignatureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((LeaderSignatureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(LeaderSignatureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((double)(RealHours));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BillStatus, 
                    string Applicant, 
                    string LeaveTypeID, 
                    string Reason, 
                    string OtherExplanation, 
                    System.DateTime BeginTime, 
                    System.DateTime EndTime, 
                    string DeptDirector, 
                    string DeptPrincipal, 
                    string Leader, 
                    string GeneralManager, 
                    global::System.Nullable<bool> Authorize, 
                    string UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> GM_SignatureDate, 
                    string HR_Signature, 
                    global::System.Nullable<global::System.DateTime> HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> LeaderSignatureDate, 
                    double RealHours, 
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    string Original_LeaveTypeID, 
                    string Original_Reason, 
                    string Original_OtherExplanation, 
                    System.DateTime Original_BeginTime, 
                    System.DateTime Original_EndTime, 
                    string Original_DeptDirector, 
                    string Original_DeptPrincipal, 
                    string Original_Leader, 
                    string Original_GeneralManager, 
                    global::System.Nullable<bool> Original_Authorize, 
                    string Original_UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> Original_DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_GM_SignatureDate, 
                    string Original_HR_Signature, 
                    global::System.Nullable<global::System.DateTime> Original_HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_LeaderSignatureDate, 
                    double Original_RealHours, 
                    int ID) {
            if ((BillStatus == null)) {
                throw new global::System.ArgumentNullException("BillStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BillStatus));
            }
            if ((Applicant == null)) {
                throw new global::System.ArgumentNullException("Applicant");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Applicant));
            }
            if ((LeaveTypeID == null)) {
                throw new global::System.ArgumentNullException("LeaveTypeID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LeaveTypeID));
            }
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Reason));
            }
            if ((OtherExplanation == null)) {
                throw new global::System.ArgumentNullException("OtherExplanation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(OtherExplanation));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(BeginTime));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(EndTime));
            if ((DeptDirector == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DeptDirector));
            }
            if ((DeptPrincipal == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DeptPrincipal));
            }
            if ((Leader == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Leader));
            }
            if ((GeneralManager == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(GeneralManager));
            }
            if ((Authorize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Authorize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UnexcusedReason == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(UnexcusedReason));
            }
            if ((DeptDirectorSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(DeptDirectorSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((DeptPrincipalSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(DeptPrincipalSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GM_SignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(GM_SignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((HR_Signature == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(HR_Signature));
            }
            if ((HR_SignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(HR_SignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((LeaderSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(LeaderSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(RealHours));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ID));
            if ((Original_BillStatus == null)) {
                throw new global::System.ArgumentNullException("Original_BillStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_BillStatus));
            }
            if ((Original_Applicant == null)) {
                throw new global::System.ArgumentNullException("Original_Applicant");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Applicant));
            }
            if ((Original_LeaveTypeID == null)) {
                throw new global::System.ArgumentNullException("Original_LeaveTypeID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_LeaveTypeID));
            }
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Reason));
            }
            if ((Original_OtherExplanation == null)) {
                throw new global::System.ArgumentNullException("Original_OtherExplanation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_OtherExplanation));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_BeginTime));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_EndTime));
            if ((Original_DeptDirector == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_DeptDirector));
            }
            if ((Original_DeptPrincipal == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_DeptPrincipal));
            }
            if ((Original_Leader == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Leader));
            }
            if ((Original_GeneralManager == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_GeneralManager));
            }
            if ((Original_Authorize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_Authorize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_UnexcusedReason == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_UnexcusedReason));
            }
            if ((Original_DeptDirectorSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_DeptDirectorSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_DeptPrincipalSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_DeptPrincipalSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_GM_SignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_GM_SignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_Signature == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_HR_Signature));
            }
            if ((Original_HR_SignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_HR_SignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_LeaderSignatureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_LeaderSignatureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_RealHours));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BillStatus, 
                    string Applicant, 
                    string LeaveTypeID, 
                    string Reason, 
                    string OtherExplanation, 
                    System.DateTime BeginTime, 
                    System.DateTime EndTime, 
                    string DeptDirector, 
                    string DeptPrincipal, 
                    string Leader, 
                    string GeneralManager, 
                    global::System.Nullable<bool> Authorize, 
                    string UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> GM_SignatureDate, 
                    string HR_Signature, 
                    global::System.Nullable<global::System.DateTime> HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> LeaderSignatureDate, 
                    double RealHours, 
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    string Original_LeaveTypeID, 
                    string Original_Reason, 
                    string Original_OtherExplanation, 
                    System.DateTime Original_BeginTime, 
                    System.DateTime Original_EndTime, 
                    string Original_DeptDirector, 
                    string Original_DeptPrincipal, 
                    string Original_Leader, 
                    string Original_GeneralManager, 
                    global::System.Nullable<bool> Original_Authorize, 
                    string Original_UnexcusedReason, 
                    global::System.Nullable<global::System.DateTime> Original_DeptDirectorSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_DeptPrincipalSignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_GM_SignatureDate, 
                    string Original_HR_Signature, 
                    global::System.Nullable<global::System.DateTime> Original_HR_SignatureDate, 
                    global::System.Nullable<global::System.DateTime> Original_LeaderSignatureDate, 
                    double Original_RealHours) {
            return this.Update(BillStatus, Applicant, LeaveTypeID, Reason, OtherExplanation, BeginTime, EndTime, DeptDirector, DeptPrincipal, Leader, GeneralManager, Authorize, UnexcusedReason, DeptDirectorSignatureDate, DeptPrincipalSignatureDate, GM_SignatureDate, HR_Signature, HR_SignatureDate, LeaderSignatureDate, RealHours, Original_ID, Original_BillStatus, Original_Applicant, Original_LeaveTypeID, Original_Reason, Original_OtherExplanation, Original_BeginTime, Original_EndTime, Original_DeptDirector, Original_DeptPrincipal, Original_Leader, Original_GeneralManager, Original_Authorize, Original_UnexcusedReason, Original_DeptDirectorSignatureDate, Original_DeptPrincipalSignatureDate, Original_GM_SignatureDate, Original_HR_Signature, Original_HR_SignatureDate, Original_LeaderSignatureDate, Original_RealHours, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_LeaveTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_LeaveTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_LeaveType";
            tableMapping.ColumnMappings.Add("TypeCode", "TypeCode");
            tableMapping.ColumnMappings.Add("TypeName", "TypeName");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            tableMapping.ColumnMappings.Add("Recorder", "Recorder");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HR_LeaveType] WHERE (([TypeCode] = @Original_TypeCode) AND ([T" +
                "ypeName] = @Original_TypeName) AND ([RecordTime] = @Original_RecordTime) AND ([R" +
                "ecorder] = @Original_Recorder))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HR_LeaveType] ([TypeCode], [TypeName], [Remark], [RecordTime], [Recorder]) VALUES (@TypeCode, @TypeName, @Remark, @RecordTime, @Recorder);
SELECT TypeCode, TypeName, Remark, RecordTime, Recorder FROM HR_LeaveType WHERE (TypeCode = @TypeCode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_LeaveType] SET [TypeCode] = @TypeCode, [TypeName] = @TypeName, [Remark] = @Remark, [RecordTime] = @RecordTime, [Recorder] = @Recorder WHERE (([TypeCode] = @Original_TypeCode) AND ([TypeName] = @Original_TypeName) AND ([RecordTime] = @Original_RecordTime) AND ([Recorder] = @Original_Recorder));
SELECT TypeCode, TypeName, Remark, RecordTime, Recorder FROM HR_LeaveType WHERE (TypeCode = @TypeCode)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TypeCode, TypeName, Remark, RecordTime, Recorder FROM dbo.HR_LeaveType";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_LeaveTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_LeaveTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_LeaveTypeDataTable dataTable = new DepotManagementDataSet.HR_LeaveTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_LeaveTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_LeaveType");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TypeCode, string Original_TypeName, System.DateTime Original_RecordTime, string Original_Recorder) {
            if ((Original_TypeCode == null)) {
                throw new global::System.ArgumentNullException("Original_TypeCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TypeCode));
            }
            if ((Original_TypeName == null)) {
                throw new global::System.ArgumentNullException("Original_TypeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TypeName));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_RecordTime));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Recorder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TypeCode, string TypeName, string Remark, System.DateTime RecordTime, string Recorder) {
            if ((TypeCode == null)) {
                throw new global::System.ArgumentNullException("TypeCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TypeCode));
            }
            if ((TypeName == null)) {
                throw new global::System.ArgumentNullException("TypeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TypeName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Remark));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(RecordTime));
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Recorder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeCode, string TypeName, string Remark, System.DateTime RecordTime, string Recorder, string Original_TypeCode, string Original_TypeName, System.DateTime Original_RecordTime, string Original_Recorder) {
            if ((TypeCode == null)) {
                throw new global::System.ArgumentNullException("TypeCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TypeCode));
            }
            if ((TypeName == null)) {
                throw new global::System.ArgumentNullException("TypeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TypeName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(RecordTime));
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Recorder));
            }
            if ((Original_TypeCode == null)) {
                throw new global::System.ArgumentNullException("Original_TypeCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_TypeCode));
            }
            if ((Original_TypeName == null)) {
                throw new global::System.ArgumentNullException("Original_TypeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TypeName));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_RecordTime));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Recorder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeName, string Remark, System.DateTime RecordTime, string Recorder, string Original_TypeCode, string Original_TypeName, System.DateTime Original_RecordTime, string Original_Recorder) {
            return this.Update(Original_TypeCode, TypeName, Remark, RecordTime, Recorder, Original_TypeCode, Original_TypeName, Original_RecordTime, Original_Recorder);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_OnBusinessPersonnelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_OnBusinessPersonnelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_OnBusinessPersonnel";
            tableMapping.ColumnMappings.Add("BillID", "BillID");
            tableMapping.ColumnMappings.Add("WorkID", "WorkID");
            tableMapping.ColumnMappings.Add("PersonnelType", "PersonnelType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HR_OnBusinessPersonnel] WHERE (([BillID] = @Original_BillID) A" +
                "ND ([WorkID] = @Original_WorkID) AND ([PersonnelType] = @Original_PersonnelType)" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonnelType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[HR_OnBusinessPersonnel] ([BillID], [WorkID], [PersonnelType]) " +
                "VALUES (@BillID, @WorkID, @PersonnelType);\r\nSELECT BillID, WorkID, PersonnelType" +
                " FROM HR_OnBusinessPersonnel WHERE (BillID = @BillID) AND (WorkID = @WorkID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PersonnelType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_OnBusinessPersonnel] SET [BillID] = @BillID, [WorkID] = @WorkID, [PersonnelType] = @PersonnelType WHERE (([BillID] = @Original_BillID) AND ([WorkID] = @Original_WorkID) AND ([PersonnelType] = @Original_PersonnelType));
SELECT BillID, WorkID, PersonnelType FROM HR_OnBusinessPersonnel WHERE (BillID = @BillID) AND (WorkID = @WorkID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PersonnelType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonnelType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BillID, WorkID, PersonnelType FROM dbo.HR_OnBusinessPersonnel";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_OnBusinessPersonnelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_OnBusinessPersonnelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_OnBusinessPersonnelDataTable dataTable = new DepotManagementDataSet.HR_OnBusinessPersonnelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_OnBusinessPersonnelDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_OnBusinessPersonnel");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_BillID, System.DateTime Original_WorkID, string Original_PersonnelType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_BillID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_WorkID));
            if ((Original_PersonnelType == null)) {
                throw new global::System.ArgumentNullException("Original_PersonnelType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PersonnelType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int BillID, System.DateTime WorkID, string PersonnelType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(BillID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(WorkID));
            if ((PersonnelType == null)) {
                throw new global::System.ArgumentNullException("PersonnelType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PersonnelType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int BillID, System.DateTime WorkID, string PersonnelType, int Original_BillID, System.DateTime Original_WorkID, string Original_PersonnelType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(BillID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(WorkID));
            if ((PersonnelType == null)) {
                throw new global::System.ArgumentNullException("PersonnelType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PersonnelType));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_BillID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_WorkID));
            if ((Original_PersonnelType == null)) {
                throw new global::System.ArgumentNullException("Original_PersonnelType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PersonnelType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PersonnelType, int Original_BillID, System.DateTime Original_WorkID, string Original_PersonnelType) {
            return this.Update(Original_BillID, Original_WorkID, PersonnelType, Original_BillID, Original_WorkID, Original_PersonnelType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_OnBusinessScheduleTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_OnBusinessScheduleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_OnBusinessSchedule";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BillID", "BillID");
            tableMapping.ColumnMappings.Add("Place", "Place");
            tableMapping.ColumnMappings.Add("WorkContent", "WorkContent");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("Vehicle", "Vehicle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [HR_OnBusinessSchedule] WHERE (([ID] = @Original_ID) AND ([BillID] = @Original_BillID) AND ([Place] = @Original_Place) AND ([WorkContent] = @Original_WorkContent) AND ([Contact] = @Original_Contact) AND ([EndTime] = @Original_EndTime) AND ([StartTime] = @Original_StartTime) AND ((@IsNull_Vehicle = 1 AND [Vehicle] IS NULL) OR ([Vehicle] = @Original_Vehicle)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Place", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkContent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vehicle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [HR_OnBusinessSchedule] ([BillID], [Place], [WorkContent], [Contact], [Remark], [EndTime], [StartTime], [Vehicle]) VALUES (@BillID, @Place, @WorkContent, @Contact, @Remark, @EndTime, @StartTime, @Vehicle);
SELECT ID, BillID, Place, WorkContent, Contact, Remark, EndTime, StartTime, Vehicle FROM HR_OnBusinessSchedule WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Place", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [HR_OnBusinessSchedule] SET [BillID] = @BillID, [Place] = @Place, [WorkContent] = @WorkContent, [Contact] = @Contact, [Remark] = @Remark, [EndTime] = @EndTime, [StartTime] = @StartTime, [Vehicle] = @Vehicle WHERE (([ID] = @Original_ID) AND ([BillID] = @Original_BillID) AND ([Place] = @Original_Place) AND ([WorkContent] = @Original_WorkContent) AND ([Contact] = @Original_Contact) AND ([EndTime] = @Original_EndTime) AND ([StartTime] = @Original_StartTime) AND ((@IsNull_Vehicle = 1 AND [Vehicle] IS NULL) OR ([Vehicle] = @Original_Vehicle)));
SELECT ID, BillID, Place, WorkContent, Contact, Remark, EndTime, StartTime, Vehicle FROM HR_OnBusinessSchedule WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Place", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Place", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkContent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vehicle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, BillID, Place, WorkContent, Contact, Remark, EndTime, StartTime, Vehic" +
                "le FROM HR_OnBusinessSchedule";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_OnBusinessScheduleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_OnBusinessScheduleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_OnBusinessScheduleDataTable dataTable = new DepotManagementDataSet.HR_OnBusinessScheduleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_OnBusinessScheduleDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_OnBusinessSchedule");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_BillID, string Original_Place, string Original_WorkContent, string Original_Contact, System.DateTime Original_EndTime, System.DateTime Original_StartTime, string Original_Vehicle) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_BillID));
            if ((Original_Place == null)) {
                throw new global::System.ArgumentNullException("Original_Place");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Place));
            }
            if ((Original_WorkContent == null)) {
                throw new global::System.ArgumentNullException("Original_WorkContent");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_WorkContent));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Contact));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_EndTime));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_StartTime));
            if ((Original_Vehicle == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Vehicle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int BillID, string Place, string WorkContent, string Contact, string Remark, System.DateTime EndTime, System.DateTime StartTime, string Vehicle) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(BillID));
            if ((Place == null)) {
                throw new global::System.ArgumentNullException("Place");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Place));
            }
            if ((WorkContent == null)) {
                throw new global::System.ArgumentNullException("WorkContent");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(WorkContent));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Contact));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Remark));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(EndTime));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(StartTime));
            if ((Vehicle == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Vehicle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int BillID, 
                    string Place, 
                    string WorkContent, 
                    string Contact, 
                    string Remark, 
                    System.DateTime EndTime, 
                    System.DateTime StartTime, 
                    string Vehicle, 
                    int Original_ID, 
                    int Original_BillID, 
                    string Original_Place, 
                    string Original_WorkContent, 
                    string Original_Contact, 
                    System.DateTime Original_EndTime, 
                    System.DateTime Original_StartTime, 
                    string Original_Vehicle, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(BillID));
            if ((Place == null)) {
                throw new global::System.ArgumentNullException("Place");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Place));
            }
            if ((WorkContent == null)) {
                throw new global::System.ArgumentNullException("WorkContent");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(WorkContent));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Contact));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(EndTime));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(StartTime));
            if ((Vehicle == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Vehicle));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_BillID));
            if ((Original_Place == null)) {
                throw new global::System.ArgumentNullException("Original_Place");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Place));
            }
            if ((Original_WorkContent == null)) {
                throw new global::System.ArgumentNullException("Original_WorkContent");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_WorkContent));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Contact));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_EndTime));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_StartTime));
            if ((Original_Vehicle == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Vehicle));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int BillID, 
                    string Place, 
                    string WorkContent, 
                    string Contact, 
                    string Remark, 
                    System.DateTime EndTime, 
                    System.DateTime StartTime, 
                    string Vehicle, 
                    int Original_ID, 
                    int Original_BillID, 
                    string Original_Place, 
                    string Original_WorkContent, 
                    string Original_Contact, 
                    System.DateTime Original_EndTime, 
                    System.DateTime Original_StartTime, 
                    string Original_Vehicle) {
            return this.Update(BillID, Place, WorkContent, Contact, Remark, EndTime, StartTime, Vehicle, Original_ID, Original_BillID, Original_Place, Original_WorkContent, Original_Contact, Original_EndTime, Original_StartTime, Original_Vehicle, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_PersonnelArchiveTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_PersonnelArchiveTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_PersonnelArchive";
            tableMapping.ColumnMappings.Add("WorkID", "WorkID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("WorkPost", "WorkPost");
            tableMapping.ColumnMappings.Add("JobTitleID", "JobTitleID");
            tableMapping.ColumnMappings.Add("Birthday", "Birthday");
            tableMapping.ColumnMappings.Add("Nationality", "Nationality");
            tableMapping.ColumnMappings.Add("Race", "Race");
            tableMapping.ColumnMappings.Add("Birthplace", "Birthplace");
            tableMapping.ColumnMappings.Add("Party", "Party");
            tableMapping.ColumnMappings.Add("ID_Card", "ID_Card");
            tableMapping.ColumnMappings.Add("College", "College");
            tableMapping.ColumnMappings.Add("EducatedDegree", "EducatedDegree");
            tableMapping.ColumnMappings.Add("EducatedMajor", "EducatedMajor");
            tableMapping.ColumnMappings.Add("FamilyAddress", "FamilyAddress");
            tableMapping.ColumnMappings.Add("PostCode", "PostCode");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("MobilePhone", "MobilePhone");
            tableMapping.ColumnMappings.Add("Bank", "Bank");
            tableMapping.ColumnMappings.Add("BankAccount", "BankAccount");
            tableMapping.ColumnMappings.Add("SocietySecurityNumber", "SocietySecurityNumber");
            tableMapping.ColumnMappings.Add("QQ", "QQ");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Hobby", "Hobby");
            tableMapping.ColumnMappings.Add("Speciality", "Speciality");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("ResumeID", "ResumeID");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            tableMapping.ColumnMappings.Add("Annex", "Annex");
            tableMapping.ColumnMappings.Add("AnnexName", "AnnexName");
            tableMapping.ColumnMappings.Add("ChangePostAmount", "ChangePostAmount");
            tableMapping.ColumnMappings.Add("TrainingAmount", "TrainingAmount");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Recorder", "Recorder");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            tableMapping.ColumnMappings.Add("ChangeAmount", "ChangeAmount");
            tableMapping.ColumnMappings.Add("PersonnelStatus", "PersonnelStatus");
            tableMapping.ColumnMappings.Add("PY", "PY");
            tableMapping.ColumnMappings.Add("WB", "WB");
            tableMapping.ColumnMappings.Add("JoinDate", "JoinDate");
            tableMapping.ColumnMappings.Add("BecomeRegularEmployeeDate", "BecomeRegularEmployeeDate");
            tableMapping.ColumnMappings.Add("TakeJobDate", "TakeJobDate");
            tableMapping.ColumnMappings.Add("JobNature", "JobNature");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("GraduationYear", "GraduationYear");
            tableMapping.ColumnMappings.Add("LengthOfSchooling", "LengthOfSchooling");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [HR_PersonnelArchive] WHERE (([WorkID] = @Original_WorkID) AND ([Name" +
                "] = @Original_Name) AND ([Dept] = @Original_Dept) AND ([WorkPost] = @Original_Wo" +
                "rkPost) AND ([JobTitleID] = @Original_JobTitleID) AND ([Birthday] = @Original_Bi" +
                "rthday) AND ([Nationality] = @Original_Nationality) AND ([Race] = @Original_Race" +
                ") AND ([Birthplace] = @Original_Birthplace) AND ([Party] = @Original_Party) AND " +
                "([ID_Card] = @Original_ID_Card) AND ([College] = @Original_College) AND ([Educat" +
                "edDegree] = @Original_EducatedDegree) AND ([EducatedMajor] = @Original_EducatedM" +
                "ajor) AND ([FamilyAddress] = @Original_FamilyAddress) AND ((@IsNull_PostCode = 1" +
                " AND [PostCode] IS NULL) OR ([PostCode] = @Original_PostCode)) AND ([Phone] = @O" +
                "riginal_Phone) AND ([MobilePhone] = @Original_MobilePhone) AND ([Bank] = @Origin" +
                "al_Bank) AND ([BankAccount] = @Original_BankAccount) AND ([SocietySecurityNumber" +
                "] = @Original_SocietySecurityNumber) AND ([QQ] = @Original_QQ) AND ([Email] = @O" +
                "riginal_Email) AND ([Hobby] = @Original_Hobby) AND ([Speciality] = @Original_Spe" +
                "ciality) AND ([Sex] = @Original_Sex) AND ((@IsNull_ResumeID = 1 AND [ResumeID] I" +
                "S NULL) OR ([ResumeID] = @Original_ResumeID)) AND ([ChangePostAmount] = @Origina" +
                "l_ChangePostAmount) AND ([TrainingAmount] = @Original_TrainingAmount) AND ([Reco" +
                "rder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime) AND ([Chan" +
                "geAmount] = @Original_ChangeAmount) AND ([PersonnelStatus] = @Original_Personnel" +
                "Status) AND ([PY] = @Original_PY) AND ([WB] = @Original_WB) AND ((@IsNull_Become" +
                "RegularEmployeeDate = 1 AND [BecomeRegularEmployeeDate] IS NULL) OR ([BecomeRegu" +
                "larEmployeeDate] = @Original_BecomeRegularEmployeeDate)) AND ((@IsNull_Graduatio" +
                "nYear = 1 AND [GraduationYear] IS NULL) OR ([GraduationYear] = @Original_Graduat" +
                "ionYear)) AND ([JobNature] = @Original_JobNature) AND ((@IsNull_JoinDate = 1 AND" +
                " [JoinDate] IS NULL) OR ([JoinDate] = @Original_JoinDate)) AND ((@IsNull_LengthO" +
                "fSchooling = 1 AND [LengthOfSchooling] IS NULL) OR ([LengthOfSchooling] = @Origi" +
                "nal_LengthOfSchooling)) AND ([MaritalStatus] = @Original_MaritalStatus) AND ((@I" +
                "sNull_TakeJobDate = 1 AND [TakeJobDate] IS NULL) OR ([TakeJobDate] = @Original_T" +
                "akeJobDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobTitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PostCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonnelStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JoinDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LengthOfSchooling", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TakeJobDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [HR_PersonnelArchive] ([WorkID], [Name], [Dept], [WorkPost], [JobTitl" +
                "eID], [Birthday], [Nationality], [Race], [Birthplace], [Party], [ID_Card], [Coll" +
                "ege], [EducatedDegree], [EducatedMajor], [FamilyAddress], [PostCode], [Phone], [" +
                "MobilePhone], [Bank], [BankAccount], [SocietySecurityNumber], [QQ], [Email], [Ho" +
                "bby], [Speciality], [Sex], [ResumeID], [Photo], [Annex], [AnnexName], [ChangePos" +
                "tAmount], [TrainingAmount], [Remark], [Recorder], [RecordTime], [ChangeAmount], " +
                "[PersonnelStatus], [PY], [WB], [BecomeRegularEmployeeDate], [GraduationYear], [J" +
                "obNature], [JoinDate], [LengthOfSchooling], [MaritalStatus], [TakeJobDate]) VALU" +
                "ES (@WorkID, @Name, @Dept, @WorkPost, @JobTitleID, @Birthday, @Nationality, @Rac" +
                "e, @Birthplace, @Party, @ID_Card, @College, @EducatedDegree, @EducatedMajor, @Fa" +
                "milyAddress, @PostCode, @Phone, @MobilePhone, @Bank, @BankAccount, @SocietySecur" +
                "ityNumber, @QQ, @Email, @Hobby, @Speciality, @Sex, @ResumeID, @Photo, @Annex, @A" +
                "nnexName, @ChangePostAmount, @TrainingAmount, @Remark, @Recorder, @RecordTime, @" +
                "ChangeAmount, @PersonnelStatus, @PY, @WB, @BecomeRegularEmployeeDate, @Graduatio" +
                "nYear, @JobNature, @JoinDate, @LengthOfSchooling, @MaritalStatus, @TakeJobDate);" +
                "\r\nSELECT WorkID, Name, Dept, WorkPost, JobTitleID, Birthday, Nationality, Race, " +
                "Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddres" +
                "s, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ, E" +
                "mail, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmoun" +
                "t, TrainingAmount, Remark, Recorder, RecordTime, ChangeAmount, PersonnelStatus, " +
                "PY, WB, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOf" +
                "Schooling, MaritalStatus, TakeJobDate FROM HR_PersonnelArchive WHERE (WorkID = @" +
                "WorkID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnexName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnexName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PersonnelStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [HR_PersonnelArchive] SET [WorkID] = @WorkID, [Name] = @Name, [Dept] = @De" +
                "pt, [WorkPost] = @WorkPost, [JobTitleID] = @JobTitleID, [Birthday] = @Birthday, " +
                "[Nationality] = @Nationality, [Race] = @Race, [Birthplace] = @Birthplace, [Party" +
                "] = @Party, [ID_Card] = @ID_Card, [College] = @College, [EducatedDegree] = @Educ" +
                "atedDegree, [EducatedMajor] = @EducatedMajor, [FamilyAddress] = @FamilyAddress, " +
                "[PostCode] = @PostCode, [Phone] = @Phone, [MobilePhone] = @MobilePhone, [Bank] =" +
                " @Bank, [BankAccount] = @BankAccount, [SocietySecurityNumber] = @SocietySecurity" +
                "Number, [QQ] = @QQ, [Email] = @Email, [Hobby] = @Hobby, [Speciality] = @Speciali" +
                "ty, [Sex] = @Sex, [ResumeID] = @ResumeID, [Photo] = @Photo, [Annex] = @Annex, [A" +
                "nnexName] = @AnnexName, [ChangePostAmount] = @ChangePostAmount, [TrainingAmount]" +
                " = @TrainingAmount, [Remark] = @Remark, [Recorder] = @Recorder, [RecordTime] = @" +
                "RecordTime, [ChangeAmount] = @ChangeAmount, [PersonnelStatus] = @PersonnelStatus" +
                ", [PY] = @PY, [WB] = @WB, [BecomeRegularEmployeeDate] = @BecomeRegularEmployeeDa" +
                "te, [GraduationYear] = @GraduationYear, [JobNature] = @JobNature, [JoinDate] = @" +
                "JoinDate, [LengthOfSchooling] = @LengthOfSchooling, [MaritalStatus] = @MaritalSt" +
                "atus, [TakeJobDate] = @TakeJobDate WHERE (([WorkID] = @Original_WorkID) AND ([Na" +
                "me] = @Original_Name) AND ([Dept] = @Original_Dept) AND ([WorkPost] = @Original_" +
                "WorkPost) AND ([JobTitleID] = @Original_JobTitleID) AND ([Birthday] = @Original_" +
                "Birthday) AND ([Nationality] = @Original_Nationality) AND ([Race] = @Original_Ra" +
                "ce) AND ([Birthplace] = @Original_Birthplace) AND ([Party] = @Original_Party) AN" +
                "D ([ID_Card] = @Original_ID_Card) AND ([College] = @Original_College) AND ([Educ" +
                "atedDegree] = @Original_EducatedDegree) AND ([EducatedMajor] = @Original_Educate" +
                "dMajor) AND ([FamilyAddress] = @Original_FamilyAddress) AND ((@IsNull_PostCode =" +
                " 1 AND [PostCode] IS NULL) OR ([PostCode] = @Original_PostCode)) AND ([Phone] = " +
                "@Original_Phone) AND ([MobilePhone] = @Original_MobilePhone) AND ([Bank] = @Orig" +
                "inal_Bank) AND ([BankAccount] = @Original_BankAccount) AND ([SocietySecurityNumb" +
                "er] = @Original_SocietySecurityNumber) AND ([QQ] = @Original_QQ) AND ([Email] = " +
                "@Original_Email) AND ([Hobby] = @Original_Hobby) AND ([Speciality] = @Original_S" +
                "peciality) AND ([Sex] = @Original_Sex) AND ((@IsNull_ResumeID = 1 AND [ResumeID]" +
                " IS NULL) OR ([ResumeID] = @Original_ResumeID)) AND ([ChangePostAmount] = @Origi" +
                "nal_ChangePostAmount) AND ([TrainingAmount] = @Original_TrainingAmount) AND ([Re" +
                "corder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime) AND ([Ch" +
                "angeAmount] = @Original_ChangeAmount) AND ([PersonnelStatus] = @Original_Personn" +
                "elStatus) AND ([PY] = @Original_PY) AND ([WB] = @Original_WB) AND ((@IsNull_Beco" +
                "meRegularEmployeeDate = 1 AND [BecomeRegularEmployeeDate] IS NULL) OR ([BecomeRe" +
                "gularEmployeeDate] = @Original_BecomeRegularEmployeeDate)) AND ((@IsNull_Graduat" +
                "ionYear = 1 AND [GraduationYear] IS NULL) OR ([GraduationYear] = @Original_Gradu" +
                "ationYear)) AND ([JobNature] = @Original_JobNature) AND ((@IsNull_JoinDate = 1 A" +
                "ND [JoinDate] IS NULL) OR ([JoinDate] = @Original_JoinDate)) AND ((@IsNull_Lengt" +
                "hOfSchooling = 1 AND [LengthOfSchooling] IS NULL) OR ([LengthOfSchooling] = @Ori" +
                "ginal_LengthOfSchooling)) AND ([MaritalStatus] = @Original_MaritalStatus) AND ((" +
                "@IsNull_TakeJobDate = 1 AND [TakeJobDate] IS NULL) OR ([TakeJobDate] = @Original" +
                "_TakeJobDate)));\r\nSELECT WorkID, Name, Dept, WorkPost, JobTitleID, Birthday, Nat" +
                "ionality, Race, Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMaj" +
                "or, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecur" +
                "ityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName," +
                " ChangePostAmount, TrainingAmount, Remark, Recorder, RecordTime, ChangeAmount, P" +
                "ersonnelStatus, PY, WB, BecomeRegularEmployeeDate, GraduationYear, JobNature, Jo" +
                "inDate, LengthOfSchooling, MaritalStatus, TakeJobDate FROM HR_PersonnelArchive W" +
                "HERE (WorkID = @WorkID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnexName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnexName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PersonnelStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobTitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PostCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonnelStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonnelStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JoinDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LengthOfSchooling", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TakeJobDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT WorkID, Name, Dept, WorkPost, JobTitleID, Birthday, Nationality, Race, Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmount, TrainingAmount, Remark, Recorder, RecordTime, ChangeAmount, PersonnelStatus, PY, WB, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOfSchooling, MaritalStatus, TakeJobDate FROM HR_PersonnelArchive";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_PersonnelArchiveDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_PersonnelArchiveDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_PersonnelArchiveDataTable dataTable = new DepotManagementDataSet.HR_PersonnelArchiveDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_PersonnelArchiveDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_PersonnelArchive");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    int Original_WorkPost, 
                    int Original_JobTitleID, 
                    System.DateTime Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime, 
                    int Original_ChangeAmount, 
                    int Original_PersonnelStatus, 
                    string Original_PY, 
                    string Original_WB, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    global::System.Nullable<global::System.DateTime> Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate) {
            if ((Original_WorkID == null)) {
                throw new global::System.ArgumentNullException("Original_WorkID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_WorkID));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Dept));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_WorkPost));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_JobTitleID));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Birthday));
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Party));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_FamilyAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_PostCode == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PostCode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Phone));
            }
            if ((Original_MobilePhone == null)) {
                throw new global::System.ArgumentNullException("Original_MobilePhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MobilePhone));
            }
            if ((Original_Bank == null)) {
                throw new global::System.ArgumentNullException("Original_Bank");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Bank));
            }
            if ((Original_BankAccount == null)) {
                throw new global::System.ArgumentNullException("Original_BankAccount");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_BankAccount));
            }
            if ((Original_SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SocietySecurityNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_SocietySecurityNumber));
            }
            if ((Original_QQ == null)) {
                throw new global::System.ArgumentNullException("Original_QQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_QQ));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_Email));
            }
            if ((Original_Hobby == null)) {
                throw new global::System.ArgumentNullException("Original_Hobby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Hobby));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Speciality));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Sex));
            }
            if ((Original_ResumeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_ResumeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_ChangePostAmount));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_TrainingAmount));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Recorder));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_RecordTime));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_ChangeAmount));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_PersonnelStatus));
            if ((Original_PY == null)) {
                throw new global::System.ArgumentNullException("Original_PY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_PY));
            }
            if ((Original_WB == null)) {
                throw new global::System.ArgumentNullException("Original_WB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_WB));
            }
            if ((Original_BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_GraduationYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_GraduationYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_JobNature == null)) {
                throw new global::System.ArgumentNullException("Original_JobNature");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_JobNature));
            }
            if ((Original_JoinDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((System.DateTime)(Original_JoinDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_LengthOfSchooling == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_LengthOfSchooling));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_TakeJobDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_TakeJobDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string WorkID, 
                    string Name, 
                    string Dept, 
                    int WorkPost, 
                    int JobTitleID, 
                    System.DateTime Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string Recorder, 
                    System.DateTime RecordTime, 
                    int ChangeAmount, 
                    int PersonnelStatus, 
                    string PY, 
                    string WB, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    global::System.Nullable<global::System.DateTime> JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate) {
            if ((WorkID == null)) {
                throw new global::System.ArgumentNullException("WorkID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(WorkID));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Dept));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(WorkPost));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(JobTitleID));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Birthday));
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Party));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("FamilyAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FamilyAddress));
            }
            if ((PostCode == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PostCode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Phone));
            }
            if ((MobilePhone == null)) {
                throw new global::System.ArgumentNullException("MobilePhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(MobilePhone));
            }
            if ((Bank == null)) {
                throw new global::System.ArgumentNullException("Bank");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Bank));
            }
            if ((BankAccount == null)) {
                throw new global::System.ArgumentNullException("BankAccount");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BankAccount));
            }
            if ((SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("SocietySecurityNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(SocietySecurityNumber));
            }
            if ((QQ == null)) {
                throw new global::System.ArgumentNullException("QQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(QQ));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Email));
            }
            if ((Hobby == null)) {
                throw new global::System.ArgumentNullException("Hobby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Hobby));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Speciality));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Sex));
            }
            if ((ResumeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(ResumeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Photo == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte[])(Annex));
            }
            if ((AnnexName == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(AnnexName));
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(ChangePostAmount));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(TrainingAmount));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Remark));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Recorder));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(RecordTime));
            this.Adapter.InsertCommand.Parameters[35].Value = ((int)(ChangeAmount));
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(PersonnelStatus));
            if ((PY == null)) {
                throw new global::System.ArgumentNullException("PY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(PY));
            }
            if ((WB == null)) {
                throw new global::System.ArgumentNullException("WB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(WB));
            }
            if ((BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((GraduationYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(GraduationYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((JobNature == null)) {
                throw new global::System.ArgumentNullException("JobNature");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(JobNature));
            }
            if ((JoinDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(JoinDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LengthOfSchooling == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(LengthOfSchooling));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(MaritalStatus));
            }
            if ((TakeJobDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(TakeJobDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string WorkID, 
                    string Name, 
                    string Dept, 
                    int WorkPost, 
                    int JobTitleID, 
                    System.DateTime Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string Recorder, 
                    System.DateTime RecordTime, 
                    int ChangeAmount, 
                    int PersonnelStatus, 
                    string PY, 
                    string WB, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    global::System.Nullable<global::System.DateTime> JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate, 
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    int Original_WorkPost, 
                    int Original_JobTitleID, 
                    System.DateTime Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime, 
                    int Original_ChangeAmount, 
                    int Original_PersonnelStatus, 
                    string Original_PY, 
                    string Original_WB, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    global::System.Nullable<global::System.DateTime> Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate) {
            if ((WorkID == null)) {
                throw new global::System.ArgumentNullException("WorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(WorkID));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Dept));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(WorkPost));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(JobTitleID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Birthday));
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Party));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("FamilyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FamilyAddress));
            }
            if ((PostCode == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PostCode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Phone));
            }
            if ((MobilePhone == null)) {
                throw new global::System.ArgumentNullException("MobilePhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(MobilePhone));
            }
            if ((Bank == null)) {
                throw new global::System.ArgumentNullException("Bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Bank));
            }
            if ((BankAccount == null)) {
                throw new global::System.ArgumentNullException("BankAccount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(BankAccount));
            }
            if ((SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("SocietySecurityNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(SocietySecurityNumber));
            }
            if ((QQ == null)) {
                throw new global::System.ArgumentNullException("QQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(QQ));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Email));
            }
            if ((Hobby == null)) {
                throw new global::System.ArgumentNullException("Hobby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Hobby));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Speciality));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Sex));
            }
            if ((ResumeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ResumeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Photo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte[])(Annex));
            }
            if ((AnnexName == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(AnnexName));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(ChangePostAmount));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(TrainingAmount));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Remark));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(RecordTime));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ChangeAmount));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(PersonnelStatus));
            if ((PY == null)) {
                throw new global::System.ArgumentNullException("PY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(PY));
            }
            if ((WB == null)) {
                throw new global::System.ArgumentNullException("WB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(WB));
            }
            if ((BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((GraduationYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(GraduationYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((JobNature == null)) {
                throw new global::System.ArgumentNullException("JobNature");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(JobNature));
            }
            if ((JoinDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(JoinDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LengthOfSchooling == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(LengthOfSchooling));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(MaritalStatus));
            }
            if ((TakeJobDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(TakeJobDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_WorkID == null)) {
                throw new global::System.ArgumentNullException("Original_WorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_WorkID));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Name));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Dept));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_WorkPost));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_JobTitleID));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_Birthday));
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Party));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_FamilyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_PostCode == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_PostCode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_Phone));
            }
            if ((Original_MobilePhone == null)) {
                throw new global::System.ArgumentNullException("Original_MobilePhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_MobilePhone));
            }
            if ((Original_Bank == null)) {
                throw new global::System.ArgumentNullException("Original_Bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Bank));
            }
            if ((Original_BankAccount == null)) {
                throw new global::System.ArgumentNullException("Original_BankAccount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_BankAccount));
            }
            if ((Original_SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SocietySecurityNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SocietySecurityNumber));
            }
            if ((Original_QQ == null)) {
                throw new global::System.ArgumentNullException("Original_QQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_QQ));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Email));
            }
            if ((Original_Hobby == null)) {
                throw new global::System.ArgumentNullException("Original_Hobby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_Hobby));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Speciality));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_Sex));
            }
            if ((Original_ResumeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_ResumeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_ChangePostAmount));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_TrainingAmount));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(Original_RecordTime));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_ChangeAmount));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_PersonnelStatus));
            if ((Original_PY == null)) {
                throw new global::System.ArgumentNullException("Original_PY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_PY));
            }
            if ((Original_WB == null)) {
                throw new global::System.ArgumentNullException("Original_WB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_WB));
            }
            if ((Original_BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_GraduationYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_GraduationYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_JobNature == null)) {
                throw new global::System.ArgumentNullException("Original_JobNature");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_JobNature));
            }
            if ((Original_JoinDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_JoinDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_LengthOfSchooling == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_LengthOfSchooling));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_TakeJobDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((System.DateTime)(Original_TakeJobDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string Dept, 
                    int WorkPost, 
                    int JobTitleID, 
                    System.DateTime Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string Recorder, 
                    System.DateTime RecordTime, 
                    int ChangeAmount, 
                    int PersonnelStatus, 
                    string PY, 
                    string WB, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    global::System.Nullable<global::System.DateTime> JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate, 
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    int Original_WorkPost, 
                    int Original_JobTitleID, 
                    System.DateTime Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime, 
                    int Original_ChangeAmount, 
                    int Original_PersonnelStatus, 
                    string Original_PY, 
                    string Original_WB, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    global::System.Nullable<global::System.DateTime> Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate) {
            return this.Update(Original_WorkID, Name, Dept, WorkPost, JobTitleID, Birthday, Nationality, Race, Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmount, TrainingAmount, Remark, Recorder, RecordTime, ChangeAmount, PersonnelStatus, PY, WB, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOfSchooling, MaritalStatus, TakeJobDate, Original_WorkID, Original_Name, Original_Dept, Original_WorkPost, Original_JobTitleID, Original_Birthday, Original_Nationality, Original_Race, Original_Birthplace, Original_Party, Original_ID_Card, Original_College, Original_EducatedDegree, Original_EducatedMajor, Original_FamilyAddress, Original_PostCode, Original_Phone, Original_MobilePhone, Original_Bank, Original_BankAccount, Original_SocietySecurityNumber, Original_QQ, Original_Email, Original_Hobby, Original_Speciality, Original_Sex, Original_ResumeID, Original_ChangePostAmount, Original_TrainingAmount, Original_Recorder, Original_RecordTime, Original_ChangeAmount, Original_PersonnelStatus, Original_PY, Original_WB, Original_BecomeRegularEmployeeDate, Original_GraduationYear, Original_JobNature, Original_JoinDate, Original_LengthOfSchooling, Original_MaritalStatus, Original_TakeJobDate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_PersonnelArchiveChangeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_PersonnelArchiveChangeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_PersonnelArchiveChange";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("WorkID", "WorkID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("DeptName", "DeptName");
            tableMapping.ColumnMappings.Add("WorkPost", "WorkPost");
            tableMapping.ColumnMappings.Add("JobTitle", "JobTitle");
            tableMapping.ColumnMappings.Add("Birthday", "Birthday");
            tableMapping.ColumnMappings.Add("Nationality", "Nationality");
            tableMapping.ColumnMappings.Add("Race", "Race");
            tableMapping.ColumnMappings.Add("Birthplace", "Birthplace");
            tableMapping.ColumnMappings.Add("Party", "Party");
            tableMapping.ColumnMappings.Add("ID_Card", "ID_Card");
            tableMapping.ColumnMappings.Add("College", "College");
            tableMapping.ColumnMappings.Add("EducatedDegree", "EducatedDegree");
            tableMapping.ColumnMappings.Add("EducatedMajor", "EducatedMajor");
            tableMapping.ColumnMappings.Add("FamilyAddress", "FamilyAddress");
            tableMapping.ColumnMappings.Add("PostCode", "PostCode");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("MobilePhone", "MobilePhone");
            tableMapping.ColumnMappings.Add("Bank", "Bank");
            tableMapping.ColumnMappings.Add("BankAccount", "BankAccount");
            tableMapping.ColumnMappings.Add("SocietySecurityNumber", "SocietySecurityNumber");
            tableMapping.ColumnMappings.Add("QQ", "QQ");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Hobby", "Hobby");
            tableMapping.ColumnMappings.Add("Speciality", "Speciality");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("ResumeID", "ResumeID");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            tableMapping.ColumnMappings.Add("Annex", "Annex");
            tableMapping.ColumnMappings.Add("AnnexName", "AnnexName");
            tableMapping.ColumnMappings.Add("ChangePostAmount", "ChangePostAmount");
            tableMapping.ColumnMappings.Add("TrainingAmount", "TrainingAmount");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("ChangerCode", "ChangerCode");
            tableMapping.ColumnMappings.Add("ChangeTime", "ChangeTime");
            tableMapping.ColumnMappings.Add("JoinDate", "JoinDate");
            tableMapping.ColumnMappings.Add("BecomeRegularEmployeeDate", "BecomeRegularEmployeeDate");
            tableMapping.ColumnMappings.Add("TakeJobDate", "TakeJobDate");
            tableMapping.ColumnMappings.Add("JobNature", "JobNature");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("GraduationYear", "GraduationYear");
            tableMapping.ColumnMappings.Add("LengthOfSchooling", "LengthOfSchooling");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [HR_PersonnelArchiveChange] WHERE (([ID] = @Original_ID) AND ([WorkID" +
                "] = @Original_WorkID) AND ([Name] = @Original_Name) AND ([Dept] = @Original_Dept" +
                ") AND ([DeptName] = @Original_DeptName) AND ([WorkPost] = @Original_WorkPost) AN" +
                "D ([JobTitle] = @Original_JobTitle) AND ((@IsNull_Birthday = 1 AND [Birthday] IS" +
                " NULL) OR ([Birthday] = @Original_Birthday)) AND ([Nationality] = @Original_Nati" +
                "onality) AND ([Race] = @Original_Race) AND ([Birthplace] = @Original_Birthplace)" +
                " AND ([Party] = @Original_Party) AND ([ID_Card] = @Original_ID_Card) AND ([Colle" +
                "ge] = @Original_College) AND ([EducatedDegree] = @Original_EducatedDegree) AND (" +
                "[EducatedMajor] = @Original_EducatedMajor) AND ([FamilyAddress] = @Original_Fami" +
                "lyAddress) AND ([PostCode] = @Original_PostCode) AND ([Phone] = @Original_Phone)" +
                " AND ([MobilePhone] = @Original_MobilePhone) AND ([Bank] = @Original_Bank) AND (" +
                "[BankAccount] = @Original_BankAccount) AND ([SocietySecurityNumber] = @Original_" +
                "SocietySecurityNumber) AND ([QQ] = @Original_QQ) AND ([Email] = @Original_Email)" +
                " AND ([Hobby] = @Original_Hobby) AND ([Speciality] = @Original_Speciality) AND (" +
                "[Sex] = @Original_Sex) AND ((@IsNull_ResumeID = 1 AND [ResumeID] IS NULL) OR ([R" +
                "esumeID] = @Original_ResumeID)) AND ([ChangePostAmount] = @Original_ChangePostAm" +
                "ount) AND ([TrainingAmount] = @Original_TrainingAmount) AND ([ChangerCode] = @Or" +
                "iginal_ChangerCode) AND ([ChangeTime] = @Original_ChangeTime) AND ((@IsNull_Beco" +
                "meRegularEmployeeDate = 1 AND [BecomeRegularEmployeeDate] IS NULL) OR ([BecomeRe" +
                "gularEmployeeDate] = @Original_BecomeRegularEmployeeDate)) AND ((@IsNull_Graduat" +
                "ionYear = 1 AND [GraduationYear] IS NULL) OR ([GraduationYear] = @Original_Gradu" +
                "ationYear)) AND ([JobNature] = @Original_JobNature) AND ([JoinDate] = @Original_" +
                "JoinDate) AND ([LengthOfSchooling] = @Original_LengthOfSchooling) AND ([MaritalS" +
                "tatus] = @Original_MaritalStatus) AND ((@IsNull_TakeJobDate = 1 AND [TakeJobDate" +
                "] IS NULL) OR ([TakeJobDate] = @Original_TakeJobDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkPost", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TakeJobDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [HR_PersonnelArchiveChange] ([WorkID], [Name], [Dept], [DeptName], [W" +
                "orkPost], [JobTitle], [Birthday], [Nationality], [Race], [Birthplace], [Party], " +
                "[ID_Card], [College], [EducatedDegree], [EducatedMajor], [FamilyAddress], [PostC" +
                "ode], [Phone], [MobilePhone], [Bank], [BankAccount], [SocietySecurityNumber], [Q" +
                "Q], [Email], [Hobby], [Speciality], [Sex], [ResumeID], [Photo], [Annex], [AnnexN" +
                "ame], [ChangePostAmount], [TrainingAmount], [Remark], [ChangerCode], [ChangeTime" +
                "], [BecomeRegularEmployeeDate], [GraduationYear], [JobNature], [JoinDate], [Leng" +
                "thOfSchooling], [MaritalStatus], [TakeJobDate]) VALUES (@WorkID, @Name, @Dept, @" +
                "DeptName, @WorkPost, @JobTitle, @Birthday, @Nationality, @Race, @Birthplace, @Pa" +
                "rty, @ID_Card, @College, @EducatedDegree, @EducatedMajor, @FamilyAddress, @PostC" +
                "ode, @Phone, @MobilePhone, @Bank, @BankAccount, @SocietySecurityNumber, @QQ, @Em" +
                "ail, @Hobby, @Speciality, @Sex, @ResumeID, @Photo, @Annex, @AnnexName, @ChangePo" +
                "stAmount, @TrainingAmount, @Remark, @ChangerCode, @ChangeTime, @BecomeRegularEmp" +
                "loyeeDate, @GraduationYear, @JobNature, @JoinDate, @LengthOfSchooling, @MaritalS" +
                "tatus, @TakeJobDate);\r\nSELECT ID, WorkID, Name, Dept, DeptName, WorkPost, JobTit" +
                "le, Birthday, Nationality, Race, Birthplace, Party, ID_Card, College, EducatedDe" +
                "gree, EducatedMajor, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAcco" +
                "unt, SocietySecurityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, " +
                "Annex, AnnexName, ChangePostAmount, TrainingAmount, Remark, ChangerCode, ChangeT" +
                "ime, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOfSch" +
                "ooling, MaritalStatus, TakeJobDate FROM HR_PersonnelArchiveChange WHERE (ID = SC" +
                "OPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPost", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnexName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnexName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [HR_PersonnelArchiveChange] SET [WorkID] = @WorkID, [Name] = @Name, [Dept]" +
                " = @Dept, [DeptName] = @DeptName, [WorkPost] = @WorkPost, [JobTitle] = @JobTitle" +
                ", [Birthday] = @Birthday, [Nationality] = @Nationality, [Race] = @Race, [Birthpl" +
                "ace] = @Birthplace, [Party] = @Party, [ID_Card] = @ID_Card, [College] = @College" +
                ", [EducatedDegree] = @EducatedDegree, [EducatedMajor] = @EducatedMajor, [FamilyA" +
                "ddress] = @FamilyAddress, [PostCode] = @PostCode, [Phone] = @Phone, [MobilePhone" +
                "] = @MobilePhone, [Bank] = @Bank, [BankAccount] = @BankAccount, [SocietySecurity" +
                "Number] = @SocietySecurityNumber, [QQ] = @QQ, [Email] = @Email, [Hobby] = @Hobby" +
                ", [Speciality] = @Speciality, [Sex] = @Sex, [ResumeID] = @ResumeID, [Photo] = @P" +
                "hoto, [Annex] = @Annex, [AnnexName] = @AnnexName, [ChangePostAmount] = @ChangePo" +
                "stAmount, [TrainingAmount] = @TrainingAmount, [Remark] = @Remark, [ChangerCode] " +
                "= @ChangerCode, [ChangeTime] = @ChangeTime, [BecomeRegularEmployeeDate] = @Becom" +
                "eRegularEmployeeDate, [GraduationYear] = @GraduationYear, [JobNature] = @JobNatu" +
                "re, [JoinDate] = @JoinDate, [LengthOfSchooling] = @LengthOfSchooling, [MaritalSt" +
                "atus] = @MaritalStatus, [TakeJobDate] = @TakeJobDate WHERE (([ID] = @Original_ID" +
                ") AND ([WorkID] = @Original_WorkID) AND ([Name] = @Original_Name) AND ([Dept] = " +
                "@Original_Dept) AND ([DeptName] = @Original_DeptName) AND ([WorkPost] = @Origina" +
                "l_WorkPost) AND ([JobTitle] = @Original_JobTitle) AND ((@IsNull_Birthday = 1 AND" +
                " [Birthday] IS NULL) OR ([Birthday] = @Original_Birthday)) AND ([Nationality] = " +
                "@Original_Nationality) AND ([Race] = @Original_Race) AND ([Birthplace] = @Origin" +
                "al_Birthplace) AND ([Party] = @Original_Party) AND ([ID_Card] = @Original_ID_Car" +
                "d) AND ([College] = @Original_College) AND ([EducatedDegree] = @Original_Educate" +
                "dDegree) AND ([EducatedMajor] = @Original_EducatedMajor) AND ([FamilyAddress] = " +
                "@Original_FamilyAddress) AND ([PostCode] = @Original_PostCode) AND ([Phone] = @O" +
                "riginal_Phone) AND ([MobilePhone] = @Original_MobilePhone) AND ([Bank] = @Origin" +
                "al_Bank) AND ([BankAccount] = @Original_BankAccount) AND ([SocietySecurityNumber" +
                "] = @Original_SocietySecurityNumber) AND ([QQ] = @Original_QQ) AND ([Email] = @O" +
                "riginal_Email) AND ([Hobby] = @Original_Hobby) AND ([Speciality] = @Original_Spe" +
                "ciality) AND ([Sex] = @Original_Sex) AND ((@IsNull_ResumeID = 1 AND [ResumeID] I" +
                "S NULL) OR ([ResumeID] = @Original_ResumeID)) AND ([ChangePostAmount] = @Origina" +
                "l_ChangePostAmount) AND ([TrainingAmount] = @Original_TrainingAmount) AND ([Chan" +
                "gerCode] = @Original_ChangerCode) AND ([ChangeTime] = @Original_ChangeTime) AND " +
                "((@IsNull_BecomeRegularEmployeeDate = 1 AND [BecomeRegularEmployeeDate] IS NULL)" +
                " OR ([BecomeRegularEmployeeDate] = @Original_BecomeRegularEmployeeDate)) AND ((@" +
                "IsNull_GraduationYear = 1 AND [GraduationYear] IS NULL) OR ([GraduationYear] = @" +
                "Original_GraduationYear)) AND ([JobNature] = @Original_JobNature) AND ([JoinDate" +
                "] = @Original_JoinDate) AND ([LengthOfSchooling] = @Original_LengthOfSchooling) " +
                "AND ([MaritalStatus] = @Original_MaritalStatus) AND ((@IsNull_TakeJobDate = 1 AN" +
                "D [TakeJobDate] IS NULL) OR ([TakeJobDate] = @Original_TakeJobDate)));\r\nSELECT I" +
                "D, WorkID, Name, Dept, DeptName, WorkPost, JobTitle, Birthday, Nationality, Race" +
                ", Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddr" +
                "ess, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ," +
                " Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmo" +
                "unt, TrainingAmount, Remark, ChangerCode, ChangeTime, BecomeRegularEmployeeDate," +
                " GraduationYear, JobNature, JoinDate, LengthOfSchooling, MaritalStatus, TakeJobD" +
                "ate FROM HR_PersonnelArchiveChange WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPost", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnexName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnexName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkPost", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MobilePhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobilePhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bank", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SocietySecurityNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SocietySecurityNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hobby", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hobby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangePostAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangePostAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainingAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BecomeRegularEmployeeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BecomeRegularEmployeeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GraduationYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GraduationYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LengthOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LengthOfSchooling", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TakeJobDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TakeJobDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TakeJobDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, WorkID, Name, Dept, DeptName, WorkPost, JobTitle, Birthday, Nationality, Race, Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmount, TrainingAmount, Remark, ChangerCode, ChangeTime, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOfSchooling, MaritalStatus, TakeJobDate FROM HR_PersonnelArchiveChange";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_PersonnelArchiveChangeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_PersonnelArchiveChangeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_PersonnelArchiveChangeDataTable dataTable = new DepotManagementDataSet.HR_PersonnelArchiveChangeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_PersonnelArchiveChangeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_PersonnelArchiveChange");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    string Original_DeptName, 
                    string Original_WorkPost, 
                    string Original_JobTitle, 
                    global::System.Nullable<global::System.DateTime> Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_ChangerCode, 
                    System.DateTime Original_ChangeTime, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    System.DateTime Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_WorkID == null)) {
                throw new global::System.ArgumentNullException("Original_WorkID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_WorkID));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Dept));
            }
            if ((Original_DeptName == null)) {
                throw new global::System.ArgumentNullException("Original_DeptName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DeptName));
            }
            if ((Original_WorkPost == null)) {
                throw new global::System.ArgumentNullException("Original_WorkPost");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_WorkPost));
            }
            if ((Original_JobTitle == null)) {
                throw new global::System.ArgumentNullException("Original_JobTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_JobTitle));
            }
            if ((Original_Birthday.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Birthday.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Party));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_FamilyAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_PostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PostCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_PostCode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Phone));
            }
            if ((Original_MobilePhone == null)) {
                throw new global::System.ArgumentNullException("Original_MobilePhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MobilePhone));
            }
            if ((Original_Bank == null)) {
                throw new global::System.ArgumentNullException("Original_Bank");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Bank));
            }
            if ((Original_BankAccount == null)) {
                throw new global::System.ArgumentNullException("Original_BankAccount");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BankAccount));
            }
            if ((Original_SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SocietySecurityNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SocietySecurityNumber));
            }
            if ((Original_QQ == null)) {
                throw new global::System.ArgumentNullException("Original_QQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_QQ));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Email));
            }
            if ((Original_Hobby == null)) {
                throw new global::System.ArgumentNullException("Original_Hobby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Hobby));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_Speciality));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Sex));
            }
            if ((Original_ResumeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_ResumeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_ChangePostAmount));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_TrainingAmount));
            if ((Original_ChangerCode == null)) {
                throw new global::System.ArgumentNullException("Original_ChangerCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_ChangerCode));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_ChangeTime));
            if ((Original_BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_GraduationYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_GraduationYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_JobNature == null)) {
                throw new global::System.ArgumentNullException("Original_JobNature");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_JobNature));
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((System.DateTime)(Original_JoinDate));
            if ((Original_LengthOfSchooling == null)) {
                throw new global::System.ArgumentNullException("Original_LengthOfSchooling");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_LengthOfSchooling));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_TakeJobDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_TakeJobDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string WorkID, 
                    string Name, 
                    string Dept, 
                    string DeptName, 
                    string WorkPost, 
                    string JobTitle, 
                    global::System.Nullable<global::System.DateTime> Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string ChangerCode, 
                    System.DateTime ChangeTime, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    System.DateTime JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate) {
            if ((WorkID == null)) {
                throw new global::System.ArgumentNullException("WorkID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(WorkID));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Dept));
            }
            if ((DeptName == null)) {
                throw new global::System.ArgumentNullException("DeptName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DeptName));
            }
            if ((WorkPost == null)) {
                throw new global::System.ArgumentNullException("WorkPost");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(WorkPost));
            }
            if ((JobTitle == null)) {
                throw new global::System.ArgumentNullException("JobTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(JobTitle));
            }
            if ((Birthday.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Birthday.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Party));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("FamilyAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(FamilyAddress));
            }
            if ((PostCode == null)) {
                throw new global::System.ArgumentNullException("PostCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PostCode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Phone));
            }
            if ((MobilePhone == null)) {
                throw new global::System.ArgumentNullException("MobilePhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(MobilePhone));
            }
            if ((Bank == null)) {
                throw new global::System.ArgumentNullException("Bank");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Bank));
            }
            if ((BankAccount == null)) {
                throw new global::System.ArgumentNullException("BankAccount");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BankAccount));
            }
            if ((SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("SocietySecurityNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(SocietySecurityNumber));
            }
            if ((QQ == null)) {
                throw new global::System.ArgumentNullException("QQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(QQ));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Email));
            }
            if ((Hobby == null)) {
                throw new global::System.ArgumentNullException("Hobby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Hobby));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Speciality));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Sex));
            }
            if ((ResumeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(ResumeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Photo == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte[])(Annex));
            }
            if ((AnnexName == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(AnnexName));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(ChangePostAmount));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(TrainingAmount));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Remark));
            }
            if ((ChangerCode == null)) {
                throw new global::System.ArgumentNullException("ChangerCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ChangerCode));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(ChangeTime));
            if ((BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((GraduationYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(GraduationYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((JobNature == null)) {
                throw new global::System.ArgumentNullException("JobNature");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(JobNature));
            }
            this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(JoinDate));
            if ((LengthOfSchooling == null)) {
                throw new global::System.ArgumentNullException("LengthOfSchooling");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(LengthOfSchooling));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(MaritalStatus));
            }
            if ((TakeJobDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(TakeJobDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string WorkID, 
                    string Name, 
                    string Dept, 
                    string DeptName, 
                    string WorkPost, 
                    string JobTitle, 
                    global::System.Nullable<global::System.DateTime> Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string ChangerCode, 
                    System.DateTime ChangeTime, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    System.DateTime JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate, 
                    int Original_ID, 
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    string Original_DeptName, 
                    string Original_WorkPost, 
                    string Original_JobTitle, 
                    global::System.Nullable<global::System.DateTime> Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_ChangerCode, 
                    System.DateTime Original_ChangeTime, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    System.DateTime Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate, 
                    int ID) {
            if ((WorkID == null)) {
                throw new global::System.ArgumentNullException("WorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(WorkID));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Dept));
            }
            if ((DeptName == null)) {
                throw new global::System.ArgumentNullException("DeptName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DeptName));
            }
            if ((WorkPost == null)) {
                throw new global::System.ArgumentNullException("WorkPost");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(WorkPost));
            }
            if ((JobTitle == null)) {
                throw new global::System.ArgumentNullException("JobTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(JobTitle));
            }
            if ((Birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Party));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("FamilyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(FamilyAddress));
            }
            if ((PostCode == null)) {
                throw new global::System.ArgumentNullException("PostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PostCode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Phone));
            }
            if ((MobilePhone == null)) {
                throw new global::System.ArgumentNullException("MobilePhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(MobilePhone));
            }
            if ((Bank == null)) {
                throw new global::System.ArgumentNullException("Bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Bank));
            }
            if ((BankAccount == null)) {
                throw new global::System.ArgumentNullException("BankAccount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BankAccount));
            }
            if ((SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("SocietySecurityNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(SocietySecurityNumber));
            }
            if ((QQ == null)) {
                throw new global::System.ArgumentNullException("QQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(QQ));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Email));
            }
            if ((Hobby == null)) {
                throw new global::System.ArgumentNullException("Hobby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Hobby));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Speciality));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Sex));
            }
            if ((ResumeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ResumeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Photo == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte[])(Annex));
            }
            if ((AnnexName == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(AnnexName));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(ChangePostAmount));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(TrainingAmount));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Remark));
            }
            if ((ChangerCode == null)) {
                throw new global::System.ArgumentNullException("ChangerCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(ChangerCode));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(ChangeTime));
            if ((BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((GraduationYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(GraduationYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((JobNature == null)) {
                throw new global::System.ArgumentNullException("JobNature");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(JobNature));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(JoinDate));
            if ((LengthOfSchooling == null)) {
                throw new global::System.ArgumentNullException("LengthOfSchooling");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(LengthOfSchooling));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(MaritalStatus));
            }
            if ((TakeJobDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(TakeJobDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_ID));
            if ((Original_WorkID == null)) {
                throw new global::System.ArgumentNullException("Original_WorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_WorkID));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Name));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Dept));
            }
            if ((Original_DeptName == null)) {
                throw new global::System.ArgumentNullException("Original_DeptName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_DeptName));
            }
            if ((Original_WorkPost == null)) {
                throw new global::System.ArgumentNullException("Original_WorkPost");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_WorkPost));
            }
            if ((Original_JobTitle == null)) {
                throw new global::System.ArgumentNullException("Original_JobTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_JobTitle));
            }
            if ((Original_Birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_Birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Party));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_FamilyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_PostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_PostCode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Phone));
            }
            if ((Original_MobilePhone == null)) {
                throw new global::System.ArgumentNullException("Original_MobilePhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_MobilePhone));
            }
            if ((Original_Bank == null)) {
                throw new global::System.ArgumentNullException("Original_Bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_Bank));
            }
            if ((Original_BankAccount == null)) {
                throw new global::System.ArgumentNullException("Original_BankAccount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_BankAccount));
            }
            if ((Original_SocietySecurityNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SocietySecurityNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_SocietySecurityNumber));
            }
            if ((Original_QQ == null)) {
                throw new global::System.ArgumentNullException("Original_QQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_QQ));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_Email));
            }
            if ((Original_Hobby == null)) {
                throw new global::System.ArgumentNullException("Original_Hobby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Hobby));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_Speciality));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Sex));
            }
            if ((Original_ResumeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_ResumeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_ChangePostAmount));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_TrainingAmount));
            if ((Original_ChangerCode == null)) {
                throw new global::System.ArgumentNullException("Original_ChangerCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_ChangerCode));
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_ChangeTime));
            if ((Original_BecomeRegularEmployeeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_BecomeRegularEmployeeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_GraduationYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_GraduationYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_JobNature == null)) {
                throw new global::System.ArgumentNullException("Original_JobNature");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_JobNature));
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_JoinDate));
            if ((Original_LengthOfSchooling == null)) {
                throw new global::System.ArgumentNullException("Original_LengthOfSchooling");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_LengthOfSchooling));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_TakeJobDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_TakeJobDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string WorkID, 
                    string Name, 
                    string Dept, 
                    string DeptName, 
                    string WorkPost, 
                    string JobTitle, 
                    global::System.Nullable<global::System.DateTime> Birthday, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string PostCode, 
                    string Phone, 
                    string MobilePhone, 
                    string Bank, 
                    string BankAccount, 
                    string SocietySecurityNumber, 
                    string QQ, 
                    string Email, 
                    string Hobby, 
                    string Speciality, 
                    string Sex, 
                    global::System.Nullable<int> ResumeID, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string AnnexName, 
                    int ChangePostAmount, 
                    int TrainingAmount, 
                    string Remark, 
                    string ChangerCode, 
                    System.DateTime ChangeTime, 
                    global::System.Nullable<global::System.DateTime> BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> GraduationYear, 
                    string JobNature, 
                    System.DateTime JoinDate, 
                    string LengthOfSchooling, 
                    string MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> TakeJobDate, 
                    int Original_ID, 
                    string Original_WorkID, 
                    string Original_Name, 
                    string Original_Dept, 
                    string Original_DeptName, 
                    string Original_WorkPost, 
                    string Original_JobTitle, 
                    global::System.Nullable<global::System.DateTime> Original_Birthday, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_PostCode, 
                    string Original_Phone, 
                    string Original_MobilePhone, 
                    string Original_Bank, 
                    string Original_BankAccount, 
                    string Original_SocietySecurityNumber, 
                    string Original_QQ, 
                    string Original_Email, 
                    string Original_Hobby, 
                    string Original_Speciality, 
                    string Original_Sex, 
                    global::System.Nullable<int> Original_ResumeID, 
                    int Original_ChangePostAmount, 
                    int Original_TrainingAmount, 
                    string Original_ChangerCode, 
                    System.DateTime Original_ChangeTime, 
                    global::System.Nullable<global::System.DateTime> Original_BecomeRegularEmployeeDate, 
                    global::System.Nullable<int> Original_GraduationYear, 
                    string Original_JobNature, 
                    System.DateTime Original_JoinDate, 
                    string Original_LengthOfSchooling, 
                    string Original_MaritalStatus, 
                    global::System.Nullable<global::System.DateTime> Original_TakeJobDate) {
            return this.Update(WorkID, Name, Dept, DeptName, WorkPost, JobTitle, Birthday, Nationality, Race, Birthplace, Party, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, PostCode, Phone, MobilePhone, Bank, BankAccount, SocietySecurityNumber, QQ, Email, Hobby, Speciality, Sex, ResumeID, Photo, Annex, AnnexName, ChangePostAmount, TrainingAmount, Remark, ChangerCode, ChangeTime, BecomeRegularEmployeeDate, GraduationYear, JobNature, JoinDate, LengthOfSchooling, MaritalStatus, TakeJobDate, Original_ID, Original_WorkID, Original_Name, Original_Dept, Original_DeptName, Original_WorkPost, Original_JobTitle, Original_Birthday, Original_Nationality, Original_Race, Original_Birthplace, Original_Party, Original_ID_Card, Original_College, Original_EducatedDegree, Original_EducatedMajor, Original_FamilyAddress, Original_PostCode, Original_Phone, Original_MobilePhone, Original_Bank, Original_BankAccount, Original_SocietySecurityNumber, Original_QQ, Original_Email, Original_Hobby, Original_Speciality, Original_Sex, Original_ResumeID, Original_ChangePostAmount, Original_TrainingAmount, Original_ChangerCode, Original_ChangeTime, Original_BecomeRegularEmployeeDate, Original_GraduationYear, Original_JobNature, Original_JoinDate, Original_LengthOfSchooling, Original_MaritalStatus, Original_TakeJobDate, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_PersonnelStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_PersonnelStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_PersonnelStatus";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("Recorder", "Recorder");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HR_PersonnelStatus] WHERE (([ID] = @Original_ID) AND ([Status]" +
                " = @Original_Status) AND ([Recorder] = @Original_Recorder) AND ([RecordTime] = @" +
                "Original_RecordTime))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[HR_PersonnelStatus] ([Status], [Recorder], [RecordTime]) VALUE" +
                "S (@Status, @Recorder, @RecordTime);\r\nSELECT ID, Status, Recorder, RecordTime FR" +
                "OM HR_PersonnelStatus WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_PersonnelStatus] SET [Status] = @Status, [Recorder] = @Recorder, [RecordTime] = @RecordTime WHERE (([ID] = @Original_ID) AND ([Status] = @Original_Status) AND ([Recorder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime));
SELECT ID, Status, Recorder, RecordTime FROM HR_PersonnelStatus WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Status, Recorder, RecordTime FROM dbo.HR_PersonnelStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_PersonnelStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_PersonnelStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_PersonnelStatusDataTable dataTable = new DepotManagementDataSet.HR_PersonnelStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_PersonnelStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_PersonnelStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Status, string Original_Recorder, System.DateTime Original_RecordTime) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Status));
            }
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Recorder));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Status, string Recorder, System.DateTime RecordTime) {
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Status));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Recorder));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Status, string Recorder, System.DateTime RecordTime, int Original_ID, string Original_Status, string Original_Recorder, System.DateTime Original_RecordTime, int ID) {
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Status));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(RecordTime));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Status));
            }
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_RecordTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Status, string Recorder, System.DateTime RecordTime, int Original_ID, string Original_Status, string Original_Recorder, System.DateTime Original_RecordTime) {
            return this.Update(Status, Recorder, RecordTime, Original_ID, Original_Status, Original_Recorder, Original_RecordTime, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_ResumeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_ResumeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_Resume";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("RecruitmentType", "RecruitmentType");
            tableMapping.ColumnMappings.Add("ResumeStatusID", "ResumeStatusID");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Birthday", "Birthday");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Height", "Height");
            tableMapping.ColumnMappings.Add("Nationality", "Nationality");
            tableMapping.ColumnMappings.Add("Race", "Race");
            tableMapping.ColumnMappings.Add("Birthplace", "Birthplace");
            tableMapping.ColumnMappings.Add("Party", "Party");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("ID_Card", "ID_Card");
            tableMapping.ColumnMappings.Add("College", "College");
            tableMapping.ColumnMappings.Add("EducatedDegree", "EducatedDegree");
            tableMapping.ColumnMappings.Add("EducatedMajor", "EducatedMajor");
            tableMapping.ColumnMappings.Add("FamilyAddress", "FamilyAddress");
            tableMapping.ColumnMappings.Add("Postcode", "Postcode");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("EmergencyPhone", "EmergencyPhone");
            tableMapping.ColumnMappings.Add("Speciality", "Speciality");
            tableMapping.ColumnMappings.Add("EnglishLevel", "EnglishLevel");
            tableMapping.ColumnMappings.Add("ComputerLevel", "ComputerLevel");
            tableMapping.ColumnMappings.Add("ExistThirdPartyRelation", "ExistThirdPartyRelation");
            tableMapping.ColumnMappings.Add("ThirdPartyRelation", "ThirdPartyRelation");
            tableMapping.ColumnMappings.Add("WorkingTenure", "WorkingTenure");
            tableMapping.ColumnMappings.Add("DesiredSalary", "DesiredSalary");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            tableMapping.ColumnMappings.Add("Annex", "Annex");
            tableMapping.ColumnMappings.Add("PathName", "PathName");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("EducatedHistory", "EducatedHistory");
            tableMapping.ColumnMappings.Add("WorkHistory", "WorkHistory");
            tableMapping.ColumnMappings.Add("FamilyMember", "FamilyMember");
            tableMapping.ColumnMappings.Add("Recorder", "Recorder");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[HR_Resume] WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([RecruitmentType] = @Original_RecruitmentType) AND ([ResumeStatusID] = @Original_ResumeStatusID) AND ([Sex] = @Original_Sex) AND ([Birthday] = @Original_Birthday) AND ([Age] = @Original_Age) AND ([Height] = @Original_Height) AND ([Nationality] = @Original_Nationality) AND ([Race] = @Original_Race) AND ([Birthplace] = @Original_Birthplace) AND ([Party] = @Original_Party) AND ([MaritalStatus] = @Original_MaritalStatus) AND ([ID_Card] = @Original_ID_Card) AND ([College] = @Original_College) AND ([EducatedDegree] = @Original_EducatedDegree) AND ([EducatedMajor] = @Original_EducatedMajor) AND ((@IsNull_FamilyAddress = 1 AND [FamilyAddress] IS NULL) OR ([FamilyAddress] = @Original_FamilyAddress)) AND ([Postcode] = @Original_Postcode) AND ([Phone] = @Original_Phone) AND ([EmergencyPhone] = @Original_EmergencyPhone) AND ([Speciality] = @Original_Speciality) AND ([EnglishLevel] = @Original_EnglishLevel) AND ([ComputerLevel] = @Original_ComputerLevel) AND ([ExistThirdPartyRelation] = @Original_ExistThirdPartyRelation) AND ([ThirdPartyRelation] = @Original_ThirdPartyRelation) AND ([WorkingTenure] = @Original_WorkingTenure) AND ([DesiredSalary] = @Original_DesiredSalary) AND ([Recorder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecruitmentType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecruitmentType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Height", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "Height", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FamilyAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmergencyPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmergencyPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnglishLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnglishLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComputerLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExistThirdPartyRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExistThirdPartyRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThirdPartyRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingTenure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 1, "WorkingTenure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesiredSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DesiredSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HR_Resume] ([Name], [RecruitmentType], [ResumeStatusID], [Sex], [Birthday], [Age], [Height], [Nationality], [Race], [Birthplace], [Party], [MaritalStatus], [ID_Card], [College], [EducatedDegree], [EducatedMajor], [FamilyAddress], [Postcode], [Phone], [EmergencyPhone], [Speciality], [EnglishLevel], [ComputerLevel], [ExistThirdPartyRelation], [ThirdPartyRelation], [WorkingTenure], [DesiredSalary], [Photo], [Annex], [PathName], [Remark], [EducatedHistory], [WorkHistory], [FamilyMember], [Recorder], [RecordTime]) VALUES (@Name, @RecruitmentType, @ResumeStatusID, @Sex, @Birthday, @Age, @Height, @Nationality, @Race, @Birthplace, @Party, @MaritalStatus, @ID_Card, @College, @EducatedDegree, @EducatedMajor, @FamilyAddress, @Postcode, @Phone, @EmergencyPhone, @Speciality, @EnglishLevel, @ComputerLevel, @ExistThirdPartyRelation, @ThirdPartyRelation, @WorkingTenure, @DesiredSalary, @Photo, @Annex, @PathName, @Remark, @EducatedHistory, @WorkHistory, @FamilyMember, @Recorder, @RecordTime);
SELECT ID, Name, RecruitmentType, ResumeStatusID, Sex, Birthday, Age, Height, Nationality, Race, Birthplace, Party, MaritalStatus, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, Postcode, Phone, EmergencyPhone, Speciality, EnglishLevel, ComputerLevel, ExistThirdPartyRelation, ThirdPartyRelation, WorkingTenure, DesiredSalary, Photo, Annex, PathName, Remark, EducatedHistory, WorkHistory, FamilyMember, Recorder, RecordTime FROM HR_Resume WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecruitmentType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecruitmentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Height", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "Height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmergencyPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmergencyPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnglishLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnglishLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComputerLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExistThirdPartyRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExistThirdPartyRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThirdPartyRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingTenure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 1, "WorkingTenure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesiredSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DesiredSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PathName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMember", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMember", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[HR_Resume] SET [Name] = @Name, [RecruitmentType] = @RecruitmentType" +
                ", [ResumeStatusID] = @ResumeStatusID, [Sex] = @Sex, [Birthday] = @Birthday, [Age" +
                "] = @Age, [Height] = @Height, [Nationality] = @Nationality, [Race] = @Race, [Bir" +
                "thplace] = @Birthplace, [Party] = @Party, [MaritalStatus] = @MaritalStatus, [ID_" +
                "Card] = @ID_Card, [College] = @College, [EducatedDegree] = @EducatedDegree, [Edu" +
                "catedMajor] = @EducatedMajor, [FamilyAddress] = @FamilyAddress, [Postcode] = @Po" +
                "stcode, [Phone] = @Phone, [EmergencyPhone] = @EmergencyPhone, [Speciality] = @Sp" +
                "eciality, [EnglishLevel] = @EnglishLevel, [ComputerLevel] = @ComputerLevel, [Exi" +
                "stThirdPartyRelation] = @ExistThirdPartyRelation, [ThirdPartyRelation] = @ThirdP" +
                "artyRelation, [WorkingTenure] = @WorkingTenure, [DesiredSalary] = @DesiredSalary" +
                ", [Photo] = @Photo, [Annex] = @Annex, [PathName] = @PathName, [Remark] = @Remark" +
                ", [EducatedHistory] = @EducatedHistory, [WorkHistory] = @WorkHistory, [FamilyMem" +
                "ber] = @FamilyMember, [Recorder] = @Recorder, [RecordTime] = @RecordTime WHERE (" +
                "([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([RecruitmentType] = @Or" +
                "iginal_RecruitmentType) AND ([ResumeStatusID] = @Original_ResumeStatusID) AND ([" +
                "Sex] = @Original_Sex) AND ([Birthday] = @Original_Birthday) AND ([Age] = @Origin" +
                "al_Age) AND ([Height] = @Original_Height) AND ([Nationality] = @Original_Nationa" +
                "lity) AND ([Race] = @Original_Race) AND ([Birthplace] = @Original_Birthplace) AN" +
                "D ([Party] = @Original_Party) AND ([MaritalStatus] = @Original_MaritalStatus) AN" +
                "D ([ID_Card] = @Original_ID_Card) AND ([College] = @Original_College) AND ([Educ" +
                "atedDegree] = @Original_EducatedDegree) AND ([EducatedMajor] = @Original_Educate" +
                "dMajor) AND ((@IsNull_FamilyAddress = 1 AND [FamilyAddress] IS NULL) OR ([Family" +
                "Address] = @Original_FamilyAddress)) AND ([Postcode] = @Original_Postcode) AND (" +
                "[Phone] = @Original_Phone) AND ([EmergencyPhone] = @Original_EmergencyPhone) AND" +
                " ([Speciality] = @Original_Speciality) AND ([EnglishLevel] = @Original_EnglishLe" +
                "vel) AND ([ComputerLevel] = @Original_ComputerLevel) AND ([ExistThirdPartyRelati" +
                "on] = @Original_ExistThirdPartyRelation) AND ([ThirdPartyRelation] = @Original_T" +
                "hirdPartyRelation) AND ([WorkingTenure] = @Original_WorkingTenure) AND ([Desired" +
                "Salary] = @Original_DesiredSalary) AND ([Recorder] = @Original_Recorder) AND ([R" +
                "ecordTime] = @Original_RecordTime));\r\nSELECT ID, Name, RecruitmentType, ResumeSt" +
                "atusID, Sex, Birthday, Age, Height, Nationality, Race, Birthplace, Party, Marita" +
                "lStatus, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, Postcod" +
                "e, Phone, EmergencyPhone, Speciality, EnglishLevel, ComputerLevel, ExistThirdPar" +
                "tyRelation, ThirdPartyRelation, WorkingTenure, DesiredSalary, Photo, Annex, Path" +
                "Name, Remark, EducatedHistory, WorkHistory, FamilyMember, Recorder, RecordTime F" +
                "ROM HR_Resume WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecruitmentType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecruitmentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResumeStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Height", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "Height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmergencyPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmergencyPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnglishLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnglishLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComputerLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExistThirdPartyRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExistThirdPartyRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThirdPartyRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingTenure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 1, "WorkingTenure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesiredSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DesiredSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photo", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Annex", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Annex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PathName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducatedHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMember", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMember", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecruitmentType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecruitmentType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResumeStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResumeStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Height", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "Height", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Race", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Race", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthplace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthplace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Card", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Card", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_College", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "College", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedDegree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducatedMajor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducatedMajor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FamilyAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmergencyPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmergencyPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speciality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnglishLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnglishLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComputerLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExistThirdPartyRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExistThirdPartyRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThirdPartyRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingTenure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 1, "WorkingTenure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesiredSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DesiredSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, Name, RecruitmentType, ResumeStatusID, Sex, Birthday, Age, Height, Nationality, Race, Birthplace, Party, MaritalStatus, ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, Postcode, Phone, EmergencyPhone, Speciality, EnglishLevel, ComputerLevel, ExistThirdPartyRelation, ThirdPartyRelation, WorkingTenure, DesiredSalary, Photo, Annex, PathName, Remark, EducatedHistory, WorkHistory, FamilyMember, Recorder, RecordTime FROM dbo.HR_Resume";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_ResumeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_ResumeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_ResumeDataTable dataTable = new DepotManagementDataSet.HR_ResumeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_ResumeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_Resume");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_Name, 
                    string Original_RecruitmentType, 
                    int Original_ResumeStatusID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    decimal Original_Height, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_MaritalStatus, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_Postcode, 
                    string Original_Phone, 
                    string Original_EmergencyPhone, 
                    string Original_Speciality, 
                    string Original_EnglishLevel, 
                    string Original_ComputerLevel, 
                    bool Original_ExistThirdPartyRelation, 
                    string Original_ThirdPartyRelation, 
                    decimal Original_WorkingTenure, 
                    decimal Original_DesiredSalary, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
            }
            if ((Original_RecruitmentType == null)) {
                throw new global::System.ArgumentNullException("Original_RecruitmentType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_RecruitmentType));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ResumeStatusID));
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Sex));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Age));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Height));
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Party));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_Postcode == null)) {
                throw new global::System.ArgumentNullException("Original_Postcode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Postcode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Phone));
            }
            if ((Original_EmergencyPhone == null)) {
                throw new global::System.ArgumentNullException("Original_EmergencyPhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_EmergencyPhone));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Speciality));
            }
            if ((Original_EnglishLevel == null)) {
                throw new global::System.ArgumentNullException("Original_EnglishLevel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_EnglishLevel));
            }
            if ((Original_ComputerLevel == null)) {
                throw new global::System.ArgumentNullException("Original_ComputerLevel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ComputerLevel));
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_ExistThirdPartyRelation));
            if ((Original_ThirdPartyRelation == null)) {
                throw new global::System.ArgumentNullException("Original_ThirdPartyRelation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ThirdPartyRelation));
            }
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_WorkingTenure));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_DesiredSalary));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Recorder));
            }
            this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Name, 
                    string RecruitmentType, 
                    int ResumeStatusID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    decimal Height, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string MaritalStatus, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string Postcode, 
                    string Phone, 
                    string EmergencyPhone, 
                    string Speciality, 
                    string EnglishLevel, 
                    string ComputerLevel, 
                    bool ExistThirdPartyRelation, 
                    string ThirdPartyRelation, 
                    decimal WorkingTenure, 
                    decimal DesiredSalary, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string PathName, 
                    string Remark, 
                    string EducatedHistory, 
                    string WorkHistory, 
                    string FamilyMember, 
                    string Recorder, 
                    System.DateTime RecordTime) {
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((RecruitmentType == null)) {
                throw new global::System.ArgumentNullException("RecruitmentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RecruitmentType));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ResumeStatusID));
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Sex));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Birthday));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Age));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Height));
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Party));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MaritalStatus));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(FamilyAddress));
            }
            if ((Postcode == null)) {
                throw new global::System.ArgumentNullException("Postcode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Postcode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Phone));
            }
            if ((EmergencyPhone == null)) {
                throw new global::System.ArgumentNullException("EmergencyPhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(EmergencyPhone));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Speciality));
            }
            if ((EnglishLevel == null)) {
                throw new global::System.ArgumentNullException("EnglishLevel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(EnglishLevel));
            }
            if ((ComputerLevel == null)) {
                throw new global::System.ArgumentNullException("ComputerLevel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ComputerLevel));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(ExistThirdPartyRelation));
            if ((ThirdPartyRelation == null)) {
                throw new global::System.ArgumentNullException("ThirdPartyRelation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ThirdPartyRelation));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(WorkingTenure));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(DesiredSalary));
            if ((Photo == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte[])(Annex));
            }
            if ((PathName == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(PathName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Remark));
            }
            if ((EducatedHistory == null)) {
                throw new global::System.ArgumentNullException("EducatedHistory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(EducatedHistory));
            }
            if ((WorkHistory == null)) {
                throw new global::System.ArgumentNullException("WorkHistory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(WorkHistory));
            }
            if ((FamilyMember == null)) {
                throw new global::System.ArgumentNullException("FamilyMember");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(FamilyMember));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Recorder));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string RecruitmentType, 
                    int ResumeStatusID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    decimal Height, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string MaritalStatus, 
                    string ID_Card, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string Postcode, 
                    string Phone, 
                    string EmergencyPhone, 
                    string Speciality, 
                    string EnglishLevel, 
                    string ComputerLevel, 
                    bool ExistThirdPartyRelation, 
                    string ThirdPartyRelation, 
                    decimal WorkingTenure, 
                    decimal DesiredSalary, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string PathName, 
                    string Remark, 
                    string EducatedHistory, 
                    string WorkHistory, 
                    string FamilyMember, 
                    string Recorder, 
                    System.DateTime RecordTime, 
                    int Original_ID, 
                    string Original_Name, 
                    string Original_RecruitmentType, 
                    int Original_ResumeStatusID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    decimal Original_Height, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_MaritalStatus, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_Postcode, 
                    string Original_Phone, 
                    string Original_EmergencyPhone, 
                    string Original_Speciality, 
                    string Original_EnglishLevel, 
                    string Original_ComputerLevel, 
                    bool Original_ExistThirdPartyRelation, 
                    string Original_ThirdPartyRelation, 
                    decimal Original_WorkingTenure, 
                    decimal Original_DesiredSalary, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime, 
                    int ID) {
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((RecruitmentType == null)) {
                throw new global::System.ArgumentNullException("RecruitmentType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RecruitmentType));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ResumeStatusID));
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Sex));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Birthday));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Age));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Height));
            if ((Nationality == null)) {
                throw new global::System.ArgumentNullException("Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Nationality));
            }
            if ((Race == null)) {
                throw new global::System.ArgumentNullException("Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Race));
            }
            if ((Birthplace == null)) {
                throw new global::System.ArgumentNullException("Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Birthplace));
            }
            if ((Party == null)) {
                throw new global::System.ArgumentNullException("Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Party));
            }
            if ((MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MaritalStatus));
            }
            if ((ID_Card == null)) {
                throw new global::System.ArgumentNullException("ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ID_Card));
            }
            if ((College == null)) {
                throw new global::System.ArgumentNullException("College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(College));
            }
            if ((EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EducatedDegree));
            }
            if ((EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(EducatedMajor));
            }
            if ((FamilyAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(FamilyAddress));
            }
            if ((Postcode == null)) {
                throw new global::System.ArgumentNullException("Postcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Postcode));
            }
            if ((Phone == null)) {
                throw new global::System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Phone));
            }
            if ((EmergencyPhone == null)) {
                throw new global::System.ArgumentNullException("EmergencyPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(EmergencyPhone));
            }
            if ((Speciality == null)) {
                throw new global::System.ArgumentNullException("Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Speciality));
            }
            if ((EnglishLevel == null)) {
                throw new global::System.ArgumentNullException("EnglishLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(EnglishLevel));
            }
            if ((ComputerLevel == null)) {
                throw new global::System.ArgumentNullException("ComputerLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ComputerLevel));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(ExistThirdPartyRelation));
            if ((ThirdPartyRelation == null)) {
                throw new global::System.ArgumentNullException("ThirdPartyRelation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ThirdPartyRelation));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(WorkingTenure));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(DesiredSalary));
            if ((Photo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((byte[])(Photo));
            }
            if ((Annex == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte[])(Annex));
            }
            if ((PathName == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(PathName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Remark));
            }
            if ((EducatedHistory == null)) {
                throw new global::System.ArgumentNullException("EducatedHistory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(EducatedHistory));
            }
            if ((WorkHistory == null)) {
                throw new global::System.ArgumentNullException("WorkHistory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(WorkHistory));
            }
            if ((FamilyMember == null)) {
                throw new global::System.ArgumentNullException("FamilyMember");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(FamilyMember));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(RecordTime));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Name));
            }
            if ((Original_RecruitmentType == null)) {
                throw new global::System.ArgumentNullException("Original_RecruitmentType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_RecruitmentType));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_ResumeStatusID));
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Sex));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_Age));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_Height));
            if ((Original_Nationality == null)) {
                throw new global::System.ArgumentNullException("Original_Nationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Nationality));
            }
            if ((Original_Race == null)) {
                throw new global::System.ArgumentNullException("Original_Race");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Race));
            }
            if ((Original_Birthplace == null)) {
                throw new global::System.ArgumentNullException("Original_Birthplace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Birthplace));
            }
            if ((Original_Party == null)) {
                throw new global::System.ArgumentNullException("Original_Party");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Party));
            }
            if ((Original_MaritalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_MaritalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_MaritalStatus));
            }
            if ((Original_ID_Card == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Card");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_ID_Card));
            }
            if ((Original_College == null)) {
                throw new global::System.ArgumentNullException("Original_College");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_College));
            }
            if ((Original_EducatedDegree == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_EducatedDegree));
            }
            if ((Original_EducatedMajor == null)) {
                throw new global::System.ArgumentNullException("Original_EducatedMajor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_EducatedMajor));
            }
            if ((Original_FamilyAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_FamilyAddress));
            }
            if ((Original_Postcode == null)) {
                throw new global::System.ArgumentNullException("Original_Postcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Postcode));
            }
            if ((Original_Phone == null)) {
                throw new global::System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Phone));
            }
            if ((Original_EmergencyPhone == null)) {
                throw new global::System.ArgumentNullException("Original_EmergencyPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_EmergencyPhone));
            }
            if ((Original_Speciality == null)) {
                throw new global::System.ArgumentNullException("Original_Speciality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Speciality));
            }
            if ((Original_EnglishLevel == null)) {
                throw new global::System.ArgumentNullException("Original_EnglishLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_EnglishLevel));
            }
            if ((Original_ComputerLevel == null)) {
                throw new global::System.ArgumentNullException("Original_ComputerLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_ComputerLevel));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_ExistThirdPartyRelation));
            if ((Original_ThirdPartyRelation == null)) {
                throw new global::System.ArgumentNullException("Original_ThirdPartyRelation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_ThirdPartyRelation));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_WorkingTenure));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_DesiredSalary));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_RecordTime));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string RecruitmentType, 
                    int ResumeStatusID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    decimal Height, 
                    string Nationality, 
                    string Race, 
                    string Birthplace, 
                    string Party, 
                    string MaritalStatus, 
                    string College, 
                    string EducatedDegree, 
                    string EducatedMajor, 
                    string FamilyAddress, 
                    string Postcode, 
                    string Phone, 
                    string EmergencyPhone, 
                    string Speciality, 
                    string EnglishLevel, 
                    string ComputerLevel, 
                    bool ExistThirdPartyRelation, 
                    string ThirdPartyRelation, 
                    decimal WorkingTenure, 
                    decimal DesiredSalary, 
                    byte[] Photo, 
                    byte[] Annex, 
                    string PathName, 
                    string Remark, 
                    string EducatedHistory, 
                    string WorkHistory, 
                    string FamilyMember, 
                    string Recorder, 
                    System.DateTime RecordTime, 
                    int Original_ID, 
                    string Original_Name, 
                    string Original_RecruitmentType, 
                    int Original_ResumeStatusID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    decimal Original_Height, 
                    string Original_Nationality, 
                    string Original_Race, 
                    string Original_Birthplace, 
                    string Original_Party, 
                    string Original_MaritalStatus, 
                    string Original_ID_Card, 
                    string Original_College, 
                    string Original_EducatedDegree, 
                    string Original_EducatedMajor, 
                    string Original_FamilyAddress, 
                    string Original_Postcode, 
                    string Original_Phone, 
                    string Original_EmergencyPhone, 
                    string Original_Speciality, 
                    string Original_EnglishLevel, 
                    string Original_ComputerLevel, 
                    bool Original_ExistThirdPartyRelation, 
                    string Original_ThirdPartyRelation, 
                    decimal Original_WorkingTenure, 
                    decimal Original_DesiredSalary, 
                    string Original_Recorder, 
                    System.DateTime Original_RecordTime, 
                    int ID) {
            return this.Update(Name, RecruitmentType, ResumeStatusID, Sex, Birthday, Age, Height, Nationality, Race, Birthplace, Party, MaritalStatus, Original_ID_Card, College, EducatedDegree, EducatedMajor, FamilyAddress, Postcode, Phone, EmergencyPhone, Speciality, EnglishLevel, ComputerLevel, ExistThirdPartyRelation, ThirdPartyRelation, WorkingTenure, DesiredSalary, Photo, Annex, PathName, Remark, EducatedHistory, WorkHistory, FamilyMember, Recorder, RecordTime, Original_ID, Original_Name, Original_RecruitmentType, Original_ResumeStatusID, Original_Sex, Original_Birthday, Original_Age, Original_Height, Original_Nationality, Original_Race, Original_Birthplace, Original_Party, Original_MaritalStatus, Original_ID_Card, Original_College, Original_EducatedDegree, Original_EducatedMajor, Original_FamilyAddress, Original_Postcode, Original_Phone, Original_EmergencyPhone, Original_Speciality, Original_EnglishLevel, Original_ComputerLevel, Original_ExistThirdPartyRelation, Original_ThirdPartyRelation, Original_WorkingTenure, Original_DesiredSalary, Original_Recorder, Original_RecordTime, ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_WorkSchedulingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_WorkSchedulingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_WorkScheduling";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CreaterWorkID", "CreaterWorkID");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("Year", "Year");
            tableMapping.ColumnMappings.Add("Month", "Month");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HR_WorkScheduling] WHERE (([ID] = @Original_ID) AND ([CreaterW" +
                "orkID] = @Original_CreaterWorkID) AND ([CreateDate] = @Original_CreateDate) AND " +
                "([Year] = @Original_Year) AND ([Month] = @Original_Month))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreaterWorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreaterWorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Month", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Month", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HR_WorkScheduling] ([CreaterWorkID], [CreateDate], [Year], [Month], [Remark]) VALUES (@CreaterWorkID, @CreateDate, @Year, @Month, @Remark);
SELECT ID, CreaterWorkID, CreateDate, Year, Month, Remark FROM HR_WorkScheduling WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreaterWorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreaterWorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Month", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Month", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_WorkScheduling] SET [CreaterWorkID] = @CreaterWorkID, [CreateDate] = @CreateDate, [Year] = @Year, [Month] = @Month, [Remark] = @Remark WHERE (([ID] = @Original_ID) AND ([CreaterWorkID] = @Original_CreaterWorkID) AND ([CreateDate] = @Original_CreateDate) AND ([Year] = @Original_Year) AND ([Month] = @Original_Month));
SELECT ID, CreaterWorkID, CreateDate, Year, Month, Remark FROM HR_WorkScheduling WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreaterWorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreaterWorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Month", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Month", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreaterWorkID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreaterWorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Month", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Month", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, CreaterWorkID, CreateDate, Year, Month, Remark FROM dbo.HR_WorkSchedul" +
                "ing";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_WorkSchedulingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_WorkSchedulingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_WorkSchedulingDataTable dataTable = new DepotManagementDataSet.HR_WorkSchedulingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_WorkSchedulingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_WorkScheduling");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_CreaterWorkID, System.DateTime Original_CreateDate, int Original_Year, byte Original_Month) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_CreaterWorkID == null)) {
                throw new global::System.ArgumentNullException("Original_CreaterWorkID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CreaterWorkID));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Year));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_Month));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CreaterWorkID, System.DateTime CreateDate, int Year, byte Month, string Remark) {
            if ((CreaterWorkID == null)) {
                throw new global::System.ArgumentNullException("CreaterWorkID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CreaterWorkID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CreateDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Year));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(Month));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Remark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CreaterWorkID, System.DateTime CreateDate, int Year, byte Month, string Remark, int Original_ID, string Original_CreaterWorkID, System.DateTime Original_CreateDate, int Original_Year, byte Original_Month, int ID) {
            if ((CreaterWorkID == null)) {
                throw new global::System.ArgumentNullException("CreaterWorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CreaterWorkID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CreateDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Year));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(Month));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            if ((Original_CreaterWorkID == null)) {
                throw new global::System.ArgumentNullException("Original_CreaterWorkID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CreaterWorkID));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Year));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(Original_Month));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CreaterWorkID, System.DateTime CreateDate, int Year, byte Month, string Remark, int Original_ID, string Original_CreaterWorkID, System.DateTime Original_CreateDate, int Original_Year, byte Original_Month) {
            return this.Update(CreaterWorkID, CreateDate, Year, Month, Remark, Original_ID, Original_CreaterWorkID, Original_CreateDate, Original_Year, Original_Month, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_DeptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_DeptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_Dept";
            tableMapping.ColumnMappings.Add("部门代码", "部门代码");
            tableMapping.ColumnMappings.Add("部门名称", "部门名称");
            tableMapping.ColumnMappings.Add("部门类型", "部门类型");
            tableMapping.ColumnMappings.Add("电话", "电话");
            tableMapping.ColumnMappings.Add("传真", "传真");
            tableMapping.ColumnMappings.Add("备注", "备注");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 部门代码, 部门名称, 部门类型, 电话, 传真, 备注 FROM dbo.View_HR_Dept";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_DeptDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_DeptDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_DeptDataTable dataTable = new DepotManagementDataSet.View_HR_DeptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_PersonnelLaborContractTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_PersonnelLaborContractTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_PersonnelLaborContract";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("员工编号", "员工编号");
            tableMapping.ColumnMappings.Add("员工姓名", "员工姓名");
            tableMapping.ColumnMappings.Add("合同模板", "合同模板");
            tableMapping.ColumnMappings.Add("合同状态", "合同状态");
            tableMapping.ColumnMappings.Add("合同起始时间", "合同起始时间");
            tableMapping.ColumnMappings.Add("合同终止时间", "合同终止时间");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("记录人员", "记录人员");
            tableMapping.ColumnMappings.Add("记录时间", "记录时间");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 编号, 员工编号, 员工姓名, 合同模板, 合同状态, 合同起始时间, 合同终止时间, 备注, 记录人员, 记录时间 FROM dbo.View_H" +
                "R_PersonnelLaborContract";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_PersonnelLaborContractDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_PersonnelLaborContractDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_PersonnelLaborContractDataTable dataTable = new DepotManagementDataSet.View_HR_PersonnelLaborContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_OperatingPostTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_OperatingPostTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_OperatingPost";
            tableMapping.ColumnMappings.Add("岗位编号", "岗位编号");
            tableMapping.ColumnMappings.Add("岗位名称", "岗位名称");
            tableMapping.ColumnMappings.Add("职位类别", "职位类别");
            tableMapping.ColumnMappings.Add("岗位说明", "岗位说明");
            tableMapping.ColumnMappings.Add("岗位规范", "岗位规范");
            tableMapping.ColumnMappings.Add("是否中层人员", "是否中层人员");
            tableMapping.ColumnMappings.Add("是否高层人员", "是否高层人员");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("记录人员", "记录人员");
            tableMapping.ColumnMappings.Add("记录时间", "记录时间");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 岗位编号, 岗位名称, 职位类别, 岗位说明, 岗位规范, 是否中层人员, 是否高层人员, 备注, 记录人员, 记录时间 FROM dbo.View" +
                "_HR_OperatingPost";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_OperatingPostDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_OperatingPostDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_OperatingPostDataTable dataTable = new DepotManagementDataSet.View_HR_OperatingPostDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_PersonnelArchiveTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_PersonnelArchiveTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_PersonnelArchive";
            tableMapping.ColumnMappings.Add("员工编号", "员工编号");
            tableMapping.ColumnMappings.Add("员工姓名", "员工姓名");
            tableMapping.ColumnMappings.Add("部门", "部门");
            tableMapping.ColumnMappings.Add("入司时间", "入司时间");
            tableMapping.ColumnMappings.Add("离职时间", "离职时间");
            tableMapping.ColumnMappings.Add("出生日期", "出生日期");
            tableMapping.ColumnMappings.Add("国籍", "国籍");
            tableMapping.ColumnMappings.Add("民族", "民族");
            tableMapping.ColumnMappings.Add("籍贯", "籍贯");
            tableMapping.ColumnMappings.Add("政治面貌", "政治面貌");
            tableMapping.ColumnMappings.Add("身份证", "身份证");
            tableMapping.ColumnMappings.Add("毕业院校", "毕业院校");
            tableMapping.ColumnMappings.Add("专业", "专业");
            tableMapping.ColumnMappings.Add("家庭地址", "家庭地址");
            tableMapping.ColumnMappings.Add("电话", "电话");
            tableMapping.ColumnMappings.Add("手机", "手机");
            tableMapping.ColumnMappings.Add("QQ号码", "QQ号码");
            tableMapping.ColumnMappings.Add("电子邮箱", "电子邮箱");
            tableMapping.ColumnMappings.Add("爱好", "爱好");
            tableMapping.ColumnMappings.Add("特长", "特长");
            tableMapping.ColumnMappings.Add("性别", "性别");
            tableMapping.ColumnMappings.Add("照片", "照片");
            tableMapping.ColumnMappings.Add("附件", "附件");
            tableMapping.ColumnMappings.Add("附件名", "附件名");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("记录人员", "记录人员");
            tableMapping.ColumnMappings.Add("记录时间", "记录时间");
            tableMapping.ColumnMappings.Add("人员状态", "人员状态");
            tableMapping.ColumnMappings.Add("拼音", "拼音");
            tableMapping.ColumnMappings.Add("五笔", "五笔");
            tableMapping.ColumnMappings.Add("转正日期", "转正日期");
            tableMapping.ColumnMappings.Add("参加工作的时间", "参加工作的时间");
            tableMapping.ColumnMappings.Add("工作性质", "工作性质");
            tableMapping.ColumnMappings.Add("婚姻状况", "婚姻状况");
            tableMapping.ColumnMappings.Add("文化程度", "文化程度");
            tableMapping.ColumnMappings.Add("学制", "学制");
            tableMapping.ColumnMappings.Add("毕业年份", "毕业年份");
            tableMapping.ColumnMappings.Add("岗位", "岗位");
            tableMapping.ColumnMappings.Add("外部职称", "外部职称");
            tableMapping.ColumnMappings.Add("内部级别", "内部级别");
            tableMapping.ColumnMappings.Add("是否核心员工", "是否核心员工");
            tableMapping.ColumnMappings.Add("合同到期日", "合同到期日");
            tableMapping.ColumnMappings.Add("关联编号", "关联编号");
            tableMapping.ColumnMappings.Add("个人档案所在地", "个人档案所在地");
            tableMapping.ColumnMappings.Add("在司相关人员姓名", "在司相关人员姓名");
            tableMapping.ColumnMappings.Add("与相关人员关系", "与相关人员关系");
            tableMapping.ColumnMappings.Add("部门编号", "部门编号");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 员工编号, 员工姓名, 部门, 入司时间, 离职时间, 出生日期, 国籍, 民族, 籍贯, 政治面貌, 身份证, 毕业院校, 专业, 家庭地址, 电话, 手机, QQ号码, 电子邮箱, 爱好, 特长, 性别, 照片, 附件, 附件名, 备注, 记录人员, 记录时间, 人员状态, 拼音, 五笔, 参加工作的时间, 婚姻状况, 学制, 工作性质, 文化程度, 毕业年份, 转正日期, 内部级别, 外部职称, 岗位, 与相关人员关系, 个人档案所在地, 关联编号, 合同到期日, 在司相关人员姓名, 是否核心员工, 部门编号 FROM View_HR_PersonnelArchive";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_PersonnelArchiveDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_PersonnelArchiveDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_PersonnelArchiveDataTable dataTable = new DepotManagementDataSet.View_HR_PersonnelArchiveDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_PersonnelArchiveChangeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_PersonnelArchiveChangeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_PersonnelArchiveChange";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("员工编号", "员工编号");
            tableMapping.ColumnMappings.Add("员工姓名", "员工姓名");
            tableMapping.ColumnMappings.Add("部门", "部门");
            tableMapping.ColumnMappings.Add("部门名称", "部门名称");
            tableMapping.ColumnMappings.Add("工作岗位", "工作岗位");
            tableMapping.ColumnMappings.Add("入司时间", "入司时间");
            tableMapping.ColumnMappings.Add("离职时间", "离职时间");
            tableMapping.ColumnMappings.Add("出生日期", "出生日期");
            tableMapping.ColumnMappings.Add("国籍", "国籍");
            tableMapping.ColumnMappings.Add("民族", "民族");
            tableMapping.ColumnMappings.Add("籍贯", "籍贯");
            tableMapping.ColumnMappings.Add("政治面貌", "政治面貌");
            tableMapping.ColumnMappings.Add("身份证", "身份证");
            tableMapping.ColumnMappings.Add("毕业院校", "毕业院校");
            tableMapping.ColumnMappings.Add("专业", "专业");
            tableMapping.ColumnMappings.Add("家庭住址", "家庭住址");
            tableMapping.ColumnMappings.Add("邮编", "邮编");
            tableMapping.ColumnMappings.Add("电话", "电话");
            tableMapping.ColumnMappings.Add("手机", "手机");
            tableMapping.ColumnMappings.Add("开户银行", "开户银行");
            tableMapping.ColumnMappings.Add("银行账号", "银行账号");
            tableMapping.ColumnMappings.Add("社会保障号", "社会保障号");
            tableMapping.ColumnMappings.Add("QQ号码", "QQ号码");
            tableMapping.ColumnMappings.Add("电子邮箱", "电子邮箱");
            tableMapping.ColumnMappings.Add("爱好", "爱好");
            tableMapping.ColumnMappings.Add("特长", "特长");
            tableMapping.ColumnMappings.Add("性别", "性别");
            tableMapping.ColumnMappings.Add("简历编号", "简历编号");
            tableMapping.ColumnMappings.Add("照片", "照片");
            tableMapping.ColumnMappings.Add("附件", "附件");
            tableMapping.ColumnMappings.Add("附件名", "附件名");
            tableMapping.ColumnMappings.Add("调动次数", "调动次数");
            tableMapping.ColumnMappings.Add("培训次数", "培训次数");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("记录人员", "记录人员");
            tableMapping.ColumnMappings.Add("记录时间", "记录时间");
            tableMapping.ColumnMappings.Add("转正日期", "转正日期");
            tableMapping.ColumnMappings.Add("参加工作的时间", "参加工作的时间");
            tableMapping.ColumnMappings.Add("工作性质", "工作性质");
            tableMapping.ColumnMappings.Add("婚姻状况", "婚姻状况");
            tableMapping.ColumnMappings.Add("文化程度", "文化程度");
            tableMapping.ColumnMappings.Add("学制", "学制");
            tableMapping.ColumnMappings.Add("毕业年份", "毕业年份");
            tableMapping.ColumnMappings.Add("外部职称", "外部职称");
            tableMapping.ColumnMappings.Add("内部级别", "内部级别");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 编号, 员工编号, 员工姓名, 部门, 部门名称, 工作岗位, 入司时间, 离职时间, 出生日期, 国籍, 民族, 籍贯, 政治面貌, 身份证, 毕业院校, 专业, 家庭住址, 邮编, 电话, 手机, 开户银行, 银行账号, 社会保障号, QQ号码, 电子邮箱, 爱好, 特长, 性别, 简历编号, 照片, 附件, 附件名, 调动次数, 培训次数, 备注, 记录人员, 记录时间, 参加工作的时间, 婚姻状况, 学制, 工作性质, 文化程度, 毕业年份, 转正日期, 内部级别, 外部职称 FROM View_HR_PersonnelArchiveChange";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_PersonnelArchiveChangeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_PersonnelArchiveChangeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_PersonnelArchiveChangeDataTable dataTable = new DepotManagementDataSet.View_HR_PersonnelArchiveChangeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_OnBusinessBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_OnBusinessBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_OnBusinessBill";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BillStatus", "BillStatus");
            tableMapping.ColumnMappings.Add("Applicant", "Applicant");
            tableMapping.ColumnMappings.Add("ApplicantDate", "ApplicantDate");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("ETD", "ETD");
            tableMapping.ColumnMappings.Add("Vehicle", "Vehicle");
            tableMapping.ColumnMappings.Add("EntertainmentExprense", "EntertainmentExprense");
            tableMapping.ColumnMappings.Add("OtherExprense", "OtherExprense");
            tableMapping.ColumnMappings.Add("IsBorrowing", "IsBorrowing");
            tableMapping.ColumnMappings.Add("BorrowingAmount", "BorrowingAmount");
            tableMapping.ColumnMappings.Add("DeptPrincipal", "DeptPrincipal");
            tableMapping.ColumnMappings.Add("GeneralManager", "GeneralManager");
            tableMapping.ColumnMappings.Add("Authorize", "Authorize");
            tableMapping.ColumnMappings.Add("Confirmor", "Confirmor");
            tableMapping.ColumnMappings.Add("ConfirmorDate", "ConfirmorDate");
            tableMapping.ColumnMappings.Add("WithinBudget", "WithinBudget");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("ETC", "ETC");
            tableMapping.ColumnMappings.Add("RealBeginTime", "RealBeginTime");
            tableMapping.ColumnMappings.Add("RealEndTime", "RealEndTime");
            tableMapping.ColumnMappings.Add("DeptSignatureDate", "DeptSignatureDate");
            tableMapping.ColumnMappings.Add("LeaderSignature", "LeaderSignature");
            tableMapping.ColumnMappings.Add("LeaderSignatureDate", "LeaderSignatureDate");
            tableMapping.ColumnMappings.Add("GM_SignatureDate", "GM_SignatureDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [HR_OnBusinessBill] WHERE (([ID] = @Original_ID) AND ([BillStatus] = @Original_BillStatus) AND ([Applicant] = @Original_Applicant) AND ([ApplicantDate] = @Original_ApplicantDate) AND ([ETD] = @Original_ETD) AND ([Vehicle] = @Original_Vehicle) AND ([EntertainmentExprense] = @Original_EntertainmentExprense) AND ((@IsNull_OtherExprense = 1 AND [OtherExprense] IS NULL) OR ([OtherExprense] = @Original_OtherExprense)) AND ([IsBorrowing] = @Original_IsBorrowing) AND ([BorrowingAmount] = @Original_BorrowingAmount) AND ((@IsNull_DeptPrincipal = 1 AND [DeptPrincipal] IS NULL) OR ([DeptPrincipal] = @Original_DeptPrincipal)) AND ((@IsNull_GeneralManager = 1 AND [GeneralManager] IS NULL) OR ([GeneralManager] = @Original_GeneralManager)) AND ([Authorize] = @Original_Authorize) AND ((@IsNull_Confirmor = 1 AND [Confirmor] IS NULL) OR ([Confirmor] = @Original_Confirmor)) AND ([ConfirmorDate] = @Original_ConfirmorDate) AND ([DeptSignatureDate] = @Original_DeptSignatureDate) AND ([ETC] = @Original_ETC) AND ([GM_SignatureDate] = @Original_GM_SignatureDate) AND ((@IsNull_LeaderSignature = 1 AND [LeaderSignature] IS NULL) OR ([LeaderSignature] = @Original_LeaderSignature)) AND ([LeaderSignatureDate] = @Original_LeaderSignatureDate) AND ([RealBeginTime] = @Original_RealBeginTime) AND ([RealEndTime] = @Original_RealEndTime) AND ([WithinBudget] = @Original_WithinBudget))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplicantDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplicantDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETD", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntertainmentExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntertainmentExprense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherExprense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsBorrowing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBorrowing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BorrowingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BorrowingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Confirmor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Confirmor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConfirmorDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmorDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderSignature", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealBeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealBeginTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealEndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealEndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WithinBudget", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithinBudget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [HR_OnBusinessBill] ([BillStatus], [Applicant], [ApplicantDate], [Purpose], [ETD], [Vehicle], [EntertainmentExprense], [OtherExprense], [IsBorrowing], [BorrowingAmount], [DeptPrincipal], [GeneralManager], [Authorize], [Confirmor], [ConfirmorDate], [DeptSignatureDate], [ETC], [GM_SignatureDate], [LeaderSignature], [LeaderSignatureDate], [RealBeginTime], [RealEndTime], [Result], [WithinBudget]) VALUES (@BillStatus, @Applicant, @ApplicantDate, @Purpose, @ETD, @Vehicle, @EntertainmentExprense, @OtherExprense, @IsBorrowing, @BorrowingAmount, @DeptPrincipal, @GeneralManager, @Authorize, @Confirmor, @ConfirmorDate, @DeptSignatureDate, @ETC, @GM_SignatureDate, @LeaderSignature, @LeaderSignatureDate, @RealBeginTime, @RealEndTime, @Result, @WithinBudget);
SELECT ID, BillStatus, Applicant, ApplicantDate, Purpose, ETD, Vehicle, EntertainmentExprense, OtherExprense, IsBorrowing, BorrowingAmount, DeptPrincipal, GeneralManager, Authorize, Confirmor, ConfirmorDate, DeptSignatureDate, ETC, GM_SignatureDate, LeaderSignature, LeaderSignatureDate, RealBeginTime, RealEndTime, Result, WithinBudget FROM HR_OnBusinessBill WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplicantDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplicantDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETD", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntertainmentExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntertainmentExprense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBorrowing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBorrowing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BorrowingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BorrowingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Confirmor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConfirmorDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmorDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealBeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealBeginTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealEndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealEndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WithinBudget", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithinBudget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [HR_OnBusinessBill] SET [BillStatus] = @BillStatus, [Applicant] = @Applica" +
                "nt, [ApplicantDate] = @ApplicantDate, [Purpose] = @Purpose, [ETD] = @ETD, [Vehic" +
                "le] = @Vehicle, [EntertainmentExprense] = @EntertainmentExprense, [OtherExprense" +
                "] = @OtherExprense, [IsBorrowing] = @IsBorrowing, [BorrowingAmount] = @Borrowing" +
                "Amount, [DeptPrincipal] = @DeptPrincipal, [GeneralManager] = @GeneralManager, [A" +
                "uthorize] = @Authorize, [Confirmor] = @Confirmor, [ConfirmorDate] = @ConfirmorDa" +
                "te, [DeptSignatureDate] = @DeptSignatureDate, [ETC] = @ETC, [GM_SignatureDate] =" +
                " @GM_SignatureDate, [LeaderSignature] = @LeaderSignature, [LeaderSignatureDate] " +
                "= @LeaderSignatureDate, [RealBeginTime] = @RealBeginTime, [RealEndTime] = @RealE" +
                "ndTime, [Result] = @Result, [WithinBudget] = @WithinBudget WHERE (([ID] = @Origi" +
                "nal_ID) AND ([BillStatus] = @Original_BillStatus) AND ([Applicant] = @Original_A" +
                "pplicant) AND ([ApplicantDate] = @Original_ApplicantDate) AND ([ETD] = @Original" +
                "_ETD) AND ([Vehicle] = @Original_Vehicle) AND ([EntertainmentExprense] = @Origin" +
                "al_EntertainmentExprense) AND ((@IsNull_OtherExprense = 1 AND [OtherExprense] IS" +
                " NULL) OR ([OtherExprense] = @Original_OtherExprense)) AND ([IsBorrowing] = @Ori" +
                "ginal_IsBorrowing) AND ([BorrowingAmount] = @Original_BorrowingAmount) AND ((@Is" +
                "Null_DeptPrincipal = 1 AND [DeptPrincipal] IS NULL) OR ([DeptPrincipal] = @Origi" +
                "nal_DeptPrincipal)) AND ((@IsNull_GeneralManager = 1 AND [GeneralManager] IS NUL" +
                "L) OR ([GeneralManager] = @Original_GeneralManager)) AND ([Authorize] = @Origina" +
                "l_Authorize) AND ((@IsNull_Confirmor = 1 AND [Confirmor] IS NULL) OR ([Confirmor" +
                "] = @Original_Confirmor)) AND ([ConfirmorDate] = @Original_ConfirmorDate) AND ([" +
                "DeptSignatureDate] = @Original_DeptSignatureDate) AND ([ETC] = @Original_ETC) AN" +
                "D ([GM_SignatureDate] = @Original_GM_SignatureDate) AND ((@IsNull_LeaderSignatur" +
                "e = 1 AND [LeaderSignature] IS NULL) OR ([LeaderSignature] = @Original_LeaderSig" +
                "nature)) AND ([LeaderSignatureDate] = @Original_LeaderSignatureDate) AND ([RealB" +
                "eginTime] = @Original_RealBeginTime) AND ([RealEndTime] = @Original_RealEndTime)" +
                " AND ([WithinBudget] = @Original_WithinBudget));\r\nSELECT ID, BillStatus, Applica" +
                "nt, ApplicantDate, Purpose, ETD, Vehicle, EntertainmentExprense, OtherExprense, " +
                "IsBorrowing, BorrowingAmount, DeptPrincipal, GeneralManager, Authorize, Confirmo" +
                "r, ConfirmorDate, DeptSignatureDate, ETC, GM_SignatureDate, LeaderSignature, Lea" +
                "derSignatureDate, RealBeginTime, RealEndTime, Result, WithinBudget FROM HR_OnBus" +
                "inessBill WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplicantDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplicantDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETD", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntertainmentExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntertainmentExprense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBorrowing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBorrowing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BorrowingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BorrowingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Confirmor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConfirmorDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmorDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealBeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealBeginTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealEndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealEndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WithinBudget", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithinBudget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Applicant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Applicant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplicantDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplicantDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETD", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntertainmentExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntertainmentExprense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherExprense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherExprense", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherExprense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsBorrowing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBorrowing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BorrowingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BorrowingAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeptPrincipal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptPrincipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptPrincipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralManager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Authorize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Authorize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Confirmor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Confirmor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Confirmor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConfirmorDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmorDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderSignature", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderSignatureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderSignatureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealBeginTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealBeginTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealEndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealEndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WithinBudget", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithinBudget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, BillStatus, Applicant, ApplicantDate, Purpose, ETD, Vehicle, EntertainmentExprense, OtherExprense, IsBorrowing, BorrowingAmount, DeptPrincipal, GeneralManager, Authorize, Confirmor, ConfirmorDate, DeptSignatureDate, ETC, GM_SignatureDate, LeaderSignature, LeaderSignatureDate, RealBeginTime, RealEndTime, Result, WithinBudget FROM HR_OnBusinessBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_OnBusinessBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_OnBusinessBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_OnBusinessBillDataTable dataTable = new DepotManagementDataSet.HR_OnBusinessBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_OnBusinessBillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_OnBusinessBill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    System.DateTime Original_ApplicantDate, 
                    System.DateTime Original_ETD, 
                    string Original_Vehicle, 
                    decimal Original_EntertainmentExprense, 
                    global::System.Nullable<decimal> Original_OtherExprense, 
                    bool Original_IsBorrowing, 
                    decimal Original_BorrowingAmount, 
                    string Original_DeptPrincipal, 
                    string Original_GeneralManager, 
                    bool Original_Authorize, 
                    string Original_Confirmor, 
                    System.DateTime Original_ConfirmorDate, 
                    System.DateTime Original_DeptSignatureDate, 
                    System.DateTime Original_ETC, 
                    System.DateTime Original_GM_SignatureDate, 
                    string Original_LeaderSignature, 
                    System.DateTime Original_LeaderSignatureDate, 
                    System.DateTime Original_RealBeginTime, 
                    System.DateTime Original_RealEndTime, 
                    bool Original_WithinBudget) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_BillStatus == null)) {
                throw new global::System.ArgumentNullException("Original_BillStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_BillStatus));
            }
            if ((Original_Applicant == null)) {
                throw new global::System.ArgumentNullException("Original_Applicant");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Applicant));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_ApplicantDate));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_ETD));
            if ((Original_Vehicle == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Vehicle));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_EntertainmentExprense));
            if ((Original_OtherExprense.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_OtherExprense.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_IsBorrowing));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_BorrowingAmount));
            if ((Original_DeptPrincipal == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DeptPrincipal));
            }
            if ((Original_GeneralManager == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_GeneralManager));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_Authorize));
            if ((Original_Confirmor == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Confirmor));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_ConfirmorDate));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_DeptSignatureDate));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_ETC));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_GM_SignatureDate));
            if ((Original_LeaderSignature == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_LeaderSignature));
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_LeaderSignatureDate));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_RealBeginTime));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_RealEndTime));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_WithinBudget));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BillStatus, 
                    string Applicant, 
                    System.DateTime ApplicantDate, 
                    string Purpose, 
                    System.DateTime ETD, 
                    string Vehicle, 
                    decimal EntertainmentExprense, 
                    global::System.Nullable<decimal> OtherExprense, 
                    bool IsBorrowing, 
                    decimal BorrowingAmount, 
                    string DeptPrincipal, 
                    string GeneralManager, 
                    bool Authorize, 
                    string Confirmor, 
                    System.DateTime ConfirmorDate, 
                    System.DateTime DeptSignatureDate, 
                    System.DateTime ETC, 
                    System.DateTime GM_SignatureDate, 
                    string LeaderSignature, 
                    System.DateTime LeaderSignatureDate, 
                    System.DateTime RealBeginTime, 
                    System.DateTime RealEndTime, 
                    string Result, 
                    bool WithinBudget) {
            if ((BillStatus == null)) {
                throw new global::System.ArgumentNullException("BillStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BillStatus));
            }
            if ((Applicant == null)) {
                throw new global::System.ArgumentNullException("Applicant");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Applicant));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ApplicantDate));
            if ((Purpose == null)) {
                throw new global::System.ArgumentNullException("Purpose");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Purpose));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ETD));
            if ((Vehicle == null)) {
                throw new global::System.ArgumentNullException("Vehicle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Vehicle));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(EntertainmentExprense));
            if ((OtherExprense.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(OtherExprense.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(IsBorrowing));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(BorrowingAmount));
            if ((DeptPrincipal == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DeptPrincipal));
            }
            if ((GeneralManager == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(GeneralManager));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Authorize));
            if ((Confirmor == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Confirmor));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(ConfirmorDate));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(DeptSignatureDate));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(ETC));
            this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(GM_SignatureDate));
            if ((LeaderSignature == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(LeaderSignature));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(LeaderSignatureDate));
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(RealBeginTime));
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(RealEndTime));
            if ((Result == null)) {
                throw new global::System.ArgumentNullException("Result");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(WithinBudget));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BillStatus, 
                    string Applicant, 
                    System.DateTime ApplicantDate, 
                    string Purpose, 
                    System.DateTime ETD, 
                    string Vehicle, 
                    decimal EntertainmentExprense, 
                    global::System.Nullable<decimal> OtherExprense, 
                    bool IsBorrowing, 
                    decimal BorrowingAmount, 
                    string DeptPrincipal, 
                    string GeneralManager, 
                    bool Authorize, 
                    string Confirmor, 
                    System.DateTime ConfirmorDate, 
                    System.DateTime DeptSignatureDate, 
                    System.DateTime ETC, 
                    System.DateTime GM_SignatureDate, 
                    string LeaderSignature, 
                    System.DateTime LeaderSignatureDate, 
                    System.DateTime RealBeginTime, 
                    System.DateTime RealEndTime, 
                    string Result, 
                    bool WithinBudget, 
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    System.DateTime Original_ApplicantDate, 
                    System.DateTime Original_ETD, 
                    string Original_Vehicle, 
                    decimal Original_EntertainmentExprense, 
                    global::System.Nullable<decimal> Original_OtherExprense, 
                    bool Original_IsBorrowing, 
                    decimal Original_BorrowingAmount, 
                    string Original_DeptPrincipal, 
                    string Original_GeneralManager, 
                    bool Original_Authorize, 
                    string Original_Confirmor, 
                    System.DateTime Original_ConfirmorDate, 
                    System.DateTime Original_DeptSignatureDate, 
                    System.DateTime Original_ETC, 
                    System.DateTime Original_GM_SignatureDate, 
                    string Original_LeaderSignature, 
                    System.DateTime Original_LeaderSignatureDate, 
                    System.DateTime Original_RealBeginTime, 
                    System.DateTime Original_RealEndTime, 
                    bool Original_WithinBudget, 
                    int ID) {
            if ((BillStatus == null)) {
                throw new global::System.ArgumentNullException("BillStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BillStatus));
            }
            if ((Applicant == null)) {
                throw new global::System.ArgumentNullException("Applicant");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Applicant));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ApplicantDate));
            if ((Purpose == null)) {
                throw new global::System.ArgumentNullException("Purpose");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Purpose));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ETD));
            if ((Vehicle == null)) {
                throw new global::System.ArgumentNullException("Vehicle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Vehicle));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(EntertainmentExprense));
            if ((OtherExprense.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(OtherExprense.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(IsBorrowing));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(BorrowingAmount));
            if ((DeptPrincipal == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DeptPrincipal));
            }
            if ((GeneralManager == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(GeneralManager));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Authorize));
            if ((Confirmor == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Confirmor));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(ConfirmorDate));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(DeptSignatureDate));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(ETC));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(GM_SignatureDate));
            if ((LeaderSignature == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(LeaderSignature));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(LeaderSignatureDate));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(RealBeginTime));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(RealEndTime));
            if ((Result == null)) {
                throw new global::System.ArgumentNullException("Result");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(WithinBudget));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_ID));
            if ((Original_BillStatus == null)) {
                throw new global::System.ArgumentNullException("Original_BillStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_BillStatus));
            }
            if ((Original_Applicant == null)) {
                throw new global::System.ArgumentNullException("Original_Applicant");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Applicant));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_ApplicantDate));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_ETD));
            if ((Original_Vehicle == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Vehicle));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_EntertainmentExprense));
            if ((Original_OtherExprense.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_OtherExprense.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_IsBorrowing));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_BorrowingAmount));
            if ((Original_DeptPrincipal == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_DeptPrincipal));
            }
            if ((Original_GeneralManager == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_GeneralManager));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_Authorize));
            if ((Original_Confirmor == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Confirmor));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_ConfirmorDate));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_DeptSignatureDate));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_ETC));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_GM_SignatureDate));
            if ((Original_LeaderSignature == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_LeaderSignature));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_LeaderSignatureDate));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_RealBeginTime));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(Original_RealEndTime));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_WithinBudget));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BillStatus, 
                    string Applicant, 
                    System.DateTime ApplicantDate, 
                    string Purpose, 
                    System.DateTime ETD, 
                    string Vehicle, 
                    decimal EntertainmentExprense, 
                    global::System.Nullable<decimal> OtherExprense, 
                    bool IsBorrowing, 
                    decimal BorrowingAmount, 
                    string DeptPrincipal, 
                    string GeneralManager, 
                    bool Authorize, 
                    string Confirmor, 
                    System.DateTime ConfirmorDate, 
                    System.DateTime DeptSignatureDate, 
                    System.DateTime ETC, 
                    System.DateTime GM_SignatureDate, 
                    string LeaderSignature, 
                    System.DateTime LeaderSignatureDate, 
                    System.DateTime RealBeginTime, 
                    System.DateTime RealEndTime, 
                    string Result, 
                    bool WithinBudget, 
                    int Original_ID, 
                    string Original_BillStatus, 
                    string Original_Applicant, 
                    System.DateTime Original_ApplicantDate, 
                    System.DateTime Original_ETD, 
                    string Original_Vehicle, 
                    decimal Original_EntertainmentExprense, 
                    global::System.Nullable<decimal> Original_OtherExprense, 
                    bool Original_IsBorrowing, 
                    decimal Original_BorrowingAmount, 
                    string Original_DeptPrincipal, 
                    string Original_GeneralManager, 
                    bool Original_Authorize, 
                    string Original_Confirmor, 
                    System.DateTime Original_ConfirmorDate, 
                    System.DateTime Original_DeptSignatureDate, 
                    System.DateTime Original_ETC, 
                    System.DateTime Original_GM_SignatureDate, 
                    string Original_LeaderSignature, 
                    System.DateTime Original_LeaderSignatureDate, 
                    System.DateTime Original_RealBeginTime, 
                    System.DateTime Original_RealEndTime, 
                    bool Original_WithinBudget) {
            return this.Update(BillStatus, Applicant, ApplicantDate, Purpose, ETD, Vehicle, EntertainmentExprense, OtherExprense, IsBorrowing, BorrowingAmount, DeptPrincipal, GeneralManager, Authorize, Confirmor, ConfirmorDate, DeptSignatureDate, ETC, GM_SignatureDate, LeaderSignature, LeaderSignatureDate, RealBeginTime, RealEndTime, Result, WithinBudget, Original_ID, Original_BillStatus, Original_Applicant, Original_ApplicantDate, Original_ETD, Original_Vehicle, Original_EntertainmentExprense, Original_OtherExprense, Original_IsBorrowing, Original_BorrowingAmount, Original_DeptPrincipal, Original_GeneralManager, Original_Authorize, Original_Confirmor, Original_ConfirmorDate, Original_DeptSignatureDate, Original_ETC, Original_GM_SignatureDate, Original_LeaderSignature, Original_LeaderSignatureDate, Original_RealBeginTime, Original_RealEndTime, Original_WithinBudget, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_PostTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_PostTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_PostType";
            tableMapping.ColumnMappings.Add("TypeID", "TypeID");
            tableMapping.ColumnMappings.Add("TypeName", "TypeName");
            tableMapping.ColumnMappings.Add("IsMiddleLevel", "IsMiddleLevel");
            tableMapping.ColumnMappings.Add("IsHighLevel", "IsHighLevel");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Recorder", "Recorder");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[HR_PostType] WHERE (([TypeID] = @Original_TypeID) AND ([TypeName] = @Original_TypeName) AND ([IsMiddleLevel] = @Original_IsMiddleLevel) AND ([IsHighLevel] = @Original_IsHighLevel) AND ([Recorder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMiddleLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMiddleLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHighLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHighLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HR_PostType] ([TypeID], [TypeName], [IsMiddleLevel], [IsHighLevel], [Remark], [Recorder], [RecordTime]) VALUES (@TypeID, @TypeName, @IsMiddleLevel, @IsHighLevel, @Remark, @Recorder, @RecordTime);
SELECT TypeID, TypeName, IsMiddleLevel, IsHighLevel, Remark, Recorder, RecordTime FROM HR_PostType WHERE (TypeID = @TypeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMiddleLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMiddleLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHighLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHighLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_PostType] SET [TypeID] = @TypeID, [TypeName] = @TypeName, [IsMiddleLevel] = @IsMiddleLevel, [IsHighLevel] = @IsHighLevel, [Remark] = @Remark, [Recorder] = @Recorder, [RecordTime] = @RecordTime WHERE (([TypeID] = @Original_TypeID) AND ([TypeName] = @Original_TypeName) AND ([IsMiddleLevel] = @Original_IsMiddleLevel) AND ([IsHighLevel] = @Original_IsHighLevel) AND ([Recorder] = @Original_Recorder) AND ([RecordTime] = @Original_RecordTime));
SELECT TypeID, TypeName, IsMiddleLevel, IsHighLevel, Remark, Recorder, RecordTime FROM HR_PostType WHERE (TypeID = @TypeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMiddleLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMiddleLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHighLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHighLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMiddleLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMiddleLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHighLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHighLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TypeID, TypeName, IsMiddleLevel, IsHighLevel, Remark, Recorder, RecordTime" +
                " FROM dbo.HR_PostType";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_PostTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_PostTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_PostTypeDataTable dataTable = new DepotManagementDataSet.HR_PostTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_PostTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_PostType");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TypeID, string Original_TypeName, bool Original_IsMiddleLevel, bool Original_IsHighLevel, string Original_Recorder, System.DateTime Original_RecordTime) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TypeID));
            if ((Original_TypeName == null)) {
                throw new global::System.ArgumentNullException("Original_TypeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TypeName));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_IsMiddleLevel));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_IsHighLevel));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Recorder));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int TypeID, string TypeName, bool IsMiddleLevel, bool IsHighLevel, string Remark, string Recorder, System.DateTime RecordTime) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TypeID));
            if ((TypeName == null)) {
                throw new global::System.ArgumentNullException("TypeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TypeName));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsMiddleLevel));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsHighLevel));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Remark));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Recorder));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int TypeID, string TypeName, bool IsMiddleLevel, bool IsHighLevel, string Remark, string Recorder, System.DateTime RecordTime, int Original_TypeID, string Original_TypeName, bool Original_IsMiddleLevel, bool Original_IsHighLevel, string Original_Recorder, System.DateTime Original_RecordTime) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(TypeID));
            if ((TypeName == null)) {
                throw new global::System.ArgumentNullException("TypeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TypeName));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsMiddleLevel));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsHighLevel));
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Remark));
            }
            if ((Recorder == null)) {
                throw new global::System.ArgumentNullException("Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(RecordTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_TypeID));
            if ((Original_TypeName == null)) {
                throw new global::System.ArgumentNullException("Original_TypeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TypeName));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_IsMiddleLevel));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_IsHighLevel));
            if ((Original_Recorder == null)) {
                throw new global::System.ArgumentNullException("Original_Recorder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Recorder));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_RecordTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeName, bool IsMiddleLevel, bool IsHighLevel, string Remark, string Recorder, System.DateTime RecordTime, int Original_TypeID, string Original_TypeName, bool Original_IsMiddleLevel, bool Original_IsHighLevel, string Original_Recorder, System.DateTime Original_RecordTime) {
            return this.Update(Original_TypeID, TypeName, IsMiddleLevel, IsHighLevel, Remark, Recorder, RecordTime, Original_TypeID, Original_TypeName, Original_IsMiddleLevel, Original_IsHighLevel, Original_Recorder, Original_RecordTime);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_OnBusinessPersonnelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_OnBusinessPersonnelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_OnBusinessPersonnel";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("员工编号", "员工编号");
            tableMapping.ColumnMappings.Add("员工姓名", "员工姓名");
            tableMapping.ColumnMappings.Add("人员类别", "人员类别");
            tableMapping.ColumnMappings.Add("随行人员部门确认", "随行人员部门确认");
            tableMapping.ColumnMappings.Add("随行人员部门确认时间", "随行人员部门确认时间");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 员工编号, 员工姓名, 人员类别, 随行人员部门确认, 随行人员部门确认时间 FROM dbo.View_HR_OnBusinessPer" +
                "sonnel";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_OnBusinessPersonnelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_OnBusinessPersonnelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_OnBusinessPersonnelDataTable dataTable = new DepotManagementDataSet.View_HR_OnBusinessPersonnelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_HR_OnBusinessBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_HR_OnBusinessBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_HR_OnBusinessBill";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("员工编号", "员工编号");
            tableMapping.ColumnMappings.Add("申请人姓名", "申请人姓名");
            tableMapping.ColumnMappings.Add("申请时间", "申请时间");
            tableMapping.ColumnMappings.Add("申请部门", "申请部门");
            tableMapping.ColumnMappings.Add("出差目的", "出差目的");
            tableMapping.ColumnMappings.Add("预定出发时间", "预定出发时间");
            tableMapping.ColumnMappings.Add("预定返程时间", "预定返程时间");
            tableMapping.ColumnMappings.Add("交通工具", "交通工具");
            tableMapping.ColumnMappings.Add("预计招待费", "预计招待费");
            tableMapping.ColumnMappings.Add("预计其他费用", "预计其他费用");
            tableMapping.ColumnMappings.Add("是否借款", "是否借款");
            tableMapping.ColumnMappings.Add("借款金额", "借款金额");
            tableMapping.ColumnMappings.Add("是否在预算范围内", "是否在预算范围内");
            tableMapping.ColumnMappings.Add("部门负责人", "部门负责人");
            tableMapping.ColumnMappings.Add("签定时间", "签定时间");
            tableMapping.ColumnMappings.Add("分管领导", "分管领导");
            tableMapping.ColumnMappings.Add("领导签定时间", "领导签定时间");
            tableMapping.ColumnMappings.Add("总经理", "总经理");
            tableMapping.ColumnMappings.Add("总经理签定时间", "总经理签定时间");
            tableMapping.ColumnMappings.Add("是否批准", "是否批准");
            tableMapping.ColumnMappings.Add("销差确认人", "销差确认人");
            tableMapping.ColumnMappings.Add("销差确认时间", "销差确认时间");
            tableMapping.ColumnMappings.Add("实际出发时间", "实际出发时间");
            tableMapping.ColumnMappings.Add("实际返程时间", "实际返程时间");
            tableMapping.ColumnMappings.Add("部门编码", "部门编码");
            tableMapping.ColumnMappings.Add("出差结果说明", "出差结果说明");
            tableMapping.ColumnMappings.Add("大写金额", "大写金额");
            tableMapping.ColumnMappings.Add("出差人员", "出差人员");
            tableMapping.ColumnMappings.Add("关联部门", "关联部门");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 编号, 单据状态, 员工编号, 申请人姓名, 申请时间, 申请部门, 出差目的, 预定出发时间, 预定返程时间, 交通工具, 预计招待费, 预计其他" +
                "费用, 是否借款, 借款金额, 是否在预算范围内, 部门负责人, 签定时间, 分管领导, 领导签定时间, 总经理, 总经理签定时间, 是否批准, 销差确认人, " +
                "销差确认时间, 实际出发时间, 实际返程时间, 部门编码, 出差结果说明, 大写金额, 关联部门, 出差人员 FROM View_HR_OnBusinessBi" +
                "ll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_HR_OnBusinessBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_HR_OnBusinessBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_HR_OnBusinessBillDataTable dataTable = new DepotManagementDataSet.View_HR_OnBusinessBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HR_PersonnelArchiveListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HR_PersonnelArchiveListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HR_PersonnelArchiveList";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("workID", "workID");
            tableMapping.ColumnMappings.Add("RewardPunish", "RewardPunish");
            tableMapping.ColumnMappings.Add("Regularization", "Regularization");
            tableMapping.ColumnMappings.Add("Performance", "Performance");
            tableMapping.ColumnMappings.Add("Dimission", "Dimission");
            tableMapping.ColumnMappings.Add("DimissionView", "DimissionView");
            tableMapping.ColumnMappings.Add("IsMedicalHistory", "IsMedicalHistory");
            tableMapping.ColumnMappings.Add("MedicalHistory", "MedicalHistory");
            tableMapping.ColumnMappings.Add("InMedicalHistory", "InMedicalHistory");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HR_PersonnelArchiveList] WHERE (([ID] = @Original_ID) AND ([wo" +
                "rkID] = @Original_workID) AND ((@IsNull_IsMedicalHistory = 1 AND [IsMedicalHisto" +
                "ry] IS NULL) OR ([IsMedicalHistory] = @Original_IsMedicalHistory)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_workID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "workID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsMedicalHistory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMedicalHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HR_PersonnelArchiveList] ([workID], [RewardPunish], [Regularization], [Performance], [Dimission], [DimissionView], [IsMedicalHistory], [MedicalHistory], [InMedicalHistory]) VALUES (@workID, @RewardPunish, @Regularization, @Performance, @Dimission, @DimissionView, @IsMedicalHistory, @MedicalHistory, @InMedicalHistory);
SELECT ID, workID, RewardPunish, Regularization, Performance, Dimission, DimissionView, IsMedicalHistory, MedicalHistory, InMedicalHistory FROM HR_PersonnelArchiveList WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@workID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "workID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RewardPunish", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RewardPunish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regularization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regularization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Performance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Performance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimission", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DimissionView", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DimissionView", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMedicalHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InMedicalHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InMedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HR_PersonnelArchiveList] SET [workID] = @workID, [RewardPunish] = @RewardPunish, [Regularization] = @Regularization, [Performance] = @Performance, [Dimission] = @Dimission, [DimissionView] = @DimissionView, [IsMedicalHistory] = @IsMedicalHistory, [MedicalHistory] = @MedicalHistory, [InMedicalHistory] = @InMedicalHistory WHERE (([ID] = @Original_ID) AND ([workID] = @Original_workID) AND ((@IsNull_IsMedicalHistory = 1 AND [IsMedicalHistory] IS NULL) OR ([IsMedicalHistory] = @Original_IsMedicalHistory)));
SELECT ID, workID, RewardPunish, Regularization, Performance, Dimission, DimissionView, IsMedicalHistory, MedicalHistory, InMedicalHistory FROM HR_PersonnelArchiveList WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@workID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "workID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RewardPunish", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RewardPunish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regularization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regularization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Performance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Performance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimission", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DimissionView", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DimissionView", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMedicalHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InMedicalHistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InMedicalHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_workID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "workID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsMedicalHistory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMedicalHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMedicalHistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Peripheral_HR.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, workID, RewardPunish, Regularization, Performance, Dimission, Dimissio" +
                "nView, IsMedicalHistory, MedicalHistory, InMedicalHistory FROM dbo.HR_PersonnelA" +
                "rchiveList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.HR_PersonnelArchiveListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.HR_PersonnelArchiveListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.HR_PersonnelArchiveListDataTable dataTable = new DepotManagementDataSet.HR_PersonnelArchiveListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.HR_PersonnelArchiveListDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HR_PersonnelArchiveList");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_workID, global::System.Nullable<bool> Original_IsMedicalHistory) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_workID == null)) {
                throw new global::System.ArgumentNullException("Original_workID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_workID));
            }
            if ((Original_IsMedicalHistory.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_IsMedicalHistory.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string workID, string RewardPunish, string Regularization, string Performance, string Dimission, string DimissionView, global::System.Nullable<bool> IsMedicalHistory, string MedicalHistory, string InMedicalHistory) {
            if ((workID == null)) {
                throw new global::System.ArgumentNullException("workID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(workID));
            }
            if ((RewardPunish == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RewardPunish));
            }
            if ((Regularization == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Regularization));
            }
            if ((Performance == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Performance));
            }
            if ((Dimission == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Dimission));
            }
            if ((DimissionView == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DimissionView));
            }
            if ((IsMedicalHistory.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(IsMedicalHistory.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MedicalHistory == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MedicalHistory));
            }
            if ((InMedicalHistory == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(InMedicalHistory));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string workID, string RewardPunish, string Regularization, string Performance, string Dimission, string DimissionView, global::System.Nullable<bool> IsMedicalHistory, string MedicalHistory, string InMedicalHistory, int Original_ID, string Original_workID, global::System.Nullable<bool> Original_IsMedicalHistory, int ID) {
            if ((workID == null)) {
                throw new global::System.ArgumentNullException("workID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(workID));
            }
            if ((RewardPunish == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RewardPunish));
            }
            if ((Regularization == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Regularization));
            }
            if ((Performance == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Performance));
            }
            if ((Dimission == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Dimission));
            }
            if ((DimissionView == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DimissionView));
            }
            if ((IsMedicalHistory.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(IsMedicalHistory.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MedicalHistory == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MedicalHistory));
            }
            if ((InMedicalHistory == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(InMedicalHistory));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            if ((Original_workID == null)) {
                throw new global::System.ArgumentNullException("Original_workID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_workID));
            }
            if ((Original_IsMedicalHistory.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_IsMedicalHistory.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string workID, string RewardPunish, string Regularization, string Performance, string Dimission, string DimissionView, global::System.Nullable<bool> IsMedicalHistory, string MedicalHistory, string InMedicalHistory, int Original_ID, string Original_workID, global::System.Nullable<bool> Original_IsMedicalHistory) {
            return this.Update(workID, RewardPunish, Regularization, Performance, Dimission, DimissionView, IsMedicalHistory, MedicalHistory, InMedicalHistory, Original_ID, Original_workID, Original_IsMedicalHistory, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private HR_LeaveBillTableAdapter _hR_LeaveBillTableAdapter;
        
        private HR_LeaveTypeTableAdapter _hR_LeaveTypeTableAdapter;
        
        private HR_OnBusinessPersonnelTableAdapter _hR_OnBusinessPersonnelTableAdapter;
        
        private HR_OnBusinessScheduleTableAdapter _hR_OnBusinessScheduleTableAdapter;
        
        private HR_PersonnelArchiveTableAdapter _hR_PersonnelArchiveTableAdapter;
        
        private HR_PersonnelArchiveChangeTableAdapter _hR_PersonnelArchiveChangeTableAdapter;
        
        private HR_PersonnelStatusTableAdapter _hR_PersonnelStatusTableAdapter;
        
        private HR_ResumeTableAdapter _hR_ResumeTableAdapter;
        
        private HR_WorkSchedulingTableAdapter _hR_WorkSchedulingTableAdapter;
        
        private HR_OnBusinessBillTableAdapter _hR_OnBusinessBillTableAdapter;
        
        private HR_PostTypeTableAdapter _hR_PostTypeTableAdapter;
        
        private HR_PersonnelArchiveListTableAdapter _hR_PersonnelArchiveListTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_LeaveBillTableAdapter HR_LeaveBillTableAdapter {
            get {
                return this._hR_LeaveBillTableAdapter;
            }
            set {
                this._hR_LeaveBillTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_LeaveTypeTableAdapter HR_LeaveTypeTableAdapter {
            get {
                return this._hR_LeaveTypeTableAdapter;
            }
            set {
                this._hR_LeaveTypeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_OnBusinessPersonnelTableAdapter HR_OnBusinessPersonnelTableAdapter {
            get {
                return this._hR_OnBusinessPersonnelTableAdapter;
            }
            set {
                this._hR_OnBusinessPersonnelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_OnBusinessScheduleTableAdapter HR_OnBusinessScheduleTableAdapter {
            get {
                return this._hR_OnBusinessScheduleTableAdapter;
            }
            set {
                this._hR_OnBusinessScheduleTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_PersonnelArchiveTableAdapter HR_PersonnelArchiveTableAdapter {
            get {
                return this._hR_PersonnelArchiveTableAdapter;
            }
            set {
                this._hR_PersonnelArchiveTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_PersonnelArchiveChangeTableAdapter HR_PersonnelArchiveChangeTableAdapter {
            get {
                return this._hR_PersonnelArchiveChangeTableAdapter;
            }
            set {
                this._hR_PersonnelArchiveChangeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_PersonnelStatusTableAdapter HR_PersonnelStatusTableAdapter {
            get {
                return this._hR_PersonnelStatusTableAdapter;
            }
            set {
                this._hR_PersonnelStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_ResumeTableAdapter HR_ResumeTableAdapter {
            get {
                return this._hR_ResumeTableAdapter;
            }
            set {
                this._hR_ResumeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_WorkSchedulingTableAdapter HR_WorkSchedulingTableAdapter {
            get {
                return this._hR_WorkSchedulingTableAdapter;
            }
            set {
                this._hR_WorkSchedulingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_OnBusinessBillTableAdapter HR_OnBusinessBillTableAdapter {
            get {
                return this._hR_OnBusinessBillTableAdapter;
            }
            set {
                this._hR_OnBusinessBillTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_PostTypeTableAdapter HR_PostTypeTableAdapter {
            get {
                return this._hR_PostTypeTableAdapter;
            }
            set {
                this._hR_PostTypeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HR_PersonnelArchiveListTableAdapter HR_PersonnelArchiveListTableAdapter {
            get {
                return this._hR_PersonnelArchiveListTableAdapter;
            }
            set {
                this._hR_PersonnelArchiveListTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._hR_LeaveBillTableAdapter != null) 
                            && (this._hR_LeaveBillTableAdapter.Connection != null))) {
                    return this._hR_LeaveBillTableAdapter.Connection;
                }
                if (((this._hR_LeaveTypeTableAdapter != null) 
                            && (this._hR_LeaveTypeTableAdapter.Connection != null))) {
                    return this._hR_LeaveTypeTableAdapter.Connection;
                }
                if (((this._hR_OnBusinessPersonnelTableAdapter != null) 
                            && (this._hR_OnBusinessPersonnelTableAdapter.Connection != null))) {
                    return this._hR_OnBusinessPersonnelTableAdapter.Connection;
                }
                if (((this._hR_OnBusinessScheduleTableAdapter != null) 
                            && (this._hR_OnBusinessScheduleTableAdapter.Connection != null))) {
                    return this._hR_OnBusinessScheduleTableAdapter.Connection;
                }
                if (((this._hR_PersonnelArchiveTableAdapter != null) 
                            && (this._hR_PersonnelArchiveTableAdapter.Connection != null))) {
                    return this._hR_PersonnelArchiveTableAdapter.Connection;
                }
                if (((this._hR_PersonnelArchiveChangeTableAdapter != null) 
                            && (this._hR_PersonnelArchiveChangeTableAdapter.Connection != null))) {
                    return this._hR_PersonnelArchiveChangeTableAdapter.Connection;
                }
                if (((this._hR_PersonnelStatusTableAdapter != null) 
                            && (this._hR_PersonnelStatusTableAdapter.Connection != null))) {
                    return this._hR_PersonnelStatusTableAdapter.Connection;
                }
                if (((this._hR_ResumeTableAdapter != null) 
                            && (this._hR_ResumeTableAdapter.Connection != null))) {
                    return this._hR_ResumeTableAdapter.Connection;
                }
                if (((this._hR_WorkSchedulingTableAdapter != null) 
                            && (this._hR_WorkSchedulingTableAdapter.Connection != null))) {
                    return this._hR_WorkSchedulingTableAdapter.Connection;
                }
                if (((this._hR_OnBusinessBillTableAdapter != null) 
                            && (this._hR_OnBusinessBillTableAdapter.Connection != null))) {
                    return this._hR_OnBusinessBillTableAdapter.Connection;
                }
                if (((this._hR_PostTypeTableAdapter != null) 
                            && (this._hR_PostTypeTableAdapter.Connection != null))) {
                    return this._hR_PostTypeTableAdapter.Connection;
                }
                if (((this._hR_PersonnelArchiveListTableAdapter != null) 
                            && (this._hR_PersonnelArchiveListTableAdapter.Connection != null))) {
                    return this._hR_PersonnelArchiveListTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._hR_LeaveBillTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_LeaveTypeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_PersonnelStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_ResumeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_WorkSchedulingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_OnBusinessBillTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_PostTypeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._hR_PersonnelStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_PersonnelStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_PersonnelStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_ResumeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_Resume.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_ResumeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_PersonnelArchive.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_OnBusinessBillTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_OnBusinessBill.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_OnBusinessBillTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_LeaveTypeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_LeaveType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_LeaveTypeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_PostTypeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_PostType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_PostTypeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_PersonnelArchiveList.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveListTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_OnBusinessSchedule.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_OnBusinessScheduleTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_OnBusinessPersonnel.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_OnBusinessPersonnelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_LeaveBillTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_LeaveBill.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_LeaveBillTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_PersonnelArchiveChange.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveChangeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hR_WorkSchedulingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HR_WorkScheduling.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hR_WorkSchedulingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._hR_PersonnelStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_PersonnelStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_PersonnelStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_ResumeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_Resume.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_ResumeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_PersonnelArchive.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_OnBusinessBillTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_OnBusinessBill.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_OnBusinessBillTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_LeaveTypeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_LeaveType.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_LeaveTypeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_PostTypeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_PostType.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_PostTypeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_PersonnelArchiveList.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveListTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_OnBusinessSchedule.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_OnBusinessScheduleTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_OnBusinessPersonnel.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_OnBusinessPersonnelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_LeaveBillTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_LeaveBill.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_LeaveBillTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_PersonnelArchiveChange.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveChangeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hR_WorkSchedulingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HR_WorkScheduling.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hR_WorkSchedulingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._hR_WorkSchedulingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_WorkScheduling.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_WorkSchedulingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_PersonnelArchiveChange.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveChangeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_LeaveBillTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_LeaveBill.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_LeaveBillTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_OnBusinessPersonnel.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_OnBusinessPersonnelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_OnBusinessSchedule.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_OnBusinessScheduleTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_PersonnelArchiveList.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveListTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_PostTypeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_PostType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_PostTypeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_LeaveTypeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_LeaveType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_LeaveTypeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_OnBusinessBillTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_OnBusinessBill.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_OnBusinessBillTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_PersonnelArchive.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_PersonnelArchiveTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_ResumeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_Resume.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_ResumeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hR_PersonnelStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HR_PersonnelStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hR_PersonnelStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DepotManagementDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._hR_LeaveBillTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_LeaveBillTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_LeaveTypeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_LeaveTypeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_OnBusinessPersonnelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_OnBusinessPersonnelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_OnBusinessScheduleTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_OnBusinessScheduleTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_PersonnelArchiveTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_PersonnelArchiveTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_PersonnelArchiveChangeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_PersonnelArchiveChangeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_PersonnelStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_PersonnelStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_ResumeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_ResumeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_WorkSchedulingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_WorkSchedulingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_OnBusinessBillTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_OnBusinessBillTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_PostTypeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_PostTypeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._hR_PersonnelArchiveListTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hR_PersonnelArchiveListTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._hR_LeaveBillTableAdapter != null)) {
                    revertConnections.Add(this._hR_LeaveBillTableAdapter, this._hR_LeaveBillTableAdapter.Connection);
                    this._hR_LeaveBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_LeaveBillTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_LeaveBillTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_LeaveBillTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_LeaveBillTableAdapter.Adapter);
                    }
                }
                if ((this._hR_LeaveTypeTableAdapter != null)) {
                    revertConnections.Add(this._hR_LeaveTypeTableAdapter, this._hR_LeaveTypeTableAdapter.Connection);
                    this._hR_LeaveTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_LeaveTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_LeaveTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_LeaveTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_LeaveTypeTableAdapter.Adapter);
                    }
                }
                if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                    revertConnections.Add(this._hR_OnBusinessPersonnelTableAdapter, this._hR_OnBusinessPersonnelTableAdapter.Connection);
                    this._hR_OnBusinessPersonnelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_OnBusinessPersonnelTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_OnBusinessPersonnelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_OnBusinessPersonnelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_OnBusinessPersonnelTableAdapter.Adapter);
                    }
                }
                if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                    revertConnections.Add(this._hR_OnBusinessScheduleTableAdapter, this._hR_OnBusinessScheduleTableAdapter.Connection);
                    this._hR_OnBusinessScheduleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_OnBusinessScheduleTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_OnBusinessScheduleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_OnBusinessScheduleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_OnBusinessScheduleTableAdapter.Adapter);
                    }
                }
                if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                    revertConnections.Add(this._hR_PersonnelArchiveTableAdapter, this._hR_PersonnelArchiveTableAdapter.Connection);
                    this._hR_PersonnelArchiveTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_PersonnelArchiveTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_PersonnelArchiveTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_PersonnelArchiveTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_PersonnelArchiveTableAdapter.Adapter);
                    }
                }
                if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                    revertConnections.Add(this._hR_PersonnelArchiveChangeTableAdapter, this._hR_PersonnelArchiveChangeTableAdapter.Connection);
                    this._hR_PersonnelArchiveChangeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_PersonnelArchiveChangeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_PersonnelArchiveChangeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_PersonnelArchiveChangeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_PersonnelArchiveChangeTableAdapter.Adapter);
                    }
                }
                if ((this._hR_PersonnelStatusTableAdapter != null)) {
                    revertConnections.Add(this._hR_PersonnelStatusTableAdapter, this._hR_PersonnelStatusTableAdapter.Connection);
                    this._hR_PersonnelStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_PersonnelStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_PersonnelStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_PersonnelStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_PersonnelStatusTableAdapter.Adapter);
                    }
                }
                if ((this._hR_ResumeTableAdapter != null)) {
                    revertConnections.Add(this._hR_ResumeTableAdapter, this._hR_ResumeTableAdapter.Connection);
                    this._hR_ResumeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_ResumeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_ResumeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_ResumeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_ResumeTableAdapter.Adapter);
                    }
                }
                if ((this._hR_WorkSchedulingTableAdapter != null)) {
                    revertConnections.Add(this._hR_WorkSchedulingTableAdapter, this._hR_WorkSchedulingTableAdapter.Connection);
                    this._hR_WorkSchedulingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_WorkSchedulingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_WorkSchedulingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_WorkSchedulingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_WorkSchedulingTableAdapter.Adapter);
                    }
                }
                if ((this._hR_OnBusinessBillTableAdapter != null)) {
                    revertConnections.Add(this._hR_OnBusinessBillTableAdapter, this._hR_OnBusinessBillTableAdapter.Connection);
                    this._hR_OnBusinessBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_OnBusinessBillTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_OnBusinessBillTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_OnBusinessBillTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_OnBusinessBillTableAdapter.Adapter);
                    }
                }
                if ((this._hR_PostTypeTableAdapter != null)) {
                    revertConnections.Add(this._hR_PostTypeTableAdapter, this._hR_PostTypeTableAdapter.Connection);
                    this._hR_PostTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_PostTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_PostTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_PostTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_PostTypeTableAdapter.Adapter);
                    }
                }
                if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                    revertConnections.Add(this._hR_PersonnelArchiveListTableAdapter, this._hR_PersonnelArchiveListTableAdapter.Connection);
                    this._hR_PersonnelArchiveListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hR_PersonnelArchiveListTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hR_PersonnelArchiveListTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hR_PersonnelArchiveListTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hR_PersonnelArchiveListTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._hR_LeaveBillTableAdapter != null)) {
                    this._hR_LeaveBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_LeaveBillTableAdapter]));
                    this._hR_LeaveBillTableAdapter.Transaction = null;
                }
                if ((this._hR_LeaveTypeTableAdapter != null)) {
                    this._hR_LeaveTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_LeaveTypeTableAdapter]));
                    this._hR_LeaveTypeTableAdapter.Transaction = null;
                }
                if ((this._hR_OnBusinessPersonnelTableAdapter != null)) {
                    this._hR_OnBusinessPersonnelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_OnBusinessPersonnelTableAdapter]));
                    this._hR_OnBusinessPersonnelTableAdapter.Transaction = null;
                }
                if ((this._hR_OnBusinessScheduleTableAdapter != null)) {
                    this._hR_OnBusinessScheduleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_OnBusinessScheduleTableAdapter]));
                    this._hR_OnBusinessScheduleTableAdapter.Transaction = null;
                }
                if ((this._hR_PersonnelArchiveTableAdapter != null)) {
                    this._hR_PersonnelArchiveTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_PersonnelArchiveTableAdapter]));
                    this._hR_PersonnelArchiveTableAdapter.Transaction = null;
                }
                if ((this._hR_PersonnelArchiveChangeTableAdapter != null)) {
                    this._hR_PersonnelArchiveChangeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_PersonnelArchiveChangeTableAdapter]));
                    this._hR_PersonnelArchiveChangeTableAdapter.Transaction = null;
                }
                if ((this._hR_PersonnelStatusTableAdapter != null)) {
                    this._hR_PersonnelStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_PersonnelStatusTableAdapter]));
                    this._hR_PersonnelStatusTableAdapter.Transaction = null;
                }
                if ((this._hR_ResumeTableAdapter != null)) {
                    this._hR_ResumeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_ResumeTableAdapter]));
                    this._hR_ResumeTableAdapter.Transaction = null;
                }
                if ((this._hR_WorkSchedulingTableAdapter != null)) {
                    this._hR_WorkSchedulingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_WorkSchedulingTableAdapter]));
                    this._hR_WorkSchedulingTableAdapter.Transaction = null;
                }
                if ((this._hR_OnBusinessBillTableAdapter != null)) {
                    this._hR_OnBusinessBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_OnBusinessBillTableAdapter]));
                    this._hR_OnBusinessBillTableAdapter.Transaction = null;
                }
                if ((this._hR_PostTypeTableAdapter != null)) {
                    this._hR_PostTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_PostTypeTableAdapter]));
                    this._hR_PostTypeTableAdapter.Transaction = null;
                }
                if ((this._hR_PersonnelArchiveListTableAdapter != null)) {
                    this._hR_PersonnelArchiveListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hR_PersonnelArchiveListTableAdapter]));
                    this._hR_PersonnelArchiveListTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591