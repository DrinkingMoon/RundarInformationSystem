//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3655
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Expression {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DepotManagementDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DepotManagementDataSet : global::System.Data.DataSet {
        
        private S_ReceiveSendSaveGatherBillDataTable tableS_ReceiveSendSaveGatherBill;
        
        private View_S_FetchGoodsWithdrawDepotBillDataTable tableView_S_FetchGoodsWithdrawDepotBill;
        
        private View_S_MaterialRequisitionGoodsDataTable tableView_S_MaterialRequisitionGoods;
        
        private View_S_OrdinaryInDepotBillDataTable tableView_S_OrdinaryInDepotBill;
        
        private View_B_BargainGoodsDataTable tableView_B_BargainGoods;
        
        private View_B_BargainInfoDataTable tableView_B_BargainInfo;
        
        private View_S_StockDataTable tableView_S_Stock;
        
        private View_S_MaterialRequisitionDataTable tableView_S_MaterialRequisition;
        
        private View_S_ScrapBillDataTable tableView_S_ScrapBill;
        
        private View_S_MaterialReturnedInTheDepotDataTable tableView_S_MaterialReturnedInTheDepot;
        
        private View_S_MaterialListRejectBillDataTable tableView_S_MaterialListRejectBill;
        
        private View_S_MaterialRejectBillDataTable tableView_S_MaterialRejectBill;
        
        private View_S_FetchGoodsDetailBillDataTable tableView_S_FetchGoodsDetailBill;
        
        private View_S_FetchGoodsSummaryTableDataTable tableView_S_FetchGoodsSummaryTable;
        
        private View_S_InDepotDetailBillDataTable tableView_S_InDepotDetailBill;
        
        private View_S_InDepotSummaryTableDataTable tableView_S_InDepotSummaryTable;
        
        private View_S_OrdinaryInDepotGoodsBillDataTable tableView_S_OrdinaryInDepotGoodsBill;
        
        private S_MaterialRequisitionGoodsDataTable tableS_MaterialRequisitionGoods;
        
        private View_S_PrintBillDataTable tableView_S_PrintBill;
        
        private View_S_MarketingAllDataTable tableView_S_MarketingAll;
        
        private View_S_CannibalizeDataTable tableView_S_Cannibalize;
        
        private View_S_CheckReturnRepairBillDataTable tableView_S_CheckReturnRepairBill;
        
        private View_S_IsolationManageBillDataTable tableView_S_IsolationManageBill;
        
        private View_S_MessMessageFeedbackBillDataTable tableView_S_MessMessageFeedbackBill;
        
        private View_S_StorageCheckDataTable tableView_S_StorageCheck;
        
        private View_S_ReportForStorageCheckDataTable tableView_S_ReportForStorageCheck;
        
        private View_S_MaterialListReturnedInTheDepotDataTable tableView_S_MaterialListReturnedInTheDepot;
        
        private View_S_ALLMessMessageFeedbackDataTable tableView_S_ALLMessMessageFeedback;
        
        private View_S_MarketingPlanBillDataTable tableView_S_MarketingPlanBill;
        
        private View_S_MarketingPlanListDataTable tableView_S_MarketingPlanList;
        
        private View_P_DeliveryInspectionDataTable tableView_P_DeliveryInspection;
        
        private View_P_DeliveryInspectionItemsDataTable tableView_P_DeliveryInspectionItems;
        
        private View_Report_DeliveryInspectionDataTable tableView_Report_DeliveryInspection;
        
        private View_S_CheckOutInDepotBillDataTable tableView_S_CheckOutInDepotBill;
        
        private S_HomemadeRejectBillDataTable tableS_HomemadeRejectBill;
        
        private S_HomemadeRejectListDataTable tableS_HomemadeRejectList;
        
        private View_S_HomemadeRejectBillDataTable tableView_S_HomemadeRejectBill;
        
        private View_S_HomemadeRejectListDataTable tableView_S_HomemadeRejectList;
        
        private View_S_FrockInDepotBillDataTable tableView_S_FrockInDepotBill;
        
        private View_S_FrockInDepotGoodsBillDataTable tableView_S_FrockInDepotGoodsBill;
        
        private S_FrockProvingReportDataTable tableS_FrockProvingReport;
        
        private S_FrockProvingReportAttachedDataTable tableS_FrockProvingReportAttached;
        
        private View_S_FrockProvingReportDataTable tableView_S_FrockProvingReport;
        
        private View_S_ScrapGoodsDataTable tableView_S_ScrapGoods;
        
        private View_Out_ManeuverBillDataTable tableView_Out_ManeuverBill;
        
        private View_Out_ManeuverListDataTable tableView_Out_ManeuverList;
        
        private View_S_HomemadePartBillDataTable tableView_S_HomemadePartBill;
        
        private View_S_CheckOutInDepotForOutsourcingBillDataTable tableView_S_CheckOutInDepotForOutsourcingBill;
        
        private 领料单汇总签字表DataTable table领料单汇总签字表;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepotManagementDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DepotManagementDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["S_ReceiveSendSaveGatherBill"] != null)) {
                    base.Tables.Add(new S_ReceiveSendSaveGatherBillDataTable(ds.Tables["S_ReceiveSendSaveGatherBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsWithdrawDepotBill"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsWithdrawDepotBillDataTable(ds.Tables["View_S_FetchGoodsWithdrawDepotBill"]));
                }
                if ((ds.Tables["View_S_MaterialRequisitionGoods"] != null)) {
                    base.Tables.Add(new View_S_MaterialRequisitionGoodsDataTable(ds.Tables["View_S_MaterialRequisitionGoods"]));
                }
                if ((ds.Tables["View_S_OrdinaryInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_OrdinaryInDepotBillDataTable(ds.Tables["View_S_OrdinaryInDepotBill"]));
                }
                if ((ds.Tables["View_B_BargainGoods"] != null)) {
                    base.Tables.Add(new View_B_BargainGoodsDataTable(ds.Tables["View_B_BargainGoods"]));
                }
                if ((ds.Tables["View_B_BargainInfo"] != null)) {
                    base.Tables.Add(new View_B_BargainInfoDataTable(ds.Tables["View_B_BargainInfo"]));
                }
                if ((ds.Tables["View_S_Stock"] != null)) {
                    base.Tables.Add(new View_S_StockDataTable(ds.Tables["View_S_Stock"]));
                }
                if ((ds.Tables["View_S_MaterialRequisition"] != null)) {
                    base.Tables.Add(new View_S_MaterialRequisitionDataTable(ds.Tables["View_S_MaterialRequisition"]));
                }
                if ((ds.Tables["View_S_ScrapBill"] != null)) {
                    base.Tables.Add(new View_S_ScrapBillDataTable(ds.Tables["View_S_ScrapBill"]));
                }
                if ((ds.Tables["View_S_MaterialReturnedInTheDepot"] != null)) {
                    base.Tables.Add(new View_S_MaterialReturnedInTheDepotDataTable(ds.Tables["View_S_MaterialReturnedInTheDepot"]));
                }
                if ((ds.Tables["View_S_MaterialListRejectBill"] != null)) {
                    base.Tables.Add(new View_S_MaterialListRejectBillDataTable(ds.Tables["View_S_MaterialListRejectBill"]));
                }
                if ((ds.Tables["View_S_MaterialRejectBill"] != null)) {
                    base.Tables.Add(new View_S_MaterialRejectBillDataTable(ds.Tables["View_S_MaterialRejectBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsDetailBill"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsDetailBillDataTable(ds.Tables["View_S_FetchGoodsDetailBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsSummaryTable"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsSummaryTableDataTable(ds.Tables["View_S_FetchGoodsSummaryTable"]));
                }
                if ((ds.Tables["View_S_InDepotDetailBill"] != null)) {
                    base.Tables.Add(new View_S_InDepotDetailBillDataTable(ds.Tables["View_S_InDepotDetailBill"]));
                }
                if ((ds.Tables["View_S_InDepotSummaryTable"] != null)) {
                    base.Tables.Add(new View_S_InDepotSummaryTableDataTable(ds.Tables["View_S_InDepotSummaryTable"]));
                }
                if ((ds.Tables["View_S_OrdinaryInDepotGoodsBill"] != null)) {
                    base.Tables.Add(new View_S_OrdinaryInDepotGoodsBillDataTable(ds.Tables["View_S_OrdinaryInDepotGoodsBill"]));
                }
                if ((ds.Tables["S_MaterialRequisitionGoods"] != null)) {
                    base.Tables.Add(new S_MaterialRequisitionGoodsDataTable(ds.Tables["S_MaterialRequisitionGoods"]));
                }
                if ((ds.Tables["View_S_PrintBill"] != null)) {
                    base.Tables.Add(new View_S_PrintBillDataTable(ds.Tables["View_S_PrintBill"]));
                }
                if ((ds.Tables["View_S_MarketingAll"] != null)) {
                    base.Tables.Add(new View_S_MarketingAllDataTable(ds.Tables["View_S_MarketingAll"]));
                }
                if ((ds.Tables["View_S_Cannibalize"] != null)) {
                    base.Tables.Add(new View_S_CannibalizeDataTable(ds.Tables["View_S_Cannibalize"]));
                }
                if ((ds.Tables["View_S_CheckReturnRepairBill"] != null)) {
                    base.Tables.Add(new View_S_CheckReturnRepairBillDataTable(ds.Tables["View_S_CheckReturnRepairBill"]));
                }
                if ((ds.Tables["View_S_IsolationManageBill"] != null)) {
                    base.Tables.Add(new View_S_IsolationManageBillDataTable(ds.Tables["View_S_IsolationManageBill"]));
                }
                if ((ds.Tables["View_S_MessMessageFeedbackBill"] != null)) {
                    base.Tables.Add(new View_S_MessMessageFeedbackBillDataTable(ds.Tables["View_S_MessMessageFeedbackBill"]));
                }
                if ((ds.Tables["View_S_StorageCheck"] != null)) {
                    base.Tables.Add(new View_S_StorageCheckDataTable(ds.Tables["View_S_StorageCheck"]));
                }
                if ((ds.Tables["View_S_ReportForStorageCheck"] != null)) {
                    base.Tables.Add(new View_S_ReportForStorageCheckDataTable(ds.Tables["View_S_ReportForStorageCheck"]));
                }
                if ((ds.Tables["View_S_MaterialListReturnedInTheDepot"] != null)) {
                    base.Tables.Add(new View_S_MaterialListReturnedInTheDepotDataTable(ds.Tables["View_S_MaterialListReturnedInTheDepot"]));
                }
                if ((ds.Tables["View_S_ALLMessMessageFeedback"] != null)) {
                    base.Tables.Add(new View_S_ALLMessMessageFeedbackDataTable(ds.Tables["View_S_ALLMessMessageFeedback"]));
                }
                if ((ds.Tables["View_S_MarketingPlanBill"] != null)) {
                    base.Tables.Add(new View_S_MarketingPlanBillDataTable(ds.Tables["View_S_MarketingPlanBill"]));
                }
                if ((ds.Tables["View_S_MarketingPlanList"] != null)) {
                    base.Tables.Add(new View_S_MarketingPlanListDataTable(ds.Tables["View_S_MarketingPlanList"]));
                }
                if ((ds.Tables["View_P_DeliveryInspection"] != null)) {
                    base.Tables.Add(new View_P_DeliveryInspectionDataTable(ds.Tables["View_P_DeliveryInspection"]));
                }
                if ((ds.Tables["View_P_DeliveryInspectionItems"] != null)) {
                    base.Tables.Add(new View_P_DeliveryInspectionItemsDataTable(ds.Tables["View_P_DeliveryInspectionItems"]));
                }
                if ((ds.Tables["View_Report_DeliveryInspection"] != null)) {
                    base.Tables.Add(new View_Report_DeliveryInspectionDataTable(ds.Tables["View_Report_DeliveryInspection"]));
                }
                if ((ds.Tables["View_S_CheckOutInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_CheckOutInDepotBillDataTable(ds.Tables["View_S_CheckOutInDepotBill"]));
                }
                if ((ds.Tables["S_HomemadeRejectBill"] != null)) {
                    base.Tables.Add(new S_HomemadeRejectBillDataTable(ds.Tables["S_HomemadeRejectBill"]));
                }
                if ((ds.Tables["S_HomemadeRejectList"] != null)) {
                    base.Tables.Add(new S_HomemadeRejectListDataTable(ds.Tables["S_HomemadeRejectList"]));
                }
                if ((ds.Tables["View_S_HomemadeRejectBill"] != null)) {
                    base.Tables.Add(new View_S_HomemadeRejectBillDataTable(ds.Tables["View_S_HomemadeRejectBill"]));
                }
                if ((ds.Tables["View_S_HomemadeRejectList"] != null)) {
                    base.Tables.Add(new View_S_HomemadeRejectListDataTable(ds.Tables["View_S_HomemadeRejectList"]));
                }
                if ((ds.Tables["View_S_FrockInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_FrockInDepotBillDataTable(ds.Tables["View_S_FrockInDepotBill"]));
                }
                if ((ds.Tables["View_S_FrockInDepotGoodsBill"] != null)) {
                    base.Tables.Add(new View_S_FrockInDepotGoodsBillDataTable(ds.Tables["View_S_FrockInDepotGoodsBill"]));
                }
                if ((ds.Tables["S_FrockProvingReport"] != null)) {
                    base.Tables.Add(new S_FrockProvingReportDataTable(ds.Tables["S_FrockProvingReport"]));
                }
                if ((ds.Tables["S_FrockProvingReportAttached"] != null)) {
                    base.Tables.Add(new S_FrockProvingReportAttachedDataTable(ds.Tables["S_FrockProvingReportAttached"]));
                }
                if ((ds.Tables["View_S_FrockProvingReport"] != null)) {
                    base.Tables.Add(new View_S_FrockProvingReportDataTable(ds.Tables["View_S_FrockProvingReport"]));
                }
                if ((ds.Tables["View_S_ScrapGoods"] != null)) {
                    base.Tables.Add(new View_S_ScrapGoodsDataTable(ds.Tables["View_S_ScrapGoods"]));
                }
                if ((ds.Tables["View_Out_ManeuverBill"] != null)) {
                    base.Tables.Add(new View_Out_ManeuverBillDataTable(ds.Tables["View_Out_ManeuverBill"]));
                }
                if ((ds.Tables["View_Out_ManeuverList"] != null)) {
                    base.Tables.Add(new View_Out_ManeuverListDataTable(ds.Tables["View_Out_ManeuverList"]));
                }
                if ((ds.Tables["View_S_HomemadePartBill"] != null)) {
                    base.Tables.Add(new View_S_HomemadePartBillDataTable(ds.Tables["View_S_HomemadePartBill"]));
                }
                if ((ds.Tables["View_S_CheckOutInDepotForOutsourcingBill"] != null)) {
                    base.Tables.Add(new View_S_CheckOutInDepotForOutsourcingBillDataTable(ds.Tables["View_S_CheckOutInDepotForOutsourcingBill"]));
                }
                if ((ds.Tables["领料单汇总签字表"] != null)) {
                    base.Tables.Add(new 领料单汇总签字表DataTable(ds.Tables["领料单汇总签字表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_ReceiveSendSaveGatherBillDataTable S_ReceiveSendSaveGatherBill {
            get {
                return this.tableS_ReceiveSendSaveGatherBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FetchGoodsWithdrawDepotBillDataTable View_S_FetchGoodsWithdrawDepotBill {
            get {
                return this.tableView_S_FetchGoodsWithdrawDepotBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialRequisitionGoodsDataTable View_S_MaterialRequisitionGoods {
            get {
                return this.tableView_S_MaterialRequisitionGoods;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_OrdinaryInDepotBillDataTable View_S_OrdinaryInDepotBill {
            get {
                return this.tableView_S_OrdinaryInDepotBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_B_BargainGoodsDataTable View_B_BargainGoods {
            get {
                return this.tableView_B_BargainGoods;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_B_BargainInfoDataTable View_B_BargainInfo {
            get {
                return this.tableView_B_BargainInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_StockDataTable View_S_Stock {
            get {
                return this.tableView_S_Stock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialRequisitionDataTable View_S_MaterialRequisition {
            get {
                return this.tableView_S_MaterialRequisition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_ScrapBillDataTable View_S_ScrapBill {
            get {
                return this.tableView_S_ScrapBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialReturnedInTheDepotDataTable View_S_MaterialReturnedInTheDepot {
            get {
                return this.tableView_S_MaterialReturnedInTheDepot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialListRejectBillDataTable View_S_MaterialListRejectBill {
            get {
                return this.tableView_S_MaterialListRejectBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialRejectBillDataTable View_S_MaterialRejectBill {
            get {
                return this.tableView_S_MaterialRejectBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FetchGoodsDetailBillDataTable View_S_FetchGoodsDetailBill {
            get {
                return this.tableView_S_FetchGoodsDetailBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FetchGoodsSummaryTableDataTable View_S_FetchGoodsSummaryTable {
            get {
                return this.tableView_S_FetchGoodsSummaryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_InDepotDetailBillDataTable View_S_InDepotDetailBill {
            get {
                return this.tableView_S_InDepotDetailBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_InDepotSummaryTableDataTable View_S_InDepotSummaryTable {
            get {
                return this.tableView_S_InDepotSummaryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_OrdinaryInDepotGoodsBillDataTable View_S_OrdinaryInDepotGoodsBill {
            get {
                return this.tableView_S_OrdinaryInDepotGoodsBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_MaterialRequisitionGoodsDataTable S_MaterialRequisitionGoods {
            get {
                return this.tableS_MaterialRequisitionGoods;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_PrintBillDataTable View_S_PrintBill {
            get {
                return this.tableView_S_PrintBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketingAllDataTable View_S_MarketingAll {
            get {
                return this.tableView_S_MarketingAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_CannibalizeDataTable View_S_Cannibalize {
            get {
                return this.tableView_S_Cannibalize;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_CheckReturnRepairBillDataTable View_S_CheckReturnRepairBill {
            get {
                return this.tableView_S_CheckReturnRepairBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_IsolationManageBillDataTable View_S_IsolationManageBill {
            get {
                return this.tableView_S_IsolationManageBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MessMessageFeedbackBillDataTable View_S_MessMessageFeedbackBill {
            get {
                return this.tableView_S_MessMessageFeedbackBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_StorageCheckDataTable View_S_StorageCheck {
            get {
                return this.tableView_S_StorageCheck;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_ReportForStorageCheckDataTable View_S_ReportForStorageCheck {
            get {
                return this.tableView_S_ReportForStorageCheck;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MaterialListReturnedInTheDepotDataTable View_S_MaterialListReturnedInTheDepot {
            get {
                return this.tableView_S_MaterialListReturnedInTheDepot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_ALLMessMessageFeedbackDataTable View_S_ALLMessMessageFeedback {
            get {
                return this.tableView_S_ALLMessMessageFeedback;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketingPlanBillDataTable View_S_MarketingPlanBill {
            get {
                return this.tableView_S_MarketingPlanBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketingPlanListDataTable View_S_MarketingPlanList {
            get {
                return this.tableView_S_MarketingPlanList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_P_DeliveryInspectionDataTable View_P_DeliveryInspection {
            get {
                return this.tableView_P_DeliveryInspection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_P_DeliveryInspectionItemsDataTable View_P_DeliveryInspectionItems {
            get {
                return this.tableView_P_DeliveryInspectionItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Report_DeliveryInspectionDataTable View_Report_DeliveryInspection {
            get {
                return this.tableView_Report_DeliveryInspection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_CheckOutInDepotBillDataTable View_S_CheckOutInDepotBill {
            get {
                return this.tableView_S_CheckOutInDepotBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_HomemadeRejectBillDataTable S_HomemadeRejectBill {
            get {
                return this.tableS_HomemadeRejectBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_HomemadeRejectListDataTable S_HomemadeRejectList {
            get {
                return this.tableS_HomemadeRejectList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_HomemadeRejectBillDataTable View_S_HomemadeRejectBill {
            get {
                return this.tableView_S_HomemadeRejectBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_HomemadeRejectListDataTable View_S_HomemadeRejectList {
            get {
                return this.tableView_S_HomemadeRejectList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FrockInDepotBillDataTable View_S_FrockInDepotBill {
            get {
                return this.tableView_S_FrockInDepotBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FrockInDepotGoodsBillDataTable View_S_FrockInDepotGoodsBill {
            get {
                return this.tableView_S_FrockInDepotGoodsBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_FrockProvingReportDataTable S_FrockProvingReport {
            get {
                return this.tableS_FrockProvingReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S_FrockProvingReportAttachedDataTable S_FrockProvingReportAttached {
            get {
                return this.tableS_FrockProvingReportAttached;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_FrockProvingReportDataTable View_S_FrockProvingReport {
            get {
                return this.tableView_S_FrockProvingReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_ScrapGoodsDataTable View_S_ScrapGoods {
            get {
                return this.tableView_S_ScrapGoods;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Out_ManeuverBillDataTable View_Out_ManeuverBill {
            get {
                return this.tableView_Out_ManeuverBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Out_ManeuverListDataTable View_Out_ManeuverList {
            get {
                return this.tableView_Out_ManeuverList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_HomemadePartBillDataTable View_S_HomemadePartBill {
            get {
                return this.tableView_S_HomemadePartBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_CheckOutInDepotForOutsourcingBillDataTable View_S_CheckOutInDepotForOutsourcingBill {
            get {
                return this.tableView_S_CheckOutInDepotForOutsourcingBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 领料单汇总签字表DataTable 领料单汇总签字表 {
            get {
                return this.table领料单汇总签字表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DepotManagementDataSet cln = ((DepotManagementDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["S_ReceiveSendSaveGatherBill"] != null)) {
                    base.Tables.Add(new S_ReceiveSendSaveGatherBillDataTable(ds.Tables["S_ReceiveSendSaveGatherBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsWithdrawDepotBill"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsWithdrawDepotBillDataTable(ds.Tables["View_S_FetchGoodsWithdrawDepotBill"]));
                }
                if ((ds.Tables["View_S_MaterialRequisitionGoods"] != null)) {
                    base.Tables.Add(new View_S_MaterialRequisitionGoodsDataTable(ds.Tables["View_S_MaterialRequisitionGoods"]));
                }
                if ((ds.Tables["View_S_OrdinaryInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_OrdinaryInDepotBillDataTable(ds.Tables["View_S_OrdinaryInDepotBill"]));
                }
                if ((ds.Tables["View_B_BargainGoods"] != null)) {
                    base.Tables.Add(new View_B_BargainGoodsDataTable(ds.Tables["View_B_BargainGoods"]));
                }
                if ((ds.Tables["View_B_BargainInfo"] != null)) {
                    base.Tables.Add(new View_B_BargainInfoDataTable(ds.Tables["View_B_BargainInfo"]));
                }
                if ((ds.Tables["View_S_Stock"] != null)) {
                    base.Tables.Add(new View_S_StockDataTable(ds.Tables["View_S_Stock"]));
                }
                if ((ds.Tables["View_S_MaterialRequisition"] != null)) {
                    base.Tables.Add(new View_S_MaterialRequisitionDataTable(ds.Tables["View_S_MaterialRequisition"]));
                }
                if ((ds.Tables["View_S_ScrapBill"] != null)) {
                    base.Tables.Add(new View_S_ScrapBillDataTable(ds.Tables["View_S_ScrapBill"]));
                }
                if ((ds.Tables["View_S_MaterialReturnedInTheDepot"] != null)) {
                    base.Tables.Add(new View_S_MaterialReturnedInTheDepotDataTable(ds.Tables["View_S_MaterialReturnedInTheDepot"]));
                }
                if ((ds.Tables["View_S_MaterialListRejectBill"] != null)) {
                    base.Tables.Add(new View_S_MaterialListRejectBillDataTable(ds.Tables["View_S_MaterialListRejectBill"]));
                }
                if ((ds.Tables["View_S_MaterialRejectBill"] != null)) {
                    base.Tables.Add(new View_S_MaterialRejectBillDataTable(ds.Tables["View_S_MaterialRejectBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsDetailBill"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsDetailBillDataTable(ds.Tables["View_S_FetchGoodsDetailBill"]));
                }
                if ((ds.Tables["View_S_FetchGoodsSummaryTable"] != null)) {
                    base.Tables.Add(new View_S_FetchGoodsSummaryTableDataTable(ds.Tables["View_S_FetchGoodsSummaryTable"]));
                }
                if ((ds.Tables["View_S_InDepotDetailBill"] != null)) {
                    base.Tables.Add(new View_S_InDepotDetailBillDataTable(ds.Tables["View_S_InDepotDetailBill"]));
                }
                if ((ds.Tables["View_S_InDepotSummaryTable"] != null)) {
                    base.Tables.Add(new View_S_InDepotSummaryTableDataTable(ds.Tables["View_S_InDepotSummaryTable"]));
                }
                if ((ds.Tables["View_S_OrdinaryInDepotGoodsBill"] != null)) {
                    base.Tables.Add(new View_S_OrdinaryInDepotGoodsBillDataTable(ds.Tables["View_S_OrdinaryInDepotGoodsBill"]));
                }
                if ((ds.Tables["S_MaterialRequisitionGoods"] != null)) {
                    base.Tables.Add(new S_MaterialRequisitionGoodsDataTable(ds.Tables["S_MaterialRequisitionGoods"]));
                }
                if ((ds.Tables["View_S_PrintBill"] != null)) {
                    base.Tables.Add(new View_S_PrintBillDataTable(ds.Tables["View_S_PrintBill"]));
                }
                if ((ds.Tables["View_S_MarketingAll"] != null)) {
                    base.Tables.Add(new View_S_MarketingAllDataTable(ds.Tables["View_S_MarketingAll"]));
                }
                if ((ds.Tables["View_S_Cannibalize"] != null)) {
                    base.Tables.Add(new View_S_CannibalizeDataTable(ds.Tables["View_S_Cannibalize"]));
                }
                if ((ds.Tables["View_S_CheckReturnRepairBill"] != null)) {
                    base.Tables.Add(new View_S_CheckReturnRepairBillDataTable(ds.Tables["View_S_CheckReturnRepairBill"]));
                }
                if ((ds.Tables["View_S_IsolationManageBill"] != null)) {
                    base.Tables.Add(new View_S_IsolationManageBillDataTable(ds.Tables["View_S_IsolationManageBill"]));
                }
                if ((ds.Tables["View_S_MessMessageFeedbackBill"] != null)) {
                    base.Tables.Add(new View_S_MessMessageFeedbackBillDataTable(ds.Tables["View_S_MessMessageFeedbackBill"]));
                }
                if ((ds.Tables["View_S_StorageCheck"] != null)) {
                    base.Tables.Add(new View_S_StorageCheckDataTable(ds.Tables["View_S_StorageCheck"]));
                }
                if ((ds.Tables["View_S_ReportForStorageCheck"] != null)) {
                    base.Tables.Add(new View_S_ReportForStorageCheckDataTable(ds.Tables["View_S_ReportForStorageCheck"]));
                }
                if ((ds.Tables["View_S_MaterialListReturnedInTheDepot"] != null)) {
                    base.Tables.Add(new View_S_MaterialListReturnedInTheDepotDataTable(ds.Tables["View_S_MaterialListReturnedInTheDepot"]));
                }
                if ((ds.Tables["View_S_ALLMessMessageFeedback"] != null)) {
                    base.Tables.Add(new View_S_ALLMessMessageFeedbackDataTable(ds.Tables["View_S_ALLMessMessageFeedback"]));
                }
                if ((ds.Tables["View_S_MarketingPlanBill"] != null)) {
                    base.Tables.Add(new View_S_MarketingPlanBillDataTable(ds.Tables["View_S_MarketingPlanBill"]));
                }
                if ((ds.Tables["View_S_MarketingPlanList"] != null)) {
                    base.Tables.Add(new View_S_MarketingPlanListDataTable(ds.Tables["View_S_MarketingPlanList"]));
                }
                if ((ds.Tables["View_P_DeliveryInspection"] != null)) {
                    base.Tables.Add(new View_P_DeliveryInspectionDataTable(ds.Tables["View_P_DeliveryInspection"]));
                }
                if ((ds.Tables["View_P_DeliveryInspectionItems"] != null)) {
                    base.Tables.Add(new View_P_DeliveryInspectionItemsDataTable(ds.Tables["View_P_DeliveryInspectionItems"]));
                }
                if ((ds.Tables["View_Report_DeliveryInspection"] != null)) {
                    base.Tables.Add(new View_Report_DeliveryInspectionDataTable(ds.Tables["View_Report_DeliveryInspection"]));
                }
                if ((ds.Tables["View_S_CheckOutInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_CheckOutInDepotBillDataTable(ds.Tables["View_S_CheckOutInDepotBill"]));
                }
                if ((ds.Tables["S_HomemadeRejectBill"] != null)) {
                    base.Tables.Add(new S_HomemadeRejectBillDataTable(ds.Tables["S_HomemadeRejectBill"]));
                }
                if ((ds.Tables["S_HomemadeRejectList"] != null)) {
                    base.Tables.Add(new S_HomemadeRejectListDataTable(ds.Tables["S_HomemadeRejectList"]));
                }
                if ((ds.Tables["View_S_HomemadeRejectBill"] != null)) {
                    base.Tables.Add(new View_S_HomemadeRejectBillDataTable(ds.Tables["View_S_HomemadeRejectBill"]));
                }
                if ((ds.Tables["View_S_HomemadeRejectList"] != null)) {
                    base.Tables.Add(new View_S_HomemadeRejectListDataTable(ds.Tables["View_S_HomemadeRejectList"]));
                }
                if ((ds.Tables["View_S_FrockInDepotBill"] != null)) {
                    base.Tables.Add(new View_S_FrockInDepotBillDataTable(ds.Tables["View_S_FrockInDepotBill"]));
                }
                if ((ds.Tables["View_S_FrockInDepotGoodsBill"] != null)) {
                    base.Tables.Add(new View_S_FrockInDepotGoodsBillDataTable(ds.Tables["View_S_FrockInDepotGoodsBill"]));
                }
                if ((ds.Tables["S_FrockProvingReport"] != null)) {
                    base.Tables.Add(new S_FrockProvingReportDataTable(ds.Tables["S_FrockProvingReport"]));
                }
                if ((ds.Tables["S_FrockProvingReportAttached"] != null)) {
                    base.Tables.Add(new S_FrockProvingReportAttachedDataTable(ds.Tables["S_FrockProvingReportAttached"]));
                }
                if ((ds.Tables["View_S_FrockProvingReport"] != null)) {
                    base.Tables.Add(new View_S_FrockProvingReportDataTable(ds.Tables["View_S_FrockProvingReport"]));
                }
                if ((ds.Tables["View_S_ScrapGoods"] != null)) {
                    base.Tables.Add(new View_S_ScrapGoodsDataTable(ds.Tables["View_S_ScrapGoods"]));
                }
                if ((ds.Tables["View_Out_ManeuverBill"] != null)) {
                    base.Tables.Add(new View_Out_ManeuverBillDataTable(ds.Tables["View_Out_ManeuverBill"]));
                }
                if ((ds.Tables["View_Out_ManeuverList"] != null)) {
                    base.Tables.Add(new View_Out_ManeuverListDataTable(ds.Tables["View_Out_ManeuverList"]));
                }
                if ((ds.Tables["View_S_HomemadePartBill"] != null)) {
                    base.Tables.Add(new View_S_HomemadePartBillDataTable(ds.Tables["View_S_HomemadePartBill"]));
                }
                if ((ds.Tables["View_S_CheckOutInDepotForOutsourcingBill"] != null)) {
                    base.Tables.Add(new View_S_CheckOutInDepotForOutsourcingBillDataTable(ds.Tables["View_S_CheckOutInDepotForOutsourcingBill"]));
                }
                if ((ds.Tables["领料单汇总签字表"] != null)) {
                    base.Tables.Add(new 领料单汇总签字表DataTable(ds.Tables["领料单汇总签字表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableS_ReceiveSendSaveGatherBill = ((S_ReceiveSendSaveGatherBillDataTable)(base.Tables["S_ReceiveSendSaveGatherBill"]));
            if ((initTable == true)) {
                if ((this.tableS_ReceiveSendSaveGatherBill != null)) {
                    this.tableS_ReceiveSendSaveGatherBill.InitVars();
                }
            }
            this.tableView_S_FetchGoodsWithdrawDepotBill = ((View_S_FetchGoodsWithdrawDepotBillDataTable)(base.Tables["View_S_FetchGoodsWithdrawDepotBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FetchGoodsWithdrawDepotBill != null)) {
                    this.tableView_S_FetchGoodsWithdrawDepotBill.InitVars();
                }
            }
            this.tableView_S_MaterialRequisitionGoods = ((View_S_MaterialRequisitionGoodsDataTable)(base.Tables["View_S_MaterialRequisitionGoods"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialRequisitionGoods != null)) {
                    this.tableView_S_MaterialRequisitionGoods.InitVars();
                }
            }
            this.tableView_S_OrdinaryInDepotBill = ((View_S_OrdinaryInDepotBillDataTable)(base.Tables["View_S_OrdinaryInDepotBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_OrdinaryInDepotBill != null)) {
                    this.tableView_S_OrdinaryInDepotBill.InitVars();
                }
            }
            this.tableView_B_BargainGoods = ((View_B_BargainGoodsDataTable)(base.Tables["View_B_BargainGoods"]));
            if ((initTable == true)) {
                if ((this.tableView_B_BargainGoods != null)) {
                    this.tableView_B_BargainGoods.InitVars();
                }
            }
            this.tableView_B_BargainInfo = ((View_B_BargainInfoDataTable)(base.Tables["View_B_BargainInfo"]));
            if ((initTable == true)) {
                if ((this.tableView_B_BargainInfo != null)) {
                    this.tableView_B_BargainInfo.InitVars();
                }
            }
            this.tableView_S_Stock = ((View_S_StockDataTable)(base.Tables["View_S_Stock"]));
            if ((initTable == true)) {
                if ((this.tableView_S_Stock != null)) {
                    this.tableView_S_Stock.InitVars();
                }
            }
            this.tableView_S_MaterialRequisition = ((View_S_MaterialRequisitionDataTable)(base.Tables["View_S_MaterialRequisition"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialRequisition != null)) {
                    this.tableView_S_MaterialRequisition.InitVars();
                }
            }
            this.tableView_S_ScrapBill = ((View_S_ScrapBillDataTable)(base.Tables["View_S_ScrapBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_ScrapBill != null)) {
                    this.tableView_S_ScrapBill.InitVars();
                }
            }
            this.tableView_S_MaterialReturnedInTheDepot = ((View_S_MaterialReturnedInTheDepotDataTable)(base.Tables["View_S_MaterialReturnedInTheDepot"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialReturnedInTheDepot != null)) {
                    this.tableView_S_MaterialReturnedInTheDepot.InitVars();
                }
            }
            this.tableView_S_MaterialListRejectBill = ((View_S_MaterialListRejectBillDataTable)(base.Tables["View_S_MaterialListRejectBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialListRejectBill != null)) {
                    this.tableView_S_MaterialListRejectBill.InitVars();
                }
            }
            this.tableView_S_MaterialRejectBill = ((View_S_MaterialRejectBillDataTable)(base.Tables["View_S_MaterialRejectBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialRejectBill != null)) {
                    this.tableView_S_MaterialRejectBill.InitVars();
                }
            }
            this.tableView_S_FetchGoodsDetailBill = ((View_S_FetchGoodsDetailBillDataTable)(base.Tables["View_S_FetchGoodsDetailBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FetchGoodsDetailBill != null)) {
                    this.tableView_S_FetchGoodsDetailBill.InitVars();
                }
            }
            this.tableView_S_FetchGoodsSummaryTable = ((View_S_FetchGoodsSummaryTableDataTable)(base.Tables["View_S_FetchGoodsSummaryTable"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FetchGoodsSummaryTable != null)) {
                    this.tableView_S_FetchGoodsSummaryTable.InitVars();
                }
            }
            this.tableView_S_InDepotDetailBill = ((View_S_InDepotDetailBillDataTable)(base.Tables["View_S_InDepotDetailBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_InDepotDetailBill != null)) {
                    this.tableView_S_InDepotDetailBill.InitVars();
                }
            }
            this.tableView_S_InDepotSummaryTable = ((View_S_InDepotSummaryTableDataTable)(base.Tables["View_S_InDepotSummaryTable"]));
            if ((initTable == true)) {
                if ((this.tableView_S_InDepotSummaryTable != null)) {
                    this.tableView_S_InDepotSummaryTable.InitVars();
                }
            }
            this.tableView_S_OrdinaryInDepotGoodsBill = ((View_S_OrdinaryInDepotGoodsBillDataTable)(base.Tables["View_S_OrdinaryInDepotGoodsBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_OrdinaryInDepotGoodsBill != null)) {
                    this.tableView_S_OrdinaryInDepotGoodsBill.InitVars();
                }
            }
            this.tableS_MaterialRequisitionGoods = ((S_MaterialRequisitionGoodsDataTable)(base.Tables["S_MaterialRequisitionGoods"]));
            if ((initTable == true)) {
                if ((this.tableS_MaterialRequisitionGoods != null)) {
                    this.tableS_MaterialRequisitionGoods.InitVars();
                }
            }
            this.tableView_S_PrintBill = ((View_S_PrintBillDataTable)(base.Tables["View_S_PrintBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_PrintBill != null)) {
                    this.tableView_S_PrintBill.InitVars();
                }
            }
            this.tableView_S_MarketingAll = ((View_S_MarketingAllDataTable)(base.Tables["View_S_MarketingAll"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketingAll != null)) {
                    this.tableView_S_MarketingAll.InitVars();
                }
            }
            this.tableView_S_Cannibalize = ((View_S_CannibalizeDataTable)(base.Tables["View_S_Cannibalize"]));
            if ((initTable == true)) {
                if ((this.tableView_S_Cannibalize != null)) {
                    this.tableView_S_Cannibalize.InitVars();
                }
            }
            this.tableView_S_CheckReturnRepairBill = ((View_S_CheckReturnRepairBillDataTable)(base.Tables["View_S_CheckReturnRepairBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_CheckReturnRepairBill != null)) {
                    this.tableView_S_CheckReturnRepairBill.InitVars();
                }
            }
            this.tableView_S_IsolationManageBill = ((View_S_IsolationManageBillDataTable)(base.Tables["View_S_IsolationManageBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_IsolationManageBill != null)) {
                    this.tableView_S_IsolationManageBill.InitVars();
                }
            }
            this.tableView_S_MessMessageFeedbackBill = ((View_S_MessMessageFeedbackBillDataTable)(base.Tables["View_S_MessMessageFeedbackBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MessMessageFeedbackBill != null)) {
                    this.tableView_S_MessMessageFeedbackBill.InitVars();
                }
            }
            this.tableView_S_StorageCheck = ((View_S_StorageCheckDataTable)(base.Tables["View_S_StorageCheck"]));
            if ((initTable == true)) {
                if ((this.tableView_S_StorageCheck != null)) {
                    this.tableView_S_StorageCheck.InitVars();
                }
            }
            this.tableView_S_ReportForStorageCheck = ((View_S_ReportForStorageCheckDataTable)(base.Tables["View_S_ReportForStorageCheck"]));
            if ((initTable == true)) {
                if ((this.tableView_S_ReportForStorageCheck != null)) {
                    this.tableView_S_ReportForStorageCheck.InitVars();
                }
            }
            this.tableView_S_MaterialListReturnedInTheDepot = ((View_S_MaterialListReturnedInTheDepotDataTable)(base.Tables["View_S_MaterialListReturnedInTheDepot"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MaterialListReturnedInTheDepot != null)) {
                    this.tableView_S_MaterialListReturnedInTheDepot.InitVars();
                }
            }
            this.tableView_S_ALLMessMessageFeedback = ((View_S_ALLMessMessageFeedbackDataTable)(base.Tables["View_S_ALLMessMessageFeedback"]));
            if ((initTable == true)) {
                if ((this.tableView_S_ALLMessMessageFeedback != null)) {
                    this.tableView_S_ALLMessMessageFeedback.InitVars();
                }
            }
            this.tableView_S_MarketingPlanBill = ((View_S_MarketingPlanBillDataTable)(base.Tables["View_S_MarketingPlanBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketingPlanBill != null)) {
                    this.tableView_S_MarketingPlanBill.InitVars();
                }
            }
            this.tableView_S_MarketingPlanList = ((View_S_MarketingPlanListDataTable)(base.Tables["View_S_MarketingPlanList"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketingPlanList != null)) {
                    this.tableView_S_MarketingPlanList.InitVars();
                }
            }
            this.tableView_P_DeliveryInspection = ((View_P_DeliveryInspectionDataTable)(base.Tables["View_P_DeliveryInspection"]));
            if ((initTable == true)) {
                if ((this.tableView_P_DeliveryInspection != null)) {
                    this.tableView_P_DeliveryInspection.InitVars();
                }
            }
            this.tableView_P_DeliveryInspectionItems = ((View_P_DeliveryInspectionItemsDataTable)(base.Tables["View_P_DeliveryInspectionItems"]));
            if ((initTable == true)) {
                if ((this.tableView_P_DeliveryInspectionItems != null)) {
                    this.tableView_P_DeliveryInspectionItems.InitVars();
                }
            }
            this.tableView_Report_DeliveryInspection = ((View_Report_DeliveryInspectionDataTable)(base.Tables["View_Report_DeliveryInspection"]));
            if ((initTable == true)) {
                if ((this.tableView_Report_DeliveryInspection != null)) {
                    this.tableView_Report_DeliveryInspection.InitVars();
                }
            }
            this.tableView_S_CheckOutInDepotBill = ((View_S_CheckOutInDepotBillDataTable)(base.Tables["View_S_CheckOutInDepotBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_CheckOutInDepotBill != null)) {
                    this.tableView_S_CheckOutInDepotBill.InitVars();
                }
            }
            this.tableS_HomemadeRejectBill = ((S_HomemadeRejectBillDataTable)(base.Tables["S_HomemadeRejectBill"]));
            if ((initTable == true)) {
                if ((this.tableS_HomemadeRejectBill != null)) {
                    this.tableS_HomemadeRejectBill.InitVars();
                }
            }
            this.tableS_HomemadeRejectList = ((S_HomemadeRejectListDataTable)(base.Tables["S_HomemadeRejectList"]));
            if ((initTable == true)) {
                if ((this.tableS_HomemadeRejectList != null)) {
                    this.tableS_HomemadeRejectList.InitVars();
                }
            }
            this.tableView_S_HomemadeRejectBill = ((View_S_HomemadeRejectBillDataTable)(base.Tables["View_S_HomemadeRejectBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_HomemadeRejectBill != null)) {
                    this.tableView_S_HomemadeRejectBill.InitVars();
                }
            }
            this.tableView_S_HomemadeRejectList = ((View_S_HomemadeRejectListDataTable)(base.Tables["View_S_HomemadeRejectList"]));
            if ((initTable == true)) {
                if ((this.tableView_S_HomemadeRejectList != null)) {
                    this.tableView_S_HomemadeRejectList.InitVars();
                }
            }
            this.tableView_S_FrockInDepotBill = ((View_S_FrockInDepotBillDataTable)(base.Tables["View_S_FrockInDepotBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FrockInDepotBill != null)) {
                    this.tableView_S_FrockInDepotBill.InitVars();
                }
            }
            this.tableView_S_FrockInDepotGoodsBill = ((View_S_FrockInDepotGoodsBillDataTable)(base.Tables["View_S_FrockInDepotGoodsBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FrockInDepotGoodsBill != null)) {
                    this.tableView_S_FrockInDepotGoodsBill.InitVars();
                }
            }
            this.tableS_FrockProvingReport = ((S_FrockProvingReportDataTable)(base.Tables["S_FrockProvingReport"]));
            if ((initTable == true)) {
                if ((this.tableS_FrockProvingReport != null)) {
                    this.tableS_FrockProvingReport.InitVars();
                }
            }
            this.tableS_FrockProvingReportAttached = ((S_FrockProvingReportAttachedDataTable)(base.Tables["S_FrockProvingReportAttached"]));
            if ((initTable == true)) {
                if ((this.tableS_FrockProvingReportAttached != null)) {
                    this.tableS_FrockProvingReportAttached.InitVars();
                }
            }
            this.tableView_S_FrockProvingReport = ((View_S_FrockProvingReportDataTable)(base.Tables["View_S_FrockProvingReport"]));
            if ((initTable == true)) {
                if ((this.tableView_S_FrockProvingReport != null)) {
                    this.tableView_S_FrockProvingReport.InitVars();
                }
            }
            this.tableView_S_ScrapGoods = ((View_S_ScrapGoodsDataTable)(base.Tables["View_S_ScrapGoods"]));
            if ((initTable == true)) {
                if ((this.tableView_S_ScrapGoods != null)) {
                    this.tableView_S_ScrapGoods.InitVars();
                }
            }
            this.tableView_Out_ManeuverBill = ((View_Out_ManeuverBillDataTable)(base.Tables["View_Out_ManeuverBill"]));
            if ((initTable == true)) {
                if ((this.tableView_Out_ManeuverBill != null)) {
                    this.tableView_Out_ManeuverBill.InitVars();
                }
            }
            this.tableView_Out_ManeuverList = ((View_Out_ManeuverListDataTable)(base.Tables["View_Out_ManeuverList"]));
            if ((initTable == true)) {
                if ((this.tableView_Out_ManeuverList != null)) {
                    this.tableView_Out_ManeuverList.InitVars();
                }
            }
            this.tableView_S_HomemadePartBill = ((View_S_HomemadePartBillDataTable)(base.Tables["View_S_HomemadePartBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_HomemadePartBill != null)) {
                    this.tableView_S_HomemadePartBill.InitVars();
                }
            }
            this.tableView_S_CheckOutInDepotForOutsourcingBill = ((View_S_CheckOutInDepotForOutsourcingBillDataTable)(base.Tables["View_S_CheckOutInDepotForOutsourcingBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_CheckOutInDepotForOutsourcingBill != null)) {
                    this.tableView_S_CheckOutInDepotForOutsourcingBill.InitVars();
                }
            }
            this.table领料单汇总签字表 = ((领料单汇总签字表DataTable)(base.Tables["领料单汇总签字表"]));
            if ((initTable == true)) {
                if ((this.table领料单汇总签字表 != null)) {
                    this.table领料单汇总签字表.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DepotManagementDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DepotManagementDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableS_ReceiveSendSaveGatherBill = new S_ReceiveSendSaveGatherBillDataTable();
            base.Tables.Add(this.tableS_ReceiveSendSaveGatherBill);
            this.tableView_S_FetchGoodsWithdrawDepotBill = new View_S_FetchGoodsWithdrawDepotBillDataTable();
            base.Tables.Add(this.tableView_S_FetchGoodsWithdrawDepotBill);
            this.tableView_S_MaterialRequisitionGoods = new View_S_MaterialRequisitionGoodsDataTable();
            base.Tables.Add(this.tableView_S_MaterialRequisitionGoods);
            this.tableView_S_OrdinaryInDepotBill = new View_S_OrdinaryInDepotBillDataTable();
            base.Tables.Add(this.tableView_S_OrdinaryInDepotBill);
            this.tableView_B_BargainGoods = new View_B_BargainGoodsDataTable();
            base.Tables.Add(this.tableView_B_BargainGoods);
            this.tableView_B_BargainInfo = new View_B_BargainInfoDataTable();
            base.Tables.Add(this.tableView_B_BargainInfo);
            this.tableView_S_Stock = new View_S_StockDataTable();
            base.Tables.Add(this.tableView_S_Stock);
            this.tableView_S_MaterialRequisition = new View_S_MaterialRequisitionDataTable();
            base.Tables.Add(this.tableView_S_MaterialRequisition);
            this.tableView_S_ScrapBill = new View_S_ScrapBillDataTable();
            base.Tables.Add(this.tableView_S_ScrapBill);
            this.tableView_S_MaterialReturnedInTheDepot = new View_S_MaterialReturnedInTheDepotDataTable();
            base.Tables.Add(this.tableView_S_MaterialReturnedInTheDepot);
            this.tableView_S_MaterialListRejectBill = new View_S_MaterialListRejectBillDataTable();
            base.Tables.Add(this.tableView_S_MaterialListRejectBill);
            this.tableView_S_MaterialRejectBill = new View_S_MaterialRejectBillDataTable();
            base.Tables.Add(this.tableView_S_MaterialRejectBill);
            this.tableView_S_FetchGoodsDetailBill = new View_S_FetchGoodsDetailBillDataTable();
            base.Tables.Add(this.tableView_S_FetchGoodsDetailBill);
            this.tableView_S_FetchGoodsSummaryTable = new View_S_FetchGoodsSummaryTableDataTable();
            base.Tables.Add(this.tableView_S_FetchGoodsSummaryTable);
            this.tableView_S_InDepotDetailBill = new View_S_InDepotDetailBillDataTable();
            base.Tables.Add(this.tableView_S_InDepotDetailBill);
            this.tableView_S_InDepotSummaryTable = new View_S_InDepotSummaryTableDataTable();
            base.Tables.Add(this.tableView_S_InDepotSummaryTable);
            this.tableView_S_OrdinaryInDepotGoodsBill = new View_S_OrdinaryInDepotGoodsBillDataTable();
            base.Tables.Add(this.tableView_S_OrdinaryInDepotGoodsBill);
            this.tableS_MaterialRequisitionGoods = new S_MaterialRequisitionGoodsDataTable();
            base.Tables.Add(this.tableS_MaterialRequisitionGoods);
            this.tableView_S_PrintBill = new View_S_PrintBillDataTable();
            base.Tables.Add(this.tableView_S_PrintBill);
            this.tableView_S_MarketingAll = new View_S_MarketingAllDataTable();
            base.Tables.Add(this.tableView_S_MarketingAll);
            this.tableView_S_Cannibalize = new View_S_CannibalizeDataTable();
            base.Tables.Add(this.tableView_S_Cannibalize);
            this.tableView_S_CheckReturnRepairBill = new View_S_CheckReturnRepairBillDataTable();
            base.Tables.Add(this.tableView_S_CheckReturnRepairBill);
            this.tableView_S_IsolationManageBill = new View_S_IsolationManageBillDataTable();
            base.Tables.Add(this.tableView_S_IsolationManageBill);
            this.tableView_S_MessMessageFeedbackBill = new View_S_MessMessageFeedbackBillDataTable();
            base.Tables.Add(this.tableView_S_MessMessageFeedbackBill);
            this.tableView_S_StorageCheck = new View_S_StorageCheckDataTable();
            base.Tables.Add(this.tableView_S_StorageCheck);
            this.tableView_S_ReportForStorageCheck = new View_S_ReportForStorageCheckDataTable();
            base.Tables.Add(this.tableView_S_ReportForStorageCheck);
            this.tableView_S_MaterialListReturnedInTheDepot = new View_S_MaterialListReturnedInTheDepotDataTable();
            base.Tables.Add(this.tableView_S_MaterialListReturnedInTheDepot);
            this.tableView_S_ALLMessMessageFeedback = new View_S_ALLMessMessageFeedbackDataTable();
            base.Tables.Add(this.tableView_S_ALLMessMessageFeedback);
            this.tableView_S_MarketingPlanBill = new View_S_MarketingPlanBillDataTable();
            base.Tables.Add(this.tableView_S_MarketingPlanBill);
            this.tableView_S_MarketingPlanList = new View_S_MarketingPlanListDataTable();
            base.Tables.Add(this.tableView_S_MarketingPlanList);
            this.tableView_P_DeliveryInspection = new View_P_DeliveryInspectionDataTable();
            base.Tables.Add(this.tableView_P_DeliveryInspection);
            this.tableView_P_DeliveryInspectionItems = new View_P_DeliveryInspectionItemsDataTable();
            base.Tables.Add(this.tableView_P_DeliveryInspectionItems);
            this.tableView_Report_DeliveryInspection = new View_Report_DeliveryInspectionDataTable();
            base.Tables.Add(this.tableView_Report_DeliveryInspection);
            this.tableView_S_CheckOutInDepotBill = new View_S_CheckOutInDepotBillDataTable();
            base.Tables.Add(this.tableView_S_CheckOutInDepotBill);
            this.tableS_HomemadeRejectBill = new S_HomemadeRejectBillDataTable();
            base.Tables.Add(this.tableS_HomemadeRejectBill);
            this.tableS_HomemadeRejectList = new S_HomemadeRejectListDataTable();
            base.Tables.Add(this.tableS_HomemadeRejectList);
            this.tableView_S_HomemadeRejectBill = new View_S_HomemadeRejectBillDataTable();
            base.Tables.Add(this.tableView_S_HomemadeRejectBill);
            this.tableView_S_HomemadeRejectList = new View_S_HomemadeRejectListDataTable();
            base.Tables.Add(this.tableView_S_HomemadeRejectList);
            this.tableView_S_FrockInDepotBill = new View_S_FrockInDepotBillDataTable();
            base.Tables.Add(this.tableView_S_FrockInDepotBill);
            this.tableView_S_FrockInDepotGoodsBill = new View_S_FrockInDepotGoodsBillDataTable();
            base.Tables.Add(this.tableView_S_FrockInDepotGoodsBill);
            this.tableS_FrockProvingReport = new S_FrockProvingReportDataTable();
            base.Tables.Add(this.tableS_FrockProvingReport);
            this.tableS_FrockProvingReportAttached = new S_FrockProvingReportAttachedDataTable();
            base.Tables.Add(this.tableS_FrockProvingReportAttached);
            this.tableView_S_FrockProvingReport = new View_S_FrockProvingReportDataTable();
            base.Tables.Add(this.tableView_S_FrockProvingReport);
            this.tableView_S_ScrapGoods = new View_S_ScrapGoodsDataTable();
            base.Tables.Add(this.tableView_S_ScrapGoods);
            this.tableView_Out_ManeuverBill = new View_Out_ManeuverBillDataTable();
            base.Tables.Add(this.tableView_Out_ManeuverBill);
            this.tableView_Out_ManeuverList = new View_Out_ManeuverListDataTable();
            base.Tables.Add(this.tableView_Out_ManeuverList);
            this.tableView_S_HomemadePartBill = new View_S_HomemadePartBillDataTable();
            base.Tables.Add(this.tableView_S_HomemadePartBill);
            this.tableView_S_CheckOutInDepotForOutsourcingBill = new View_S_CheckOutInDepotForOutsourcingBillDataTable();
            base.Tables.Add(this.tableView_S_CheckOutInDepotForOutsourcingBill);
            this.table领料单汇总签字表 = new 领料单汇总签字表DataTable();
            base.Tables.Add(this.table领料单汇总签字表);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_ReceiveSendSaveGatherBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FetchGoodsWithdrawDepotBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialRequisitionGoods() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_OrdinaryInDepotBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_B_BargainGoods() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_B_BargainInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_Stock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialRequisition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_ScrapBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialReturnedInTheDepot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialListRejectBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialRejectBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FetchGoodsDetailBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FetchGoodsSummaryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_InDepotDetailBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_InDepotSummaryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_OrdinaryInDepotGoodsBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_MaterialRequisitionGoods() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_PrintBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketingAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_Cannibalize() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_CheckReturnRepairBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_IsolationManageBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MessMessageFeedbackBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_StorageCheck() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_ReportForStorageCheck() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MaterialListReturnedInTheDepot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_ALLMessMessageFeedback() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketingPlanBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketingPlanList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_P_DeliveryInspection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_P_DeliveryInspectionItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Report_DeliveryInspection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_CheckOutInDepotBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_HomemadeRejectBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_HomemadeRejectList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_HomemadeRejectBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_HomemadeRejectList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FrockInDepotBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FrockInDepotGoodsBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_FrockProvingReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS_FrockProvingReportAttached() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_FrockProvingReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_ScrapGoods() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Out_ManeuverBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Out_ManeuverList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_HomemadePartBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_CheckOutInDepotForOutsourcingBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize领料单汇总签字表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DepotManagementDataSet ds = new DepotManagementDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void S_ReceiveSendSaveGatherBillRowChangeEventHandler(object sender, S_ReceiveSendSaveGatherBillRowChangeEvent e);
        
        public delegate void View_S_FetchGoodsWithdrawDepotBillRowChangeEventHandler(object sender, View_S_FetchGoodsWithdrawDepotBillRowChangeEvent e);
        
        public delegate void View_S_MaterialRequisitionGoodsRowChangeEventHandler(object sender, View_S_MaterialRequisitionGoodsRowChangeEvent e);
        
        public delegate void View_S_OrdinaryInDepotBillRowChangeEventHandler(object sender, View_S_OrdinaryInDepotBillRowChangeEvent e);
        
        public delegate void View_B_BargainGoodsRowChangeEventHandler(object sender, View_B_BargainGoodsRowChangeEvent e);
        
        public delegate void View_B_BargainInfoRowChangeEventHandler(object sender, View_B_BargainInfoRowChangeEvent e);
        
        public delegate void View_S_StockRowChangeEventHandler(object sender, View_S_StockRowChangeEvent e);
        
        public delegate void View_S_MaterialRequisitionRowChangeEventHandler(object sender, View_S_MaterialRequisitionRowChangeEvent e);
        
        public delegate void View_S_ScrapBillRowChangeEventHandler(object sender, View_S_ScrapBillRowChangeEvent e);
        
        public delegate void View_S_MaterialReturnedInTheDepotRowChangeEventHandler(object sender, View_S_MaterialReturnedInTheDepotRowChangeEvent e);
        
        public delegate void View_S_MaterialListRejectBillRowChangeEventHandler(object sender, View_S_MaterialListRejectBillRowChangeEvent e);
        
        public delegate void View_S_MaterialRejectBillRowChangeEventHandler(object sender, View_S_MaterialRejectBillRowChangeEvent e);
        
        public delegate void View_S_FetchGoodsDetailBillRowChangeEventHandler(object sender, View_S_FetchGoodsDetailBillRowChangeEvent e);
        
        public delegate void View_S_FetchGoodsSummaryTableRowChangeEventHandler(object sender, View_S_FetchGoodsSummaryTableRowChangeEvent e);
        
        public delegate void View_S_InDepotDetailBillRowChangeEventHandler(object sender, View_S_InDepotDetailBillRowChangeEvent e);
        
        public delegate void View_S_InDepotSummaryTableRowChangeEventHandler(object sender, View_S_InDepotSummaryTableRowChangeEvent e);
        
        public delegate void View_S_OrdinaryInDepotGoodsBillRowChangeEventHandler(object sender, View_S_OrdinaryInDepotGoodsBillRowChangeEvent e);
        
        public delegate void S_MaterialRequisitionGoodsRowChangeEventHandler(object sender, S_MaterialRequisitionGoodsRowChangeEvent e);
        
        public delegate void View_S_PrintBillRowChangeEventHandler(object sender, View_S_PrintBillRowChangeEvent e);
        
        public delegate void View_S_MarketingAllRowChangeEventHandler(object sender, View_S_MarketingAllRowChangeEvent e);
        
        public delegate void View_S_CannibalizeRowChangeEventHandler(object sender, View_S_CannibalizeRowChangeEvent e);
        
        public delegate void View_S_CheckReturnRepairBillRowChangeEventHandler(object sender, View_S_CheckReturnRepairBillRowChangeEvent e);
        
        public delegate void View_S_IsolationManageBillRowChangeEventHandler(object sender, View_S_IsolationManageBillRowChangeEvent e);
        
        public delegate void View_S_MessMessageFeedbackBillRowChangeEventHandler(object sender, View_S_MessMessageFeedbackBillRowChangeEvent e);
        
        public delegate void View_S_StorageCheckRowChangeEventHandler(object sender, View_S_StorageCheckRowChangeEvent e);
        
        public delegate void View_S_ReportForStorageCheckRowChangeEventHandler(object sender, View_S_ReportForStorageCheckRowChangeEvent e);
        
        public delegate void View_S_MaterialListReturnedInTheDepotRowChangeEventHandler(object sender, View_S_MaterialListReturnedInTheDepotRowChangeEvent e);
        
        public delegate void View_S_ALLMessMessageFeedbackRowChangeEventHandler(object sender, View_S_ALLMessMessageFeedbackRowChangeEvent e);
        
        public delegate void View_S_MarketingPlanBillRowChangeEventHandler(object sender, View_S_MarketingPlanBillRowChangeEvent e);
        
        public delegate void View_S_MarketingPlanListRowChangeEventHandler(object sender, View_S_MarketingPlanListRowChangeEvent e);
        
        public delegate void View_P_DeliveryInspectionRowChangeEventHandler(object sender, View_P_DeliveryInspectionRowChangeEvent e);
        
        public delegate void View_P_DeliveryInspectionItemsRowChangeEventHandler(object sender, View_P_DeliveryInspectionItemsRowChangeEvent e);
        
        public delegate void View_Report_DeliveryInspectionRowChangeEventHandler(object sender, View_Report_DeliveryInspectionRowChangeEvent e);
        
        public delegate void View_S_CheckOutInDepotBillRowChangeEventHandler(object sender, View_S_CheckOutInDepotBillRowChangeEvent e);
        
        public delegate void S_HomemadeRejectBillRowChangeEventHandler(object sender, S_HomemadeRejectBillRowChangeEvent e);
        
        public delegate void S_HomemadeRejectListRowChangeEventHandler(object sender, S_HomemadeRejectListRowChangeEvent e);
        
        public delegate void View_S_HomemadeRejectBillRowChangeEventHandler(object sender, View_S_HomemadeRejectBillRowChangeEvent e);
        
        public delegate void View_S_HomemadeRejectListRowChangeEventHandler(object sender, View_S_HomemadeRejectListRowChangeEvent e);
        
        public delegate void View_S_FrockInDepotBillRowChangeEventHandler(object sender, View_S_FrockInDepotBillRowChangeEvent e);
        
        public delegate void View_S_FrockInDepotGoodsBillRowChangeEventHandler(object sender, View_S_FrockInDepotGoodsBillRowChangeEvent e);
        
        public delegate void S_FrockProvingReportRowChangeEventHandler(object sender, S_FrockProvingReportRowChangeEvent e);
        
        public delegate void S_FrockProvingReportAttachedRowChangeEventHandler(object sender, S_FrockProvingReportAttachedRowChangeEvent e);
        
        public delegate void View_S_FrockProvingReportRowChangeEventHandler(object sender, View_S_FrockProvingReportRowChangeEvent e);
        
        public delegate void View_S_ScrapGoodsRowChangeEventHandler(object sender, View_S_ScrapGoodsRowChangeEvent e);
        
        public delegate void View_Out_ManeuverBillRowChangeEventHandler(object sender, View_Out_ManeuverBillRowChangeEvent e);
        
        public delegate void View_Out_ManeuverListRowChangeEventHandler(object sender, View_Out_ManeuverListRowChangeEvent e);
        
        public delegate void View_S_HomemadePartBillRowChangeEventHandler(object sender, View_S_HomemadePartBillRowChangeEvent e);
        
        public delegate void View_S_CheckOutInDepotForOutsourcingBillRowChangeEventHandler(object sender, View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent e);
        
        public delegate void 领料单汇总签字表RowChangeEventHandler(object sender, 领料单汇总签字表RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_ReceiveSendSaveGatherBillDataTable : global::System.Data.TypedTableBase<S_ReceiveSendSaveGatherBillRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnFormerCount;
            
            private global::System.Data.DataColumn columnFormerUnitPrice;
            
            private global::System.Data.DataColumn columnFormerPrice;
            
            private global::System.Data.DataColumn columnNowInDepotCount;
            
            private global::System.Data.DataColumn columnNowInDepotUnitPrice;
            
            private global::System.Data.DataColumn columnNowInDepotPrice;
            
            private global::System.Data.DataColumn columnNowOutDepotCount;
            
            private global::System.Data.DataColumn columnNowOutDepotUnitPrice;
            
            private global::System.Data.DataColumn columnNowOutDepotPrice;
            
            private global::System.Data.DataColumn columnNowExistCount;
            
            private global::System.Data.DataColumn columnNowExistUnitPrice;
            
            private global::System.Data.DataColumn columnNowExistPrice;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnCumulateNowInDepotCount;
            
            private global::System.Data.DataColumn columnCumulateNowInDepotUnitPrice;
            
            private global::System.Data.DataColumn columnCumulatedNowInDepotPrice;
            
            private global::System.Data.DataColumn columnCumulateNowOutDepotCount;
            
            private global::System.Data.DataColumn columnCumulateNowOutDepotUnitPrice;
            
            private global::System.Data.DataColumn columnCumulateNowOutDepotPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillDataTable() {
                this.TableName = "S_ReceiveSendSaveGatherBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_ReceiveSendSaveGatherBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_ReceiveSendSaveGatherBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormerCountColumn {
                get {
                    return this.columnFormerCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormerUnitPriceColumn {
                get {
                    return this.columnFormerUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormerPriceColumn {
                get {
                    return this.columnFormerPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowInDepotCountColumn {
                get {
                    return this.columnNowInDepotCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowInDepotUnitPriceColumn {
                get {
                    return this.columnNowInDepotUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowInDepotPriceColumn {
                get {
                    return this.columnNowInDepotPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowOutDepotCountColumn {
                get {
                    return this.columnNowOutDepotCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowOutDepotUnitPriceColumn {
                get {
                    return this.columnNowOutDepotUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowOutDepotPriceColumn {
                get {
                    return this.columnNowOutDepotPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowExistCountColumn {
                get {
                    return this.columnNowExistCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowExistUnitPriceColumn {
                get {
                    return this.columnNowExistUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowExistPriceColumn {
                get {
                    return this.columnNowExistPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulateNowInDepotCountColumn {
                get {
                    return this.columnCumulateNowInDepotCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulateNowInDepotUnitPriceColumn {
                get {
                    return this.columnCumulateNowInDepotUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulatedNowInDepotPriceColumn {
                get {
                    return this.columnCumulatedNowInDepotPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulateNowOutDepotCountColumn {
                get {
                    return this.columnCumulateNowOutDepotCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulateNowOutDepotUnitPriceColumn {
                get {
                    return this.columnCumulateNowOutDepotUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulateNowOutDepotPriceColumn {
                get {
                    return this.columnCumulateNowOutDepotPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRow this[int index] {
                get {
                    return ((S_ReceiveSendSaveGatherBillRow)(this.Rows[index]));
                }
            }
            
            public event S_ReceiveSendSaveGatherBillRowChangeEventHandler S_ReceiveSendSaveGatherBillRowChanging;
            
            public event S_ReceiveSendSaveGatherBillRowChangeEventHandler S_ReceiveSendSaveGatherBillRowChanged;
            
            public event S_ReceiveSendSaveGatherBillRowChangeEventHandler S_ReceiveSendSaveGatherBillRowDeleting;
            
            public event S_ReceiveSendSaveGatherBillRowChangeEventHandler S_ReceiveSendSaveGatherBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_ReceiveSendSaveGatherBillRow(S_ReceiveSendSaveGatherBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRow AddS_ReceiveSendSaveGatherBillRow(
                        System.Guid ID, 
                        string GoodsCode, 
                        string Spec, 
                        string GoodsName, 
                        int FormerCount, 
                        string FormerUnitPrice, 
                        string FormerPrice, 
                        int NowInDepotCount, 
                        string NowInDepotUnitPrice, 
                        string NowInDepotPrice, 
                        int NowOutDepotCount, 
                        string NowOutDepotUnitPrice, 
                        string NowOutDepotPrice, 
                        int NowExistCount, 
                        string NowExistUnitPrice, 
                        string NowExistPrice, 
                        string MaterialType, 
                        int CumulateNowInDepotCount, 
                        string CumulateNowInDepotUnitPrice, 
                        string CumulatedNowInDepotPrice, 
                        int CumulateNowOutDepotCount, 
                        string CumulateNowOutDepotUnitPrice, 
                        string CumulateNowOutDepotPrice) {
                S_ReceiveSendSaveGatherBillRow rowS_ReceiveSendSaveGatherBillRow = ((S_ReceiveSendSaveGatherBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        GoodsCode,
                        Spec,
                        GoodsName,
                        FormerCount,
                        FormerUnitPrice,
                        FormerPrice,
                        NowInDepotCount,
                        NowInDepotUnitPrice,
                        NowInDepotPrice,
                        NowOutDepotCount,
                        NowOutDepotUnitPrice,
                        NowOutDepotPrice,
                        NowExistCount,
                        NowExistUnitPrice,
                        NowExistPrice,
                        MaterialType,
                        CumulateNowInDepotCount,
                        CumulateNowInDepotUnitPrice,
                        CumulatedNowInDepotPrice,
                        CumulateNowOutDepotCount,
                        CumulateNowOutDepotUnitPrice,
                        CumulateNowOutDepotPrice};
                rowS_ReceiveSendSaveGatherBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_ReceiveSendSaveGatherBillRow);
                return rowS_ReceiveSendSaveGatherBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRow FindByID(System.Guid ID) {
                return ((S_ReceiveSendSaveGatherBillRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_ReceiveSendSaveGatherBillDataTable cln = ((S_ReceiveSendSaveGatherBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_ReceiveSendSaveGatherBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnSpec = base.Columns["Spec"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnFormerCount = base.Columns["FormerCount"];
                this.columnFormerUnitPrice = base.Columns["FormerUnitPrice"];
                this.columnFormerPrice = base.Columns["FormerPrice"];
                this.columnNowInDepotCount = base.Columns["NowInDepotCount"];
                this.columnNowInDepotUnitPrice = base.Columns["NowInDepotUnitPrice"];
                this.columnNowInDepotPrice = base.Columns["NowInDepotPrice"];
                this.columnNowOutDepotCount = base.Columns["NowOutDepotCount"];
                this.columnNowOutDepotUnitPrice = base.Columns["NowOutDepotUnitPrice"];
                this.columnNowOutDepotPrice = base.Columns["NowOutDepotPrice"];
                this.columnNowExistCount = base.Columns["NowExistCount"];
                this.columnNowExistUnitPrice = base.Columns["NowExistUnitPrice"];
                this.columnNowExistPrice = base.Columns["NowExistPrice"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnCumulateNowInDepotCount = base.Columns["CumulateNowInDepotCount"];
                this.columnCumulateNowInDepotUnitPrice = base.Columns["CumulateNowInDepotUnitPrice"];
                this.columnCumulatedNowInDepotPrice = base.Columns["CumulatedNowInDepotPrice"];
                this.columnCumulateNowOutDepotCount = base.Columns["CumulateNowOutDepotCount"];
                this.columnCumulateNowOutDepotUnitPrice = base.Columns["CumulateNowOutDepotUnitPrice"];
                this.columnCumulateNowOutDepotPrice = base.Columns["CumulateNowOutDepotPrice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnFormerCount = new global::System.Data.DataColumn("FormerCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormerCount);
                this.columnFormerUnitPrice = new global::System.Data.DataColumn("FormerUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormerUnitPrice);
                this.columnFormerPrice = new global::System.Data.DataColumn("FormerPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormerPrice);
                this.columnNowInDepotCount = new global::System.Data.DataColumn("NowInDepotCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowInDepotCount);
                this.columnNowInDepotUnitPrice = new global::System.Data.DataColumn("NowInDepotUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowInDepotUnitPrice);
                this.columnNowInDepotPrice = new global::System.Data.DataColumn("NowInDepotPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowInDepotPrice);
                this.columnNowOutDepotCount = new global::System.Data.DataColumn("NowOutDepotCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowOutDepotCount);
                this.columnNowOutDepotUnitPrice = new global::System.Data.DataColumn("NowOutDepotUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowOutDepotUnitPrice);
                this.columnNowOutDepotPrice = new global::System.Data.DataColumn("NowOutDepotPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowOutDepotPrice);
                this.columnNowExistCount = new global::System.Data.DataColumn("NowExistCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowExistCount);
                this.columnNowExistUnitPrice = new global::System.Data.DataColumn("NowExistUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowExistUnitPrice);
                this.columnNowExistPrice = new global::System.Data.DataColumn("NowExistPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNowExistPrice);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnCumulateNowInDepotCount = new global::System.Data.DataColumn("CumulateNowInDepotCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulateNowInDepotCount);
                this.columnCumulateNowInDepotUnitPrice = new global::System.Data.DataColumn("CumulateNowInDepotUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulateNowInDepotUnitPrice);
                this.columnCumulatedNowInDepotPrice = new global::System.Data.DataColumn("CumulatedNowInDepotPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulatedNowInDepotPrice);
                this.columnCumulateNowOutDepotCount = new global::System.Data.DataColumn("CumulateNowOutDepotCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulateNowOutDepotCount);
                this.columnCumulateNowOutDepotUnitPrice = new global::System.Data.DataColumn("CumulateNowOutDepotUnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulateNowOutDepotUnitPrice);
                this.columnCumulateNowOutDepotPrice = new global::System.Data.DataColumn("CumulateNowOutDepotPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulateNowOutDepotPrice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnSpec.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnFormerCount.AllowDBNull = false;
                this.columnFormerUnitPrice.AllowDBNull = false;
                this.columnFormerUnitPrice.MaxLength = 50;
                this.columnFormerPrice.AllowDBNull = false;
                this.columnFormerPrice.MaxLength = 50;
                this.columnNowInDepotCount.AllowDBNull = false;
                this.columnNowInDepotUnitPrice.AllowDBNull = false;
                this.columnNowInDepotUnitPrice.MaxLength = 50;
                this.columnNowInDepotPrice.AllowDBNull = false;
                this.columnNowInDepotPrice.MaxLength = 50;
                this.columnNowOutDepotCount.AllowDBNull = false;
                this.columnNowOutDepotUnitPrice.AllowDBNull = false;
                this.columnNowOutDepotUnitPrice.MaxLength = 50;
                this.columnNowOutDepotPrice.AllowDBNull = false;
                this.columnNowOutDepotPrice.MaxLength = 50;
                this.columnNowExistCount.AllowDBNull = false;
                this.columnNowExistUnitPrice.AllowDBNull = false;
                this.columnNowExistUnitPrice.MaxLength = 50;
                this.columnNowExistPrice.AllowDBNull = false;
                this.columnNowExistPrice.MaxLength = 50;
                this.columnMaterialType.MaxLength = 50;
                this.columnCumulateNowInDepotCount.AllowDBNull = false;
                this.columnCumulateNowInDepotUnitPrice.AllowDBNull = false;
                this.columnCumulateNowInDepotUnitPrice.MaxLength = 50;
                this.columnCumulatedNowInDepotPrice.AllowDBNull = false;
                this.columnCumulatedNowInDepotPrice.MaxLength = 50;
                this.columnCumulateNowOutDepotCount.AllowDBNull = false;
                this.columnCumulateNowOutDepotUnitPrice.AllowDBNull = false;
                this.columnCumulateNowOutDepotUnitPrice.MaxLength = 50;
                this.columnCumulateNowOutDepotPrice.AllowDBNull = false;
                this.columnCumulateNowOutDepotPrice.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRow NewS_ReceiveSendSaveGatherBillRow() {
                return ((S_ReceiveSendSaveGatherBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_ReceiveSendSaveGatherBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_ReceiveSendSaveGatherBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_ReceiveSendSaveGatherBillRowChanged != null)) {
                    this.S_ReceiveSendSaveGatherBillRowChanged(this, new S_ReceiveSendSaveGatherBillRowChangeEvent(((S_ReceiveSendSaveGatherBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_ReceiveSendSaveGatherBillRowChanging != null)) {
                    this.S_ReceiveSendSaveGatherBillRowChanging(this, new S_ReceiveSendSaveGatherBillRowChangeEvent(((S_ReceiveSendSaveGatherBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_ReceiveSendSaveGatherBillRowDeleted != null)) {
                    this.S_ReceiveSendSaveGatherBillRowDeleted(this, new S_ReceiveSendSaveGatherBillRowChangeEvent(((S_ReceiveSendSaveGatherBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_ReceiveSendSaveGatherBillRowDeleting != null)) {
                    this.S_ReceiveSendSaveGatherBillRowDeleting(this, new S_ReceiveSendSaveGatherBillRowChangeEvent(((S_ReceiveSendSaveGatherBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_ReceiveSendSaveGatherBillRow(S_ReceiveSendSaveGatherBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_ReceiveSendSaveGatherBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FetchGoodsWithdrawDepotBillDataTable : global::System.Data.TypedTableBase<View_S_FetchGoodsWithdrawDepotBillRow> {
            
            private global::System.Data.DataColumn column退库单号;
            
            private global::System.Data.DataColumn column退库日期;
            
            private global::System.Data.DataColumn column退库部门;
            
            private global::System.Data.DataColumn column用途;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column电位;
            
            private global::System.Data.DataColumn column退库数量;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column编制签名;
            
            private global::System.Data.DataColumn column部门负责人签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column编制人编码;
            
            private global::System.Data.DataColumn column仓库;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column货物类型;
            
            private global::System.Data.DataColumn column产品标志;
            
            private global::System.Data.DataColumn column质量工程师签名;
            
            private global::System.Data.DataColumn column物料类型;
            
            private global::System.Data.DataColumn column详细用途说明;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillDataTable() {
                this.TableName = "View_S_FetchGoodsWithdrawDepotBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsWithdrawDepotBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FetchGoodsWithdrawDepotBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库单号Column {
                get {
                    return this.column退库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库日期Column {
                get {
                    return this.column退库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库部门Column {
                get {
                    return this.column退库部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途Column {
                get {
                    return this.column用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 电位Column {
                get {
                    return this.column电位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库数量Column {
                get {
                    return this.column退库数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制签名Column {
                get {
                    return this.column编制签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门负责人签名Column {
                get {
                    return this.column部门负责人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人编码Column {
                get {
                    return this.column编制人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库Column {
                get {
                    return this.column仓库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货物类型Column {
                get {
                    return this.column货物类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品标志Column {
                get {
                    return this.column产品标志;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量工程师签名Column {
                get {
                    return this.column质量工程师签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物料类型Column {
                get {
                    return this.column物料类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 详细用途说明Column {
                get {
                    return this.column详细用途说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRow this[int index] {
                get {
                    return ((View_S_FetchGoodsWithdrawDepotBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FetchGoodsWithdrawDepotBillRowChangeEventHandler View_S_FetchGoodsWithdrawDepotBillRowChanging;
            
            public event View_S_FetchGoodsWithdrawDepotBillRowChangeEventHandler View_S_FetchGoodsWithdrawDepotBillRowChanged;
            
            public event View_S_FetchGoodsWithdrawDepotBillRowChangeEventHandler View_S_FetchGoodsWithdrawDepotBillRowDeleting;
            
            public event View_S_FetchGoodsWithdrawDepotBillRowChangeEventHandler View_S_FetchGoodsWithdrawDepotBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FetchGoodsWithdrawDepotBillRow(View_S_FetchGoodsWithdrawDepotBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRow AddView_S_FetchGoodsWithdrawDepotBillRow(
                        string 退库单号, 
                        string 退库日期, 
                        string 退库部门, 
                        string 用途, 
                        string 物品名称, 
                        string 图号型号, 
                        string 供货单位, 
                        string 批次号, 
                        string 电位, 
                        int 退库数量, 
                        string 备注, 
                        string 编制签名, 
                        string 部门负责人签名, 
                        string 仓管签名, 
                        string 编制人编码, 
                        string 仓库, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 规格, 
                        string 货物类型, 
                        int 产品标志, 
                        string 质量工程师签名, 
                        string 物料类型, 
                        string 详细用途说明) {
                View_S_FetchGoodsWithdrawDepotBillRow rowView_S_FetchGoodsWithdrawDepotBillRow = ((View_S_FetchGoodsWithdrawDepotBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        退库单号,
                        退库日期,
                        退库部门,
                        用途,
                        物品名称,
                        图号型号,
                        供货单位,
                        批次号,
                        电位,
                        退库数量,
                        备注,
                        编制签名,
                        部门负责人签名,
                        仓管签名,
                        编制人编码,
                        仓库,
                        货架,
                        列,
                        层,
                        规格,
                        货物类型,
                        产品标志,
                        质量工程师签名,
                        物料类型,
                        详细用途说明};
                rowView_S_FetchGoodsWithdrawDepotBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FetchGoodsWithdrawDepotBillRow);
                return rowView_S_FetchGoodsWithdrawDepotBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRow FindBy退库单号(string 退库单号) {
                return ((View_S_FetchGoodsWithdrawDepotBillRow)(this.Rows.Find(new object[] {
                            退库单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FetchGoodsWithdrawDepotBillDataTable cln = ((View_S_FetchGoodsWithdrawDepotBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FetchGoodsWithdrawDepotBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column退库单号 = base.Columns["退库单号"];
                this.column退库日期 = base.Columns["退库日期"];
                this.column退库部门 = base.Columns["退库部门"];
                this.column用途 = base.Columns["用途"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column批次号 = base.Columns["批次号"];
                this.column电位 = base.Columns["电位"];
                this.column退库数量 = base.Columns["退库数量"];
                this.column备注 = base.Columns["备注"];
                this.column编制签名 = base.Columns["编制签名"];
                this.column部门负责人签名 = base.Columns["部门负责人签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column编制人编码 = base.Columns["编制人编码"];
                this.column仓库 = base.Columns["仓库"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column规格 = base.Columns["规格"];
                this.column货物类型 = base.Columns["货物类型"];
                this.column产品标志 = base.Columns["产品标志"];
                this.column质量工程师签名 = base.Columns["质量工程师签名"];
                this.column物料类型 = base.Columns["物料类型"];
                this.column详细用途说明 = base.Columns["详细用途说明"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column退库单号 = new global::System.Data.DataColumn("退库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库单号);
                this.column退库日期 = new global::System.Data.DataColumn("退库日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库日期);
                this.column退库部门 = new global::System.Data.DataColumn("退库部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库部门);
                this.column用途 = new global::System.Data.DataColumn("用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column电位 = new global::System.Data.DataColumn("电位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电位);
                this.column退库数量 = new global::System.Data.DataColumn("退库数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库数量);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column编制签名 = new global::System.Data.DataColumn("编制签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制签名);
                this.column部门负责人签名 = new global::System.Data.DataColumn("部门负责人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门负责人签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column编制人编码 = new global::System.Data.DataColumn("编制人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人编码);
                this.column仓库 = new global::System.Data.DataColumn("仓库", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column货物类型 = new global::System.Data.DataColumn("货物类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货物类型);
                this.column产品标志 = new global::System.Data.DataColumn("产品标志", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品标志);
                this.column质量工程师签名 = new global::System.Data.DataColumn("质量工程师签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量工程师签名);
                this.column物料类型 = new global::System.Data.DataColumn("物料类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物料类型);
                this.column详细用途说明 = new global::System.Data.DataColumn("详细用途说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column详细用途说明);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column退库单号}, true));
                this.column退库单号.AllowDBNull = false;
                this.column退库单号.Unique = true;
                this.column退库单号.MaxLength = 50;
                this.column退库日期.AllowDBNull = false;
                this.column退库日期.MaxLength = 50;
                this.column退库部门.AllowDBNull = false;
                this.column退库部门.MaxLength = 50;
                this.column用途.AllowDBNull = false;
                this.column用途.MaxLength = 2147483647;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 50;
                this.column批次号.MaxLength = 50;
                this.column电位.AllowDBNull = false;
                this.column电位.MaxLength = 50;
                this.column退库数量.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column编制签名.AllowDBNull = false;
                this.column编制签名.MaxLength = 50;
                this.column部门负责人签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column编制人编码.AllowDBNull = false;
                this.column编制人编码.MaxLength = 50;
                this.column仓库.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column规格.MaxLength = 50;
                this.column货物类型.AllowDBNull = false;
                this.column货物类型.MaxLength = 50;
                this.column产品标志.AllowDBNull = false;
                this.column质量工程师签名.MaxLength = 50;
                this.column物料类型.MaxLength = 50;
                this.column详细用途说明.AllowDBNull = false;
                this.column详细用途说明.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRow NewView_S_FetchGoodsWithdrawDepotBillRow() {
                return ((View_S_FetchGoodsWithdrawDepotBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FetchGoodsWithdrawDepotBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FetchGoodsWithdrawDepotBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FetchGoodsWithdrawDepotBillRowChanged != null)) {
                    this.View_S_FetchGoodsWithdrawDepotBillRowChanged(this, new View_S_FetchGoodsWithdrawDepotBillRowChangeEvent(((View_S_FetchGoodsWithdrawDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FetchGoodsWithdrawDepotBillRowChanging != null)) {
                    this.View_S_FetchGoodsWithdrawDepotBillRowChanging(this, new View_S_FetchGoodsWithdrawDepotBillRowChangeEvent(((View_S_FetchGoodsWithdrawDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FetchGoodsWithdrawDepotBillRowDeleted != null)) {
                    this.View_S_FetchGoodsWithdrawDepotBillRowDeleted(this, new View_S_FetchGoodsWithdrawDepotBillRowChangeEvent(((View_S_FetchGoodsWithdrawDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FetchGoodsWithdrawDepotBillRowDeleting != null)) {
                    this.View_S_FetchGoodsWithdrawDepotBillRowDeleting(this, new View_S_FetchGoodsWithdrawDepotBillRowChangeEvent(((View_S_FetchGoodsWithdrawDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FetchGoodsWithdrawDepotBillRow(View_S_FetchGoodsWithdrawDepotBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FetchGoodsWithdrawDepotBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialRequisitionGoodsDataTable : global::System.Data.TypedTableBase<View_S_MaterialRequisitionGoodsRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column领料单号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商编码;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column基数;
            
            private global::System.Data.DataColumn column请领数;
            
            private global::System.Data.DataColumn column实领数;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column库存数;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column显示位置;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column物品类别名称;
            
            private global::System.Data.DataColumn columnStorageID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsDataTable() {
                this.TableName = "View_S_MaterialRequisitionGoods";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRequisitionGoodsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialRequisitionGoodsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料单号Column {
                get {
                    return this.column领料单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商编码Column {
                get {
                    return this.column供应商编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 基数Column {
                get {
                    return this.column基数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 请领数Column {
                get {
                    return this.column请领数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实领数Column {
                get {
                    return this.column实领数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数Column {
                get {
                    return this.column库存数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 显示位置Column {
                get {
                    return this.column显示位置;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别名称Column {
                get {
                    return this.column物品类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRow this[int index] {
                get {
                    return ((View_S_MaterialRequisitionGoodsRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialRequisitionGoodsRowChangeEventHandler View_S_MaterialRequisitionGoodsRowChanging;
            
            public event View_S_MaterialRequisitionGoodsRowChangeEventHandler View_S_MaterialRequisitionGoodsRowChanged;
            
            public event View_S_MaterialRequisitionGoodsRowChangeEventHandler View_S_MaterialRequisitionGoodsRowDeleting;
            
            public event View_S_MaterialRequisitionGoodsRowChangeEventHandler View_S_MaterialRequisitionGoodsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialRequisitionGoodsRow(View_S_MaterialRequisitionGoodsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRow AddView_S_MaterialRequisitionGoodsRow(
                        long 序号, 
                        string 领料单号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供应商编码, 
                        string 批次号, 
                        int 基数, 
                        decimal 请领数, 
                        decimal 实领数, 
                        string 单位, 
                        int 库存数, 
                        string 物品类别, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 备注, 
                        double 显示位置, 
                        int 物品ID, 
                        string 物品类别名称, 
                        string StorageID) {
                View_S_MaterialRequisitionGoodsRow rowView_S_MaterialRequisitionGoodsRow = ((View_S_MaterialRequisitionGoodsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        领料单号,
                        图号型号,
                        物品名称,
                        规格,
                        供应商编码,
                        批次号,
                        基数,
                        请领数,
                        实领数,
                        单位,
                        库存数,
                        物品类别,
                        货架,
                        列,
                        层,
                        备注,
                        显示位置,
                        物品ID,
                        物品类别名称,
                        StorageID};
                rowView_S_MaterialRequisitionGoodsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialRequisitionGoodsRow);
                return rowView_S_MaterialRequisitionGoodsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRow FindBy序号(long 序号) {
                return ((View_S_MaterialRequisitionGoodsRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialRequisitionGoodsDataTable cln = ((View_S_MaterialRequisitionGoodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialRequisitionGoodsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column领料单号 = base.Columns["领料单号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商编码 = base.Columns["供应商编码"];
                this.column批次号 = base.Columns["批次号"];
                this.column基数 = base.Columns["基数"];
                this.column请领数 = base.Columns["请领数"];
                this.column实领数 = base.Columns["实领数"];
                this.column单位 = base.Columns["单位"];
                this.column库存数 = base.Columns["库存数"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column备注 = base.Columns["备注"];
                this.column显示位置 = base.Columns["显示位置"];
                this.column物品ID = base.Columns["物品ID"];
                this.column物品类别名称 = base.Columns["物品类别名称"];
                this.columnStorageID = base.Columns["StorageID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column领料单号 = new global::System.Data.DataColumn("领料单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料单号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商编码 = new global::System.Data.DataColumn("供应商编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商编码);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column基数 = new global::System.Data.DataColumn("基数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column基数);
                this.column请领数 = new global::System.Data.DataColumn("请领数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column请领数);
                this.column实领数 = new global::System.Data.DataColumn("实领数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实领数);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column库存数 = new global::System.Data.DataColumn("库存数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column显示位置 = new global::System.Data.DataColumn("显示位置", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column显示位置);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column物品类别名称 = new global::System.Data.DataColumn("物品类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别名称);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column领料单号.AllowDBNull = false;
                this.column领料单号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column供应商编码.AllowDBNull = false;
                this.column供应商编码.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 120;
                this.column基数.AllowDBNull = false;
                this.column请领数.AllowDBNull = false;
                this.column实领数.AllowDBNull = false;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 50;
                this.column库存数.AllowDBNull = false;
                this.column物品类别.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column显示位置.AllowDBNull = false;
                this.column物品ID.AllowDBNull = false;
                this.column物品类别名称.MaxLength = 50;
                this.columnStorageID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRow NewView_S_MaterialRequisitionGoodsRow() {
                return ((View_S_MaterialRequisitionGoodsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialRequisitionGoodsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialRequisitionGoodsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialRequisitionGoodsRowChanged != null)) {
                    this.View_S_MaterialRequisitionGoodsRowChanged(this, new View_S_MaterialRequisitionGoodsRowChangeEvent(((View_S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialRequisitionGoodsRowChanging != null)) {
                    this.View_S_MaterialRequisitionGoodsRowChanging(this, new View_S_MaterialRequisitionGoodsRowChangeEvent(((View_S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialRequisitionGoodsRowDeleted != null)) {
                    this.View_S_MaterialRequisitionGoodsRowDeleted(this, new View_S_MaterialRequisitionGoodsRowChangeEvent(((View_S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialRequisitionGoodsRowDeleting != null)) {
                    this.View_S_MaterialRequisitionGoodsRowDeleting(this, new View_S_MaterialRequisitionGoodsRowChangeEvent(((View_S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialRequisitionGoodsRow(View_S_MaterialRequisitionGoodsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialRequisitionGoodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_OrdinaryInDepotBillDataTable : global::System.Data.TypedTableBase<View_S_OrdinaryInDepotBillRow> {
            
            private global::System.Data.DataColumn column入库单号;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column发票号码;
            
            private global::System.Data.DataColumn column订单号;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column供应商编码;
            
            private global::System.Data.DataColumn column供应商简称;
            
            private global::System.Data.DataColumn column材料编码;
            
            private global::System.Data.DataColumn column材料类别;
            
            private global::System.Data.DataColumn column采购员编码;
            
            private global::System.Data.DataColumn column采购员签名;
            
            private global::System.Data.DataColumn column需质检员确认;
            
            private global::System.Data.DataColumn column质检员编码;
            
            private global::System.Data.DataColumn column质量签名;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column设计人编码;
            
            private global::System.Data.DataColumn column设计工程师;
            
            private global::System.Data.DataColumn column仓管员编码;
                       
            private global::System.Data.DataColumn column质检合格标志;
            
            private global::System.Data.DataColumn column需工装管理员验证;
            
            private global::System.Data.DataColumn column工装验证报告编号;
            
            private global::System.Data.DataColumn column工装管理员编码;
            
            private global::System.Data.DataColumn column工装管理员签名;
            
            private global::System.Data.DataColumn column工装类别;
            
            private global::System.Data.DataColumn column是否允许入库;
            
            private global::System.Data.DataColumn column单据提交时间;
            
            private global::System.Data.DataColumn column质检时间;
            
            private global::System.Data.DataColumn column发票状态;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillDataTable() {
                this.TableName = "View_S_OrdinaryInDepotBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_OrdinaryInDepotBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_OrdinaryInDepotBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单号Column {
                get {
                    return this.column入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票号码Column {
                get {
                    return this.column发票号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 订单号Column {
                get {
                    return this.column订单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商编码Column {
                get {
                    return this.column供应商编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商简称Column {
                get {
                    return this.column供应商简称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料编码Column {
                get {
                    return this.column材料编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购员编码Column {
                get {
                    return this.column采购员编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购员签名Column {
                get {
                    return this.column采购员签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 需质检员确认Column {
                get {
                    return this.column需质检员确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质检员编码Column {
                get {
                    return this.column质检员编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量签名Column {
                get {
                    return this.column质量签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 设计人编码Column {
                get {
                    return this.column设计人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 设计工程师Column {
                get {
                    return this.column设计工程师;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管员编码Column {
                get {
                    return this.column仓管员编码;
                }
            }           
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质检合格标志Column {
                get {
                    return this.column质检合格标志;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 需工装管理员验证Column {
                get {
                    return this.column需工装管理员验证;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装验证报告编号Column {
                get {
                    return this.column工装验证报告编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装管理员编码Column {
                get {
                    return this.column工装管理员编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装管理员签名Column {
                get {
                    return this.column工装管理员签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装类别Column {
                get {
                    return this.column工装类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否允许入库Column {
                get {
                    return this.column是否允许入库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据提交时间Column {
                get {
                    return this.column单据提交时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质检时间Column {
                get {
                    return this.column质检时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票状态Column {
                get {
                    return this.column发票状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRow this[int index] {
                get {
                    return ((View_S_OrdinaryInDepotBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_OrdinaryInDepotBillRowChangeEventHandler View_S_OrdinaryInDepotBillRowChanging;
            
            public event View_S_OrdinaryInDepotBillRowChangeEventHandler View_S_OrdinaryInDepotBillRowChanged;
            
            public event View_S_OrdinaryInDepotBillRowChangeEventHandler View_S_OrdinaryInDepotBillRowDeleting;
            
            public event View_S_OrdinaryInDepotBillRowChangeEventHandler View_S_OrdinaryInDepotBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_OrdinaryInDepotBillRow(View_S_OrdinaryInDepotBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRow AddView_S_OrdinaryInDepotBillRow(
                        string 入库单号, 
                        System.DateTime 入库时间, 
                        string 发票号码, 
                        string 订单号, 
                        string 仓管签名, 
                        string 备注, 
                        string 单据状态, 
                        string 供应商编码, 
                        string 供应商简称, 
                        string 材料编码, 
                        string 材料类别, 
                        string 采购员编码, 
                        string 采购员签名, 
                        bool 需质检员确认, 
                        string 质检员编码, 
                        string 质量签名, 
                        string 申请人编码, 
                        string 申请人, 
                        string 设计人编码, 
                        string 设计工程师, 
                        string 仓管员编码, 
                        bool 质检合格标志, 
                        bool 需工装管理员验证, 
                        string 工装验证报告编号, 
                        string 工装管理员编码, 
                        string 工装管理员签名, 
                        string 工装类别, 
                        bool 是否允许入库, 
                        System.DateTime 单据提交时间, 
                        System.DateTime 质检时间, 
                        string 发票状态, 
                        bool 是否已打印, 
                        string 库房代码, 
                        string 库房名称) {
                View_S_OrdinaryInDepotBillRow rowView_S_OrdinaryInDepotBillRow = ((View_S_OrdinaryInDepotBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        入库单号,
                        入库时间,
                        发票号码,
                        订单号,
                        仓管签名,
                        备注,
                        单据状态,
                        供应商编码,
                        供应商简称,
                        材料编码,
                        材料类别,
                        采购员编码,
                        采购员签名,
                        需质检员确认,
                        质检员编码,
                        质量签名,
                        申请人编码,
                        申请人,
                        设计人编码,
                        设计工程师,
                        仓管员编码,
                        质检合格标志,
                        需工装管理员验证,
                        工装验证报告编号,
                        工装管理员编码,
                        工装管理员签名,
                        工装类别,
                        是否允许入库,
                        单据提交时间,
                        质检时间,
                        发票状态,
                        是否已打印,
                        库房代码,
                        库房名称};
                rowView_S_OrdinaryInDepotBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_OrdinaryInDepotBillRow);
                return rowView_S_OrdinaryInDepotBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRow FindBy入库单号(string 入库单号) {
                return ((View_S_OrdinaryInDepotBillRow)(this.Rows.Find(new object[] {
                            入库单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_OrdinaryInDepotBillDataTable cln = ((View_S_OrdinaryInDepotBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_OrdinaryInDepotBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column入库单号 = base.Columns["入库单号"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column发票号码 = base.Columns["发票号码"];
                this.column订单号 = base.Columns["订单号"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column备注 = base.Columns["备注"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column供应商编码 = base.Columns["供应商编码"];
                this.column供应商简称 = base.Columns["供应商简称"];
                this.column材料编码 = base.Columns["材料编码"];
                this.column材料类别 = base.Columns["材料类别"];
                this.column采购员编码 = base.Columns["采购员编码"];
                this.column采购员签名 = base.Columns["采购员签名"];
                this.column需质检员确认 = base.Columns["需质检员确认"];
                this.column质检员编码 = base.Columns["质检员编码"];
                this.column质量签名 = base.Columns["质量签名"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column申请人 = base.Columns["申请人"];
                this.column设计人编码 = base.Columns["设计人编码"];
                this.column设计工程师 = base.Columns["设计工程师"];
                this.column仓管员编码 = base.Columns["仓管员编码"];
                this.column质检合格标志 = base.Columns["质检合格标志"];
                this.column需工装管理员验证 = base.Columns["需工装管理员验证"];
                this.column工装验证报告编号 = base.Columns["工装验证报告编号"];
                this.column工装管理员编码 = base.Columns["工装管理员编码"];
                this.column工装管理员签名 = base.Columns["工装管理员签名"];
                this.column工装类别 = base.Columns["工装类别"];
                this.column是否允许入库 = base.Columns["是否允许入库"];
                this.column单据提交时间 = base.Columns["单据提交时间"];
                this.column质检时间 = base.Columns["质检时间"];
                this.column发票状态 = base.Columns["发票状态"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column入库单号 = new global::System.Data.DataColumn("入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单号);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column发票号码 = new global::System.Data.DataColumn("发票号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票号码);
                this.column订单号 = new global::System.Data.DataColumn("订单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column订单号);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column供应商编码 = new global::System.Data.DataColumn("供应商编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商编码);
                this.column供应商简称 = new global::System.Data.DataColumn("供应商简称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商简称);
                this.column材料编码 = new global::System.Data.DataColumn("材料编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料编码);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column采购员编码 = new global::System.Data.DataColumn("采购员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购员编码);
                this.column采购员签名 = new global::System.Data.DataColumn("采购员签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购员签名);
                this.column需质检员确认 = new global::System.Data.DataColumn("需质检员确认", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column需质检员确认);
                this.column质检员编码 = new global::System.Data.DataColumn("质检员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质检员编码);
                this.column质量签名 = new global::System.Data.DataColumn("质量签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量签名);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column设计人编码 = new global::System.Data.DataColumn("设计人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column设计人编码);
                this.column设计工程师 = new global::System.Data.DataColumn("设计工程师", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column设计工程师);
                this.column仓管员编码 = new global::System.Data.DataColumn("仓管员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管员编码);
                this.column质检合格标志 = new global::System.Data.DataColumn("质检合格标志", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质检合格标志);
                this.column需工装管理员验证 = new global::System.Data.DataColumn("需工装管理员验证", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column需工装管理员验证);
                this.column工装验证报告编号 = new global::System.Data.DataColumn("工装验证报告编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装验证报告编号);
                this.column工装管理员编码 = new global::System.Data.DataColumn("工装管理员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装管理员编码);
                this.column工装管理员签名 = new global::System.Data.DataColumn("工装管理员签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装管理员签名);
                this.column工装类别 = new global::System.Data.DataColumn("工装类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装类别);
                this.column是否允许入库 = new global::System.Data.DataColumn("是否允许入库", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否允许入库);
                this.column单据提交时间 = new global::System.Data.DataColumn("单据提交时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据提交时间);
                this.column质检时间 = new global::System.Data.DataColumn("质检时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质检时间);
                this.column发票状态 = new global::System.Data.DataColumn("发票状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票状态);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column入库单号}, true));
                this.column入库单号.AllowDBNull = false;
                this.column入库单号.Unique = true;
                this.column入库单号.MaxLength = 50;
                this.column入库时间.AllowDBNull = false;
                this.column发票号码.MaxLength = 50;
                this.column订单号.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column单据状态.MaxLength = 50;
                this.column供应商编码.AllowDBNull = false;
                this.column供应商编码.MaxLength = 15;
                this.column供应商简称.MaxLength = 50;
                this.column材料编码.AllowDBNull = false;
                this.column材料编码.MaxLength = 20;
                this.column材料类别.MaxLength = 50;
                this.column采购员编码.AllowDBNull = false;
                this.column采购员编码.MaxLength = 6;
                this.column采购员签名.MaxLength = 50;
                this.column需质检员确认.AllowDBNull = false;
                this.column质检员编码.AllowDBNull = false;
                this.column质检员编码.MaxLength = 50;
                this.column质量签名.MaxLength = 50;
                this.column申请人编码.AllowDBNull = false;
                this.column申请人编码.MaxLength = 50;
                this.column申请人.MaxLength = 50;
                this.column设计人编码.AllowDBNull = false;
                this.column设计人编码.MaxLength = 50;
                this.column设计工程师.MaxLength = 50;
                this.column仓管员编码.AllowDBNull = false;
                this.column仓管员编码.MaxLength = 50;
                this.column需工装管理员验证.AllowDBNull = false;
                this.column工装验证报告编号.MaxLength = 26;
                this.column工装管理员编码.AllowDBNull = false;
                this.column工装管理员编码.MaxLength = 50;
                this.column工装管理员签名.MaxLength = 50;
                this.column工装类别.MaxLength = 26;
                this.column是否允许入库.AllowDBNull = false;
                this.column单据提交时间.AllowDBNull = false;
                this.column发票状态.AllowDBNull = false;
                this.column发票状态.MaxLength = 6;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRow NewView_S_OrdinaryInDepotBillRow() {
                return ((View_S_OrdinaryInDepotBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_OrdinaryInDepotBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_OrdinaryInDepotBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_OrdinaryInDepotBillRowChanged != null)) {
                    this.View_S_OrdinaryInDepotBillRowChanged(this, new View_S_OrdinaryInDepotBillRowChangeEvent(((View_S_OrdinaryInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_OrdinaryInDepotBillRowChanging != null)) {
                    this.View_S_OrdinaryInDepotBillRowChanging(this, new View_S_OrdinaryInDepotBillRowChangeEvent(((View_S_OrdinaryInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_OrdinaryInDepotBillRowDeleted != null)) {
                    this.View_S_OrdinaryInDepotBillRowDeleted(this, new View_S_OrdinaryInDepotBillRowChangeEvent(((View_S_OrdinaryInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_OrdinaryInDepotBillRowDeleting != null)) {
                    this.View_S_OrdinaryInDepotBillRowDeleting(this, new View_S_OrdinaryInDepotBillRowChangeEvent(((View_S_OrdinaryInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_OrdinaryInDepotBillRow(View_S_OrdinaryInDepotBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_OrdinaryInDepotBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_B_BargainGoodsDataTable : global::System.Data.TypedTableBase<View_B_BargainGoodsRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column合同号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column数量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsDataTable() {
                this.TableName = "View_B_BargainGoods";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_BargainGoodsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_B_BargainGoodsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同号Column {
                get {
                    return this.column合同号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRow this[int index] {
                get {
                    return ((View_B_BargainGoodsRow)(this.Rows[index]));
                }
            }
            
            public event View_B_BargainGoodsRowChangeEventHandler View_B_BargainGoodsRowChanging;
            
            public event View_B_BargainGoodsRowChangeEventHandler View_B_BargainGoodsRowChanged;
            
            public event View_B_BargainGoodsRowChangeEventHandler View_B_BargainGoodsRowDeleting;
            
            public event View_B_BargainGoodsRowChangeEventHandler View_B_BargainGoodsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_B_BargainGoodsRow(View_B_BargainGoodsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRow AddView_B_BargainGoodsRow(string 合同号, string 图号型号, string 规格, string 物品名称, decimal 单价, int 数量) {
                View_B_BargainGoodsRow rowView_B_BargainGoodsRow = ((View_B_BargainGoodsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        合同号,
                        图号型号,
                        规格,
                        物品名称,
                        单价,
                        数量};
                rowView_B_BargainGoodsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_B_BargainGoodsRow);
                return rowView_B_BargainGoodsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRow FindBy序号(int 序号) {
                return ((View_B_BargainGoodsRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_B_BargainGoodsDataTable cln = ((View_B_BargainGoodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_B_BargainGoodsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column合同号 = base.Columns["合同号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column规格 = base.Columns["规格"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column单价 = base.Columns["单价"];
                this.column数量 = base.Columns["数量"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column合同号 = new global::System.Data.DataColumn("合同号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AutoIncrement = true;
                this.column序号.AutoIncrementSeed = -1;
                this.column序号.AutoIncrementStep = -1;
                this.column序号.AllowDBNull = false;
                this.column序号.ReadOnly = true;
                this.column序号.Unique = true;
                this.column合同号.AllowDBNull = false;
                this.column合同号.MaxLength = 20;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column单价.AllowDBNull = false;
                this.column数量.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRow NewView_B_BargainGoodsRow() {
                return ((View_B_BargainGoodsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_B_BargainGoodsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_B_BargainGoodsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_B_BargainGoodsRowChanged != null)) {
                    this.View_B_BargainGoodsRowChanged(this, new View_B_BargainGoodsRowChangeEvent(((View_B_BargainGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_B_BargainGoodsRowChanging != null)) {
                    this.View_B_BargainGoodsRowChanging(this, new View_B_BargainGoodsRowChangeEvent(((View_B_BargainGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_B_BargainGoodsRowDeleted != null)) {
                    this.View_B_BargainGoodsRowDeleted(this, new View_B_BargainGoodsRowChangeEvent(((View_B_BargainGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_B_BargainGoodsRowDeleting != null)) {
                    this.View_B_BargainGoodsRowDeleting(this, new View_B_BargainGoodsRowChangeEvent(((View_B_BargainGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_B_BargainGoodsRow(View_B_BargainGoodsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_B_BargainGoodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_B_BargainInfoDataTable : global::System.Data.TypedTableBase<View_B_BargainInfoRow> {
            
            private global::System.Data.DataColumn column合同号;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column采购员;
            
            private global::System.Data.DataColumn column税率;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column供应商联系人;
            
            private global::System.Data.DataColumn column联系方式;
            
            private global::System.Data.DataColumn column合同录入员;
            
            private global::System.Data.DataColumn column权限控制用登录名;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column是否海外合同;
            
            private global::System.Data.DataColumn column是否委外合同;
            
            private global::System.Data.DataColumn column部门主管签名;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoDataTable() {
                this.TableName = "View_B_BargainInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_BargainInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_B_BargainInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同号Column {
                get {
                    return this.column合同号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购员Column {
                get {
                    return this.column采购员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 税率Column {
                get {
                    return this.column税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商联系人Column {
                get {
                    return this.column供应商联系人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 联系方式Column {
                get {
                    return this.column联系方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同录入员Column {
                get {
                    return this.column合同录入员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 权限控制用登录名Column {
                get {
                    return this.column权限控制用登录名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否海外合同Column {
                get {
                    return this.column是否海外合同;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否委外合同Column {
                get {
                    return this.column是否委外合同;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门主管签名Column {
                get {
                    return this.column部门主管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRow this[int index] {
                get {
                    return ((View_B_BargainInfoRow)(this.Rows[index]));
                }
            }
            
            public event View_B_BargainInfoRowChangeEventHandler View_B_BargainInfoRowChanging;
            
            public event View_B_BargainInfoRowChangeEventHandler View_B_BargainInfoRowChanged;
            
            public event View_B_BargainInfoRowChangeEventHandler View_B_BargainInfoRowDeleting;
            
            public event View_B_BargainInfoRowChangeEventHandler View_B_BargainInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_B_BargainInfoRow(View_B_BargainInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRow AddView_B_BargainInfoRow(string 合同号, string 供货单位, string 采购员, decimal 税率, System.DateTime 日期, string 供应商联系人, string 联系方式, string 合同录入员, string 权限控制用登录名, string 备注, bool 是否海外合同, bool 是否委外合同, string 部门主管签名) {
                View_B_BargainInfoRow rowView_B_BargainInfoRow = ((View_B_BargainInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        合同号,
                        供货单位,
                        采购员,
                        税率,
                        日期,
                        供应商联系人,
                        联系方式,
                        合同录入员,
                        权限控制用登录名,
                        备注,
                        是否海外合同,
                        是否委外合同,
                        部门主管签名};
                rowView_B_BargainInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_B_BargainInfoRow);
                return rowView_B_BargainInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRow FindBy合同号权限控制用登录名(string 合同号, string 权限控制用登录名) {
                return ((View_B_BargainInfoRow)(this.Rows.Find(new object[] {
                            合同号,
                            权限控制用登录名})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_B_BargainInfoDataTable cln = ((View_B_BargainInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_B_BargainInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column合同号 = base.Columns["合同号"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column采购员 = base.Columns["采购员"];
                this.column税率 = base.Columns["税率"];
                this.column日期 = base.Columns["日期"];
                this.column供应商联系人 = base.Columns["供应商联系人"];
                this.column联系方式 = base.Columns["联系方式"];
                this.column合同录入员 = base.Columns["合同录入员"];
                this.column权限控制用登录名 = base.Columns["权限控制用登录名"];
                this.column备注 = base.Columns["备注"];
                this.column是否海外合同 = base.Columns["是否海外合同"];
                this.column是否委外合同 = base.Columns["是否委外合同"];
                this.column部门主管签名 = base.Columns["部门主管签名"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column合同号 = new global::System.Data.DataColumn("合同号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同号);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column采购员 = new global::System.Data.DataColumn("采购员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购员);
                this.column税率 = new global::System.Data.DataColumn("税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税率);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column供应商联系人 = new global::System.Data.DataColumn("供应商联系人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商联系人);
                this.column联系方式 = new global::System.Data.DataColumn("联系方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column联系方式);
                this.column合同录入员 = new global::System.Data.DataColumn("合同录入员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同录入员);
                this.column权限控制用登录名 = new global::System.Data.DataColumn("权限控制用登录名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column权限控制用登录名);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column是否海外合同 = new global::System.Data.DataColumn("是否海外合同", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否海外合同);
                this.column是否委外合同 = new global::System.Data.DataColumn("是否委外合同", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否委外合同);
                this.column部门主管签名 = new global::System.Data.DataColumn("部门主管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门主管签名);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column合同号,
                                this.column权限控制用登录名}, true));
                this.column合同号.AllowDBNull = false;
                this.column合同号.MaxLength = 20;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 50;
                this.column采购员.AllowDBNull = false;
                this.column采购员.MaxLength = 20;
                this.column税率.AllowDBNull = false;
                this.column日期.AllowDBNull = false;
                this.column供应商联系人.AllowDBNull = false;
                this.column供应商联系人.MaxLength = 50;
                this.column联系方式.AllowDBNull = false;
                this.column联系方式.MaxLength = 50;
                this.column合同录入员.AllowDBNull = false;
                this.column合同录入员.MaxLength = 50;
                this.column权限控制用登录名.AllowDBNull = false;
                this.column权限控制用登录名.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column是否海外合同.AllowDBNull = false;
                this.column是否委外合同.AllowDBNull = false;
                this.column部门主管签名.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRow NewView_B_BargainInfoRow() {
                return ((View_B_BargainInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_B_BargainInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_B_BargainInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_B_BargainInfoRowChanged != null)) {
                    this.View_B_BargainInfoRowChanged(this, new View_B_BargainInfoRowChangeEvent(((View_B_BargainInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_B_BargainInfoRowChanging != null)) {
                    this.View_B_BargainInfoRowChanging(this, new View_B_BargainInfoRowChangeEvent(((View_B_BargainInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_B_BargainInfoRowDeleted != null)) {
                    this.View_B_BargainInfoRowDeleted(this, new View_B_BargainInfoRowChangeEvent(((View_B_BargainInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_B_BargainInfoRowDeleting != null)) {
                    this.View_B_BargainInfoRowDeleting(this, new View_B_BargainInfoRowChangeEvent(((View_B_BargainInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_B_BargainInfoRow(View_B_BargainInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_B_BargainInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_StockDataTable : global::System.Data.TypedTableBase<View_S_StockRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column库存数量;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column实际单价;
            
            private global::System.Data.DataColumn column实际金额;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column材料类别编码;
            
            private global::System.Data.DataColumn column材料类别名称;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column单位ID;
            
            private global::System.Data.DataColumn column物品状态;
            
            private global::System.Data.DataColumn column版次号;
            
            private global::System.Data.DataColumn column禁用;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockDataTable() {
                this.TableName = "View_S_Stock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_StockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_StockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数量Column {
                get {
                    return this.column库存数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际单价Column {
                get {
                    return this.column实际单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际金额Column {
                get {
                    return this.column实际金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别编码Column {
                get {
                    return this.column材料类别编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别名称Column {
                get {
                    return this.column材料类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位IDColumn {
                get {
                    return this.column单位ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品状态Column {
                get {
                    return this.column物品状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 版次号Column {
                get {
                    return this.column版次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 禁用Column {
                get {
                    return this.column禁用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRow this[int index] {
                get {
                    return ((View_S_StockRow)(this.Rows[index]));
                }
            }
            
            public event View_S_StockRowChangeEventHandler View_S_StockRowChanging;
            
            public event View_S_StockRowChangeEventHandler View_S_StockRowChanged;
            
            public event View_S_StockRowChangeEventHandler View_S_StockRowDeleting;
            
            public event View_S_StockRowChangeEventHandler View_S_StockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_StockRow(View_S_StockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRow AddView_S_StockRow(
                        int 序号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供货单位, 
                        string 供方批次号, 
                        string 批次号, 
                        string 单位, 
                        int 库存数量, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        System.DateTime 入库时间, 
                        string 备注, 
                        decimal 实际单价, 
                        decimal 实际金额, 
                        string 库房名称, 
                        string 材料类别编码, 
                        string 材料类别名称, 
                        string 库房代码, 
                        int 物品ID, 
                        int 单位ID, 
                        string 物品状态, 
                        string 版次号, 
                        bool 禁用) {
                View_S_StockRow rowView_S_StockRow = ((View_S_StockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        图号型号,
                        物品名称,
                        规格,
                        供货单位,
                        供方批次号,
                        批次号,
                        单位,
                        库存数量,
                        货架,
                        列,
                        层,
                        入库时间,
                        备注,
                        实际单价,
                        实际金额,
                        库房名称,
                        材料类别编码,
                        材料类别名称,
                        库房代码,
                        物品ID,
                        单位ID,
                        物品状态,
                        版次号,
                        禁用};
                rowView_S_StockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_StockRow);
                return rowView_S_StockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRow FindBy序号(int 序号) {
                return ((View_S_StockRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_StockDataTable cln = ((View_S_StockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_StockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column批次号 = base.Columns["批次号"];
                this.column单位 = base.Columns["单位"];
                this.column库存数量 = base.Columns["库存数量"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column备注 = base.Columns["备注"];
                this.column实际单价 = base.Columns["实际单价"];
                this.column实际金额 = base.Columns["实际金额"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column材料类别编码 = base.Columns["材料类别编码"];
                this.column材料类别名称 = base.Columns["材料类别名称"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column物品ID = base.Columns["物品ID"];
                this.column单位ID = base.Columns["单位ID"];
                this.column物品状态 = base.Columns["物品状态"];
                this.column版次号 = base.Columns["版次号"];
                this.column禁用 = base.Columns["禁用"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column库存数量 = new global::System.Data.DataColumn("库存数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数量);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column实际单价 = new global::System.Data.DataColumn("实际单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际单价);
                this.column实际金额 = new global::System.Data.DataColumn("实际金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际金额);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column材料类别编码 = new global::System.Data.DataColumn("材料类别编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别编码);
                this.column材料类别名称 = new global::System.Data.DataColumn("材料类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别名称);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单位ID = new global::System.Data.DataColumn("单位ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位ID);
                this.column物品状态 = new global::System.Data.DataColumn("物品状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品状态);
                this.column版次号 = new global::System.Data.DataColumn("版次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column版次号);
                this.column禁用 = new global::System.Data.DataColumn("禁用", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column禁用);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 50;
                this.column供方批次号.AllowDBNull = false;
                this.column供方批次号.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 240;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 50;
                this.column库存数量.AllowDBNull = false;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column入库时间.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column实际单价.AllowDBNull = false;
                this.column实际金额.ReadOnly = true;
                this.column库房名称.MaxLength = 50;
                this.column材料类别编码.MaxLength = 50;
                this.column材料类别名称.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
                this.column单位ID.AllowDBNull = false;
                this.column物品状态.AllowDBNull = false;
                this.column物品状态.MaxLength = 50;
                this.column版次号.AllowDBNull = false;
                this.column版次号.MaxLength = 50;
                this.column禁用.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRow NewView_S_StockRow() {
                return ((View_S_StockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_StockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_StockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_StockRowChanged != null)) {
                    this.View_S_StockRowChanged(this, new View_S_StockRowChangeEvent(((View_S_StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_StockRowChanging != null)) {
                    this.View_S_StockRowChanging(this, new View_S_StockRowChangeEvent(((View_S_StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_StockRowDeleted != null)) {
                    this.View_S_StockRowDeleted(this, new View_S_StockRowChangeEvent(((View_S_StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_StockRowDeleting != null)) {
                    this.View_S_StockRowDeleting(this, new View_S_StockRowChangeEvent(((View_S_StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_StockRow(View_S_StockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_StockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialRequisitionDataTable : global::System.Data.TypedTableBase<View_S_MaterialRequisitionRow> {
            
            private global::System.Data.DataColumn column领料单号;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column用途编码;
            
            private global::System.Data.DataColumn column用途说明;
            
            private global::System.Data.DataColumn column关联单据;
            
            private global::System.Data.DataColumn column关联单号;
            
            private global::System.Data.DataColumn column领料部门;
            
            private global::System.Data.DataColumn column部门名称;
            
            private global::System.Data.DataColumn column领料类型;
            
            private global::System.Data.DataColumn column产品类型;
            
            private global::System.Data.DataColumn column领料台数;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制人编码;
            
            private global::System.Data.DataColumn column部门主管签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column出库时间;
            
            private global::System.Data.DataColumn column部门领导签名;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionDataTable() {
                this.TableName = "View_S_MaterialRequisition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRequisitionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialRequisitionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料单号Column {
                get {
                    return this.column领料单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途编码Column {
                get {
                    return this.column用途编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途说明Column {
                get {
                    return this.column用途说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单据Column {
                get {
                    return this.column关联单据;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单号Column {
                get {
                    return this.column关联单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料部门Column {
                get {
                    return this.column领料部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料类型Column {
                get {
                    return this.column领料类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品类型Column {
                get {
                    return this.column产品类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料台数Column {
                get {
                    return this.column领料台数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人编码Column {
                get {
                    return this.column编制人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门主管签名Column {
                get {
                    return this.column部门主管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库时间Column {
                get {
                    return this.column出库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门领导签名Column {
                get {
                    return this.column部门领导签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRow this[int index] {
                get {
                    return ((View_S_MaterialRequisitionRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialRequisitionRowChangeEventHandler View_S_MaterialRequisitionRowChanging;
            
            public event View_S_MaterialRequisitionRowChangeEventHandler View_S_MaterialRequisitionRowChanged;
            
            public event View_S_MaterialRequisitionRowChangeEventHandler View_S_MaterialRequisitionRowDeleting;
            
            public event View_S_MaterialRequisitionRowChangeEventHandler View_S_MaterialRequisitionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialRequisitionRow(View_S_MaterialRequisitionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRow AddView_S_MaterialRequisitionRow(
                        string 领料单号, 
                        System.DateTime 日期, 
                        string 用途编码, 
                        string 用途说明, 
                        string 关联单据, 
                        string 关联单号, 
                        string 领料部门, 
                        string 部门名称, 
                        string 领料类型, 
                        string 产品类型, 
                        int 领料台数, 
                        string 编制人, 
                        string 编制人编码, 
                        string 部门主管签名, 
                        string 仓管签名, 
                        string 单据状态, 
                        string 备注, 
                        bool 是否已打印, 
                        string 库房代码, 
                        string 库房名称, 
                        System.DateTime 出库时间, 
                        string 部门领导签名) {
                View_S_MaterialRequisitionRow rowView_S_MaterialRequisitionRow = ((View_S_MaterialRequisitionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        领料单号,
                        日期,
                        用途编码,
                        用途说明,
                        关联单据,
                        关联单号,
                        领料部门,
                        部门名称,
                        领料类型,
                        产品类型,
                        领料台数,
                        编制人,
                        编制人编码,
                        部门主管签名,
                        仓管签名,
                        单据状态,
                        备注,
                        是否已打印,
                        库房代码,
                        库房名称,
                        出库时间,
                        部门领导签名};
                rowView_S_MaterialRequisitionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialRequisitionRow);
                return rowView_S_MaterialRequisitionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRow FindBy领料单号(string 领料单号) {
                return ((View_S_MaterialRequisitionRow)(this.Rows.Find(new object[] {
                            领料单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialRequisitionDataTable cln = ((View_S_MaterialRequisitionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialRequisitionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column领料单号 = base.Columns["领料单号"];
                this.column日期 = base.Columns["日期"];
                this.column用途编码 = base.Columns["用途编码"];
                this.column用途说明 = base.Columns["用途说明"];
                this.column关联单据 = base.Columns["关联单据"];
                this.column关联单号 = base.Columns["关联单号"];
                this.column领料部门 = base.Columns["领料部门"];
                this.column部门名称 = base.Columns["部门名称"];
                this.column领料类型 = base.Columns["领料类型"];
                this.column产品类型 = base.Columns["产品类型"];
                this.column领料台数 = base.Columns["领料台数"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制人编码 = base.Columns["编制人编码"];
                this.column部门主管签名 = base.Columns["部门主管签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column备注 = base.Columns["备注"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column出库时间 = base.Columns["出库时间"];
                this.column部门领导签名 = base.Columns["部门领导签名"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column领料单号 = new global::System.Data.DataColumn("领料单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料单号);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column用途编码 = new global::System.Data.DataColumn("用途编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途编码);
                this.column用途说明 = new global::System.Data.DataColumn("用途说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途说明);
                this.column关联单据 = new global::System.Data.DataColumn("关联单据", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单据);
                this.column关联单号 = new global::System.Data.DataColumn("关联单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单号);
                this.column领料部门 = new global::System.Data.DataColumn("领料部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料部门);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.column领料类型 = new global::System.Data.DataColumn("领料类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料类型);
                this.column产品类型 = new global::System.Data.DataColumn("产品类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品类型);
                this.column领料台数 = new global::System.Data.DataColumn("领料台数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料台数);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制人编码 = new global::System.Data.DataColumn("编制人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人编码);
                this.column部门主管签名 = new global::System.Data.DataColumn("部门主管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门主管签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column出库时间 = new global::System.Data.DataColumn("出库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库时间);
                this.column部门领导签名 = new global::System.Data.DataColumn("部门领导签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门领导签名);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column领料单号}, true));
                this.column领料单号.AllowDBNull = false;
                this.column领料单号.Unique = true;
                this.column领料单号.MaxLength = 50;
                this.column日期.AllowDBNull = false;
                this.column用途编码.AllowDBNull = false;
                this.column用途编码.MaxLength = 20;
                this.column用途说明.AllowDBNull = false;
                this.column用途说明.MaxLength = 50;
                this.column关联单据.AllowDBNull = false;
                this.column关联单据.MaxLength = 20;
                this.column关联单号.AllowDBNull = false;
                this.column关联单号.MaxLength = 50;
                this.column领料部门.AllowDBNull = false;
                this.column领料部门.MaxLength = 50;
                this.column部门名称.AllowDBNull = false;
                this.column部门名称.MaxLength = 50;
                this.column领料类型.AllowDBNull = false;
                this.column领料类型.MaxLength = 50;
                this.column产品类型.AllowDBNull = false;
                this.column产品类型.MaxLength = 50;
                this.column领料台数.AllowDBNull = false;
                this.column编制人.AllowDBNull = false;
                this.column编制人.MaxLength = 50;
                this.column编制人编码.AllowDBNull = false;
                this.column编制人编码.MaxLength = 50;
                this.column部门主管签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column部门领导签名.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRow NewView_S_MaterialRequisitionRow() {
                return ((View_S_MaterialRequisitionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialRequisitionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialRequisitionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialRequisitionRowChanged != null)) {
                    this.View_S_MaterialRequisitionRowChanged(this, new View_S_MaterialRequisitionRowChangeEvent(((View_S_MaterialRequisitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialRequisitionRowChanging != null)) {
                    this.View_S_MaterialRequisitionRowChanging(this, new View_S_MaterialRequisitionRowChangeEvent(((View_S_MaterialRequisitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialRequisitionRowDeleted != null)) {
                    this.View_S_MaterialRequisitionRowDeleted(this, new View_S_MaterialRequisitionRowChangeEvent(((View_S_MaterialRequisitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialRequisitionRowDeleting != null)) {
                    this.View_S_MaterialRequisitionRowDeleting(this, new View_S_MaterialRequisitionRowChangeEvent(((View_S_MaterialRequisitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialRequisitionRow(View_S_MaterialRequisitionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialRequisitionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_ScrapBillDataTable : global::System.Data.TypedTableBase<View_S_ScrapBillRow> {
            
            private global::System.Data.DataColumn column报废单号;
            
            private global::System.Data.DataColumn column报废时间;
            
            private global::System.Data.DataColumn column损失金额;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column申请人签名;
            
            private global::System.Data.DataColumn column申请部门编码;
            
            private global::System.Data.DataColumn column申请部门;
            
            private global::System.Data.DataColumn column部门主管签名;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column审批人签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column知会检验名编码;
            
            private global::System.Data.DataColumn column知会检验名姓名;
            
            private global::System.Data.DataColumn column批准时间;
            
            private global::System.Data.DataColumn column仓库确认时间;
            
            private global::System.Data.DataColumn column单据报废类型;
            
            private global::System.Data.DataColumn columnSQE;
            
            private global::System.Data.DataColumn columnSQE处理日期;
            
            private global::System.Data.DataColumn column是否已打印;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillDataTable() {
                this.TableName = "View_S_ScrapBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ScrapBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_ScrapBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废单号Column {
                get {
                    return this.column报废单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废时间Column {
                get {
                    return this.column报废时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 损失金额Column {
                get {
                    return this.column损失金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人签名Column {
                get {
                    return this.column申请人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编码Column {
                get {
                    return this.column申请部门编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门Column {
                get {
                    return this.column申请部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门主管签名Column {
                get {
                    return this.column部门主管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审批人签名Column {
                get {
                    return this.column审批人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 知会检验名编码Column {
                get {
                    return this.column知会检验名编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 知会检验名姓名Column {
                get {
                    return this.column知会检验名姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准时间Column {
                get {
                    return this.column批准时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库确认时间Column {
                get {
                    return this.column仓库确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据报废类型Column {
                get {
                    return this.column单据报废类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEColumn {
                get {
                    return this.columnSQE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE处理日期Column {
                get {
                    return this.columnSQE处理日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRow this[int index] {
                get {
                    return ((View_S_ScrapBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_ScrapBillRowChangeEventHandler View_S_ScrapBillRowChanging;
            
            public event View_S_ScrapBillRowChangeEventHandler View_S_ScrapBillRowChanged;
            
            public event View_S_ScrapBillRowChangeEventHandler View_S_ScrapBillRowDeleting;
            
            public event View_S_ScrapBillRowChangeEventHandler View_S_ScrapBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_ScrapBillRow(View_S_ScrapBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRow AddView_S_ScrapBillRow(
                        string 报废单号, 
                        System.DateTime 报废时间, 
                        decimal 损失金额, 
                        string 申请人编码, 
                        string 申请人签名, 
                        string 申请部门编码, 
                        string 申请部门, 
                        string 部门主管签名, 
                        string 检验员, 
                        string 审批人签名, 
                        string 仓管签名, 
                        string 单据状态, 
                        string 备注, 
                        string 知会检验名编码, 
                        string 知会检验名姓名, 
                        System.DateTime 批准时间, 
                        System.DateTime 仓库确认时间, 
                        string 单据报废类型, 
                        string SQE, 
                        System.DateTime SQE处理日期, 
                        bool 是否已打印) {
                View_S_ScrapBillRow rowView_S_ScrapBillRow = ((View_S_ScrapBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        报废单号,
                        报废时间,
                        损失金额,
                        申请人编码,
                        申请人签名,
                        申请部门编码,
                        申请部门,
                        部门主管签名,
                        检验员,
                        审批人签名,
                        仓管签名,
                        单据状态,
                        备注,
                        知会检验名编码,
                        知会检验名姓名,
                        批准时间,
                        仓库确认时间,
                        单据报废类型,
                        SQE,
                        SQE处理日期,
                        是否已打印};
                rowView_S_ScrapBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_ScrapBillRow);
                return rowView_S_ScrapBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRow FindBy报废单号(string 报废单号) {
                return ((View_S_ScrapBillRow)(this.Rows.Find(new object[] {
                            报废单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_ScrapBillDataTable cln = ((View_S_ScrapBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_ScrapBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column报废单号 = base.Columns["报废单号"];
                this.column报废时间 = base.Columns["报废时间"];
                this.column损失金额 = base.Columns["损失金额"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column申请人签名 = base.Columns["申请人签名"];
                this.column申请部门编码 = base.Columns["申请部门编码"];
                this.column申请部门 = base.Columns["申请部门"];
                this.column部门主管签名 = base.Columns["部门主管签名"];
                this.column检验员 = base.Columns["检验员"];
                this.column审批人签名 = base.Columns["审批人签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column备注 = base.Columns["备注"];
                this.column知会检验名编码 = base.Columns["知会检验名编码"];
                this.column知会检验名姓名 = base.Columns["知会检验名姓名"];
                this.column批准时间 = base.Columns["批准时间"];
                this.column仓库确认时间 = base.Columns["仓库确认时间"];
                this.column单据报废类型 = base.Columns["单据报废类型"];
                this.columnSQE = base.Columns["SQE"];
                this.columnSQE处理日期 = base.Columns["SQE处理日期"];
                this.column是否已打印 = base.Columns["是否已打印"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column报废单号 = new global::System.Data.DataColumn("报废单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废单号);
                this.column报废时间 = new global::System.Data.DataColumn("报废时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废时间);
                this.column损失金额 = new global::System.Data.DataColumn("损失金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column损失金额);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column申请人签名 = new global::System.Data.DataColumn("申请人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人签名);
                this.column申请部门编码 = new global::System.Data.DataColumn("申请部门编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编码);
                this.column申请部门 = new global::System.Data.DataColumn("申请部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门);
                this.column部门主管签名 = new global::System.Data.DataColumn("部门主管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门主管签名);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column审批人签名 = new global::System.Data.DataColumn("审批人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审批人签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column知会检验名编码 = new global::System.Data.DataColumn("知会检验名编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column知会检验名编码);
                this.column知会检验名姓名 = new global::System.Data.DataColumn("知会检验名姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column知会检验名姓名);
                this.column批准时间 = new global::System.Data.DataColumn("批准时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准时间);
                this.column仓库确认时间 = new global::System.Data.DataColumn("仓库确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库确认时间);
                this.column单据报废类型 = new global::System.Data.DataColumn("单据报废类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据报废类型);
                this.columnSQE = new global::System.Data.DataColumn("SQE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE);
                this.columnSQE处理日期 = new global::System.Data.DataColumn("SQE处理日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE处理日期);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column报废单号}, true));
                this.column报废单号.AllowDBNull = false;
                this.column报废单号.Unique = true;
                this.column报废单号.MaxLength = 50;
                this.column报废时间.AllowDBNull = false;
                this.column申请人编码.AllowDBNull = false;
                this.column申请人编码.MaxLength = 50;
                this.column申请人签名.AllowDBNull = false;
                this.column申请人签名.MaxLength = 50;
                this.column申请部门编码.AllowDBNull = false;
                this.column申请部门编码.MaxLength = 50;
                this.column申请部门.AllowDBNull = false;
                this.column申请部门.MaxLength = 50;
                this.column部门主管签名.MaxLength = 50;
                this.column检验员.MaxLength = 50;
                this.column审批人签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 15;
                this.column备注.MaxLength = 2147483647;
                this.column知会检验名编码.MaxLength = 6;
                this.column知会检验名姓名.MaxLength = 50;
                this.column单据报废类型.MaxLength = 50;
                this.columnSQE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRow NewView_S_ScrapBillRow() {
                return ((View_S_ScrapBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_ScrapBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_ScrapBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_ScrapBillRowChanged != null)) {
                    this.View_S_ScrapBillRowChanged(this, new View_S_ScrapBillRowChangeEvent(((View_S_ScrapBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_ScrapBillRowChanging != null)) {
                    this.View_S_ScrapBillRowChanging(this, new View_S_ScrapBillRowChangeEvent(((View_S_ScrapBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_ScrapBillRowDeleted != null)) {
                    this.View_S_ScrapBillRowDeleted(this, new View_S_ScrapBillRowChangeEvent(((View_S_ScrapBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_ScrapBillRowDeleting != null)) {
                    this.View_S_ScrapBillRowDeleting(this, new View_S_ScrapBillRowChangeEvent(((View_S_ScrapBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_ScrapBillRow(View_S_ScrapBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_ScrapBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialReturnedInTheDepotDataTable : global::System.Data.TypedTableBase<View_S_MaterialReturnedInTheDepotRow> {
            
            private global::System.Data.DataColumn column退库单号;
            
            private global::System.Data.DataColumn column退库时间;
            
            private global::System.Data.DataColumn column初始用途;
            
            private global::System.Data.DataColumn column部门主管签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column退库原因;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column申请部门编码;
            
            private global::System.Data.DataColumn column申请部门;
            
            private global::System.Data.DataColumn column初始用途编码;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column质量工程师签名;
            
            private global::System.Data.DataColumn column退库类别;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column退库方式;
            
            private global::System.Data.DataColumn column入库日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotDataTable() {
                this.TableName = "View_S_MaterialReturnedInTheDepot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialReturnedInTheDepotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialReturnedInTheDepotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库单号Column {
                get {
                    return this.column退库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库时间Column {
                get {
                    return this.column退库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 初始用途Column {
                get {
                    return this.column初始用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门主管签名Column {
                get {
                    return this.column部门主管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库原因Column {
                get {
                    return this.column退库原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编码Column {
                get {
                    return this.column申请部门编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门Column {
                get {
                    return this.column申请部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 初始用途编码Column {
                get {
                    return this.column初始用途编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量工程师签名Column {
                get {
                    return this.column质量工程师签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库类别Column {
                get {
                    return this.column退库类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库方式Column {
                get {
                    return this.column退库方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库日期Column {
                get {
                    return this.column入库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRow this[int index] {
                get {
                    return ((View_S_MaterialReturnedInTheDepotRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialReturnedInTheDepotRowChangeEventHandler View_S_MaterialReturnedInTheDepotRowChanging;
            
            public event View_S_MaterialReturnedInTheDepotRowChangeEventHandler View_S_MaterialReturnedInTheDepotRowChanged;
            
            public event View_S_MaterialReturnedInTheDepotRowChangeEventHandler View_S_MaterialReturnedInTheDepotRowDeleting;
            
            public event View_S_MaterialReturnedInTheDepotRowChangeEventHandler View_S_MaterialReturnedInTheDepotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialReturnedInTheDepotRow(View_S_MaterialReturnedInTheDepotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRow AddView_S_MaterialReturnedInTheDepotRow(
                        string 退库单号, 
                        System.DateTime 退库时间, 
                        string 初始用途, 
                        string 部门主管签名, 
                        string 仓管签名, 
                        string 退库原因, 
                        string 单据状态, 
                        string 备注, 
                        string 申请部门编码, 
                        string 申请部门, 
                        string 初始用途编码, 
                        string 申请人, 
                        string 申请人编码, 
                        string 质量工程师签名, 
                        string 退库类别, 
                        bool 是否已打印, 
                        string 库房代码, 
                        string 库房名称, 
                        string 退库方式, 
                        System.DateTime 入库日期) {
                View_S_MaterialReturnedInTheDepotRow rowView_S_MaterialReturnedInTheDepotRow = ((View_S_MaterialReturnedInTheDepotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        退库单号,
                        退库时间,
                        初始用途,
                        部门主管签名,
                        仓管签名,
                        退库原因,
                        单据状态,
                        备注,
                        申请部门编码,
                        申请部门,
                        初始用途编码,
                        申请人,
                        申请人编码,
                        质量工程师签名,
                        退库类别,
                        是否已打印,
                        库房代码,
                        库房名称,
                        退库方式,
                        入库日期};
                rowView_S_MaterialReturnedInTheDepotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialReturnedInTheDepotRow);
                return rowView_S_MaterialReturnedInTheDepotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRow FindBy退库单号(string 退库单号) {
                return ((View_S_MaterialReturnedInTheDepotRow)(this.Rows.Find(new object[] {
                            退库单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialReturnedInTheDepotDataTable cln = ((View_S_MaterialReturnedInTheDepotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialReturnedInTheDepotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column退库单号 = base.Columns["退库单号"];
                this.column退库时间 = base.Columns["退库时间"];
                this.column初始用途 = base.Columns["初始用途"];
                this.column部门主管签名 = base.Columns["部门主管签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column退库原因 = base.Columns["退库原因"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column备注 = base.Columns["备注"];
                this.column申请部门编码 = base.Columns["申请部门编码"];
                this.column申请部门 = base.Columns["申请部门"];
                this.column初始用途编码 = base.Columns["初始用途编码"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column质量工程师签名 = base.Columns["质量工程师签名"];
                this.column退库类别 = base.Columns["退库类别"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column退库方式 = base.Columns["退库方式"];
                this.column入库日期 = base.Columns["入库日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column退库单号 = new global::System.Data.DataColumn("退库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库单号);
                this.column退库时间 = new global::System.Data.DataColumn("退库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库时间);
                this.column初始用途 = new global::System.Data.DataColumn("初始用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column初始用途);
                this.column部门主管签名 = new global::System.Data.DataColumn("部门主管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门主管签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column退库原因 = new global::System.Data.DataColumn("退库原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库原因);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column申请部门编码 = new global::System.Data.DataColumn("申请部门编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编码);
                this.column申请部门 = new global::System.Data.DataColumn("申请部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门);
                this.column初始用途编码 = new global::System.Data.DataColumn("初始用途编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column初始用途编码);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column质量工程师签名 = new global::System.Data.DataColumn("质量工程师签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量工程师签名);
                this.column退库类别 = new global::System.Data.DataColumn("退库类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库类别);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column退库方式 = new global::System.Data.DataColumn("退库方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库方式);
                this.column入库日期 = new global::System.Data.DataColumn("入库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库日期);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column退库单号}, true));
                this.column退库单号.AllowDBNull = false;
                this.column退库单号.Unique = true;
                this.column退库单号.MaxLength = 50;
                this.column退库时间.AllowDBNull = false;
                this.column初始用途.AllowDBNull = false;
                this.column初始用途.MaxLength = 50;
                this.column部门主管签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column退库原因.MaxLength = 2147483647;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column申请部门编码.AllowDBNull = false;
                this.column申请部门编码.MaxLength = 50;
                this.column申请部门.AllowDBNull = false;
                this.column申请部门.MaxLength = 50;
                this.column初始用途编码.AllowDBNull = false;
                this.column初始用途编码.MaxLength = 20;
                this.column申请人.AllowDBNull = false;
                this.column申请人.MaxLength = 50;
                this.column申请人编码.AllowDBNull = false;
                this.column申请人编码.MaxLength = 50;
                this.column质量工程师签名.MaxLength = 50;
                this.column退库类别.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column退库方式.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRow NewView_S_MaterialReturnedInTheDepotRow() {
                return ((View_S_MaterialReturnedInTheDepotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialReturnedInTheDepotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialReturnedInTheDepotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialReturnedInTheDepotRowChanged != null)) {
                    this.View_S_MaterialReturnedInTheDepotRowChanged(this, new View_S_MaterialReturnedInTheDepotRowChangeEvent(((View_S_MaterialReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialReturnedInTheDepotRowChanging != null)) {
                    this.View_S_MaterialReturnedInTheDepotRowChanging(this, new View_S_MaterialReturnedInTheDepotRowChangeEvent(((View_S_MaterialReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialReturnedInTheDepotRowDeleted != null)) {
                    this.View_S_MaterialReturnedInTheDepotRowDeleted(this, new View_S_MaterialReturnedInTheDepotRowChangeEvent(((View_S_MaterialReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialReturnedInTheDepotRowDeleting != null)) {
                    this.View_S_MaterialReturnedInTheDepotRowDeleting(this, new View_S_MaterialReturnedInTheDepotRowChangeEvent(((View_S_MaterialReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialReturnedInTheDepotRow(View_S_MaterialReturnedInTheDepotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialReturnedInTheDepotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialListRejectBillDataTable : global::System.Data.TypedTableBase<View_S_MaterialListRejectBillRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column退货单号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column退货数;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column关联单号;
            
            private global::System.Data.DataColumn column供方批次;
            
            private global::System.Data.DataColumn column库存数;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column物品类别名称;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column总金额;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn column是否有发票;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillDataTable() {
                this.TableName = "View_S_MaterialListRejectBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialListRejectBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialListRejectBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货单号Column {
                get {
                    return this.column退货单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货数Column {
                get {
                    return this.column退货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单号Column {
                get {
                    return this.column关联单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次Column {
                get {
                    return this.column供方批次;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数Column {
                get {
                    return this.column库存数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别名称Column {
                get {
                    return this.column物品类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总金额Column {
                get {
                    return this.column总金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否有发票Column {
                get {
                    return this.column是否有发票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRow this[int index] {
                get {
                    return ((View_S_MaterialListRejectBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialListRejectBillRowChangeEventHandler View_S_MaterialListRejectBillRowChanging;
            
            public event View_S_MaterialListRejectBillRowChangeEventHandler View_S_MaterialListRejectBillRowChanged;
            
            public event View_S_MaterialListRejectBillRowChangeEventHandler View_S_MaterialListRejectBillRowDeleting;
            
            public event View_S_MaterialListRejectBillRowChangeEventHandler View_S_MaterialListRejectBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialListRejectBillRow(View_S_MaterialListRejectBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRow AddView_S_MaterialListRejectBillRow(
                        long 序号, 
                        string 退货单号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供应商, 
                        string 批次号, 
                        int 退货数, 
                        int 物品ID, 
                        string 关联单号, 
                        string 供方批次, 
                        decimal 库存数, 
                        string 单位, 
                        string 物品类别, 
                        string 物品类别名称, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        decimal 单价, 
                        decimal 金额, 
                        string 总金额, 
                        string 备注, 
                        string StorageID, 
                        bool 是否有发票) {
                View_S_MaterialListRejectBillRow rowView_S_MaterialListRejectBillRow = ((View_S_MaterialListRejectBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        退货单号,
                        图号型号,
                        物品名称,
                        规格,
                        供应商,
                        批次号,
                        退货数,
                        物品ID,
                        关联单号,
                        供方批次,
                        库存数,
                        单位,
                        物品类别,
                        物品类别名称,
                        货架,
                        列,
                        层,
                        单价,
                        金额,
                        总金额,
                        备注,
                        StorageID,
                        是否有发票};
                rowView_S_MaterialListRejectBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialListRejectBillRow);
                return rowView_S_MaterialListRejectBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRow FindBy序号(long 序号) {
                return ((View_S_MaterialListRejectBillRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialListRejectBillDataTable cln = ((View_S_MaterialListRejectBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialListRejectBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column退货单号 = base.Columns["退货单号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商 = base.Columns["供应商"];
                this.column批次号 = base.Columns["批次号"];
                this.column退货数 = base.Columns["退货数"];
                this.column物品ID = base.Columns["物品ID"];
                this.column关联单号 = base.Columns["关联单号"];
                this.column供方批次 = base.Columns["供方批次"];
                this.column库存数 = base.Columns["库存数"];
                this.column单位 = base.Columns["单位"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column物品类别名称 = base.Columns["物品类别名称"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column单价 = base.Columns["单价"];
                this.column金额 = base.Columns["金额"];
                this.column总金额 = base.Columns["总金额"];
                this.column备注 = base.Columns["备注"];
                this.columnStorageID = base.Columns["StorageID"];
                this.column是否有发票 = base.Columns["是否有发票"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column退货单号 = new global::System.Data.DataColumn("退货单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货单号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column退货数 = new global::System.Data.DataColumn("退货数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货数);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column关联单号 = new global::System.Data.DataColumn("关联单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单号);
                this.column供方批次 = new global::System.Data.DataColumn("供方批次", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次);
                this.column库存数 = new global::System.Data.DataColumn("库存数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column物品类别名称 = new global::System.Data.DataColumn("物品类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别名称);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column总金额 = new global::System.Data.DataColumn("总金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总金额);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.column是否有发票 = new global::System.Data.DataColumn("是否有发票", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有发票);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column退货单号.AllowDBNull = false;
                this.column退货单号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 120;
                this.column退货数.AllowDBNull = false;
                this.column物品ID.AllowDBNull = false;
                this.column关联单号.MaxLength = 50;
                this.column供方批次.MaxLength = 50;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column物品类别.AllowDBNull = false;
                this.column物品类别.MaxLength = 50;
                this.column物品类别名称.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column单价.AllowDBNull = false;
                this.column金额.AllowDBNull = false;
                this.column总金额.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.columnStorageID.MaxLength = 50;
                this.column是否有发票.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRow NewView_S_MaterialListRejectBillRow() {
                return ((View_S_MaterialListRejectBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialListRejectBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialListRejectBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialListRejectBillRowChanged != null)) {
                    this.View_S_MaterialListRejectBillRowChanged(this, new View_S_MaterialListRejectBillRowChangeEvent(((View_S_MaterialListRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialListRejectBillRowChanging != null)) {
                    this.View_S_MaterialListRejectBillRowChanging(this, new View_S_MaterialListRejectBillRowChangeEvent(((View_S_MaterialListRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialListRejectBillRowDeleted != null)) {
                    this.View_S_MaterialListRejectBillRowDeleted(this, new View_S_MaterialListRejectBillRowChangeEvent(((View_S_MaterialListRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialListRejectBillRowDeleting != null)) {
                    this.View_S_MaterialListRejectBillRowDeleting(this, new View_S_MaterialListRejectBillRowChangeEvent(((View_S_MaterialListRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialListRejectBillRow(View_S_MaterialListRejectBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialListRejectBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialRejectBillDataTable : global::System.Data.TypedTableBase<View_S_MaterialRejectBillRow> {
            
            private global::System.Data.DataColumn column退货单号;
            
            private global::System.Data.DataColumn column退货时间;
            
            private global::System.Data.DataColumn column退货原因;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请部门编码;
            
            private global::System.Data.DataColumn column申请部门名称;
            
            private global::System.Data.DataColumn column财务签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column单据类型;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column出库日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillDataTable() {
                this.TableName = "View_S_MaterialRejectBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRejectBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialRejectBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货单号Column {
                get {
                    return this.column退货单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货时间Column {
                get {
                    return this.column退货时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货原因Column {
                get {
                    return this.column退货原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编码Column {
                get {
                    return this.column申请部门编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门名称Column {
                get {
                    return this.column申请部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务签名Column {
                get {
                    return this.column财务签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据类型Column {
                get {
                    return this.column单据类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库日期Column {
                get {
                    return this.column出库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRow this[int index] {
                get {
                    return ((View_S_MaterialRejectBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialRejectBillRowChangeEventHandler View_S_MaterialRejectBillRowChanging;
            
            public event View_S_MaterialRejectBillRowChangeEventHandler View_S_MaterialRejectBillRowChanged;
            
            public event View_S_MaterialRejectBillRowChangeEventHandler View_S_MaterialRejectBillRowDeleting;
            
            public event View_S_MaterialRejectBillRowChangeEventHandler View_S_MaterialRejectBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialRejectBillRow(View_S_MaterialRejectBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRow AddView_S_MaterialRejectBillRow(
                        string 退货单号, 
                        System.DateTime 退货时间, 
                        string 退货原因, 
                        string 申请人编码, 
                        string 申请人, 
                        string 申请部门编码, 
                        string 申请部门名称, 
                        string 财务签名, 
                        string 仓管签名, 
                        string 备注, 
                        string 单据状态, 
                        string 供应商, 
                        bool 是否已打印, 
                        string 单据类型, 
                        string 库房代码, 
                        string 库房名称, 
                        System.DateTime 出库日期) {
                View_S_MaterialRejectBillRow rowView_S_MaterialRejectBillRow = ((View_S_MaterialRejectBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        退货单号,
                        退货时间,
                        退货原因,
                        申请人编码,
                        申请人,
                        申请部门编码,
                        申请部门名称,
                        财务签名,
                        仓管签名,
                        备注,
                        单据状态,
                        供应商,
                        是否已打印,
                        单据类型,
                        库房代码,
                        库房名称,
                        出库日期};
                rowView_S_MaterialRejectBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialRejectBillRow);
                return rowView_S_MaterialRejectBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRow FindBy退货单号申请部门编码(string 退货单号, string 申请部门编码) {
                return ((View_S_MaterialRejectBillRow)(this.Rows.Find(new object[] {
                            退货单号,
                            申请部门编码})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialRejectBillDataTable cln = ((View_S_MaterialRejectBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialRejectBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column退货单号 = base.Columns["退货单号"];
                this.column退货时间 = base.Columns["退货时间"];
                this.column退货原因 = base.Columns["退货原因"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请部门编码 = base.Columns["申请部门编码"];
                this.column申请部门名称 = base.Columns["申请部门名称"];
                this.column财务签名 = base.Columns["财务签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column备注 = base.Columns["备注"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column供应商 = base.Columns["供应商"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column单据类型 = base.Columns["单据类型"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column出库日期 = base.Columns["出库日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column退货单号 = new global::System.Data.DataColumn("退货单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货单号);
                this.column退货时间 = new global::System.Data.DataColumn("退货时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货时间);
                this.column退货原因 = new global::System.Data.DataColumn("退货原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货原因);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请部门编码 = new global::System.Data.DataColumn("申请部门编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编码);
                this.column申请部门名称 = new global::System.Data.DataColumn("申请部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门名称);
                this.column财务签名 = new global::System.Data.DataColumn("财务签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column单据类型 = new global::System.Data.DataColumn("单据类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据类型);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column出库日期 = new global::System.Data.DataColumn("出库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库日期);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column退货单号,
                                this.column申请部门编码}, true));
                this.column退货单号.AllowDBNull = false;
                this.column退货单号.MaxLength = 50;
                this.column退货时间.AllowDBNull = false;
                this.column退货原因.MaxLength = 2147483647;
                this.column申请人编码.AllowDBNull = false;
                this.column申请人编码.MaxLength = 50;
                this.column申请人.AllowDBNull = false;
                this.column申请人.MaxLength = 50;
                this.column申请部门编码.AllowDBNull = false;
                this.column申请部门编码.MaxLength = 50;
                this.column申请部门名称.AllowDBNull = false;
                this.column申请部门名称.MaxLength = 50;
                this.column财务签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column供应商.MaxLength = 26;
                this.column单据类型.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRow NewView_S_MaterialRejectBillRow() {
                return ((View_S_MaterialRejectBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialRejectBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialRejectBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialRejectBillRowChanged != null)) {
                    this.View_S_MaterialRejectBillRowChanged(this, new View_S_MaterialRejectBillRowChangeEvent(((View_S_MaterialRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialRejectBillRowChanging != null)) {
                    this.View_S_MaterialRejectBillRowChanging(this, new View_S_MaterialRejectBillRowChangeEvent(((View_S_MaterialRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialRejectBillRowDeleted != null)) {
                    this.View_S_MaterialRejectBillRowDeleted(this, new View_S_MaterialRejectBillRowChangeEvent(((View_S_MaterialRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialRejectBillRowDeleting != null)) {
                    this.View_S_MaterialRejectBillRowDeleting(this, new View_S_MaterialRejectBillRowChangeEvent(((View_S_MaterialRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialRejectBillRow(View_S_MaterialRejectBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialRejectBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FetchGoodsDetailBillDataTable : global::System.Data.TypedTableBase<View_S_FetchGoodsDetailBillRow> {
            
            private global::System.Data.DataColumn column单据编号;
            
            private global::System.Data.DataColumn column单据日期;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column用途;
            
            private global::System.Data.DataColumn column领料部门;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column供应商批次号;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column编制签名;
            
            private global::System.Data.DataColumn column部门负责人签名;
            
            private global::System.Data.DataColumn column财务签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column关联单据;
            
            private global::System.Data.DataColumn column关联单号;
            
            private global::System.Data.DataColumn column实际单价;
            
            private global::System.Data.DataColumn column实际金额;
            
            private global::System.Data.DataColumn column材料类别;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column物品编码;
            
            private global::System.Data.DataColumn column报废内容描述;
            
            private global::System.Data.DataColumn column是否已审核;
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column业务类型ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillDataTable() {
                this.TableName = "View_S_FetchGoodsDetailBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsDetailBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FetchGoodsDetailBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据编号Column {
                get {
                    return this.column单据编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据日期Column {
                get {
                    return this.column单据日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途Column {
                get {
                    return this.column用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 领料部门Column {
                get {
                    return this.column领料部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商批次号Column {
                get {
                    return this.column供应商批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制签名Column {
                get {
                    return this.column编制签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门负责人签名Column {
                get {
                    return this.column部门负责人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务签名Column {
                get {
                    return this.column财务签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单据Column {
                get {
                    return this.column关联单据;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单号Column {
                get {
                    return this.column关联单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际单价Column {
                get {
                    return this.column实际单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际金额Column {
                get {
                    return this.column实际金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品编码Column {
                get {
                    return this.column物品编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废内容描述Column {
                get {
                    return this.column报废内容描述;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已审核Column {
                get {
                    return this.column是否已审核;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 业务类型IDColumn {
                get {
                    return this.column业务类型ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRow this[int index] {
                get {
                    return ((View_S_FetchGoodsDetailBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FetchGoodsDetailBillRowChangeEventHandler View_S_FetchGoodsDetailBillRowChanging;
            
            public event View_S_FetchGoodsDetailBillRowChangeEventHandler View_S_FetchGoodsDetailBillRowChanged;
            
            public event View_S_FetchGoodsDetailBillRowChangeEventHandler View_S_FetchGoodsDetailBillRowDeleting;
            
            public event View_S_FetchGoodsDetailBillRowChangeEventHandler View_S_FetchGoodsDetailBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FetchGoodsDetailBillRow(View_S_FetchGoodsDetailBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRow AddView_S_FetchGoodsDetailBillRow(
                        string 单据编号, 
                        System.DateTime 单据日期, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        int 数量, 
                        string 用途, 
                        string 领料部门, 
                        string 供应商, 
                        string 供应商批次号, 
                        string 批次号, 
                        string 编制签名, 
                        string 部门负责人签名, 
                        string 财务签名, 
                        string 仓管签名, 
                        string 单位, 
                        string 备注, 
                        string 关联单据, 
                        string 关联单号, 
                        decimal 实际单价, 
                        decimal 实际金额, 
                        string 材料类别, 
                        string 库房代码, 
                        string 库房名称, 
                        int 物品编码, 
                        string 报废内容描述, 
                        string 是否已审核, 
                        System.Guid 序号, 
                        int 业务类型ID) {
                View_S_FetchGoodsDetailBillRow rowView_S_FetchGoodsDetailBillRow = ((View_S_FetchGoodsDetailBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据编号,
                        单据日期,
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        用途,
                        领料部门,
                        供应商,
                        供应商批次号,
                        批次号,
                        编制签名,
                        部门负责人签名,
                        财务签名,
                        仓管签名,
                        单位,
                        备注,
                        关联单据,
                        关联单号,
                        实际单价,
                        实际金额,
                        材料类别,
                        库房代码,
                        库房名称,
                        物品编码,
                        报废内容描述,
                        是否已审核,
                        序号,
                        业务类型ID};
                rowView_S_FetchGoodsDetailBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FetchGoodsDetailBillRow);
                return rowView_S_FetchGoodsDetailBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRow FindBy序号(System.Guid 序号) {
                return ((View_S_FetchGoodsDetailBillRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FetchGoodsDetailBillDataTable cln = ((View_S_FetchGoodsDetailBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FetchGoodsDetailBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据编号 = base.Columns["单据编号"];
                this.column单据日期 = base.Columns["单据日期"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column用途 = base.Columns["用途"];
                this.column领料部门 = base.Columns["领料部门"];
                this.column供应商 = base.Columns["供应商"];
                this.column供应商批次号 = base.Columns["供应商批次号"];
                this.column批次号 = base.Columns["批次号"];
                this.column编制签名 = base.Columns["编制签名"];
                this.column部门负责人签名 = base.Columns["部门负责人签名"];
                this.column财务签名 = base.Columns["财务签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column单位 = base.Columns["单位"];
                this.column备注 = base.Columns["备注"];
                this.column关联单据 = base.Columns["关联单据"];
                this.column关联单号 = base.Columns["关联单号"];
                this.column实际单价 = base.Columns["实际单价"];
                this.column实际金额 = base.Columns["实际金额"];
                this.column材料类别 = base.Columns["材料类别"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column物品编码 = base.Columns["物品编码"];
                this.column报废内容描述 = base.Columns["报废内容描述"];
                this.column是否已审核 = base.Columns["是否已审核"];
                this.column序号 = base.Columns["序号"];
                this.column业务类型ID = base.Columns["业务类型ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据编号 = new global::System.Data.DataColumn("单据编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据编号);
                this.column单据日期 = new global::System.Data.DataColumn("单据日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据日期);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column用途 = new global::System.Data.DataColumn("用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途);
                this.column领料部门 = new global::System.Data.DataColumn("领料部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column领料部门);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column供应商批次号 = new global::System.Data.DataColumn("供应商批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商批次号);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column编制签名 = new global::System.Data.DataColumn("编制签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制签名);
                this.column部门负责人签名 = new global::System.Data.DataColumn("部门负责人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门负责人签名);
                this.column财务签名 = new global::System.Data.DataColumn("财务签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column关联单据 = new global::System.Data.DataColumn("关联单据", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单据);
                this.column关联单号 = new global::System.Data.DataColumn("关联单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单号);
                this.column实际单价 = new global::System.Data.DataColumn("实际单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际单价);
                this.column实际金额 = new global::System.Data.DataColumn("实际金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际金额);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column物品编码 = new global::System.Data.DataColumn("物品编码", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品编码);
                this.column报废内容描述 = new global::System.Data.DataColumn("报废内容描述", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废内容描述);
                this.column是否已审核 = new global::System.Data.DataColumn("是否已审核", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已审核);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column业务类型ID = new global::System.Data.DataColumn("业务类型ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column业务类型ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column单据编号.AllowDBNull = false;
                this.column单据编号.MaxLength = 50;
                this.column单据日期.AllowDBNull = false;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column数量.AllowDBNull = false;
                this.column用途.AllowDBNull = false;
                this.column用途.MaxLength = 2147483647;
                this.column领料部门.AllowDBNull = false;
                this.column领料部门.MaxLength = 50;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 50;
                this.column供应商批次号.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 50;
                this.column编制签名.AllowDBNull = false;
                this.column编制签名.MaxLength = 50;
                this.column部门负责人签名.MaxLength = 50;
                this.column财务签名.MaxLength = 50;
                this.column仓管签名.AllowDBNull = false;
                this.column仓管签名.MaxLength = 50;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column备注.MaxLength = 2147483647;
                this.column关联单据.MaxLength = 20;
                this.column关联单号.MaxLength = 50;
                this.column实际单价.AllowDBNull = false;
                this.column实际金额.AllowDBNull = false;
                this.column材料类别.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column物品编码.AllowDBNull = false;
                this.column报废内容描述.ReadOnly = true;
                this.column报废内容描述.MaxLength = 500;
                this.column是否已审核.ReadOnly = true;
                this.column是否已审核.MaxLength = 2;
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column业务类型ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRow NewView_S_FetchGoodsDetailBillRow() {
                return ((View_S_FetchGoodsDetailBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FetchGoodsDetailBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FetchGoodsDetailBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FetchGoodsDetailBillRowChanged != null)) {
                    this.View_S_FetchGoodsDetailBillRowChanged(this, new View_S_FetchGoodsDetailBillRowChangeEvent(((View_S_FetchGoodsDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FetchGoodsDetailBillRowChanging != null)) {
                    this.View_S_FetchGoodsDetailBillRowChanging(this, new View_S_FetchGoodsDetailBillRowChangeEvent(((View_S_FetchGoodsDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FetchGoodsDetailBillRowDeleted != null)) {
                    this.View_S_FetchGoodsDetailBillRowDeleted(this, new View_S_FetchGoodsDetailBillRowChangeEvent(((View_S_FetchGoodsDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FetchGoodsDetailBillRowDeleting != null)) {
                    this.View_S_FetchGoodsDetailBillRowDeleting(this, new View_S_FetchGoodsDetailBillRowChangeEvent(((View_S_FetchGoodsDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FetchGoodsDetailBillRow(View_S_FetchGoodsDetailBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FetchGoodsDetailBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FetchGoodsSummaryTableDataTable : global::System.Data.TypedTableBase<View_S_FetchGoodsSummaryTableRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column实际单价;
            
            private global::System.Data.DataColumn column实际金额;
            
            private global::System.Data.DataColumn column材料类别;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableDataTable() {
                this.TableName = "View_S_FetchGoodsSummaryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsSummaryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FetchGoodsSummaryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际单价Column {
                get {
                    return this.column实际单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际金额Column {
                get {
                    return this.column实际金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableRow this[int index] {
                get {
                    return ((View_S_FetchGoodsSummaryTableRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FetchGoodsSummaryTableRowChangeEventHandler View_S_FetchGoodsSummaryTableRowChanging;
            
            public event View_S_FetchGoodsSummaryTableRowChangeEventHandler View_S_FetchGoodsSummaryTableRowChanged;
            
            public event View_S_FetchGoodsSummaryTableRowChangeEventHandler View_S_FetchGoodsSummaryTableRowDeleting;
            
            public event View_S_FetchGoodsSummaryTableRowChangeEventHandler View_S_FetchGoodsSummaryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FetchGoodsSummaryTableRow(View_S_FetchGoodsSummaryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableRow AddView_S_FetchGoodsSummaryTableRow(string 图号型号, string 物品名称, string 规格, int 数量, System.DateTime 日期, string 单位, decimal 实际单价, decimal 实际金额, string 材料类别) {
                View_S_FetchGoodsSummaryTableRow rowView_S_FetchGoodsSummaryTableRow = ((View_S_FetchGoodsSummaryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        日期,
                        单位,
                        实际单价,
                        实际金额,
                        材料类别};
                rowView_S_FetchGoodsSummaryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FetchGoodsSummaryTableRow);
                return rowView_S_FetchGoodsSummaryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FetchGoodsSummaryTableDataTable cln = ((View_S_FetchGoodsSummaryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FetchGoodsSummaryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column日期 = base.Columns["日期"];
                this.column单位 = base.Columns["单位"];
                this.column实际单价 = base.Columns["实际单价"];
                this.column实际金额 = base.Columns["实际金额"];
                this.column材料类别 = base.Columns["材料类别"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column实际单价 = new global::System.Data.DataColumn("实际单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际单价);
                this.column实际金额 = new global::System.Data.DataColumn("实际金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际金额);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column数量.AllowDBNull = false;
                this.column日期.AllowDBNull = false;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column实际单价.AllowDBNull = false;
                this.column实际金额.AllowDBNull = false;
                this.column材料类别.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableRow NewView_S_FetchGoodsSummaryTableRow() {
                return ((View_S_FetchGoodsSummaryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FetchGoodsSummaryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FetchGoodsSummaryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FetchGoodsSummaryTableRowChanged != null)) {
                    this.View_S_FetchGoodsSummaryTableRowChanged(this, new View_S_FetchGoodsSummaryTableRowChangeEvent(((View_S_FetchGoodsSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FetchGoodsSummaryTableRowChanging != null)) {
                    this.View_S_FetchGoodsSummaryTableRowChanging(this, new View_S_FetchGoodsSummaryTableRowChangeEvent(((View_S_FetchGoodsSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FetchGoodsSummaryTableRowDeleted != null)) {
                    this.View_S_FetchGoodsSummaryTableRowDeleted(this, new View_S_FetchGoodsSummaryTableRowChangeEvent(((View_S_FetchGoodsSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FetchGoodsSummaryTableRowDeleting != null)) {
                    this.View_S_FetchGoodsSummaryTableRowDeleting(this, new View_S_FetchGoodsSummaryTableRowChangeEvent(((View_S_FetchGoodsSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FetchGoodsSummaryTableRow(View_S_FetchGoodsSummaryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FetchGoodsSummaryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_InDepotDetailBillDataTable : global::System.Data.TypedTableBase<View_S_InDepotDetailBillRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column实际单价;
            
            private global::System.Data.DataColumn column单据编号;
            
            private global::System.Data.DataColumn column单据日期;
            
            private global::System.Data.DataColumn column入库人;
            
            private global::System.Data.DataColumn column部门名称;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column单据标志;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column材料类别;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column是否已审核;
            
            private global::System.Data.DataColumn column凭证号;
            
            private global::System.Data.DataColumn column到票时间;
            
            private global::System.Data.DataColumn column实际金额;
            
            private global::System.Data.DataColumn column发票单价;
            
            private global::System.Data.DataColumn column发票金额;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillDataTable() {
                this.TableName = "View_S_InDepotDetailBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_InDepotDetailBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_InDepotDetailBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际单价Column {
                get {
                    return this.column实际单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据编号Column {
                get {
                    return this.column单据编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据日期Column {
                get {
                    return this.column单据日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库人Column {
                get {
                    return this.column入库人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据标志Column {
                get {
                    return this.column单据标志;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已审核Column {
                get {
                    return this.column是否已审核;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 凭证号Column {
                get {
                    return this.column凭证号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到票时间Column {
                get {
                    return this.column到票时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际金额Column {
                get {
                    return this.column实际金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票单价Column {
                get {
                    return this.column发票单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票金额Column {
                get {
                    return this.column发票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillRow this[int index] {
                get {
                    return ((View_S_InDepotDetailBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_InDepotDetailBillRowChangeEventHandler View_S_InDepotDetailBillRowChanging;
            
            public event View_S_InDepotDetailBillRowChangeEventHandler View_S_InDepotDetailBillRowChanged;
            
            public event View_S_InDepotDetailBillRowChangeEventHandler View_S_InDepotDetailBillRowDeleting;
            
            public event View_S_InDepotDetailBillRowChangeEventHandler View_S_InDepotDetailBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_InDepotDetailBillRow(View_S_InDepotDetailBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillRow AddView_S_InDepotDetailBillRow(
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        int 数量, 
                        decimal 实际单价, 
                        string 单据编号, 
                        System.DateTime 单据日期, 
                        string 入库人, 
                        string 部门名称, 
                        string 供应商, 
                        int 单据标志, 
                        string 单位, 
                        string 备注, 
                        string 批次号, 
                        string 材料类别, 
                        string 库房代码, 
                        string 库房名称, 
                        string 是否已审核, 
                        string 凭证号, 
                        string 到票时间, 
                        decimal 实际金额, 
                        decimal 发票单价, 
                        decimal 发票金额) {
                View_S_InDepotDetailBillRow rowView_S_InDepotDetailBillRow = ((View_S_InDepotDetailBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        实际单价,
                        单据编号,
                        单据日期,
                        入库人,
                        部门名称,
                        供应商,
                        单据标志,
                        单位,
                        备注,
                        批次号,
                        材料类别,
                        库房代码,
                        库房名称,
                        是否已审核,
                        凭证号,
                        到票时间,
                        实际金额,
                        发票单价,
                        发票金额};
                rowView_S_InDepotDetailBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_InDepotDetailBillRow);
                return rowView_S_InDepotDetailBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_InDepotDetailBillDataTable cln = ((View_S_InDepotDetailBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_InDepotDetailBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column实际单价 = base.Columns["实际单价"];
                this.column单据编号 = base.Columns["单据编号"];
                this.column单据日期 = base.Columns["单据日期"];
                this.column入库人 = base.Columns["入库人"];
                this.column部门名称 = base.Columns["部门名称"];
                this.column供应商 = base.Columns["供应商"];
                this.column单据标志 = base.Columns["单据标志"];
                this.column单位 = base.Columns["单位"];
                this.column备注 = base.Columns["备注"];
                this.column批次号 = base.Columns["批次号"];
                this.column材料类别 = base.Columns["材料类别"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column是否已审核 = base.Columns["是否已审核"];
                this.column凭证号 = base.Columns["凭证号"];
                this.column到票时间 = base.Columns["到票时间"];
                this.column实际金额 = base.Columns["实际金额"];
                this.column发票单价 = base.Columns["发票单价"];
                this.column发票金额 = base.Columns["发票金额"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column实际单价 = new global::System.Data.DataColumn("实际单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际单价);
                this.column单据编号 = new global::System.Data.DataColumn("单据编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据编号);
                this.column单据日期 = new global::System.Data.DataColumn("单据日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据日期);
                this.column入库人 = new global::System.Data.DataColumn("入库人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库人);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column单据标志 = new global::System.Data.DataColumn("单据标志", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据标志);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column是否已审核 = new global::System.Data.DataColumn("是否已审核", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已审核);
                this.column凭证号 = new global::System.Data.DataColumn("凭证号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column凭证号);
                this.column到票时间 = new global::System.Data.DataColumn("到票时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到票时间);
                this.column实际金额 = new global::System.Data.DataColumn("实际金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际金额);
                this.column发票单价 = new global::System.Data.DataColumn("发票单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票单价);
                this.column发票金额 = new global::System.Data.DataColumn("发票金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票金额);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column数量.AllowDBNull = false;
                this.column实际单价.AllowDBNull = false;
                this.column单据编号.AllowDBNull = false;
                this.column单据编号.MaxLength = 50;
                this.column单据日期.AllowDBNull = false;
                this.column入库人.AllowDBNull = false;
                this.column入库人.MaxLength = 50;
                this.column部门名称.AllowDBNull = false;
                this.column部门名称.MaxLength = 50;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 50;
                this.column单据标志.AllowDBNull = false;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column备注.MaxLength = 2147483647;
                this.column批次号.MaxLength = 26;
                this.column材料类别.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column是否已审核.ReadOnly = true;
                this.column是否已审核.MaxLength = 2;
                this.column凭证号.AllowDBNull = false;
                this.column凭证号.MaxLength = 50;
                this.column到票时间.MaxLength = 30;
                this.column实际金额.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillRow NewView_S_InDepotDetailBillRow() {
                return ((View_S_InDepotDetailBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_InDepotDetailBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_InDepotDetailBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_InDepotDetailBillRowChanged != null)) {
                    this.View_S_InDepotDetailBillRowChanged(this, new View_S_InDepotDetailBillRowChangeEvent(((View_S_InDepotDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_InDepotDetailBillRowChanging != null)) {
                    this.View_S_InDepotDetailBillRowChanging(this, new View_S_InDepotDetailBillRowChangeEvent(((View_S_InDepotDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_InDepotDetailBillRowDeleted != null)) {
                    this.View_S_InDepotDetailBillRowDeleted(this, new View_S_InDepotDetailBillRowChangeEvent(((View_S_InDepotDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_InDepotDetailBillRowDeleting != null)) {
                    this.View_S_InDepotDetailBillRowDeleting(this, new View_S_InDepotDetailBillRowChangeEvent(((View_S_InDepotDetailBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_InDepotDetailBillRow(View_S_InDepotDetailBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_InDepotDetailBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_InDepotSummaryTableDataTable : global::System.Data.TypedTableBase<View_S_InDepotSummaryTableRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column实际单价;
            
            private global::System.Data.DataColumn column实际金额;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column材料类别;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableDataTable() {
                this.TableName = "View_S_InDepotSummaryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_InDepotSummaryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_InDepotSummaryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际单价Column {
                get {
                    return this.column实际单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实际金额Column {
                get {
                    return this.column实际金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableRow this[int index] {
                get {
                    return ((View_S_InDepotSummaryTableRow)(this.Rows[index]));
                }
            }
            
            public event View_S_InDepotSummaryTableRowChangeEventHandler View_S_InDepotSummaryTableRowChanging;
            
            public event View_S_InDepotSummaryTableRowChangeEventHandler View_S_InDepotSummaryTableRowChanged;
            
            public event View_S_InDepotSummaryTableRowChangeEventHandler View_S_InDepotSummaryTableRowDeleting;
            
            public event View_S_InDepotSummaryTableRowChangeEventHandler View_S_InDepotSummaryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_InDepotSummaryTableRow(View_S_InDepotSummaryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableRow AddView_S_InDepotSummaryTableRow(string 图号型号, string 物品名称, string 规格, int 数量, decimal 实际单价, decimal 实际金额, System.DateTime 日期, string 单位, string 材料类别) {
                View_S_InDepotSummaryTableRow rowView_S_InDepotSummaryTableRow = ((View_S_InDepotSummaryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        实际单价,
                        实际金额,
                        日期,
                        单位,
                        材料类别};
                rowView_S_InDepotSummaryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_InDepotSummaryTableRow);
                return rowView_S_InDepotSummaryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_InDepotSummaryTableDataTable cln = ((View_S_InDepotSummaryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_InDepotSummaryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column实际单价 = base.Columns["实际单价"];
                this.column实际金额 = base.Columns["实际金额"];
                this.column日期 = base.Columns["日期"];
                this.column单位 = base.Columns["单位"];
                this.column材料类别 = base.Columns["材料类别"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column实际单价 = new global::System.Data.DataColumn("实际单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际单价);
                this.column实际金额 = new global::System.Data.DataColumn("实际金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实际金额);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column数量.AllowDBNull = false;
                this.column实际单价.AllowDBNull = false;
                this.column实际金额.AllowDBNull = false;
                this.column日期.AllowDBNull = false;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column材料类别.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableRow NewView_S_InDepotSummaryTableRow() {
                return ((View_S_InDepotSummaryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_InDepotSummaryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_InDepotSummaryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_InDepotSummaryTableRowChanged != null)) {
                    this.View_S_InDepotSummaryTableRowChanged(this, new View_S_InDepotSummaryTableRowChangeEvent(((View_S_InDepotSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_InDepotSummaryTableRowChanging != null)) {
                    this.View_S_InDepotSummaryTableRowChanging(this, new View_S_InDepotSummaryTableRowChangeEvent(((View_S_InDepotSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_InDepotSummaryTableRowDeleted != null)) {
                    this.View_S_InDepotSummaryTableRowDeleted(this, new View_S_InDepotSummaryTableRowChangeEvent(((View_S_InDepotSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_InDepotSummaryTableRowDeleting != null)) {
                    this.View_S_InDepotSummaryTableRowDeleting(this, new View_S_InDepotSummaryTableRowChangeEvent(((View_S_InDepotSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_InDepotSummaryTableRow(View_S_InDepotSummaryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_InDepotSummaryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_OrdinaryInDepotGoodsBillDataTable : global::System.Data.TypedTableBase<View_S_OrdinaryInDepotGoodsBillRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column入库单号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column计划单价;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column暂估单价;
            
            private global::System.Data.DataColumn column暂估金额;
            
            private global::System.Data.DataColumn column发票单价;
            
            private global::System.Data.DataColumn column发票金额;
            
            private global::System.Data.DataColumn column大写金额;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column是否有发票;
            
            private global::System.Data.DataColumn column物品类别名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillDataTable() {
                this.TableName = "View_S_OrdinaryInDepotGoodsBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_OrdinaryInDepotGoodsBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_OrdinaryInDepotGoodsBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单号Column {
                get {
                    return this.column入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计划单价Column {
                get {
                    return this.column计划单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 暂估单价Column {
                get {
                    return this.column暂估单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 暂估金额Column {
                get {
                    return this.column暂估金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票单价Column {
                get {
                    return this.column发票单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票金额Column {
                get {
                    return this.column发票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大写金额Column {
                get {
                    return this.column大写金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否有发票Column {
                get {
                    return this.column是否有发票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别名称Column {
                get {
                    return this.column物品类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRow this[int index] {
                get {
                    return ((View_S_OrdinaryInDepotGoodsBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_OrdinaryInDepotGoodsBillRowChangeEventHandler View_S_OrdinaryInDepotGoodsBillRowChanging;
            
            public event View_S_OrdinaryInDepotGoodsBillRowChangeEventHandler View_S_OrdinaryInDepotGoodsBillRowChanged;
            
            public event View_S_OrdinaryInDepotGoodsBillRowChangeEventHandler View_S_OrdinaryInDepotGoodsBillRowDeleting;
            
            public event View_S_OrdinaryInDepotGoodsBillRowChangeEventHandler View_S_OrdinaryInDepotGoodsBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_OrdinaryInDepotGoodsBillRow(View_S_OrdinaryInDepotGoodsBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRow AddView_S_OrdinaryInDepotGoodsBillRow(
                        int 序号, 
                        string 入库单号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 单位, 
                        decimal 计划单价, 
                        decimal 数量, 
                        decimal 暂估单价, 
                        decimal 暂估金额, 
                        decimal 发票单价, 
                        decimal 发票金额, 
                        string 大写金额, 
                        string 供方批次号, 
                        string 批次号, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 备注, 
                        string 物品类别, 
                        bool 是否有发票, 
                        string 物品类别名称) {
                View_S_OrdinaryInDepotGoodsBillRow rowView_S_OrdinaryInDepotGoodsBillRow = ((View_S_OrdinaryInDepotGoodsBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        入库单号,
                        图号型号,
                        物品名称,
                        规格,
                        单位,
                        计划单价,
                        数量,
                        暂估单价,
                        暂估金额,
                        发票单价,
                        发票金额,
                        大写金额,
                        供方批次号,
                        批次号,
                        货架,
                        列,
                        层,
                        备注,
                        物品类别,
                        是否有发票,
                        物品类别名称};
                rowView_S_OrdinaryInDepotGoodsBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_OrdinaryInDepotGoodsBillRow);
                return rowView_S_OrdinaryInDepotGoodsBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRow FindBy序号(int 序号) {
                return ((View_S_OrdinaryInDepotGoodsBillRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_OrdinaryInDepotGoodsBillDataTable cln = ((View_S_OrdinaryInDepotGoodsBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_OrdinaryInDepotGoodsBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column入库单号 = base.Columns["入库单号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column单位 = base.Columns["单位"];
                this.column计划单价 = base.Columns["计划单价"];
                this.column数量 = base.Columns["数量"];
                this.column暂估单价 = base.Columns["暂估单价"];
                this.column暂估金额 = base.Columns["暂估金额"];
                this.column发票单价 = base.Columns["发票单价"];
                this.column发票金额 = base.Columns["发票金额"];
                this.column大写金额 = base.Columns["大写金额"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column批次号 = base.Columns["批次号"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column备注 = base.Columns["备注"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column是否有发票 = base.Columns["是否有发票"];
                this.column物品类别名称 = base.Columns["物品类别名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column入库单号 = new global::System.Data.DataColumn("入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column计划单价 = new global::System.Data.DataColumn("计划单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计划单价);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column暂估单价 = new global::System.Data.DataColumn("暂估单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column暂估单价);
                this.column暂估金额 = new global::System.Data.DataColumn("暂估金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column暂估金额);
                this.column发票单价 = new global::System.Data.DataColumn("发票单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票单价);
                this.column发票金额 = new global::System.Data.DataColumn("发票金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票金额);
                this.column大写金额 = new global::System.Data.DataColumn("大写金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大写金额);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column是否有发票 = new global::System.Data.DataColumn("是否有发票", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有发票);
                this.column物品类别名称 = new global::System.Data.DataColumn("物品类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别名称);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column入库单号.MaxLength = 50;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.MaxLength = 50;
                this.column规格.MaxLength = 50;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 6;
                this.column计划单价.AllowDBNull = false;
                this.column暂估单价.AllowDBNull = false;
                this.column暂估金额.AllowDBNull = false;
                this.column大写金额.AllowDBNull = false;
                this.column大写金额.MaxLength = 36;
                this.column供方批次号.MaxLength = 50;
                this.column批次号.MaxLength = 25;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 10;
                this.column层.MaxLength = 10;
                this.column备注.MaxLength = 50;
                this.column物品类别.MaxLength = 50;
                this.column是否有发票.AllowDBNull = false;
                this.column物品类别名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRow NewView_S_OrdinaryInDepotGoodsBillRow() {
                return ((View_S_OrdinaryInDepotGoodsBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_OrdinaryInDepotGoodsBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_OrdinaryInDepotGoodsBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_OrdinaryInDepotGoodsBillRowChanged != null)) {
                    this.View_S_OrdinaryInDepotGoodsBillRowChanged(this, new View_S_OrdinaryInDepotGoodsBillRowChangeEvent(((View_S_OrdinaryInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_OrdinaryInDepotGoodsBillRowChanging != null)) {
                    this.View_S_OrdinaryInDepotGoodsBillRowChanging(this, new View_S_OrdinaryInDepotGoodsBillRowChangeEvent(((View_S_OrdinaryInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_OrdinaryInDepotGoodsBillRowDeleted != null)) {
                    this.View_S_OrdinaryInDepotGoodsBillRowDeleted(this, new View_S_OrdinaryInDepotGoodsBillRowChangeEvent(((View_S_OrdinaryInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_OrdinaryInDepotGoodsBillRowDeleting != null)) {
                    this.View_S_OrdinaryInDepotGoodsBillRowDeleting(this, new View_S_OrdinaryInDepotGoodsBillRowChangeEvent(((View_S_OrdinaryInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_OrdinaryInDepotGoodsBillRow(View_S_OrdinaryInDepotGoodsBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_OrdinaryInDepotGoodsBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_MaterialRequisitionGoodsDataTable : global::System.Data.TypedTableBase<S_MaterialRequisitionGoodsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBill_ID;
            
            private global::System.Data.DataColumn columnProviderCode;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnBasicCount;
            
            private global::System.Data.DataColumn columnRequestCount;
            
            private global::System.Data.DataColumn columnRealCount;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnShowPosition;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsDataTable() {
                this.TableName = "S_MaterialRequisitionGoods";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_MaterialRequisitionGoodsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_MaterialRequisitionGoodsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderCodeColumn {
                get {
                    return this.columnProviderCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicCountColumn {
                get {
                    return this.columnBasicCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestCountColumn {
                get {
                    return this.columnRequestCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealCountColumn {
                get {
                    return this.columnRealCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowPositionColumn {
                get {
                    return this.columnShowPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRow this[int index] {
                get {
                    return ((S_MaterialRequisitionGoodsRow)(this.Rows[index]));
                }
            }
            
            public event S_MaterialRequisitionGoodsRowChangeEventHandler S_MaterialRequisitionGoodsRowChanging;
            
            public event S_MaterialRequisitionGoodsRowChangeEventHandler S_MaterialRequisitionGoodsRowChanged;
            
            public event S_MaterialRequisitionGoodsRowChangeEventHandler S_MaterialRequisitionGoodsRowDeleting;
            
            public event S_MaterialRequisitionGoodsRowChangeEventHandler S_MaterialRequisitionGoodsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_MaterialRequisitionGoodsRow(S_MaterialRequisitionGoodsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRow AddS_MaterialRequisitionGoodsRow(string Bill_ID, string ProviderCode, string BatchNo, decimal BasicCount, decimal RequestCount, decimal RealCount, string Remark, double ShowPosition, int GoodsID) {
                S_MaterialRequisitionGoodsRow rowS_MaterialRequisitionGoodsRow = ((S_MaterialRequisitionGoodsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bill_ID,
                        ProviderCode,
                        BatchNo,
                        BasicCount,
                        RequestCount,
                        RealCount,
                        Remark,
                        ShowPosition,
                        GoodsID};
                rowS_MaterialRequisitionGoodsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_MaterialRequisitionGoodsRow);
                return rowS_MaterialRequisitionGoodsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRow FindByID(long ID) {
                return ((S_MaterialRequisitionGoodsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_MaterialRequisitionGoodsDataTable cln = ((S_MaterialRequisitionGoodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_MaterialRequisitionGoodsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBill_ID = base.Columns["Bill_ID"];
                this.columnProviderCode = base.Columns["ProviderCode"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnBasicCount = base.Columns["BasicCount"];
                this.columnRequestCount = base.Columns["RequestCount"];
                this.columnRealCount = base.Columns["RealCount"];
                this.columnRemark = base.Columns["Remark"];
                this.columnShowPosition = base.Columns["ShowPosition"];
                this.columnGoodsID = base.Columns["GoodsID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBill_ID = new global::System.Data.DataColumn("Bill_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.columnProviderCode = new global::System.Data.DataColumn("ProviderCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderCode);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnBasicCount = new global::System.Data.DataColumn("BasicCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicCount);
                this.columnRequestCount = new global::System.Data.DataColumn("RequestCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestCount);
                this.columnRealCount = new global::System.Data.DataColumn("RealCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealCount);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnShowPosition = new global::System.Data.DataColumn("ShowPosition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowPosition);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBill_ID.AllowDBNull = false;
                this.columnBill_ID.MaxLength = 50;
                this.columnProviderCode.AllowDBNull = false;
                this.columnProviderCode.MaxLength = 15;
                this.columnBatchNo.AllowDBNull = false;
                this.columnBatchNo.MaxLength = 26;
                this.columnBasicCount.AllowDBNull = false;
                this.columnRequestCount.AllowDBNull = false;
                this.columnRealCount.AllowDBNull = false;
                this.columnRemark.MaxLength = 50;
                this.columnShowPosition.AllowDBNull = false;
                this.columnGoodsID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRow NewS_MaterialRequisitionGoodsRow() {
                return ((S_MaterialRequisitionGoodsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_MaterialRequisitionGoodsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_MaterialRequisitionGoodsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_MaterialRequisitionGoodsRowChanged != null)) {
                    this.S_MaterialRequisitionGoodsRowChanged(this, new S_MaterialRequisitionGoodsRowChangeEvent(((S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_MaterialRequisitionGoodsRowChanging != null)) {
                    this.S_MaterialRequisitionGoodsRowChanging(this, new S_MaterialRequisitionGoodsRowChangeEvent(((S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_MaterialRequisitionGoodsRowDeleted != null)) {
                    this.S_MaterialRequisitionGoodsRowDeleted(this, new S_MaterialRequisitionGoodsRowChangeEvent(((S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_MaterialRequisitionGoodsRowDeleting != null)) {
                    this.S_MaterialRequisitionGoodsRowDeleting(this, new S_MaterialRequisitionGoodsRowChangeEvent(((S_MaterialRequisitionGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_MaterialRequisitionGoodsRow(S_MaterialRequisitionGoodsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_MaterialRequisitionGoodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_PrintBillDataTable : global::System.Data.TypedTableBase<View_S_PrintBillRow> {
            
            private global::System.Data.DataColumn column分发部门;
            
            private global::System.Data.DataColumn column单据类别;
            
            private global::System.Data.DataColumn column单据编号;
            
            private global::System.Data.DataColumn column单据颜色;
            
            private global::System.Data.DataColumn column打印时间;
            
            private global::System.Data.DataColumn column打印人;
            
            private global::System.Data.DataColumn column审核状态;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillDataTable() {
                this.TableName = "View_S_PrintBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_PrintBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_PrintBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分发部门Column {
                get {
                    return this.column分发部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据类别Column {
                get {
                    return this.column单据类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据编号Column {
                get {
                    return this.column单据编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据颜色Column {
                get {
                    return this.column单据颜色;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打印时间Column {
                get {
                    return this.column打印时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打印人Column {
                get {
                    return this.column打印人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核状态Column {
                get {
                    return this.column审核状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillRow this[int index] {
                get {
                    return ((View_S_PrintBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_PrintBillRowChangeEventHandler View_S_PrintBillRowChanging;
            
            public event View_S_PrintBillRowChangeEventHandler View_S_PrintBillRowChanged;
            
            public event View_S_PrintBillRowChangeEventHandler View_S_PrintBillRowDeleting;
            
            public event View_S_PrintBillRowChangeEventHandler View_S_PrintBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_PrintBillRow(View_S_PrintBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillRow AddView_S_PrintBillRow(string 分发部门, string 单据类别, string 单据编号, string 单据颜色, System.DateTime 打印时间, string 打印人, string 审核状态) {
                View_S_PrintBillRow rowView_S_PrintBillRow = ((View_S_PrintBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        分发部门,
                        单据类别,
                        单据编号,
                        单据颜色,
                        打印时间,
                        打印人,
                        审核状态};
                rowView_S_PrintBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_PrintBillRow);
                return rowView_S_PrintBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_PrintBillDataTable cln = ((View_S_PrintBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_PrintBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column分发部门 = base.Columns["分发部门"];
                this.column单据类别 = base.Columns["单据类别"];
                this.column单据编号 = base.Columns["单据编号"];
                this.column单据颜色 = base.Columns["单据颜色"];
                this.column打印时间 = base.Columns["打印时间"];
                this.column打印人 = base.Columns["打印人"];
                this.column审核状态 = base.Columns["审核状态"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column分发部门 = new global::System.Data.DataColumn("分发部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分发部门);
                this.column单据类别 = new global::System.Data.DataColumn("单据类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据类别);
                this.column单据编号 = new global::System.Data.DataColumn("单据编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据编号);
                this.column单据颜色 = new global::System.Data.DataColumn("单据颜色", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据颜色);
                this.column打印时间 = new global::System.Data.DataColumn("打印时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打印时间);
                this.column打印人 = new global::System.Data.DataColumn("打印人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打印人);
                this.column审核状态 = new global::System.Data.DataColumn("审核状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核状态);
                this.column分发部门.MaxLength = 50;
                this.column单据类别.MaxLength = 50;
                this.column单据编号.MaxLength = 50;
                this.column单据颜色.MaxLength = 2;
                this.column打印时间.AllowDBNull = false;
                this.column打印人.MaxLength = 50;
                this.column审核状态.ReadOnly = true;
                this.column审核状态.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillRow NewView_S_PrintBillRow() {
                return ((View_S_PrintBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_PrintBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_PrintBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_PrintBillRowChanged != null)) {
                    this.View_S_PrintBillRowChanged(this, new View_S_PrintBillRowChangeEvent(((View_S_PrintBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_PrintBillRowChanging != null)) {
                    this.View_S_PrintBillRowChanging(this, new View_S_PrintBillRowChangeEvent(((View_S_PrintBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_PrintBillRowDeleted != null)) {
                    this.View_S_PrintBillRowDeleted(this, new View_S_PrintBillRowChangeEvent(((View_S_PrintBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_PrintBillRowDeleting != null)) {
                    this.View_S_PrintBillRowDeleting(this, new View_S_PrintBillRowChangeEvent(((View_S_PrintBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_PrintBillRow(View_S_PrintBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_PrintBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketingAllDataTable : global::System.Data.TypedTableBase<View_S_MarketingAllRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnLRRY;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnSHRY;
            
            private global::System.Data.DataColumn columnYWLX;
            
            private global::System.Data.DataColumn columnKFRY;
            
            private global::System.Data.DataColumn columnDJZT_FLAG;
            
            private global::System.Data.DataColumn columnDELETE_FLAG;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnListID;
            
            private global::System.Data.DataColumn columnDJ_ID;
            
            private global::System.Data.DataColumn columnCPID;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnGoodsPrice;
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnGoodsRemark;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnYWFS;
            
            private global::System.Data.DataColumn columnStorageName;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnLRKS;
            
            private global::System.Data.DataColumn columnAffirmDate;
            
            private global::System.Data.DataColumn columnFSRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllDataTable() {
                this.TableName = "View_S_MarketingAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketingAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRRYColumn {
                get {
                    return this.columnLRRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRYColumn {
                get {
                    return this.columnSHRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YWLXColumn {
                get {
                    return this.columnYWLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KFRYColumn {
                get {
                    return this.columnKFRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJZT_FLAGColumn {
                get {
                    return this.columnDJZT_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELETE_FLAGColumn {
                get {
                    return this.columnDELETE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListIDColumn {
                get {
                    return this.columnListID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJ_IDColumn {
                get {
                    return this.columnDJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPIDColumn {
                get {
                    return this.columnCPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsPriceColumn {
                get {
                    return this.columnGoodsPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsRemarkColumn {
                get {
                    return this.columnGoodsRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YWFSColumn {
                get {
                    return this.columnYWFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageNameColumn {
                get {
                    return this.columnStorageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRKSColumn {
                get {
                    return this.columnLRKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AffirmDateColumn {
                get {
                    return this.columnAffirmDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSRYColumn {
                get {
                    return this.columnFSRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow this[int index] {
                get {
                    return ((View_S_MarketingAllRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowChanging;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowChanged;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowDeleting;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketingAllRow(View_S_MarketingAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow AddView_S_MarketingAllRow(
                        int ID, 
                        string DJH, 
                        string LRRY, 
                        string Dept, 
                        string SHRY, 
                        string YWLX, 
                        string KFRY, 
                        string DJZT_FLAG, 
                        int DELETE_FLAG, 
                        System.DateTime Date, 
                        decimal Price, 
                        string Remark, 
                        int ListID, 
                        int DJ_ID, 
                        string CPID, 
                        string Provider, 
                        decimal UnitPrice, 
                        decimal GoodsPrice, 
                        decimal Count, 
                        string Unit, 
                        string BatchNo, 
                        string GoodsRemark, 
                        string StorageID, 
                        string YWFS, 
                        string StorageName, 
                        string GoodsCode, 
                        string GoodsName, 
                        string Spec, 
                        string LRKS, 
                        System.DateTime AffirmDate, 
                        string FSRY) {
                View_S_MarketingAllRow rowView_S_MarketingAllRow = ((View_S_MarketingAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        DJH,
                        LRRY,
                        Dept,
                        SHRY,
                        YWLX,
                        KFRY,
                        DJZT_FLAG,
                        DELETE_FLAG,
                        Date,
                        Price,
                        Remark,
                        ListID,
                        DJ_ID,
                        CPID,
                        Provider,
                        UnitPrice,
                        GoodsPrice,
                        Count,
                        Unit,
                        BatchNo,
                        GoodsRemark,
                        StorageID,
                        YWFS,
                        StorageName,
                        GoodsCode,
                        GoodsName,
                        Spec,
                        LRKS,
                        AffirmDate,
                        FSRY};
                rowView_S_MarketingAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketingAllRow);
                return rowView_S_MarketingAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow FindByIDListID(int ID, int ListID) {
                return ((View_S_MarketingAllRow)(this.Rows.Find(new object[] {
                            ID,
                            ListID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketingAllDataTable cln = ((View_S_MarketingAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketingAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDJH = base.Columns["DJH"];
                this.columnLRRY = base.Columns["LRRY"];
                this.columnDept = base.Columns["Dept"];
                this.columnSHRY = base.Columns["SHRY"];
                this.columnYWLX = base.Columns["YWLX"];
                this.columnKFRY = base.Columns["KFRY"];
                this.columnDJZT_FLAG = base.Columns["DJZT_FLAG"];
                this.columnDELETE_FLAG = base.Columns["DELETE_FLAG"];
                this.columnDate = base.Columns["Date"];
                this.columnPrice = base.Columns["Price"];
                this.columnRemark = base.Columns["Remark"];
                this.columnListID = base.Columns["ListID"];
                this.columnDJ_ID = base.Columns["DJ_ID"];
                this.columnCPID = base.Columns["CPID"];
                this.columnProvider = base.Columns["Provider"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnGoodsPrice = base.Columns["GoodsPrice"];
                this.columnCount = base.Columns["Count"];
                this.columnUnit = base.Columns["Unit"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnGoodsRemark = base.Columns["GoodsRemark"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnYWFS = base.Columns["YWFS"];
                this.columnStorageName = base.Columns["StorageName"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSpec = base.Columns["Spec"];
                this.columnLRKS = base.Columns["LRKS"];
                this.columnAffirmDate = base.Columns["AffirmDate"];
                this.columnFSRY = base.Columns["FSRY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnLRRY = new global::System.Data.DataColumn("LRRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRRY);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnSHRY = new global::System.Data.DataColumn("SHRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRY);
                this.columnYWLX = new global::System.Data.DataColumn("YWLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYWLX);
                this.columnKFRY = new global::System.Data.DataColumn("KFRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKFRY);
                this.columnDJZT_FLAG = new global::System.Data.DataColumn("DJZT_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJZT_FLAG);
                this.columnDELETE_FLAG = new global::System.Data.DataColumn("DELETE_FLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELETE_FLAG);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnListID = new global::System.Data.DataColumn("ListID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListID);
                this.columnDJ_ID = new global::System.Data.DataColumn("DJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJ_ID);
                this.columnCPID = new global::System.Data.DataColumn("CPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPID);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnGoodsPrice = new global::System.Data.DataColumn("GoodsPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsPrice);
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnGoodsRemark = new global::System.Data.DataColumn("GoodsRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRemark);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnYWFS = new global::System.Data.DataColumn("YWFS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYWFS);
                this.columnStorageName = new global::System.Data.DataColumn("StorageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageName);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnLRKS = new global::System.Data.DataColumn("LRKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRKS);
                this.columnAffirmDate = new global::System.Data.DataColumn("AffirmDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAffirmDate);
                this.columnFSRY = new global::System.Data.DataColumn("FSRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSRY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnListID}, true));
                this.columnID.AllowDBNull = false;
                this.columnDJH.AllowDBNull = false;
                this.columnDJH.MaxLength = 50;
                this.columnLRRY.ReadOnly = true;
                this.columnLRRY.MaxLength = 4000;
                this.columnDept.ReadOnly = true;
                this.columnDept.MaxLength = 4000;
                this.columnSHRY.ReadOnly = true;
                this.columnSHRY.MaxLength = 4000;
                this.columnYWLX.AllowDBNull = false;
                this.columnYWLX.MaxLength = 50;
                this.columnKFRY.ReadOnly = true;
                this.columnKFRY.MaxLength = 4000;
                this.columnDJZT_FLAG.AllowDBNull = false;
                this.columnDJZT_FLAG.MaxLength = 50;
                this.columnDELETE_FLAG.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnListID.AllowDBNull = false;
                this.columnDJ_ID.AllowDBNull = false;
                this.columnCPID.AllowDBNull = false;
                this.columnCPID.MaxLength = 50;
                this.columnProvider.AllowDBNull = false;
                this.columnProvider.MaxLength = 50;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnGoodsPrice.AllowDBNull = false;
                this.columnCount.AllowDBNull = false;
                this.columnUnit.AllowDBNull = false;
                this.columnUnit.MaxLength = 50;
                this.columnBatchNo.AllowDBNull = false;
                this.columnBatchNo.MaxLength = 50;
                this.columnGoodsRemark.AllowDBNull = false;
                this.columnGoodsRemark.MaxLength = 2147483647;
                this.columnStorageID.MaxLength = 50;
                this.columnYWFS.AllowDBNull = false;
                this.columnYWFS.MaxLength = 50;
                this.columnStorageName.MaxLength = 50;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSpec.AllowDBNull = false;
                this.columnSpec.MaxLength = 50;
                this.columnLRKS.MaxLength = 50;
                this.columnFSRY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow NewView_S_MarketingAllRow() {
                return ((View_S_MarketingAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketingAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketingAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketingAllRowChanged != null)) {
                    this.View_S_MarketingAllRowChanged(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketingAllRowChanging != null)) {
                    this.View_S_MarketingAllRowChanging(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketingAllRowDeleted != null)) {
                    this.View_S_MarketingAllRowDeleted(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketingAllRowDeleting != null)) {
                    this.View_S_MarketingAllRowDeleting(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketingAllRow(View_S_MarketingAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketingAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_CannibalizeDataTable : global::System.Data.TypedTableBase<View_S_CannibalizeRow> {
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnInStoreRoom;
            
            private global::System.Data.DataColumn columnOutStoreRoom;
            
            private global::System.Data.DataColumn columnAllPrice;
            
            private global::System.Data.DataColumn columnLRRY;
            
            private global::System.Data.DataColumn columnLRRQ;
            
            private global::System.Data.DataColumn columnSHRY;
            
            private global::System.Data.DataColumn columnSHRQ;
            
            private global::System.Data.DataColumn columnCWRY;
            
            private global::System.Data.DataColumn columnCWRQ;
            
            private global::System.Data.DataColumn columnKFRY;
            
            private global::System.Data.DataColumn columnKFRQ;
            
            private global::System.Data.DataColumn columnDJZT;
            
            private global::System.Data.DataColumn columnAllRemark;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJ_ID;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnGoodsUnitPrice;
            
            private global::System.Data.DataColumn columnGoodsType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeDataTable() {
                this.TableName = "View_S_Cannibalize";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CannibalizeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_CannibalizeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InStoreRoomColumn {
                get {
                    return this.columnInStoreRoom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutStoreRoomColumn {
                get {
                    return this.columnOutStoreRoom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllPriceColumn {
                get {
                    return this.columnAllPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRRYColumn {
                get {
                    return this.columnLRRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRRQColumn {
                get {
                    return this.columnLRRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRYColumn {
                get {
                    return this.columnSHRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRQColumn {
                get {
                    return this.columnSHRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CWRYColumn {
                get {
                    return this.columnCWRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CWRQColumn {
                get {
                    return this.columnCWRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KFRYColumn {
                get {
                    return this.columnKFRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KFRQColumn {
                get {
                    return this.columnKFRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJZTColumn {
                get {
                    return this.columnDJZT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllRemarkColumn {
                get {
                    return this.columnAllRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJ_IDColumn {
                get {
                    return this.columnDJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsUnitPriceColumn {
                get {
                    return this.columnGoodsUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsTypeColumn {
                get {
                    return this.columnGoodsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRow this[int index] {
                get {
                    return ((View_S_CannibalizeRow)(this.Rows[index]));
                }
            }
            
            public event View_S_CannibalizeRowChangeEventHandler View_S_CannibalizeRowChanging;
            
            public event View_S_CannibalizeRowChangeEventHandler View_S_CannibalizeRowChanged;
            
            public event View_S_CannibalizeRowChangeEventHandler View_S_CannibalizeRowDeleting;
            
            public event View_S_CannibalizeRowChangeEventHandler View_S_CannibalizeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_CannibalizeRow(View_S_CannibalizeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRow AddView_S_CannibalizeRow(
                        string DJH, 
                        string InStoreRoom, 
                        string OutStoreRoom, 
                        decimal AllPrice, 
                        string LRRY, 
                        System.DateTime LRRQ, 
                        string SHRY, 
                        System.DateTime SHRQ, 
                        string CWRY, 
                        System.DateTime CWRQ, 
                        string KFRY, 
                        System.DateTime KFRQ, 
                        string DJZT, 
                        string AllRemark, 
                        string GoodsID, 
                        decimal UnitPrice, 
                        string Provider, 
                        decimal Price, 
                        decimal Count, 
                        string Unit, 
                        string BatchNo, 
                        string Remark, 
                        int ID, 
                        int DJ_ID, 
                        string GoodsCode, 
                        string GoodsName, 
                        string Spec, 
                        decimal GoodsUnitPrice, 
                        string GoodsType) {
                View_S_CannibalizeRow rowView_S_CannibalizeRow = ((View_S_CannibalizeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DJH,
                        InStoreRoom,
                        OutStoreRoom,
                        AllPrice,
                        LRRY,
                        LRRQ,
                        SHRY,
                        SHRQ,
                        CWRY,
                        CWRQ,
                        KFRY,
                        KFRQ,
                        DJZT,
                        AllRemark,
                        GoodsID,
                        UnitPrice,
                        Provider,
                        Price,
                        Count,
                        Unit,
                        BatchNo,
                        Remark,
                        ID,
                        DJ_ID,
                        GoodsCode,
                        GoodsName,
                        Spec,
                        GoodsUnitPrice,
                        GoodsType};
                rowView_S_CannibalizeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_CannibalizeRow);
                return rowView_S_CannibalizeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRow FindByID(int ID) {
                return ((View_S_CannibalizeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_CannibalizeDataTable cln = ((View_S_CannibalizeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_CannibalizeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDJH = base.Columns["DJH"];
                this.columnInStoreRoom = base.Columns["InStoreRoom"];
                this.columnOutStoreRoom = base.Columns["OutStoreRoom"];
                this.columnAllPrice = base.Columns["AllPrice"];
                this.columnLRRY = base.Columns["LRRY"];
                this.columnLRRQ = base.Columns["LRRQ"];
                this.columnSHRY = base.Columns["SHRY"];
                this.columnSHRQ = base.Columns["SHRQ"];
                this.columnCWRY = base.Columns["CWRY"];
                this.columnCWRQ = base.Columns["CWRQ"];
                this.columnKFRY = base.Columns["KFRY"];
                this.columnKFRQ = base.Columns["KFRQ"];
                this.columnDJZT = base.Columns["DJZT"];
                this.columnAllRemark = base.Columns["AllRemark"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnProvider = base.Columns["Provider"];
                this.columnPrice = base.Columns["Price"];
                this.columnCount = base.Columns["Count"];
                this.columnUnit = base.Columns["Unit"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnRemark = base.Columns["Remark"];
                this.columnID = base.Columns["ID"];
                this.columnDJ_ID = base.Columns["DJ_ID"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSpec = base.Columns["Spec"];
                this.columnGoodsUnitPrice = base.Columns["GoodsUnitPrice"];
                this.columnGoodsType = base.Columns["GoodsType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnInStoreRoom = new global::System.Data.DataColumn("InStoreRoom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStoreRoom);
                this.columnOutStoreRoom = new global::System.Data.DataColumn("OutStoreRoom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutStoreRoom);
                this.columnAllPrice = new global::System.Data.DataColumn("AllPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllPrice);
                this.columnLRRY = new global::System.Data.DataColumn("LRRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRRY);
                this.columnLRRQ = new global::System.Data.DataColumn("LRRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRRQ);
                this.columnSHRY = new global::System.Data.DataColumn("SHRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRY);
                this.columnSHRQ = new global::System.Data.DataColumn("SHRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRQ);
                this.columnCWRY = new global::System.Data.DataColumn("CWRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWRY);
                this.columnCWRQ = new global::System.Data.DataColumn("CWRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWRQ);
                this.columnKFRY = new global::System.Data.DataColumn("KFRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKFRY);
                this.columnKFRQ = new global::System.Data.DataColumn("KFRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKFRQ);
                this.columnDJZT = new global::System.Data.DataColumn("DJZT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJZT);
                this.columnAllRemark = new global::System.Data.DataColumn("AllRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllRemark);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJ_ID = new global::System.Data.DataColumn("DJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJ_ID);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnGoodsUnitPrice = new global::System.Data.DataColumn("GoodsUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsUnitPrice);
                this.columnGoodsType = new global::System.Data.DataColumn("GoodsType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnDJH.MaxLength = 50;
                this.columnInStoreRoom.ReadOnly = true;
                this.columnInStoreRoom.MaxLength = 4000;
                this.columnOutStoreRoom.ReadOnly = true;
                this.columnOutStoreRoom.MaxLength = 4000;
                this.columnLRRY.ReadOnly = true;
                this.columnLRRY.MaxLength = 4000;
                this.columnSHRY.ReadOnly = true;
                this.columnSHRY.MaxLength = 4000;
                this.columnCWRY.ReadOnly = true;
                this.columnCWRY.MaxLength = 4000;
                this.columnKFRY.ReadOnly = true;
                this.columnKFRY.MaxLength = 4000;
                this.columnDJZT.MaxLength = 50;
                this.columnAllRemark.MaxLength = 2147483647;
                this.columnGoodsID.MaxLength = 50;
                this.columnProvider.MaxLength = 50;
                this.columnUnit.MaxLength = 50;
                this.columnBatchNo.MaxLength = 50;
                this.columnRemark.MaxLength = 2147483647;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSpec.AllowDBNull = false;
                this.columnSpec.MaxLength = 50;
                this.columnGoodsUnitPrice.AllowDBNull = false;
                this.columnGoodsType.AllowDBNull = false;
                this.columnGoodsType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRow NewView_S_CannibalizeRow() {
                return ((View_S_CannibalizeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_CannibalizeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_CannibalizeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_CannibalizeRowChanged != null)) {
                    this.View_S_CannibalizeRowChanged(this, new View_S_CannibalizeRowChangeEvent(((View_S_CannibalizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_CannibalizeRowChanging != null)) {
                    this.View_S_CannibalizeRowChanging(this, new View_S_CannibalizeRowChangeEvent(((View_S_CannibalizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_CannibalizeRowDeleted != null)) {
                    this.View_S_CannibalizeRowDeleted(this, new View_S_CannibalizeRowChangeEvent(((View_S_CannibalizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_CannibalizeRowDeleting != null)) {
                    this.View_S_CannibalizeRowDeleting(this, new View_S_CannibalizeRowChangeEvent(((View_S_CannibalizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_CannibalizeRow(View_S_CannibalizeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_CannibalizeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_CheckReturnRepairBillDataTable : global::System.Data.TypedTableBase<View_S_CheckReturnRepairBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column关联入库单号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column挑返原因;
            
            private global::System.Data.DataColumn column挑返方法及要求;
            
            private global::System.Data.DataColumn column挑返损耗及工时;
            
            private global::System.Data.DataColumn columnQC合格数;
            
            private global::System.Data.DataColumn columnQC让步数;
            
            private global::System.Data.DataColumn columnQC退货数;
            
            private global::System.Data.DataColumn columnQC报废数;
            
            private global::System.Data.DataColumn columnSQE工时;
            
            private global::System.Data.DataColumn column创建人;
            
            private global::System.Data.DataColumn column创建日期;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column审核人;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column处理人;
            
            private global::System.Data.DataColumn column处理日期;
            
            private global::System.Data.DataColumn column检验人;
            
            private global::System.Data.DataColumn column检验日期;
            
            private global::System.Data.DataColumn column挑返数量;
            
            private global::System.Data.DataColumn column采购工程师合格数;
            
            private global::System.Data.DataColumn column采购工程师不合格数;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillDataTable() {
                this.TableName = "View_S_CheckReturnRepairBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckReturnRepairBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_CheckReturnRepairBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联入库单号Column {
                get {
                    return this.column关联入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挑返原因Column {
                get {
                    return this.column挑返原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挑返方法及要求Column {
                get {
                    return this.column挑返方法及要求;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挑返损耗及工时Column {
                get {
                    return this.column挑返损耗及工时;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC合格数Column {
                get {
                    return this.columnQC合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC让步数Column {
                get {
                    return this.columnQC让步数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC退货数Column {
                get {
                    return this.columnQC退货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC报废数Column {
                get {
                    return this.columnQC报废数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE工时Column {
                get {
                    return this.columnSQE工时;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 创建人Column {
                get {
                    return this.column创建人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 创建日期Column {
                get {
                    return this.column创建日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人Column {
                get {
                    return this.column审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理人Column {
                get {
                    return this.column处理人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理日期Column {
                get {
                    return this.column处理日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验人Column {
                get {
                    return this.column检验人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挑返数量Column {
                get {
                    return this.column挑返数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购工程师合格数Column {
                get {
                    return this.column采购工程师合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购工程师不合格数Column {
                get {
                    return this.column采购工程师不合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRow this[int index] {
                get {
                    return ((View_S_CheckReturnRepairBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_CheckReturnRepairBillRowChangeEventHandler View_S_CheckReturnRepairBillRowChanging;
            
            public event View_S_CheckReturnRepairBillRowChangeEventHandler View_S_CheckReturnRepairBillRowChanged;
            
            public event View_S_CheckReturnRepairBillRowChangeEventHandler View_S_CheckReturnRepairBillRowDeleting;
            
            public event View_S_CheckReturnRepairBillRowChangeEventHandler View_S_CheckReturnRepairBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_CheckReturnRepairBillRow(View_S_CheckReturnRepairBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRow AddView_S_CheckReturnRepairBillRow(
                        string 单据号, 
                        int 物品ID, 
                        string 关联入库单号, 
                        string 物品名称, 
                        string 图号型号, 
                        string 规格, 
                        string 批次号, 
                        string 供货单位, 
                        string 单据状态, 
                        string 挑返原因, 
                        string 挑返方法及要求, 
                        string 挑返损耗及工时, 
                        decimal QC合格数, 
                        decimal QC让步数, 
                        decimal QC退货数, 
                        decimal QC报废数, 
                        decimal SQE工时, 
                        string 创建人, 
                        System.DateTime 创建日期, 
                        string 编制人, 
                        System.DateTime 编制日期, 
                        string 审核人, 
                        System.DateTime 审核日期, 
                        string 处理人, 
                        System.DateTime 处理日期, 
                        string 检验人, 
                        System.DateTime 检验日期, 
                        int 挑返数量, 
                        decimal 采购工程师合格数, 
                        decimal 采购工程师不合格数) {
                View_S_CheckReturnRepairBillRow rowView_S_CheckReturnRepairBillRow = ((View_S_CheckReturnRepairBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        物品ID,
                        关联入库单号,
                        物品名称,
                        图号型号,
                        规格,
                        批次号,
                        供货单位,
                        单据状态,
                        挑返原因,
                        挑返方法及要求,
                        挑返损耗及工时,
                        QC合格数,
                        QC让步数,
                        QC退货数,
                        QC报废数,
                        SQE工时,
                        创建人,
                        创建日期,
                        编制人,
                        编制日期,
                        审核人,
                        审核日期,
                        处理人,
                        处理日期,
                        检验人,
                        检验日期,
                        挑返数量,
                        采购工程师合格数,
                        采购工程师不合格数};
                rowView_S_CheckReturnRepairBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_CheckReturnRepairBillRow);
                return rowView_S_CheckReturnRepairBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRow FindBy关联入库单号(string 关联入库单号) {
                return ((View_S_CheckReturnRepairBillRow)(this.Rows.Find(new object[] {
                            关联入库单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_CheckReturnRepairBillDataTable cln = ((View_S_CheckReturnRepairBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_CheckReturnRepairBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column物品ID = base.Columns["物品ID"];
                this.column关联入库单号 = base.Columns["关联入库单号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column规格 = base.Columns["规格"];
                this.column批次号 = base.Columns["批次号"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column挑返原因 = base.Columns["挑返原因"];
                this.column挑返方法及要求 = base.Columns["挑返方法及要求"];
                this.column挑返损耗及工时 = base.Columns["挑返损耗及工时"];
                this.columnQC合格数 = base.Columns["QC合格数"];
                this.columnQC让步数 = base.Columns["QC让步数"];
                this.columnQC退货数 = base.Columns["QC退货数"];
                this.columnQC报废数 = base.Columns["QC报废数"];
                this.columnSQE工时 = base.Columns["SQE工时"];
                this.column创建人 = base.Columns["创建人"];
                this.column创建日期 = base.Columns["创建日期"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column审核人 = base.Columns["审核人"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column处理人 = base.Columns["处理人"];
                this.column处理日期 = base.Columns["处理日期"];
                this.column检验人 = base.Columns["检验人"];
                this.column检验日期 = base.Columns["检验日期"];
                this.column挑返数量 = base.Columns["挑返数量"];
                this.column采购工程师合格数 = base.Columns["采购工程师合格数"];
                this.column采购工程师不合格数 = base.Columns["采购工程师不合格数"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column关联入库单号 = new global::System.Data.DataColumn("关联入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联入库单号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column挑返原因 = new global::System.Data.DataColumn("挑返原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挑返原因);
                this.column挑返方法及要求 = new global::System.Data.DataColumn("挑返方法及要求", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挑返方法及要求);
                this.column挑返损耗及工时 = new global::System.Data.DataColumn("挑返损耗及工时", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挑返损耗及工时);
                this.columnQC合格数 = new global::System.Data.DataColumn("QC合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC合格数);
                this.columnQC让步数 = new global::System.Data.DataColumn("QC让步数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC让步数);
                this.columnQC退货数 = new global::System.Data.DataColumn("QC退货数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC退货数);
                this.columnQC报废数 = new global::System.Data.DataColumn("QC报废数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC报废数);
                this.columnSQE工时 = new global::System.Data.DataColumn("SQE工时", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE工时);
                this.column创建人 = new global::System.Data.DataColumn("创建人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column创建人);
                this.column创建日期 = new global::System.Data.DataColumn("创建日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column创建日期);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column审核人 = new global::System.Data.DataColumn("审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column处理人 = new global::System.Data.DataColumn("处理人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理人);
                this.column处理日期 = new global::System.Data.DataColumn("处理日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理日期);
                this.column检验人 = new global::System.Data.DataColumn("检验人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验人);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column挑返数量 = new global::System.Data.DataColumn("挑返数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挑返数量);
                this.column采购工程师合格数 = new global::System.Data.DataColumn("采购工程师合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购工程师合格数);
                this.column采购工程师不合格数 = new global::System.Data.DataColumn("采购工程师不合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购工程师不合格数);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column关联入库单号}, true));
                this.column单据号.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
                this.column关联入库单号.AllowDBNull = false;
                this.column关联入库单号.Unique = true;
                this.column关联入库单号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column批次号.MaxLength = 26;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 15;
                this.column单据状态.MaxLength = 50;
                this.column挑返原因.MaxLength = 2147483647;
                this.column挑返方法及要求.MaxLength = 2147483647;
                this.column挑返损耗及工时.MaxLength = 2147483647;
                this.columnQC合格数.AllowDBNull = false;
                this.columnQC让步数.AllowDBNull = false;
                this.columnQC退货数.AllowDBNull = false;
                this.columnQC报废数.AllowDBNull = false;
                this.columnSQE工时.AllowDBNull = false;
                this.column创建人.ReadOnly = true;
                this.column创建人.MaxLength = 4000;
                this.column编制人.ReadOnly = true;
                this.column编制人.MaxLength = 4000;
                this.column审核人.ReadOnly = true;
                this.column审核人.MaxLength = 4000;
                this.column处理人.ReadOnly = true;
                this.column处理人.MaxLength = 4000;
                this.column检验人.ReadOnly = true;
                this.column检验人.MaxLength = 4000;
                this.column挑返数量.AllowDBNull = false;
                this.column采购工程师合格数.AllowDBNull = false;
                this.column采购工程师不合格数.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRow NewView_S_CheckReturnRepairBillRow() {
                return ((View_S_CheckReturnRepairBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_CheckReturnRepairBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_CheckReturnRepairBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_CheckReturnRepairBillRowChanged != null)) {
                    this.View_S_CheckReturnRepairBillRowChanged(this, new View_S_CheckReturnRepairBillRowChangeEvent(((View_S_CheckReturnRepairBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_CheckReturnRepairBillRowChanging != null)) {
                    this.View_S_CheckReturnRepairBillRowChanging(this, new View_S_CheckReturnRepairBillRowChangeEvent(((View_S_CheckReturnRepairBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_CheckReturnRepairBillRowDeleted != null)) {
                    this.View_S_CheckReturnRepairBillRowDeleted(this, new View_S_CheckReturnRepairBillRowChangeEvent(((View_S_CheckReturnRepairBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_CheckReturnRepairBillRowDeleting != null)) {
                    this.View_S_CheckReturnRepairBillRowDeleting(this, new View_S_CheckReturnRepairBillRowChangeEvent(((View_S_CheckReturnRepairBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_CheckReturnRepairBillRow(View_S_CheckReturnRepairBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_CheckReturnRepairBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_IsolationManageBillDataTable : global::System.Data.TypedTableBase<View_S_IsolationManageBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column材料类别编码;
            
            private global::System.Data.DataColumn column材料类别名称;
            
            private global::System.Data.DataColumn column隔离原因;
            
            private global::System.Data.DataColumn column隔离方法和要求;
            
            private global::System.Data.DataColumn columnQC合格数;
            
            private global::System.Data.DataColumn columnQC让步数;
            
            private global::System.Data.DataColumn columnQC退货数;
            
            private global::System.Data.DataColumn columnQC报废数;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column审核人;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column调出人;
            
            private global::System.Data.DataColumn column调出日期;
            
            private global::System.Data.DataColumn column处理人;
            
            private global::System.Data.DataColumn column处理日期;
            
            private global::System.Data.DataColumn column检验人;
            
            private global::System.Data.DataColumn column检验日期;
            
            private global::System.Data.DataColumn column调入人;
            
            private global::System.Data.DataColumn column调入日期;
            
            private global::System.Data.DataColumn column关联采购退货单号;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column退货方式;
            
            private global::System.Data.DataColumn columnSQE退货建议人;
            
            private global::System.Data.DataColumn columnSQE退货建议填写时间;
            
            private global::System.Data.DataColumn column合格数;
            
            private global::System.Data.DataColumn column不合格数;
            
            private global::System.Data.DataColumn column处理工时;
            
            private global::System.Data.DataColumn columnQC废弃数;
            
            private global::System.Data.DataColumn column处理部门;
            
            private global::System.Data.DataColumn column确认人;
            
            private global::System.Data.DataColumn column确认日期;
            
            private global::System.Data.DataColumn column确认说明;
            
            private global::System.Data.DataColumn column处理部门代码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillDataTable() {
                this.TableName = "View_S_IsolationManageBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_IsolationManageBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_IsolationManageBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别编码Column {
                get {
                    return this.column材料类别编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别名称Column {
                get {
                    return this.column材料类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 隔离原因Column {
                get {
                    return this.column隔离原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 隔离方法和要求Column {
                get {
                    return this.column隔离方法和要求;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC合格数Column {
                get {
                    return this.columnQC合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC让步数Column {
                get {
                    return this.columnQC让步数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC退货数Column {
                get {
                    return this.columnQC退货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC报废数Column {
                get {
                    return this.columnQC报废数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人Column {
                get {
                    return this.column审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调出人Column {
                get {
                    return this.column调出人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调出日期Column {
                get {
                    return this.column调出日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理人Column {
                get {
                    return this.column处理人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理日期Column {
                get {
                    return this.column处理日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验人Column {
                get {
                    return this.column检验人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调入人Column {
                get {
                    return this.column调入人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调入日期Column {
                get {
                    return this.column调入日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联采购退货单号Column {
                get {
                    return this.column关联采购退货单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货方式Column {
                get {
                    return this.column退货方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE退货建议人Column {
                get {
                    return this.columnSQE退货建议人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE退货建议填写时间Column {
                get {
                    return this.columnSQE退货建议填写时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合格数Column {
                get {
                    return this.column合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格数Column {
                get {
                    return this.column不合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理工时Column {
                get {
                    return this.column处理工时;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC废弃数Column {
                get {
                    return this.columnQC废弃数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理部门Column {
                get {
                    return this.column处理部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认人Column {
                get {
                    return this.column确认人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认日期Column {
                get {
                    return this.column确认日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认说明Column {
                get {
                    return this.column确认说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 处理部门代码Column {
                get {
                    return this.column处理部门代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillRow this[int index] {
                get {
                    return ((View_S_IsolationManageBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_IsolationManageBillRowChangeEventHandler View_S_IsolationManageBillRowChanging;
            
            public event View_S_IsolationManageBillRowChangeEventHandler View_S_IsolationManageBillRowChanged;
            
            public event View_S_IsolationManageBillRowChangeEventHandler View_S_IsolationManageBillRowDeleting;
            
            public event View_S_IsolationManageBillRowChangeEventHandler View_S_IsolationManageBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_IsolationManageBillRow(View_S_IsolationManageBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillRow AddView_S_IsolationManageBillRow(
                        string 单据号, 
                        string 单据状态, 
                        string 库房名称, 
                        int 物品ID, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 批次号, 
                        string 供货单位, 
                        string 供方批次号, 
                        string 材料类别编码, 
                        string 材料类别名称, 
                        string 隔离原因, 
                        string 隔离方法和要求, 
                        decimal QC合格数, 
                        decimal QC让步数, 
                        decimal QC退货数, 
                        decimal QC报废数, 
                        string 编制人, 
                        System.DateTime 编制日期, 
                        string 审核人, 
                        System.DateTime 审核日期, 
                        string 调出人, 
                        System.DateTime 调出日期, 
                        string 处理人, 
                        System.DateTime 处理日期, 
                        string 检验人, 
                        System.DateTime 检验日期, 
                        string 调入人, 
                        System.DateTime 调入日期, 
                        string 关联采购退货单号, 
                        string 库房代码, 
                        string 退货方式, 
                        string SQE退货建议人, 
                        System.DateTime SQE退货建议填写时间, 
                        decimal 合格数, 
                        decimal 不合格数, 
                        decimal 处理工时, 
                        decimal QC废弃数, 
                        string 处理部门, 
                        string 确认人, 
                        System.DateTime 确认日期, 
                        string 确认说明, 
                        string 处理部门代码) {
                View_S_IsolationManageBillRow rowView_S_IsolationManageBillRow = ((View_S_IsolationManageBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        库房名称,
                        物品ID,
                        图号型号,
                        物品名称,
                        规格,
                        批次号,
                        供货单位,
                        供方批次号,
                        材料类别编码,
                        材料类别名称,
                        隔离原因,
                        隔离方法和要求,
                        QC合格数,
                        QC让步数,
                        QC退货数,
                        QC报废数,
                        编制人,
                        编制日期,
                        审核人,
                        审核日期,
                        调出人,
                        调出日期,
                        处理人,
                        处理日期,
                        检验人,
                        检验日期,
                        调入人,
                        调入日期,
                        关联采购退货单号,
                        库房代码,
                        退货方式,
                        SQE退货建议人,
                        SQE退货建议填写时间,
                        合格数,
                        不合格数,
                        处理工时,
                        QC废弃数,
                        处理部门,
                        确认人,
                        确认日期,
                        确认说明,
                        处理部门代码};
                rowView_S_IsolationManageBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_IsolationManageBillRow);
                return rowView_S_IsolationManageBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_IsolationManageBillDataTable cln = ((View_S_IsolationManageBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_IsolationManageBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column物品ID = base.Columns["物品ID"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column批次号 = base.Columns["批次号"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column材料类别编码 = base.Columns["材料类别编码"];
                this.column材料类别名称 = base.Columns["材料类别名称"];
                this.column隔离原因 = base.Columns["隔离原因"];
                this.column隔离方法和要求 = base.Columns["隔离方法和要求"];
                this.columnQC合格数 = base.Columns["QC合格数"];
                this.columnQC让步数 = base.Columns["QC让步数"];
                this.columnQC退货数 = base.Columns["QC退货数"];
                this.columnQC报废数 = base.Columns["QC报废数"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column审核人 = base.Columns["审核人"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column调出人 = base.Columns["调出人"];
                this.column调出日期 = base.Columns["调出日期"];
                this.column处理人 = base.Columns["处理人"];
                this.column处理日期 = base.Columns["处理日期"];
                this.column检验人 = base.Columns["检验人"];
                this.column检验日期 = base.Columns["检验日期"];
                this.column调入人 = base.Columns["调入人"];
                this.column调入日期 = base.Columns["调入日期"];
                this.column关联采购退货单号 = base.Columns["关联采购退货单号"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column退货方式 = base.Columns["退货方式"];
                this.columnSQE退货建议人 = base.Columns["SQE退货建议人"];
                this.columnSQE退货建议填写时间 = base.Columns["SQE退货建议填写时间"];
                this.column合格数 = base.Columns["合格数"];
                this.column不合格数 = base.Columns["不合格数"];
                this.column处理工时 = base.Columns["处理工时"];
                this.columnQC废弃数 = base.Columns["QC废弃数"];
                this.column处理部门 = base.Columns["处理部门"];
                this.column确认人 = base.Columns["确认人"];
                this.column确认日期 = base.Columns["确认日期"];
                this.column确认说明 = base.Columns["确认说明"];
                this.column处理部门代码 = base.Columns["处理部门代码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column材料类别编码 = new global::System.Data.DataColumn("材料类别编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别编码);
                this.column材料类别名称 = new global::System.Data.DataColumn("材料类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别名称);
                this.column隔离原因 = new global::System.Data.DataColumn("隔离原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column隔离原因);
                this.column隔离方法和要求 = new global::System.Data.DataColumn("隔离方法和要求", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column隔离方法和要求);
                this.columnQC合格数 = new global::System.Data.DataColumn("QC合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC合格数);
                this.columnQC让步数 = new global::System.Data.DataColumn("QC让步数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC让步数);
                this.columnQC退货数 = new global::System.Data.DataColumn("QC退货数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC退货数);
                this.columnQC报废数 = new global::System.Data.DataColumn("QC报废数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC报废数);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column审核人 = new global::System.Data.DataColumn("审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column调出人 = new global::System.Data.DataColumn("调出人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调出人);
                this.column调出日期 = new global::System.Data.DataColumn("调出日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调出日期);
                this.column处理人 = new global::System.Data.DataColumn("处理人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理人);
                this.column处理日期 = new global::System.Data.DataColumn("处理日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理日期);
                this.column检验人 = new global::System.Data.DataColumn("检验人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验人);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column调入人 = new global::System.Data.DataColumn("调入人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调入人);
                this.column调入日期 = new global::System.Data.DataColumn("调入日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调入日期);
                this.column关联采购退货单号 = new global::System.Data.DataColumn("关联采购退货单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联采购退货单号);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column退货方式 = new global::System.Data.DataColumn("退货方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货方式);
                this.columnSQE退货建议人 = new global::System.Data.DataColumn("SQE退货建议人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE退货建议人);
                this.columnSQE退货建议填写时间 = new global::System.Data.DataColumn("SQE退货建议填写时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE退货建议填写时间);
                this.column合格数 = new global::System.Data.DataColumn("合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合格数);
                this.column不合格数 = new global::System.Data.DataColumn("不合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格数);
                this.column处理工时 = new global::System.Data.DataColumn("处理工时", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理工时);
                this.columnQC废弃数 = new global::System.Data.DataColumn("QC废弃数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC废弃数);
                this.column处理部门 = new global::System.Data.DataColumn("处理部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理部门);
                this.column确认人 = new global::System.Data.DataColumn("确认人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认人);
                this.column确认日期 = new global::System.Data.DataColumn("确认日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认日期);
                this.column确认说明 = new global::System.Data.DataColumn("确认说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认说明);
                this.column处理部门代码 = new global::System.Data.DataColumn("处理部门代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column处理部门代码);
                this.column单据号.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column批次号.MaxLength = 50;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 15;
                this.column供方批次号.MaxLength = 50;
                this.column材料类别编码.MaxLength = 50;
                this.column材料类别名称.MaxLength = 50;
                this.column隔离原因.MaxLength = 2147483647;
                this.column隔离方法和要求.MaxLength = 2147483647;
                this.columnQC合格数.AllowDBNull = false;
                this.columnQC让步数.AllowDBNull = false;
                this.columnQC退货数.AllowDBNull = false;
                this.columnQC报废数.AllowDBNull = false;
                this.column编制人.ReadOnly = true;
                this.column编制人.MaxLength = 4000;
                this.column审核人.ReadOnly = true;
                this.column审核人.MaxLength = 4000;
                this.column调出人.ReadOnly = true;
                this.column调出人.MaxLength = 4000;
                this.column处理人.ReadOnly = true;
                this.column处理人.MaxLength = 4000;
                this.column检验人.ReadOnly = true;
                this.column检验人.MaxLength = 4000;
                this.column调入人.ReadOnly = true;
                this.column调入人.MaxLength = 4000;
                this.column关联采购退货单号.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column退货方式.MaxLength = 50;
                this.columnSQE退货建议人.ReadOnly = true;
                this.columnSQE退货建议人.MaxLength = 4000;
                this.column合格数.AllowDBNull = false;
                this.column不合格数.AllowDBNull = false;
                this.column处理工时.AllowDBNull = false;
                this.columnQC废弃数.AllowDBNull = false;
                this.column处理部门.MaxLength = 50;
                this.column确认人.ReadOnly = true;
                this.column确认人.MaxLength = 4000;
                this.column确认说明.MaxLength = 2147483647;
                this.column处理部门代码.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillRow NewView_S_IsolationManageBillRow() {
                return ((View_S_IsolationManageBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_IsolationManageBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_IsolationManageBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_IsolationManageBillRowChanged != null)) {
                    this.View_S_IsolationManageBillRowChanged(this, new View_S_IsolationManageBillRowChangeEvent(((View_S_IsolationManageBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_IsolationManageBillRowChanging != null)) {
                    this.View_S_IsolationManageBillRowChanging(this, new View_S_IsolationManageBillRowChangeEvent(((View_S_IsolationManageBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_IsolationManageBillRowDeleted != null)) {
                    this.View_S_IsolationManageBillRowDeleted(this, new View_S_IsolationManageBillRowChangeEvent(((View_S_IsolationManageBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_IsolationManageBillRowDeleting != null)) {
                    this.View_S_IsolationManageBillRowDeleting(this, new View_S_IsolationManageBillRowChangeEvent(((View_S_IsolationManageBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_IsolationManageBillRow(View_S_IsolationManageBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_IsolationManageBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MessMessageFeedbackBillDataTable : global::System.Data.TypedTableBase<View_S_MessMessageFeedbackBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column关联单号;
            
            private global::System.Data.DataColumn column创建日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillDataTable() {
                this.TableName = "View_S_MessMessageFeedbackBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MessMessageFeedbackBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MessMessageFeedbackBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单号Column {
                get {
                    return this.column关联单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 创建日期Column {
                get {
                    return this.column创建日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillRow this[int index] {
                get {
                    return ((View_S_MessMessageFeedbackBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MessMessageFeedbackBillRowChangeEventHandler View_S_MessMessageFeedbackBillRowChanging;
            
            public event View_S_MessMessageFeedbackBillRowChangeEventHandler View_S_MessMessageFeedbackBillRowChanged;
            
            public event View_S_MessMessageFeedbackBillRowChangeEventHandler View_S_MessMessageFeedbackBillRowDeleting;
            
            public event View_S_MessMessageFeedbackBillRowChangeEventHandler View_S_MessMessageFeedbackBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MessMessageFeedbackBillRow(View_S_MessMessageFeedbackBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillRow AddView_S_MessMessageFeedbackBillRow(string 单据号, string 单据状态, string 图号型号, string 物品名称, string 规格, string 批次号, string 供应商, string 关联单号, System.DateTime 创建日期) {
                View_S_MessMessageFeedbackBillRow rowView_S_MessMessageFeedbackBillRow = ((View_S_MessMessageFeedbackBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        图号型号,
                        物品名称,
                        规格,
                        批次号,
                        供应商,
                        关联单号,
                        创建日期};
                rowView_S_MessMessageFeedbackBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MessMessageFeedbackBillRow);
                return rowView_S_MessMessageFeedbackBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MessMessageFeedbackBillDataTable cln = ((View_S_MessMessageFeedbackBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MessMessageFeedbackBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column批次号 = base.Columns["批次号"];
                this.column供应商 = base.Columns["供应商"];
                this.column关联单号 = base.Columns["关联单号"];
                this.column创建日期 = base.Columns["创建日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column关联单号 = new global::System.Data.DataColumn("关联单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单号);
                this.column创建日期 = new global::System.Data.DataColumn("创建日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column创建日期);
                this.column单据号.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column批次号.MaxLength = 26;
                this.column供应商.MaxLength = 15;
                this.column关联单号.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillRow NewView_S_MessMessageFeedbackBillRow() {
                return ((View_S_MessMessageFeedbackBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MessMessageFeedbackBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MessMessageFeedbackBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MessMessageFeedbackBillRowChanged != null)) {
                    this.View_S_MessMessageFeedbackBillRowChanged(this, new View_S_MessMessageFeedbackBillRowChangeEvent(((View_S_MessMessageFeedbackBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MessMessageFeedbackBillRowChanging != null)) {
                    this.View_S_MessMessageFeedbackBillRowChanging(this, new View_S_MessMessageFeedbackBillRowChangeEvent(((View_S_MessMessageFeedbackBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MessMessageFeedbackBillRowDeleted != null)) {
                    this.View_S_MessMessageFeedbackBillRowDeleted(this, new View_S_MessMessageFeedbackBillRowChangeEvent(((View_S_MessMessageFeedbackBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MessMessageFeedbackBillRowDeleting != null)) {
                    this.View_S_MessMessageFeedbackBillRowDeleting(this, new View_S_MessMessageFeedbackBillRowChangeEvent(((View_S_MessMessageFeedbackBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MessMessageFeedbackBillRow(View_S_MessMessageFeedbackBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MessMessageFeedbackBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_StorageCheckDataTable : global::System.Data.TypedTableBase<View_S_StorageCheckRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column所属库房;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column单据方式;
            
            private global::System.Data.DataColumn column编制人员;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column审核人员;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column批准人员;
            
            private global::System.Data.DataColumn column批准日期;
            
            private global::System.Data.DataColumn column仓管人员;
            
            private global::System.Data.DataColumn column确认日期;
            
            private global::System.Data.DataColumn column分管领导;
            
            private global::System.Data.DataColumn column分管领导批准日期;
            
            private global::System.Data.DataColumn column库房代码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckDataTable() {
                this.TableName = "View_S_StorageCheck";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_StorageCheckDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_StorageCheckDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 所属库房Column {
                get {
                    return this.column所属库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据方式Column {
                get {
                    return this.column单据方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人员Column {
                get {
                    return this.column编制人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人员Column {
                get {
                    return this.column审核人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准人员Column {
                get {
                    return this.column批准人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准日期Column {
                get {
                    return this.column批准日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管人员Column {
                get {
                    return this.column仓管人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认日期Column {
                get {
                    return this.column确认日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导Column {
                get {
                    return this.column分管领导;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导批准日期Column {
                get {
                    return this.column分管领导批准日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckRow this[int index] {
                get {
                    return ((View_S_StorageCheckRow)(this.Rows[index]));
                }
            }
            
            public event View_S_StorageCheckRowChangeEventHandler View_S_StorageCheckRowChanging;
            
            public event View_S_StorageCheckRowChangeEventHandler View_S_StorageCheckRowChanged;
            
            public event View_S_StorageCheckRowChangeEventHandler View_S_StorageCheckRowDeleting;
            
            public event View_S_StorageCheckRowChangeEventHandler View_S_StorageCheckRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_StorageCheckRow(View_S_StorageCheckRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckRow AddView_S_StorageCheckRow(string 单据号, string 所属库房, string 单据状态, string 单据方式, string 编制人员, System.DateTime 编制日期, string 审核人员, System.DateTime 审核日期, string 批准人员, System.DateTime 批准日期, string 仓管人员, System.DateTime 确认日期, string 分管领导, System.DateTime 分管领导批准日期, string 库房代码) {
                View_S_StorageCheckRow rowView_S_StorageCheckRow = ((View_S_StorageCheckRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        所属库房,
                        单据状态,
                        单据方式,
                        编制人员,
                        编制日期,
                        审核人员,
                        审核日期,
                        批准人员,
                        批准日期,
                        仓管人员,
                        确认日期,
                        分管领导,
                        分管领导批准日期,
                        库房代码};
                rowView_S_StorageCheckRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_StorageCheckRow);
                return rowView_S_StorageCheckRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_StorageCheckDataTable cln = ((View_S_StorageCheckDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_StorageCheckDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column所属库房 = base.Columns["所属库房"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column单据方式 = base.Columns["单据方式"];
                this.column编制人员 = base.Columns["编制人员"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column审核人员 = base.Columns["审核人员"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column批准人员 = base.Columns["批准人员"];
                this.column批准日期 = base.Columns["批准日期"];
                this.column仓管人员 = base.Columns["仓管人员"];
                this.column确认日期 = base.Columns["确认日期"];
                this.column分管领导 = base.Columns["分管领导"];
                this.column分管领导批准日期 = base.Columns["分管领导批准日期"];
                this.column库房代码 = base.Columns["库房代码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column所属库房 = new global::System.Data.DataColumn("所属库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column所属库房);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column单据方式 = new global::System.Data.DataColumn("单据方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据方式);
                this.column编制人员 = new global::System.Data.DataColumn("编制人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人员);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column审核人员 = new global::System.Data.DataColumn("审核人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人员);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column批准人员 = new global::System.Data.DataColumn("批准人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准人员);
                this.column批准日期 = new global::System.Data.DataColumn("批准日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准日期);
                this.column仓管人员 = new global::System.Data.DataColumn("仓管人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管人员);
                this.column确认日期 = new global::System.Data.DataColumn("确认日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认日期);
                this.column分管领导 = new global::System.Data.DataColumn("分管领导", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导);
                this.column分管领导批准日期 = new global::System.Data.DataColumn("分管领导批准日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导批准日期);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column单据号.MaxLength = 50;
                this.column所属库房.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column单据方式.MaxLength = 50;
                this.column编制人员.ReadOnly = true;
                this.column编制人员.MaxLength = 4000;
                this.column审核人员.ReadOnly = true;
                this.column审核人员.MaxLength = 4000;
                this.column批准人员.ReadOnly = true;
                this.column批准人员.MaxLength = 4000;
                this.column仓管人员.ReadOnly = true;
                this.column仓管人员.MaxLength = 4000;
                this.column分管领导.ReadOnly = true;
                this.column分管领导.MaxLength = 4000;
                this.column库房代码.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckRow NewView_S_StorageCheckRow() {
                return ((View_S_StorageCheckRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_StorageCheckRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_StorageCheckRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_StorageCheckRowChanged != null)) {
                    this.View_S_StorageCheckRowChanged(this, new View_S_StorageCheckRowChangeEvent(((View_S_StorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_StorageCheckRowChanging != null)) {
                    this.View_S_StorageCheckRowChanging(this, new View_S_StorageCheckRowChangeEvent(((View_S_StorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_StorageCheckRowDeleted != null)) {
                    this.View_S_StorageCheckRowDeleted(this, new View_S_StorageCheckRowChangeEvent(((View_S_StorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_StorageCheckRowDeleting != null)) {
                    this.View_S_StorageCheckRowDeleting(this, new View_S_StorageCheckRowChangeEvent(((View_S_StorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_StorageCheckRow(View_S_StorageCheckRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_StorageCheckDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_ReportForStorageCheckDataTable : global::System.Data.TypedTableBase<View_S_ReportForStorageCheckRow> {
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnZMSL;
            
            private global::System.Data.DataColumn columnPDSL;
            
            private global::System.Data.DataColumn columnYKSL;
            
            private global::System.Data.DataColumn column所属库房;
            
            private global::System.Data.DataColumn column编制人员;
            
            private global::System.Data.DataColumn column审核人员;
            
            private global::System.Data.DataColumn column批准人员;
            
            private global::System.Data.DataColumn column仓管人员;
            
            private global::System.Data.DataColumn column确认日期;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column账龄;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckDataTable() {
                this.TableName = "View_S_ReportForStorageCheck";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ReportForStorageCheckDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_ReportForStorageCheckDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZMSLColumn {
                get {
                    return this.columnZMSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PDSLColumn {
                get {
                    return this.columnPDSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YKSLColumn {
                get {
                    return this.columnYKSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 所属库房Column {
                get {
                    return this.column所属库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人员Column {
                get {
                    return this.column编制人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人员Column {
                get {
                    return this.column审核人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准人员Column {
                get {
                    return this.column批准人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管人员Column {
                get {
                    return this.column仓管人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认日期Column {
                get {
                    return this.column确认日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 账龄Column {
                get {
                    return this.column账龄;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckRow this[int index] {
                get {
                    return ((View_S_ReportForStorageCheckRow)(this.Rows[index]));
                }
            }
            
            public event View_S_ReportForStorageCheckRowChangeEventHandler View_S_ReportForStorageCheckRowChanging;
            
            public event View_S_ReportForStorageCheckRowChangeEventHandler View_S_ReportForStorageCheckRowChanged;
            
            public event View_S_ReportForStorageCheckRowChangeEventHandler View_S_ReportForStorageCheckRowDeleting;
            
            public event View_S_ReportForStorageCheckRowChangeEventHandler View_S_ReportForStorageCheckRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_ReportForStorageCheckRow(View_S_ReportForStorageCheckRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckRow AddView_S_ReportForStorageCheckRow(
                        string DJH, 
                        string GoodsCode, 
                        string GoodsName, 
                        string Spec, 
                        string BatchNo, 
                        decimal ZMSL, 
                        decimal PDSL, 
                        decimal YKSL, 
                        string 所属库房, 
                        string 编制人员, 
                        string 审核人员, 
                        string 批准人员, 
                        string 仓管人员, 
                        System.DateTime 确认日期, 
                        string 单据号, 
                        System.DateTime 入库时间, 
                        int 账龄) {
                View_S_ReportForStorageCheckRow rowView_S_ReportForStorageCheckRow = ((View_S_ReportForStorageCheckRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DJH,
                        GoodsCode,
                        GoodsName,
                        Spec,
                        BatchNo,
                        ZMSL,
                        PDSL,
                        YKSL,
                        所属库房,
                        编制人员,
                        审核人员,
                        批准人员,
                        仓管人员,
                        确认日期,
                        单据号,
                        入库时间,
                        账龄};
                rowView_S_ReportForStorageCheckRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_ReportForStorageCheckRow);
                return rowView_S_ReportForStorageCheckRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_ReportForStorageCheckDataTable cln = ((View_S_ReportForStorageCheckDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_ReportForStorageCheckDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDJH = base.Columns["DJH"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSpec = base.Columns["Spec"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnZMSL = base.Columns["ZMSL"];
                this.columnPDSL = base.Columns["PDSL"];
                this.columnYKSL = base.Columns["YKSL"];
                this.column所属库房 = base.Columns["所属库房"];
                this.column编制人员 = base.Columns["编制人员"];
                this.column审核人员 = base.Columns["审核人员"];
                this.column批准人员 = base.Columns["批准人员"];
                this.column仓管人员 = base.Columns["仓管人员"];
                this.column确认日期 = base.Columns["确认日期"];
                this.column单据号 = base.Columns["单据号"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column账龄 = base.Columns["账龄"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnZMSL = new global::System.Data.DataColumn("ZMSL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZMSL);
                this.columnPDSL = new global::System.Data.DataColumn("PDSL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPDSL);
                this.columnYKSL = new global::System.Data.DataColumn("YKSL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYKSL);
                this.column所属库房 = new global::System.Data.DataColumn("所属库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column所属库房);
                this.column编制人员 = new global::System.Data.DataColumn("编制人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人员);
                this.column审核人员 = new global::System.Data.DataColumn("审核人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人员);
                this.column批准人员 = new global::System.Data.DataColumn("批准人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准人员);
                this.column仓管人员 = new global::System.Data.DataColumn("仓管人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管人员);
                this.column确认日期 = new global::System.Data.DataColumn("确认日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认日期);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column账龄 = new global::System.Data.DataColumn("账龄", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column账龄);
                this.columnDJH.MaxLength = 50;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSpec.AllowDBNull = false;
                this.columnSpec.MaxLength = 50;
                this.columnBatchNo.MaxLength = 50;
                this.column所属库房.MaxLength = 50;
                this.column编制人员.ReadOnly = true;
                this.column编制人员.MaxLength = 4000;
                this.column审核人员.ReadOnly = true;
                this.column审核人员.MaxLength = 4000;
                this.column批准人员.ReadOnly = true;
                this.column批准人员.MaxLength = 4000;
                this.column仓管人员.ReadOnly = true;
                this.column仓管人员.MaxLength = 4000;
                this.column单据号.MaxLength = 50;
                this.column入库时间.AllowDBNull = false;
                this.column账龄.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckRow NewView_S_ReportForStorageCheckRow() {
                return ((View_S_ReportForStorageCheckRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_ReportForStorageCheckRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_ReportForStorageCheckRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_ReportForStorageCheckRowChanged != null)) {
                    this.View_S_ReportForStorageCheckRowChanged(this, new View_S_ReportForStorageCheckRowChangeEvent(((View_S_ReportForStorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_ReportForStorageCheckRowChanging != null)) {
                    this.View_S_ReportForStorageCheckRowChanging(this, new View_S_ReportForStorageCheckRowChangeEvent(((View_S_ReportForStorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_ReportForStorageCheckRowDeleted != null)) {
                    this.View_S_ReportForStorageCheckRowDeleted(this, new View_S_ReportForStorageCheckRowChangeEvent(((View_S_ReportForStorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_ReportForStorageCheckRowDeleting != null)) {
                    this.View_S_ReportForStorageCheckRowDeleting(this, new View_S_ReportForStorageCheckRowChangeEvent(((View_S_ReportForStorageCheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_ReportForStorageCheckRow(View_S_ReportForStorageCheckRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_ReportForStorageCheckDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MaterialListReturnedInTheDepotDataTable : global::System.Data.TypedTableBase<View_S_MaterialListReturnedInTheDepotRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column退库单号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column退库数;
            
            private global::System.Data.DataColumn column材料类别编码;
            
            private global::System.Data.DataColumn column材料类别名称;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column返修状态;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotDataTable() {
                this.TableName = "View_S_MaterialListReturnedInTheDepot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialListReturnedInTheDepotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MaterialListReturnedInTheDepotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库单号Column {
                get {
                    return this.column退库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退库数Column {
                get {
                    return this.column退库数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别编码Column {
                get {
                    return this.column材料类别编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别名称Column {
                get {
                    return this.column材料类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 返修状态Column {
                get {
                    return this.column返修状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotRow this[int index] {
                get {
                    return ((View_S_MaterialListReturnedInTheDepotRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MaterialListReturnedInTheDepotRowChangeEventHandler View_S_MaterialListReturnedInTheDepotRowChanging;
            
            public event View_S_MaterialListReturnedInTheDepotRowChangeEventHandler View_S_MaterialListReturnedInTheDepotRowChanged;
            
            public event View_S_MaterialListReturnedInTheDepotRowChangeEventHandler View_S_MaterialListReturnedInTheDepotRowDeleting;
            
            public event View_S_MaterialListReturnedInTheDepotRowChangeEventHandler View_S_MaterialListReturnedInTheDepotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MaterialListReturnedInTheDepotRow(View_S_MaterialListReturnedInTheDepotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotRow AddView_S_MaterialListReturnedInTheDepotRow(
                        long 序号, 
                        string 退库单号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 单位, 
                        string 供应商, 
                        string 供方批次号, 
                        string 批次号, 
                        decimal 退库数, 
                        string 材料类别编码, 
                        string 材料类别名称, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 备注, 
                        int 物品ID, 
                        bool 返修状态) {
                View_S_MaterialListReturnedInTheDepotRow rowView_S_MaterialListReturnedInTheDepotRow = ((View_S_MaterialListReturnedInTheDepotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        退库单号,
                        图号型号,
                        物品名称,
                        规格,
                        单位,
                        供应商,
                        供方批次号,
                        批次号,
                        退库数,
                        材料类别编码,
                        材料类别名称,
                        货架,
                        列,
                        层,
                        备注,
                        物品ID,
                        返修状态};
                rowView_S_MaterialListReturnedInTheDepotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MaterialListReturnedInTheDepotRow);
                return rowView_S_MaterialListReturnedInTheDepotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MaterialListReturnedInTheDepotDataTable cln = ((View_S_MaterialListReturnedInTheDepotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MaterialListReturnedInTheDepotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column退库单号 = base.Columns["退库单号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column单位 = base.Columns["单位"];
                this.column供应商 = base.Columns["供应商"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column批次号 = base.Columns["批次号"];
                this.column退库数 = base.Columns["退库数"];
                this.column材料类别编码 = base.Columns["材料类别编码"];
                this.column材料类别名称 = base.Columns["材料类别名称"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column备注 = base.Columns["备注"];
                this.column物品ID = base.Columns["物品ID"];
                this.column返修状态 = base.Columns["返修状态"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column退库单号 = new global::System.Data.DataColumn("退库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库单号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column退库数 = new global::System.Data.DataColumn("退库数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退库数);
                this.column材料类别编码 = new global::System.Data.DataColumn("材料类别编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别编码);
                this.column材料类别名称 = new global::System.Data.DataColumn("材料类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别名称);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column返修状态 = new global::System.Data.DataColumn("返修状态", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column返修状态);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, false));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column退库单号.AllowDBNull = false;
                this.column退库单号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 15;
                this.column供方批次号.MaxLength = 2147483647;
                this.column批次号.MaxLength = 26;
                this.column材料类别编码.AllowDBNull = false;
                this.column材料类别编码.MaxLength = 50;
                this.column材料类别名称.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 10;
                this.column层.MaxLength = 10;
                this.column备注.MaxLength = 2147483647;
                this.column物品ID.AllowDBNull = false;
                this.column返修状态.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotRow NewView_S_MaterialListReturnedInTheDepotRow() {
                return ((View_S_MaterialListReturnedInTheDepotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MaterialListReturnedInTheDepotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MaterialListReturnedInTheDepotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MaterialListReturnedInTheDepotRowChanged != null)) {
                    this.View_S_MaterialListReturnedInTheDepotRowChanged(this, new View_S_MaterialListReturnedInTheDepotRowChangeEvent(((View_S_MaterialListReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MaterialListReturnedInTheDepotRowChanging != null)) {
                    this.View_S_MaterialListReturnedInTheDepotRowChanging(this, new View_S_MaterialListReturnedInTheDepotRowChangeEvent(((View_S_MaterialListReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MaterialListReturnedInTheDepotRowDeleted != null)) {
                    this.View_S_MaterialListReturnedInTheDepotRowDeleted(this, new View_S_MaterialListReturnedInTheDepotRowChangeEvent(((View_S_MaterialListReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MaterialListReturnedInTheDepotRowDeleting != null)) {
                    this.View_S_MaterialListReturnedInTheDepotRowDeleting(this, new View_S_MaterialListReturnedInTheDepotRowChangeEvent(((View_S_MaterialListReturnedInTheDepotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MaterialListReturnedInTheDepotRow(View_S_MaterialListReturnedInTheDepotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MaterialListReturnedInTheDepotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_ALLMessMessageFeedbackDataTable : global::System.Data.TypedTableBase<View_S_ALLMessMessageFeedbackRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnInDepotBillID;
            
            private global::System.Data.DataColumn columnQCRY;
            
            private global::System.Data.DataColumn columnQCRQ;
            
            private global::System.Data.DataColumn columnSQERY;
            
            private global::System.Data.DataColumn columnSQERQ;
            
            private global::System.Data.DataColumn columnLinkMan;
            
            private global::System.Data.DataColumn columnLinkPhone;
            
            private global::System.Data.DataColumn columnLinkEmail;
            
            private global::System.Data.DataColumn columnRevertTime;
            
            private global::System.Data.DataColumn columnJLRD_LinkMan;
            
            private global::System.Data.DataColumn columnJLRD_LinkPhone;
            
            private global::System.Data.DataColumn columnJLRD_LinkEmail;
            
            private global::System.Data.DataColumn columnForGoodsStatus;
            
            private global::System.Data.DataColumn columnMessageFromStatus;
            
            private global::System.Data.DataColumn columnDisqualificationDepict;
            
            private global::System.Data.DataColumn columnSQEMindStatus;
            
            private global::System.Data.DataColumn columnSQEElseMindMessage;
            
            private global::System.Data.DataColumn columnSQEvalidateMessage;
            
            private global::System.Data.DataColumn columnSQEYZRY;
            
            private global::System.Data.DataColumn columnSQEYZRQ;
            
            private global::System.Data.DataColumn columnQEAffirmMessage;
            
            private global::System.Data.DataColumn columnQEQRRY;
            
            private global::System.Data.DataColumn columnQEQRRQ;
            
            private global::System.Data.DataColumn columnDJZT;
            
            private global::System.Data.DataColumn columnArriveGoods_Time;
            
            private global::System.Data.DataColumn columnOrderFormNumber;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnProviderName;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnQEQR_RY;
            
            private global::System.Data.DataColumn columnSQEYZ_RY;
            
            private global::System.Data.DataColumn columnQC_RY;
            
            private global::System.Data.DataColumn columnSQE_RY;
            
            private global::System.Data.DataColumn columnBill_ID;
            
            private global::System.Data.DataColumn columnPicture;
            
            private global::System.Data.DataColumn columnAllCount;
            
            private global::System.Data.DataColumn columnDefectiveRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackDataTable() {
                this.TableName = "View_S_ALLMessMessageFeedback";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ALLMessMessageFeedbackDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_ALLMessMessageFeedbackDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDepotBillIDColumn {
                get {
                    return this.columnInDepotBillID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QCRYColumn {
                get {
                    return this.columnQCRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QCRQColumn {
                get {
                    return this.columnQCRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQERYColumn {
                get {
                    return this.columnSQERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQERQColumn {
                get {
                    return this.columnSQERQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkManColumn {
                get {
                    return this.columnLinkMan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkPhoneColumn {
                get {
                    return this.columnLinkPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkEmailColumn {
                get {
                    return this.columnLinkEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RevertTimeColumn {
                get {
                    return this.columnRevertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLRD_LinkManColumn {
                get {
                    return this.columnJLRD_LinkMan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLRD_LinkPhoneColumn {
                get {
                    return this.columnJLRD_LinkPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLRD_LinkEmailColumn {
                get {
                    return this.columnJLRD_LinkEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForGoodsStatusColumn {
                get {
                    return this.columnForGoodsStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageFromStatusColumn {
                get {
                    return this.columnMessageFromStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisqualificationDepictColumn {
                get {
                    return this.columnDisqualificationDepict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEMindStatusColumn {
                get {
                    return this.columnSQEMindStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEElseMindMessageColumn {
                get {
                    return this.columnSQEElseMindMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEvalidateMessageColumn {
                get {
                    return this.columnSQEvalidateMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEYZRYColumn {
                get {
                    return this.columnSQEYZRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEYZRQColumn {
                get {
                    return this.columnSQEYZRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QEAffirmMessageColumn {
                get {
                    return this.columnQEAffirmMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QEQRRYColumn {
                get {
                    return this.columnQEQRRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QEQRRQColumn {
                get {
                    return this.columnQEQRRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJZTColumn {
                get {
                    return this.columnDJZT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArriveGoods_TimeColumn {
                get {
                    return this.columnArriveGoods_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderFormNumberColumn {
                get {
                    return this.columnOrderFormNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderNameColumn {
                get {
                    return this.columnProviderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QEQR_RYColumn {
                get {
                    return this.columnQEQR_RY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQEYZ_RYColumn {
                get {
                    return this.columnSQEYZ_RY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC_RYColumn {
                get {
                    return this.columnQC_RY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE_RYColumn {
                get {
                    return this.columnSQE_RY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PictureColumn {
                get {
                    return this.columnPicture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllCountColumn {
                get {
                    return this.columnAllCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefectiveRateColumn {
                get {
                    return this.columnDefectiveRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackRow this[int index] {
                get {
                    return ((View_S_ALLMessMessageFeedbackRow)(this.Rows[index]));
                }
            }
            
            public event View_S_ALLMessMessageFeedbackRowChangeEventHandler View_S_ALLMessMessageFeedbackRowChanging;
            
            public event View_S_ALLMessMessageFeedbackRowChangeEventHandler View_S_ALLMessMessageFeedbackRowChanged;
            
            public event View_S_ALLMessMessageFeedbackRowChangeEventHandler View_S_ALLMessMessageFeedbackRowDeleting;
            
            public event View_S_ALLMessMessageFeedbackRowChangeEventHandler View_S_ALLMessMessageFeedbackRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_ALLMessMessageFeedbackRow(View_S_ALLMessMessageFeedbackRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackRow AddView_S_ALLMessMessageFeedbackRow(
                        int ID, 
                        string DJH, 
                        string InDepotBillID, 
                        string QCRY, 
                        System.DateTime QCRQ, 
                        string SQERY, 
                        System.DateTime SQERQ, 
                        string LinkMan, 
                        string LinkPhone, 
                        string LinkEmail, 
                        System.DateTime RevertTime, 
                        string JLRD_LinkMan, 
                        string JLRD_LinkPhone, 
                        string JLRD_LinkEmail, 
                        string ForGoodsStatus, 
                        string MessageFromStatus, 
                        string DisqualificationDepict, 
                        string SQEMindStatus, 
                        string SQEElseMindMessage, 
                        string SQEvalidateMessage, 
                        string SQEYZRY, 
                        System.DateTime SQEYZRQ, 
                        string QEAffirmMessage, 
                        string QEQRRY, 
                        System.DateTime QEQRRQ, 
                        string DJZT, 
                        System.DateTime ArriveGoods_Time, 
                        string OrderFormNumber, 
                        int GoodsID, 
                        string GoodsCode, 
                        string GoodsName, 
                        string Spec, 
                        string ProviderName, 
                        string Provider, 
                        string BatchNo, 
                        string QEQR_RY, 
                        string SQEYZ_RY, 
                        string QC_RY, 
                        string SQE_RY, 
                        string Bill_ID, 
                        byte[] Picture, 
                        decimal AllCount, 
                        decimal DefectiveRate) {
                View_S_ALLMessMessageFeedbackRow rowView_S_ALLMessMessageFeedbackRow = ((View_S_ALLMessMessageFeedbackRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        DJH,
                        InDepotBillID,
                        QCRY,
                        QCRQ,
                        SQERY,
                        SQERQ,
                        LinkMan,
                        LinkPhone,
                        LinkEmail,
                        RevertTime,
                        JLRD_LinkMan,
                        JLRD_LinkPhone,
                        JLRD_LinkEmail,
                        ForGoodsStatus,
                        MessageFromStatus,
                        DisqualificationDepict,
                        SQEMindStatus,
                        SQEElseMindMessage,
                        SQEvalidateMessage,
                        SQEYZRY,
                        SQEYZRQ,
                        QEAffirmMessage,
                        QEQRRY,
                        QEQRRQ,
                        DJZT,
                        ArriveGoods_Time,
                        OrderFormNumber,
                        GoodsID,
                        GoodsCode,
                        GoodsName,
                        Spec,
                        ProviderName,
                        Provider,
                        BatchNo,
                        QEQR_RY,
                        SQEYZ_RY,
                        QC_RY,
                        SQE_RY,
                        Bill_ID,
                        Picture,
                        AllCount,
                        DefectiveRate};
                rowView_S_ALLMessMessageFeedbackRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_ALLMessMessageFeedbackRow);
                return rowView_S_ALLMessMessageFeedbackRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_ALLMessMessageFeedbackDataTable cln = ((View_S_ALLMessMessageFeedbackDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_ALLMessMessageFeedbackDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDJH = base.Columns["DJH"];
                this.columnInDepotBillID = base.Columns["InDepotBillID"];
                this.columnQCRY = base.Columns["QCRY"];
                this.columnQCRQ = base.Columns["QCRQ"];
                this.columnSQERY = base.Columns["SQERY"];
                this.columnSQERQ = base.Columns["SQERQ"];
                this.columnLinkMan = base.Columns["LinkMan"];
                this.columnLinkPhone = base.Columns["LinkPhone"];
                this.columnLinkEmail = base.Columns["LinkEmail"];
                this.columnRevertTime = base.Columns["RevertTime"];
                this.columnJLRD_LinkMan = base.Columns["JLRD_LinkMan"];
                this.columnJLRD_LinkPhone = base.Columns["JLRD_LinkPhone"];
                this.columnJLRD_LinkEmail = base.Columns["JLRD_LinkEmail"];
                this.columnForGoodsStatus = base.Columns["ForGoodsStatus"];
                this.columnMessageFromStatus = base.Columns["MessageFromStatus"];
                this.columnDisqualificationDepict = base.Columns["DisqualificationDepict"];
                this.columnSQEMindStatus = base.Columns["SQEMindStatus"];
                this.columnSQEElseMindMessage = base.Columns["SQEElseMindMessage"];
                this.columnSQEvalidateMessage = base.Columns["SQEvalidateMessage"];
                this.columnSQEYZRY = base.Columns["SQEYZRY"];
                this.columnSQEYZRQ = base.Columns["SQEYZRQ"];
                this.columnQEAffirmMessage = base.Columns["QEAffirmMessage"];
                this.columnQEQRRY = base.Columns["QEQRRY"];
                this.columnQEQRRQ = base.Columns["QEQRRQ"];
                this.columnDJZT = base.Columns["DJZT"];
                this.columnArriveGoods_Time = base.Columns["ArriveGoods_Time"];
                this.columnOrderFormNumber = base.Columns["OrderFormNumber"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSpec = base.Columns["Spec"];
                this.columnProviderName = base.Columns["ProviderName"];
                this.columnProvider = base.Columns["Provider"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnQEQR_RY = base.Columns["QEQR_RY"];
                this.columnSQEYZ_RY = base.Columns["SQEYZ_RY"];
                this.columnQC_RY = base.Columns["QC_RY"];
                this.columnSQE_RY = base.Columns["SQE_RY"];
                this.columnBill_ID = base.Columns["Bill_ID"];
                this.columnPicture = base.Columns["Picture"];
                this.columnAllCount = base.Columns["AllCount"];
                this.columnDefectiveRate = base.Columns["DefectiveRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnInDepotBillID = new global::System.Data.DataColumn("InDepotBillID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDepotBillID);
                this.columnQCRY = new global::System.Data.DataColumn("QCRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCRY);
                this.columnQCRQ = new global::System.Data.DataColumn("QCRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCRQ);
                this.columnSQERY = new global::System.Data.DataColumn("SQERY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQERY);
                this.columnSQERQ = new global::System.Data.DataColumn("SQERQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQERQ);
                this.columnLinkMan = new global::System.Data.DataColumn("LinkMan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkMan);
                this.columnLinkPhone = new global::System.Data.DataColumn("LinkPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkPhone);
                this.columnLinkEmail = new global::System.Data.DataColumn("LinkEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkEmail);
                this.columnRevertTime = new global::System.Data.DataColumn("RevertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevertTime);
                this.columnJLRD_LinkMan = new global::System.Data.DataColumn("JLRD_LinkMan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLRD_LinkMan);
                this.columnJLRD_LinkPhone = new global::System.Data.DataColumn("JLRD_LinkPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLRD_LinkPhone);
                this.columnJLRD_LinkEmail = new global::System.Data.DataColumn("JLRD_LinkEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLRD_LinkEmail);
                this.columnForGoodsStatus = new global::System.Data.DataColumn("ForGoodsStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForGoodsStatus);
                this.columnMessageFromStatus = new global::System.Data.DataColumn("MessageFromStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageFromStatus);
                this.columnDisqualificationDepict = new global::System.Data.DataColumn("DisqualificationDepict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisqualificationDepict);
                this.columnSQEMindStatus = new global::System.Data.DataColumn("SQEMindStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEMindStatus);
                this.columnSQEElseMindMessage = new global::System.Data.DataColumn("SQEElseMindMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEElseMindMessage);
                this.columnSQEvalidateMessage = new global::System.Data.DataColumn("SQEvalidateMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEvalidateMessage);
                this.columnSQEYZRY = new global::System.Data.DataColumn("SQEYZRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEYZRY);
                this.columnSQEYZRQ = new global::System.Data.DataColumn("SQEYZRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEYZRQ);
                this.columnQEAffirmMessage = new global::System.Data.DataColumn("QEAffirmMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQEAffirmMessage);
                this.columnQEQRRY = new global::System.Data.DataColumn("QEQRRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQEQRRY);
                this.columnQEQRRQ = new global::System.Data.DataColumn("QEQRRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQEQRRQ);
                this.columnDJZT = new global::System.Data.DataColumn("DJZT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJZT);
                this.columnArriveGoods_Time = new global::System.Data.DataColumn("ArriveGoods_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArriveGoods_Time);
                this.columnOrderFormNumber = new global::System.Data.DataColumn("OrderFormNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderFormNumber);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnProviderName = new global::System.Data.DataColumn("ProviderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderName);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnQEQR_RY = new global::System.Data.DataColumn("QEQR_RY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQEQR_RY);
                this.columnSQEYZ_RY = new global::System.Data.DataColumn("SQEYZ_RY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQEYZ_RY);
                this.columnQC_RY = new global::System.Data.DataColumn("QC_RY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC_RY);
                this.columnSQE_RY = new global::System.Data.DataColumn("SQE_RY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE_RY);
                this.columnBill_ID = new global::System.Data.DataColumn("Bill_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.columnAllCount = new global::System.Data.DataColumn("AllCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllCount);
                this.columnDefectiveRate = new global::System.Data.DataColumn("DefectiveRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefectiveRate);
                this.columnID.AllowDBNull = false;
                this.columnDJH.MaxLength = 50;
                this.columnInDepotBillID.MaxLength = 50;
                this.columnQCRY.MaxLength = 50;
                this.columnSQERY.MaxLength = 50;
                this.columnLinkMan.MaxLength = 50;
                this.columnLinkPhone.MaxLength = 50;
                this.columnLinkEmail.MaxLength = 50;
                this.columnJLRD_LinkMan.MaxLength = 50;
                this.columnJLRD_LinkPhone.MaxLength = 50;
                this.columnJLRD_LinkEmail.MaxLength = 50;
                this.columnForGoodsStatus.MaxLength = 50;
                this.columnMessageFromStatus.MaxLength = 50;
                this.columnDisqualificationDepict.MaxLength = 2147483647;
                this.columnSQEMindStatus.MaxLength = 50;
                this.columnSQEElseMindMessage.MaxLength = 2147483647;
                this.columnSQEvalidateMessage.MaxLength = 2147483647;
                this.columnSQEYZRY.MaxLength = 50;
                this.columnQEAffirmMessage.MaxLength = 2147483647;
                this.columnQEQRRY.MaxLength = 50;
                this.columnDJZT.MaxLength = 50;
                this.columnArriveGoods_Time.AllowDBNull = false;
                this.columnOrderFormNumber.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSpec.AllowDBNull = false;
                this.columnSpec.MaxLength = 50;
                this.columnProviderName.MaxLength = 100;
                this.columnProvider.AllowDBNull = false;
                this.columnProvider.MaxLength = 15;
                this.columnBatchNo.MaxLength = 26;
                this.columnQEQR_RY.ReadOnly = true;
                this.columnQEQR_RY.MaxLength = 4000;
                this.columnSQEYZ_RY.ReadOnly = true;
                this.columnSQEYZ_RY.MaxLength = 4000;
                this.columnQC_RY.ReadOnly = true;
                this.columnQC_RY.MaxLength = 4000;
                this.columnSQE_RY.ReadOnly = true;
                this.columnSQE_RY.MaxLength = 4000;
                this.columnBill_ID.AllowDBNull = false;
                this.columnBill_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackRow NewView_S_ALLMessMessageFeedbackRow() {
                return ((View_S_ALLMessMessageFeedbackRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_ALLMessMessageFeedbackRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_ALLMessMessageFeedbackRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_ALLMessMessageFeedbackRowChanged != null)) {
                    this.View_S_ALLMessMessageFeedbackRowChanged(this, new View_S_ALLMessMessageFeedbackRowChangeEvent(((View_S_ALLMessMessageFeedbackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_ALLMessMessageFeedbackRowChanging != null)) {
                    this.View_S_ALLMessMessageFeedbackRowChanging(this, new View_S_ALLMessMessageFeedbackRowChangeEvent(((View_S_ALLMessMessageFeedbackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_ALLMessMessageFeedbackRowDeleted != null)) {
                    this.View_S_ALLMessMessageFeedbackRowDeleted(this, new View_S_ALLMessMessageFeedbackRowChangeEvent(((View_S_ALLMessMessageFeedbackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_ALLMessMessageFeedbackRowDeleting != null)) {
                    this.View_S_ALLMessMessageFeedbackRowDeleting(this, new View_S_ALLMessMessageFeedbackRowChangeEvent(((View_S_ALLMessMessageFeedbackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_ALLMessMessageFeedbackRow(View_S_ALLMessMessageFeedbackRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_ALLMessMessageFeedbackDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketingPlanBillDataTable : global::System.Data.TypedTableBase<View_S_MarketingPlanBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据年月;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column第一个月计划总数;
            
            private global::System.Data.DataColumn column第二个月计划总数;
            
            private global::System.Data.DataColumn column第三个月计划总数;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column审核人;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column批准人;
            
            private global::System.Data.DataColumn column批准日期;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column单据类型;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillDataTable() {
                this.TableName = "View_S_MarketingPlanBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPlanBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketingPlanBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据年月Column {
                get {
                    return this.column单据年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第一个月计划总数Column {
                get {
                    return this.column第一个月计划总数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第二个月计划总数Column {
                get {
                    return this.column第二个月计划总数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第三个月计划总数Column {
                get {
                    return this.column第三个月计划总数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人Column {
                get {
                    return this.column审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准人Column {
                get {
                    return this.column批准人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批准日期Column {
                get {
                    return this.column批准日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据类型Column {
                get {
                    return this.column单据类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillRow this[int index] {
                get {
                    return ((View_S_MarketingPlanBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketingPlanBillRowChangeEventHandler View_S_MarketingPlanBillRowChanging;
            
            public event View_S_MarketingPlanBillRowChangeEventHandler View_S_MarketingPlanBillRowChanged;
            
            public event View_S_MarketingPlanBillRowChangeEventHandler View_S_MarketingPlanBillRowDeleting;
            
            public event View_S_MarketingPlanBillRowChangeEventHandler View_S_MarketingPlanBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketingPlanBillRow(View_S_MarketingPlanBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillRow AddView_S_MarketingPlanBillRow(string 单据号, string 单据年月, string 单据状态, decimal 第一个月计划总数, decimal 第二个月计划总数, decimal 第三个月计划总数, string 编制人, System.DateTime 编制日期, string 审核人, System.DateTime 审核日期, string 批准人, System.DateTime 批准日期, string 备注, string 单据类型) {
                View_S_MarketingPlanBillRow rowView_S_MarketingPlanBillRow = ((View_S_MarketingPlanBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据年月,
                        单据状态,
                        第一个月计划总数,
                        第二个月计划总数,
                        第三个月计划总数,
                        编制人,
                        编制日期,
                        审核人,
                        审核日期,
                        批准人,
                        批准日期,
                        备注,
                        单据类型};
                rowView_S_MarketingPlanBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketingPlanBillRow);
                return rowView_S_MarketingPlanBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketingPlanBillDataTable cln = ((View_S_MarketingPlanBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketingPlanBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据年月 = base.Columns["单据年月"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column第一个月计划总数 = base.Columns["第一个月计划总数"];
                this.column第二个月计划总数 = base.Columns["第二个月计划总数"];
                this.column第三个月计划总数 = base.Columns["第三个月计划总数"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column审核人 = base.Columns["审核人"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column批准人 = base.Columns["批准人"];
                this.column批准日期 = base.Columns["批准日期"];
                this.column备注 = base.Columns["备注"];
                this.column单据类型 = base.Columns["单据类型"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据年月 = new global::System.Data.DataColumn("单据年月", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据年月);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column第一个月计划总数 = new global::System.Data.DataColumn("第一个月计划总数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第一个月计划总数);
                this.column第二个月计划总数 = new global::System.Data.DataColumn("第二个月计划总数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第二个月计划总数);
                this.column第三个月计划总数 = new global::System.Data.DataColumn("第三个月计划总数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第三个月计划总数);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column审核人 = new global::System.Data.DataColumn("审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column批准人 = new global::System.Data.DataColumn("批准人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准人);
                this.column批准日期 = new global::System.Data.DataColumn("批准日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批准日期);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column单据类型 = new global::System.Data.DataColumn("单据类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据类型);
                this.column单据号.MaxLength = 50;
                this.column单据年月.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column编制人.MaxLength = 50;
                this.column审核人.MaxLength = 50;
                this.column批准人.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column单据类型.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillRow NewView_S_MarketingPlanBillRow() {
                return ((View_S_MarketingPlanBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketingPlanBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketingPlanBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketingPlanBillRowChanged != null)) {
                    this.View_S_MarketingPlanBillRowChanged(this, new View_S_MarketingPlanBillRowChangeEvent(((View_S_MarketingPlanBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketingPlanBillRowChanging != null)) {
                    this.View_S_MarketingPlanBillRowChanging(this, new View_S_MarketingPlanBillRowChangeEvent(((View_S_MarketingPlanBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketingPlanBillRowDeleted != null)) {
                    this.View_S_MarketingPlanBillRowDeleted(this, new View_S_MarketingPlanBillRowChangeEvent(((View_S_MarketingPlanBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketingPlanBillRowDeleting != null)) {
                    this.View_S_MarketingPlanBillRowDeleting(this, new View_S_MarketingPlanBillRowChangeEvent(((View_S_MarketingPlanBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketingPlanBillRow(View_S_MarketingPlanBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketingPlanBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketingPlanListDataTable : global::System.Data.TypedTableBase<View_S_MarketingPlanListRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column第一个月计划数;
            
            private global::System.Data.DataColumn column第二个月计划数;
            
            private global::System.Data.DataColumn column第三个月计划数;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column序号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListDataTable() {
                this.TableName = "View_S_MarketingPlanList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPlanListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketingPlanListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第一个月计划数Column {
                get {
                    return this.column第一个月计划数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第二个月计划数Column {
                get {
                    return this.column第二个月计划数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 第三个月计划数Column {
                get {
                    return this.column第三个月计划数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListRow this[int index] {
                get {
                    return ((View_S_MarketingPlanListRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketingPlanListRowChangeEventHandler View_S_MarketingPlanListRowChanging;
            
            public event View_S_MarketingPlanListRowChangeEventHandler View_S_MarketingPlanListRowChanged;
            
            public event View_S_MarketingPlanListRowChangeEventHandler View_S_MarketingPlanListRowDeleting;
            
            public event View_S_MarketingPlanListRowChangeEventHandler View_S_MarketingPlanListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketingPlanListRow(View_S_MarketingPlanListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListRow AddView_S_MarketingPlanListRow(string 图号型号, string 物品名称, string 规格, decimal 第一个月计划数, decimal 第二个月计划数, decimal 第三个月计划数, string 单位, string 备注, int 物品ID, string 单据号, long 序号) {
                View_S_MarketingPlanListRow rowView_S_MarketingPlanListRow = ((View_S_MarketingPlanListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        第一个月计划数,
                        第二个月计划数,
                        第三个月计划数,
                        单位,
                        备注,
                        物品ID,
                        单据号,
                        序号};
                rowView_S_MarketingPlanListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketingPlanListRow);
                return rowView_S_MarketingPlanListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketingPlanListDataTable cln = ((View_S_MarketingPlanListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketingPlanListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column第一个月计划数 = base.Columns["第一个月计划数"];
                this.column第二个月计划数 = base.Columns["第二个月计划数"];
                this.column第三个月计划数 = base.Columns["第三个月计划数"];
                this.column单位 = base.Columns["单位"];
                this.column备注 = base.Columns["备注"];
                this.column物品ID = base.Columns["物品ID"];
                this.column单据号 = base.Columns["单据号"];
                this.column序号 = base.Columns["序号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column第一个月计划数 = new global::System.Data.DataColumn("第一个月计划数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第一个月计划数);
                this.column第二个月计划数 = new global::System.Data.DataColumn("第二个月计划数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第二个月计划数);
                this.column第三个月计划数 = new global::System.Data.DataColumn("第三个月计划数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column第三个月计划数);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 6;
                this.column备注.MaxLength = 2147483647;
                this.column单据号.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListRow NewView_S_MarketingPlanListRow() {
                return ((View_S_MarketingPlanListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketingPlanListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketingPlanListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketingPlanListRowChanged != null)) {
                    this.View_S_MarketingPlanListRowChanged(this, new View_S_MarketingPlanListRowChangeEvent(((View_S_MarketingPlanListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketingPlanListRowChanging != null)) {
                    this.View_S_MarketingPlanListRowChanging(this, new View_S_MarketingPlanListRowChangeEvent(((View_S_MarketingPlanListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketingPlanListRowDeleted != null)) {
                    this.View_S_MarketingPlanListRowDeleted(this, new View_S_MarketingPlanListRowChangeEvent(((View_S_MarketingPlanListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketingPlanListRowDeleting != null)) {
                    this.View_S_MarketingPlanListRowDeleting(this, new View_S_MarketingPlanListRowChangeEvent(((View_S_MarketingPlanListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketingPlanListRow(View_S_MarketingPlanListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketingPlanListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_P_DeliveryInspectionDataTable : global::System.Data.TypedTableBase<View_P_DeliveryInspectionRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column产品型号;
            
            private global::System.Data.DataColumn column产品编号;
            
            private global::System.Data.DataColumn column结论;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column检验日期;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column关联单号;
            
            private global::System.Data.DataColumn column检测项目;
            
            private global::System.Data.DataColumn column不合格项目;
            
            private global::System.Data.DataColumn column不合格情况;
            
            private global::System.Data.DataColumn column最终判定;
            
            private global::System.Data.DataColumn column判定人;
            
            private global::System.Data.DataColumn column判定日期;
            
            private global::System.Data.DataColumn column不合格项目ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionDataTable() {
                this.TableName = "View_P_DeliveryInspection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_P_DeliveryInspectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_P_DeliveryInspectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品型号Column {
                get {
                    return this.column产品型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品编号Column {
                get {
                    return this.column产品编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 结论Column {
                get {
                    return this.column结论;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单号Column {
                get {
                    return this.column关联单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测项目Column {
                get {
                    return this.column检测项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格项目Column {
                get {
                    return this.column不合格项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格情况Column {
                get {
                    return this.column不合格情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 最终判定Column {
                get {
                    return this.column最终判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定人Column {
                get {
                    return this.column判定人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定日期Column {
                get {
                    return this.column判定日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格项目IDColumn {
                get {
                    return this.column不合格项目ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionRow this[int index] {
                get {
                    return ((View_P_DeliveryInspectionRow)(this.Rows[index]));
                }
            }
            
            public event View_P_DeliveryInspectionRowChangeEventHandler View_P_DeliveryInspectionRowChanging;
            
            public event View_P_DeliveryInspectionRowChangeEventHandler View_P_DeliveryInspectionRowChanged;
            
            public event View_P_DeliveryInspectionRowChangeEventHandler View_P_DeliveryInspectionRowDeleting;
            
            public event View_P_DeliveryInspectionRowChangeEventHandler View_P_DeliveryInspectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_P_DeliveryInspectionRow(View_P_DeliveryInspectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionRow AddView_P_DeliveryInspectionRow(
                        string 单据号, 
                        string 产品型号, 
                        string 产品编号, 
                        string 结论, 
                        string 备注, 
                        string 检验员, 
                        System.DateTime 检验日期, 
                        string 单据状态, 
                        string 关联单号, 
                        string 检测项目, 
                        string 不合格项目, 
                        string 不合格情况, 
                        string 最终判定, 
                        string 判定人, 
                        System.DateTime 判定日期, 
                        int 不合格项目ID) {
                View_P_DeliveryInspectionRow rowView_P_DeliveryInspectionRow = ((View_P_DeliveryInspectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        产品型号,
                        产品编号,
                        结论,
                        备注,
                        检验员,
                        检验日期,
                        单据状态,
                        关联单号,
                        检测项目,
                        不合格项目,
                        不合格情况,
                        最终判定,
                        判定人,
                        判定日期,
                        不合格项目ID};
                rowView_P_DeliveryInspectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_P_DeliveryInspectionRow);
                return rowView_P_DeliveryInspectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_P_DeliveryInspectionDataTable cln = ((View_P_DeliveryInspectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_P_DeliveryInspectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column产品型号 = base.Columns["产品型号"];
                this.column产品编号 = base.Columns["产品编号"];
                this.column结论 = base.Columns["结论"];
                this.column备注 = base.Columns["备注"];
                this.column检验员 = base.Columns["检验员"];
                this.column检验日期 = base.Columns["检验日期"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column关联单号 = base.Columns["关联单号"];
                this.column检测项目 = base.Columns["检测项目"];
                this.column不合格项目 = base.Columns["不合格项目"];
                this.column不合格情况 = base.Columns["不合格情况"];
                this.column最终判定 = base.Columns["最终判定"];
                this.column判定人 = base.Columns["判定人"];
                this.column判定日期 = base.Columns["判定日期"];
                this.column不合格项目ID = base.Columns["不合格项目ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column产品型号 = new global::System.Data.DataColumn("产品型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品型号);
                this.column产品编号 = new global::System.Data.DataColumn("产品编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品编号);
                this.column结论 = new global::System.Data.DataColumn("结论", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column结论);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column关联单号 = new global::System.Data.DataColumn("关联单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单号);
                this.column检测项目 = new global::System.Data.DataColumn("检测项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测项目);
                this.column不合格项目 = new global::System.Data.DataColumn("不合格项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格项目);
                this.column不合格情况 = new global::System.Data.DataColumn("不合格情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格情况);
                this.column最终判定 = new global::System.Data.DataColumn("最终判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column最终判定);
                this.column判定人 = new global::System.Data.DataColumn("判定人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定人);
                this.column判定日期 = new global::System.Data.DataColumn("判定日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定日期);
                this.column不合格项目ID = new global::System.Data.DataColumn("不合格项目ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格项目ID);
                this.column单据号.MaxLength = 50;
                this.column产品型号.MaxLength = 50;
                this.column产品编号.MaxLength = 50;
                this.column结论.ReadOnly = true;
                this.column结论.MaxLength = 6;
                this.column备注.MaxLength = 2147483647;
                this.column检验员.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column关联单号.MaxLength = 50;
                this.column检测项目.MaxLength = 50;
                this.column不合格项目.MaxLength = 2147483647;
                this.column不合格情况.MaxLength = 2147483647;
                this.column最终判定.MaxLength = 50;
                this.column判定人.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionRow NewView_P_DeliveryInspectionRow() {
                return ((View_P_DeliveryInspectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_P_DeliveryInspectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_P_DeliveryInspectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_P_DeliveryInspectionRowChanged != null)) {
                    this.View_P_DeliveryInspectionRowChanged(this, new View_P_DeliveryInspectionRowChangeEvent(((View_P_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_P_DeliveryInspectionRowChanging != null)) {
                    this.View_P_DeliveryInspectionRowChanging(this, new View_P_DeliveryInspectionRowChangeEvent(((View_P_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_P_DeliveryInspectionRowDeleted != null)) {
                    this.View_P_DeliveryInspectionRowDeleted(this, new View_P_DeliveryInspectionRowChangeEvent(((View_P_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_P_DeliveryInspectionRowDeleting != null)) {
                    this.View_P_DeliveryInspectionRowDeleting(this, new View_P_DeliveryInspectionRowChangeEvent(((View_P_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_P_DeliveryInspectionRow(View_P_DeliveryInspectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_P_DeliveryInspectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_P_DeliveryInspectionItemsDataTable : global::System.Data.TypedTableBase<View_P_DeliveryInspectionItemsRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column检测项目ID;
            
            private global::System.Data.DataColumn column检测项目;
            
            private global::System.Data.DataColumn column技术要求ID;
            
            private global::System.Data.DataColumn column技术要求;
            
            private global::System.Data.DataColumn column判定;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column不合格情况;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsDataTable() {
                this.TableName = "View_P_DeliveryInspectionItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_P_DeliveryInspectionItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_P_DeliveryInspectionItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测项目IDColumn {
                get {
                    return this.column检测项目ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测项目Column {
                get {
                    return this.column检测项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 技术要求IDColumn {
                get {
                    return this.column技术要求ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 技术要求Column {
                get {
                    return this.column技术要求;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定Column {
                get {
                    return this.column判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格情况Column {
                get {
                    return this.column不合格情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsRow this[int index] {
                get {
                    return ((View_P_DeliveryInspectionItemsRow)(this.Rows[index]));
                }
            }
            
            public event View_P_DeliveryInspectionItemsRowChangeEventHandler View_P_DeliveryInspectionItemsRowChanging;
            
            public event View_P_DeliveryInspectionItemsRowChangeEventHandler View_P_DeliveryInspectionItemsRowChanged;
            
            public event View_P_DeliveryInspectionItemsRowChangeEventHandler View_P_DeliveryInspectionItemsRowDeleting;
            
            public event View_P_DeliveryInspectionItemsRowChangeEventHandler View_P_DeliveryInspectionItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_P_DeliveryInspectionItemsRow(View_P_DeliveryInspectionItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsRow AddView_P_DeliveryInspectionItemsRow(int 序号, int 检测项目ID, string 检测项目, int 技术要求ID, string 技术要求, string 判定, string 单据号, string 不合格情况) {
                View_P_DeliveryInspectionItemsRow rowView_P_DeliveryInspectionItemsRow = ((View_P_DeliveryInspectionItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        检测项目ID,
                        检测项目,
                        技术要求ID,
                        技术要求,
                        判定,
                        单据号,
                        不合格情况};
                rowView_P_DeliveryInspectionItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_P_DeliveryInspectionItemsRow);
                return rowView_P_DeliveryInspectionItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_P_DeliveryInspectionItemsDataTable cln = ((View_P_DeliveryInspectionItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_P_DeliveryInspectionItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column检测项目ID = base.Columns["检测项目ID"];
                this.column检测项目 = base.Columns["检测项目"];
                this.column技术要求ID = base.Columns["技术要求ID"];
                this.column技术要求 = base.Columns["技术要求"];
                this.column判定 = base.Columns["判定"];
                this.column单据号 = base.Columns["单据号"];
                this.column不合格情况 = base.Columns["不合格情况"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column检测项目ID = new global::System.Data.DataColumn("检测项目ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测项目ID);
                this.column检测项目 = new global::System.Data.DataColumn("检测项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测项目);
                this.column技术要求ID = new global::System.Data.DataColumn("技术要求ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column技术要求ID);
                this.column技术要求 = new global::System.Data.DataColumn("技术要求", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column技术要求);
                this.column判定 = new global::System.Data.DataColumn("判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column不合格情况 = new global::System.Data.DataColumn("不合格情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格情况);
                this.column序号.AllowDBNull = false;
                this.column检测项目ID.AllowDBNull = false;
                this.column检测项目.MaxLength = 50;
                this.column技术要求.MaxLength = 2147483647;
                this.column判定.MaxLength = 2147483647;
                this.column单据号.MaxLength = 50;
                this.column不合格情况.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsRow NewView_P_DeliveryInspectionItemsRow() {
                return ((View_P_DeliveryInspectionItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_P_DeliveryInspectionItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_P_DeliveryInspectionItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_P_DeliveryInspectionItemsRowChanged != null)) {
                    this.View_P_DeliveryInspectionItemsRowChanged(this, new View_P_DeliveryInspectionItemsRowChangeEvent(((View_P_DeliveryInspectionItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_P_DeliveryInspectionItemsRowChanging != null)) {
                    this.View_P_DeliveryInspectionItemsRowChanging(this, new View_P_DeliveryInspectionItemsRowChangeEvent(((View_P_DeliveryInspectionItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_P_DeliveryInspectionItemsRowDeleted != null)) {
                    this.View_P_DeliveryInspectionItemsRowDeleted(this, new View_P_DeliveryInspectionItemsRowChangeEvent(((View_P_DeliveryInspectionItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_P_DeliveryInspectionItemsRowDeleting != null)) {
                    this.View_P_DeliveryInspectionItemsRowDeleting(this, new View_P_DeliveryInspectionItemsRowChangeEvent(((View_P_DeliveryInspectionItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_P_DeliveryInspectionItemsRow(View_P_DeliveryInspectionItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_P_DeliveryInspectionItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Report_DeliveryInspectionDataTable : global::System.Data.TypedTableBase<View_Report_DeliveryInspectionRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column产品型号;
            
            private global::System.Data.DataColumn column产品编号;
            
            private global::System.Data.DataColumn column结论;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column检验日期;
            
            private global::System.Data.DataColumn column检测项目ID;
            
            private global::System.Data.DataColumn column检测项目;
            
            private global::System.Data.DataColumn column技术要求;
            
            private global::System.Data.DataColumn column判定;
            
            private global::System.Data.DataColumn column不合格情况;
            
            private global::System.Data.DataColumn column判定人;
            
            private global::System.Data.DataColumn column最终判定;
            
            private global::System.Data.DataColumn column判定日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionDataTable() {
                this.TableName = "View_Report_DeliveryInspection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Report_DeliveryInspectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Report_DeliveryInspectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品型号Column {
                get {
                    return this.column产品型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 产品编号Column {
                get {
                    return this.column产品编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 结论Column {
                get {
                    return this.column结论;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测项目IDColumn {
                get {
                    return this.column检测项目ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测项目Column {
                get {
                    return this.column检测项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 技术要求Column {
                get {
                    return this.column技术要求;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定Column {
                get {
                    return this.column判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 不合格情况Column {
                get {
                    return this.column不合格情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定人Column {
                get {
                    return this.column判定人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 最终判定Column {
                get {
                    return this.column最终判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定日期Column {
                get {
                    return this.column判定日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionRow this[int index] {
                get {
                    return ((View_Report_DeliveryInspectionRow)(this.Rows[index]));
                }
            }
            
            public event View_Report_DeliveryInspectionRowChangeEventHandler View_Report_DeliveryInspectionRowChanging;
            
            public event View_Report_DeliveryInspectionRowChangeEventHandler View_Report_DeliveryInspectionRowChanged;
            
            public event View_Report_DeliveryInspectionRowChangeEventHandler View_Report_DeliveryInspectionRowDeleting;
            
            public event View_Report_DeliveryInspectionRowChangeEventHandler View_Report_DeliveryInspectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Report_DeliveryInspectionRow(View_Report_DeliveryInspectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionRow AddView_Report_DeliveryInspectionRow(
                        int 序号, 
                        string 单据号, 
                        string 产品型号, 
                        string 产品编号, 
                        string 结论, 
                        string 备注, 
                        string 检验员, 
                        System.DateTime 检验日期, 
                        int 检测项目ID, 
                        string 检测项目, 
                        string 技术要求, 
                        string 判定, 
                        string 不合格情况, 
                        string 判定人, 
                        string 最终判定, 
                        System.DateTime 判定日期) {
                View_Report_DeliveryInspectionRow rowView_Report_DeliveryInspectionRow = ((View_Report_DeliveryInspectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        单据号,
                        产品型号,
                        产品编号,
                        结论,
                        备注,
                        检验员,
                        检验日期,
                        检测项目ID,
                        检测项目,
                        技术要求,
                        判定,
                        不合格情况,
                        判定人,
                        最终判定,
                        判定日期};
                rowView_Report_DeliveryInspectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Report_DeliveryInspectionRow);
                return rowView_Report_DeliveryInspectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Report_DeliveryInspectionDataTable cln = ((View_Report_DeliveryInspectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Report_DeliveryInspectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column单据号 = base.Columns["单据号"];
                this.column产品型号 = base.Columns["产品型号"];
                this.column产品编号 = base.Columns["产品编号"];
                this.column结论 = base.Columns["结论"];
                this.column备注 = base.Columns["备注"];
                this.column检验员 = base.Columns["检验员"];
                this.column检验日期 = base.Columns["检验日期"];
                this.column检测项目ID = base.Columns["检测项目ID"];
                this.column检测项目 = base.Columns["检测项目"];
                this.column技术要求 = base.Columns["技术要求"];
                this.column判定 = base.Columns["判定"];
                this.column不合格情况 = base.Columns["不合格情况"];
                this.column判定人 = base.Columns["判定人"];
                this.column最终判定 = base.Columns["最终判定"];
                this.column判定日期 = base.Columns["判定日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column产品型号 = new global::System.Data.DataColumn("产品型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品型号);
                this.column产品编号 = new global::System.Data.DataColumn("产品编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column产品编号);
                this.column结论 = new global::System.Data.DataColumn("结论", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column结论);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column检测项目ID = new global::System.Data.DataColumn("检测项目ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测项目ID);
                this.column检测项目 = new global::System.Data.DataColumn("检测项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测项目);
                this.column技术要求 = new global::System.Data.DataColumn("技术要求", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column技术要求);
                this.column判定 = new global::System.Data.DataColumn("判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定);
                this.column不合格情况 = new global::System.Data.DataColumn("不合格情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column不合格情况);
                this.column判定人 = new global::System.Data.DataColumn("判定人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定人);
                this.column最终判定 = new global::System.Data.DataColumn("最终判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column最终判定);
                this.column判定日期 = new global::System.Data.DataColumn("判定日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定日期);
                this.column序号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column产品型号.MaxLength = 50;
                this.column产品编号.MaxLength = 50;
                this.column结论.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column检验员.MaxLength = 50;
                this.column检测项目ID.AllowDBNull = false;
                this.column检测项目.MaxLength = 50;
                this.column技术要求.MaxLength = 2147483647;
                this.column判定.MaxLength = 50;
                this.column不合格情况.MaxLength = 2147483647;
                this.column判定人.MaxLength = 50;
                this.column最终判定.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionRow NewView_Report_DeliveryInspectionRow() {
                return ((View_Report_DeliveryInspectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Report_DeliveryInspectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Report_DeliveryInspectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Report_DeliveryInspectionRowChanged != null)) {
                    this.View_Report_DeliveryInspectionRowChanged(this, new View_Report_DeliveryInspectionRowChangeEvent(((View_Report_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Report_DeliveryInspectionRowChanging != null)) {
                    this.View_Report_DeliveryInspectionRowChanging(this, new View_Report_DeliveryInspectionRowChangeEvent(((View_Report_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Report_DeliveryInspectionRowDeleted != null)) {
                    this.View_Report_DeliveryInspectionRowDeleted(this, new View_Report_DeliveryInspectionRowChangeEvent(((View_Report_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Report_DeliveryInspectionRowDeleting != null)) {
                    this.View_Report_DeliveryInspectionRowDeleting(this, new View_Report_DeliveryInspectionRowChangeEvent(((View_Report_DeliveryInspectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Report_DeliveryInspectionRow(View_Report_DeliveryInspectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Report_DeliveryInspectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_CheckOutInDepotBillDataTable : global::System.Data.TypedTableBase<View_S_CheckOutInDepotBillRow> {
            
            private global::System.Data.DataColumn column入库单号;
            
            private global::System.Data.DataColumn column订单号;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column版次号;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column报检人编码;
            
            private global::System.Data.DataColumn column报检签名;
            
            private global::System.Data.DataColumn column报检日期;
            
            private global::System.Data.DataColumn column检验报告编号;
            
            private global::System.Data.DataColumn column检验入库时间;
            
            private global::System.Data.DataColumn column报检数量;
            
            private global::System.Data.DataColumn column合格数量;
            
            private global::System.Data.DataColumn column让步数量;
            
            private global::System.Data.DataColumn column退货数量;
            
            private global::System.Data.DataColumn column报废数量;
            
            private global::System.Data.DataColumn column质量信息;
            
            private global::System.Data.DataColumn column入库数量;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column质量签名;
            
            private global::System.Data.DataColumn column仓库确认数量;
            
            private global::System.Data.DataColumn column仓库收货员;
            
            private global::System.Data.DataColumn column到货日期;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column大写金额;
            
            private global::System.Data.DataColumn column计划单价;
            
            private global::System.Data.DataColumn column计划金额;
            
            private global::System.Data.DataColumn column采购签名;
            
            private global::System.Data.DataColumn column仓库;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column回退理由;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column仓库确认到货时间;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column是否有发票;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column是否挑返;
            
            private global::System.Data.DataColumn column建议退货方式;
            
            private global::System.Data.DataColumn columnSQE退货建议提出人;
            
            private global::System.Data.DataColumn columnSQE退货建议提出日期;
            
            private global::System.Data.DataColumn column是否仅限于返修箱用;
            
            private global::System.Data.DataColumn column是否紧急报检;
            
            private global::System.Data.DataColumn column是否紧急放行;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column单位ID;
            
            private global::System.Data.DataColumn column检验日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillDataTable() {
                this.TableName = "View_S_CheckOutInDepotBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckOutInDepotBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_CheckOutInDepotBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单号Column {
                get {
                    return this.column入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 订单号Column {
                get {
                    return this.column订单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 版次号Column {
                get {
                    return this.column版次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检人编码Column {
                get {
                    return this.column报检人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检签名Column {
                get {
                    return this.column报检签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检日期Column {
                get {
                    return this.column报检日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验报告编号Column {
                get {
                    return this.column检验报告编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验入库时间Column {
                get {
                    return this.column检验入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检数量Column {
                get {
                    return this.column报检数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合格数量Column {
                get {
                    return this.column合格数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 让步数量Column {
                get {
                    return this.column让步数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货数量Column {
                get {
                    return this.column退货数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废数量Column {
                get {
                    return this.column报废数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量信息Column {
                get {
                    return this.column质量信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库数量Column {
                get {
                    return this.column入库数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量签名Column {
                get {
                    return this.column质量签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库确认数量Column {
                get {
                    return this.column仓库确认数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库收货员Column {
                get {
                    return this.column仓库收货员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到货日期Column {
                get {
                    return this.column到货日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大写金额Column {
                get {
                    return this.column大写金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计划单价Column {
                get {
                    return this.column计划单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计划金额Column {
                get {
                    return this.column计划金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购签名Column {
                get {
                    return this.column采购签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库Column {
                get {
                    return this.column仓库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 回退理由Column {
                get {
                    return this.column回退理由;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库确认到货时间Column {
                get {
                    return this.column仓库确认到货时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否有发票Column {
                get {
                    return this.column是否有发票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否挑返Column {
                get {
                    return this.column是否挑返;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 建议退货方式Column {
                get {
                    return this.column建议退货方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE退货建议提出人Column {
                get {
                    return this.columnSQE退货建议提出人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQE退货建议提出日期Column {
                get {
                    return this.columnSQE退货建议提出日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否仅限于返修箱用Column {
                get {
                    return this.column是否仅限于返修箱用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急报检Column {
                get {
                    return this.column是否紧急报检;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急放行Column {
                get {
                    return this.column是否紧急放行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位IDColumn {
                get {
                    return this.column单位ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillRow this[int index] {
                get {
                    return ((View_S_CheckOutInDepotBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_CheckOutInDepotBillRowChangeEventHandler View_S_CheckOutInDepotBillRowChanging;
            
            public event View_S_CheckOutInDepotBillRowChangeEventHandler View_S_CheckOutInDepotBillRowChanged;
            
            public event View_S_CheckOutInDepotBillRowChangeEventHandler View_S_CheckOutInDepotBillRowDeleting;
            
            public event View_S_CheckOutInDepotBillRowChangeEventHandler View_S_CheckOutInDepotBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_CheckOutInDepotBillRow(View_S_CheckOutInDepotBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillRow AddView_S_CheckOutInDepotBillRow(
                        string 入库单号, 
                        string 订单号, 
                        string 供货单位, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 版次号, 
                        string 单位, 
                        string 批次号, 
                        string 供方批次号, 
                        string 报检人编码, 
                        string 报检签名, 
                        System.DateTime 报检日期, 
                        string 检验报告编号, 
                        System.DateTime 检验入库时间, 
                        int 报检数量, 
                        int 合格数量, 
                        int 让步数量, 
                        int 退货数量, 
                        int 报废数量, 
                        string 质量信息, 
                        int 入库数量, 
                        string 检验员, 
                        string 质量签名, 
                        int 仓库确认数量, 
                        string 仓库收货员, 
                        System.DateTime 到货日期, 
                        string 仓管签名, 
                        System.DateTime 入库时间, 
                        decimal 单价, 
                        decimal 金额, 
                        string 大写金额, 
                        decimal 计划单价, 
                        decimal 计划金额, 
                        string 采购签名, 
                        string 仓库, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 回退理由, 
                        string 单据状态, 
                        string 备注, 
                        System.DateTime 仓库确认到货时间, 
                        bool 是否已打印, 
                        string 物品类别, 
                        bool 是否有发票, 
                        string 库房代码, 
                        string 库房名称, 
                        bool 是否挑返, 
                        string 建议退货方式, 
                        string SQE退货建议提出人, 
                        System.DateTime SQE退货建议提出日期, 
                        bool 是否仅限于返修箱用, 
                        bool 是否紧急报检, 
                        bool 是否紧急放行, 
                        int 物品ID, 
                        int 单位ID, 
                        System.DateTime 检验日期) {
                View_S_CheckOutInDepotBillRow rowView_S_CheckOutInDepotBillRow = ((View_S_CheckOutInDepotBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        入库单号,
                        订单号,
                        供货单位,
                        图号型号,
                        物品名称,
                        规格,
                        版次号,
                        单位,
                        批次号,
                        供方批次号,
                        报检人编码,
                        报检签名,
                        报检日期,
                        检验报告编号,
                        检验入库时间,
                        报检数量,
                        合格数量,
                        让步数量,
                        退货数量,
                        报废数量,
                        质量信息,
                        入库数量,
                        检验员,
                        质量签名,
                        仓库确认数量,
                        仓库收货员,
                        到货日期,
                        仓管签名,
                        入库时间,
                        单价,
                        金额,
                        大写金额,
                        计划单价,
                        计划金额,
                        采购签名,
                        仓库,
                        货架,
                        列,
                        层,
                        回退理由,
                        单据状态,
                        备注,
                        仓库确认到货时间,
                        是否已打印,
                        物品类别,
                        是否有发票,
                        库房代码,
                        库房名称,
                        是否挑返,
                        建议退货方式,
                        SQE退货建议提出人,
                        SQE退货建议提出日期,
                        是否仅限于返修箱用,
                        是否紧急报检,
                        是否紧急放行,
                        物品ID,
                        单位ID,
                        检验日期};
                rowView_S_CheckOutInDepotBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_CheckOutInDepotBillRow);
                return rowView_S_CheckOutInDepotBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_CheckOutInDepotBillDataTable cln = ((View_S_CheckOutInDepotBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_CheckOutInDepotBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column入库单号 = base.Columns["入库单号"];
                this.column订单号 = base.Columns["订单号"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column版次号 = base.Columns["版次号"];
                this.column单位 = base.Columns["单位"];
                this.column批次号 = base.Columns["批次号"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column报检人编码 = base.Columns["报检人编码"];
                this.column报检签名 = base.Columns["报检签名"];
                this.column报检日期 = base.Columns["报检日期"];
                this.column检验报告编号 = base.Columns["检验报告编号"];
                this.column检验入库时间 = base.Columns["检验入库时间"];
                this.column报检数量 = base.Columns["报检数量"];
                this.column合格数量 = base.Columns["合格数量"];
                this.column让步数量 = base.Columns["让步数量"];
                this.column退货数量 = base.Columns["退货数量"];
                this.column报废数量 = base.Columns["报废数量"];
                this.column质量信息 = base.Columns["质量信息"];
                this.column入库数量 = base.Columns["入库数量"];
                this.column检验员 = base.Columns["检验员"];
                this.column质量签名 = base.Columns["质量签名"];
                this.column仓库确认数量 = base.Columns["仓库确认数量"];
                this.column仓库收货员 = base.Columns["仓库收货员"];
                this.column到货日期 = base.Columns["到货日期"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column单价 = base.Columns["单价"];
                this.column金额 = base.Columns["金额"];
                this.column大写金额 = base.Columns["大写金额"];
                this.column计划单价 = base.Columns["计划单价"];
                this.column计划金额 = base.Columns["计划金额"];
                this.column采购签名 = base.Columns["采购签名"];
                this.column仓库 = base.Columns["仓库"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column回退理由 = base.Columns["回退理由"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column备注 = base.Columns["备注"];
                this.column仓库确认到货时间 = base.Columns["仓库确认到货时间"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column是否有发票 = base.Columns["是否有发票"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column是否挑返 = base.Columns["是否挑返"];
                this.column建议退货方式 = base.Columns["建议退货方式"];
                this.columnSQE退货建议提出人 = base.Columns["SQE退货建议提出人"];
                this.columnSQE退货建议提出日期 = base.Columns["SQE退货建议提出日期"];
                this.column是否仅限于返修箱用 = base.Columns["是否仅限于返修箱用"];
                this.column是否紧急报检 = base.Columns["是否紧急报检"];
                this.column是否紧急放行 = base.Columns["是否紧急放行"];
                this.column物品ID = base.Columns["物品ID"];
                this.column单位ID = base.Columns["单位ID"];
                this.column检验日期 = base.Columns["检验日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column入库单号 = new global::System.Data.DataColumn("入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单号);
                this.column订单号 = new global::System.Data.DataColumn("订单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column订单号);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column版次号 = new global::System.Data.DataColumn("版次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column版次号);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column报检人编码 = new global::System.Data.DataColumn("报检人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检人编码);
                this.column报检签名 = new global::System.Data.DataColumn("报检签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检签名);
                this.column报检日期 = new global::System.Data.DataColumn("报检日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检日期);
                this.column检验报告编号 = new global::System.Data.DataColumn("检验报告编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验报告编号);
                this.column检验入库时间 = new global::System.Data.DataColumn("检验入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验入库时间);
                this.column报检数量 = new global::System.Data.DataColumn("报检数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检数量);
                this.column合格数量 = new global::System.Data.DataColumn("合格数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合格数量);
                this.column让步数量 = new global::System.Data.DataColumn("让步数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column让步数量);
                this.column退货数量 = new global::System.Data.DataColumn("退货数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货数量);
                this.column报废数量 = new global::System.Data.DataColumn("报废数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废数量);
                this.column质量信息 = new global::System.Data.DataColumn("质量信息", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量信息);
                this.column入库数量 = new global::System.Data.DataColumn("入库数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库数量);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column质量签名 = new global::System.Data.DataColumn("质量签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量签名);
                this.column仓库确认数量 = new global::System.Data.DataColumn("仓库确认数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库确认数量);
                this.column仓库收货员 = new global::System.Data.DataColumn("仓库收货员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库收货员);
                this.column到货日期 = new global::System.Data.DataColumn("到货日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到货日期);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column大写金额 = new global::System.Data.DataColumn("大写金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大写金额);
                this.column计划单价 = new global::System.Data.DataColumn("计划单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计划单价);
                this.column计划金额 = new global::System.Data.DataColumn("计划金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计划金额);
                this.column采购签名 = new global::System.Data.DataColumn("采购签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购签名);
                this.column仓库 = new global::System.Data.DataColumn("仓库", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column回退理由 = new global::System.Data.DataColumn("回退理由", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回退理由);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column仓库确认到货时间 = new global::System.Data.DataColumn("仓库确认到货时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库确认到货时间);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column是否有发票 = new global::System.Data.DataColumn("是否有发票", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有发票);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column是否挑返 = new global::System.Data.DataColumn("是否挑返", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否挑返);
                this.column建议退货方式 = new global::System.Data.DataColumn("建议退货方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建议退货方式);
                this.columnSQE退货建议提出人 = new global::System.Data.DataColumn("SQE退货建议提出人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE退货建议提出人);
                this.columnSQE退货建议提出日期 = new global::System.Data.DataColumn("SQE退货建议提出日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQE退货建议提出日期);
                this.column是否仅限于返修箱用 = new global::System.Data.DataColumn("是否仅限于返修箱用", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否仅限于返修箱用);
                this.column是否紧急报检 = new global::System.Data.DataColumn("是否紧急报检", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急报检);
                this.column是否紧急放行 = new global::System.Data.DataColumn("是否紧急放行", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急放行);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单位ID = new global::System.Data.DataColumn("单位ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位ID);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column入库单号.AllowDBNull = false;
                this.column入库单号.MaxLength = 50;
                this.column订单号.MaxLength = 50;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 15;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column版次号.AllowDBNull = false;
                this.column版次号.MaxLength = 50;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column批次号.MaxLength = 26;
                this.column供方批次号.MaxLength = 2147483647;
                this.column报检人编码.MaxLength = 50;
                this.column报检签名.MaxLength = 50;
                this.column报检日期.AllowDBNull = false;
                this.column检验报告编号.MaxLength = 2147483647;
                this.column报检数量.AllowDBNull = false;
                this.column合格数量.AllowDBNull = false;
                this.column让步数量.AllowDBNull = false;
                this.column退货数量.AllowDBNull = false;
                this.column报废数量.AllowDBNull = false;
                this.column质量信息.MaxLength = 2147483647;
                this.column入库数量.AllowDBNull = false;
                this.column检验员.MaxLength = 50;
                this.column质量签名.MaxLength = 50;
                this.column仓库收货员.MaxLength = 50;
                this.column到货日期.AllowDBNull = false;
                this.column仓管签名.MaxLength = 50;
                this.column单价.AllowDBNull = false;
                this.column金额.ReadOnly = true;
                this.column大写金额.MaxLength = 50;
                this.column计划单价.AllowDBNull = false;
                this.column计划金额.ReadOnly = true;
                this.column采购签名.MaxLength = 50;
                this.column仓库.AllowDBNull = false;
                this.column仓库.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 10;
                this.column层.MaxLength = 10;
                this.column回退理由.MaxLength = 2147483647;
                this.column单据状态.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column物品类别.AllowDBNull = false;
                this.column物品类别.MaxLength = 50;
                this.column是否有发票.AllowDBNull = false;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column是否挑返.AllowDBNull = false;
                this.column建议退货方式.MaxLength = 50;
                this.columnSQE退货建议提出人.MaxLength = 50;
                this.column是否仅限于返修箱用.AllowDBNull = false;
                this.column是否紧急报检.AllowDBNull = false;
                this.column是否紧急放行.AllowDBNull = false;
                this.column物品ID.AllowDBNull = false;
                this.column单位ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillRow NewView_S_CheckOutInDepotBillRow() {
                return ((View_S_CheckOutInDepotBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_CheckOutInDepotBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_CheckOutInDepotBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_CheckOutInDepotBillRowChanged != null)) {
                    this.View_S_CheckOutInDepotBillRowChanged(this, new View_S_CheckOutInDepotBillRowChangeEvent(((View_S_CheckOutInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_CheckOutInDepotBillRowChanging != null)) {
                    this.View_S_CheckOutInDepotBillRowChanging(this, new View_S_CheckOutInDepotBillRowChangeEvent(((View_S_CheckOutInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_CheckOutInDepotBillRowDeleted != null)) {
                    this.View_S_CheckOutInDepotBillRowDeleted(this, new View_S_CheckOutInDepotBillRowChangeEvent(((View_S_CheckOutInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_CheckOutInDepotBillRowDeleting != null)) {
                    this.View_S_CheckOutInDepotBillRowDeleting(this, new View_S_CheckOutInDepotBillRowChangeEvent(((View_S_CheckOutInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_CheckOutInDepotBillRow(View_S_CheckOutInDepotBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_CheckOutInDepotBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_HomemadeRejectBillDataTable : global::System.Data.TypedTableBase<S_HomemadeRejectBillRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBill_ID;
            
            private global::System.Data.DataColumn columnBill_Time;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnFillInPersonnelCode;
            
            private global::System.Data.DataColumn columnFillInPersonnel;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnFinanceSignatory;
            
            private global::System.Data.DataColumn columnDepotManager;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnBillStatus;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnOutDepotDate;
            
            private global::System.Data.DataColumn columnInvoiceFlag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillDataTable() {
                this.TableName = "S_HomemadeRejectBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_HomemadeRejectBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_HomemadeRejectBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_TimeColumn {
                get {
                    return this.columnBill_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FillInPersonnelCodeColumn {
                get {
                    return this.columnFillInPersonnelCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FillInPersonnelColumn {
                get {
                    return this.columnFillInPersonnel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinanceSignatoryColumn {
                get {
                    return this.columnFinanceSignatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepotManagerColumn {
                get {
                    return this.columnDepotManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillStatusColumn {
                get {
                    return this.columnBillStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutDepotDateColumn {
                get {
                    return this.columnOutDepotDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceFlagColumn {
                get {
                    return this.columnInvoiceFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRow this[int index] {
                get {
                    return ((S_HomemadeRejectBillRow)(this.Rows[index]));
                }
            }
            
            public event S_HomemadeRejectBillRowChangeEventHandler S_HomemadeRejectBillRowChanging;
            
            public event S_HomemadeRejectBillRowChangeEventHandler S_HomemadeRejectBillRowChanged;
            
            public event S_HomemadeRejectBillRowChangeEventHandler S_HomemadeRejectBillRowDeleting;
            
            public event S_HomemadeRejectBillRowChangeEventHandler S_HomemadeRejectBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_HomemadeRejectBillRow(S_HomemadeRejectBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRow AddS_HomemadeRejectBillRow(string Bill_ID, System.DateTime Bill_Time, string Provider, string Reason, string FillInPersonnelCode, string FillInPersonnel, string Department, string FinanceSignatory, string DepotManager, string Remark, string BillStatus, string StorageID, System.DateTime OutDepotDate, int InvoiceFlag) {
                S_HomemadeRejectBillRow rowS_HomemadeRejectBillRow = ((S_HomemadeRejectBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bill_ID,
                        Bill_Time,
                        Provider,
                        Reason,
                        FillInPersonnelCode,
                        FillInPersonnel,
                        Department,
                        FinanceSignatory,
                        DepotManager,
                        Remark,
                        BillStatus,
                        StorageID,
                        OutDepotDate,
                        InvoiceFlag};
                rowS_HomemadeRejectBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_HomemadeRejectBillRow);
                return rowS_HomemadeRejectBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRow FindByID(int ID) {
                return ((S_HomemadeRejectBillRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_HomemadeRejectBillDataTable cln = ((S_HomemadeRejectBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_HomemadeRejectBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBill_ID = base.Columns["Bill_ID"];
                this.columnBill_Time = base.Columns["Bill_Time"];
                this.columnProvider = base.Columns["Provider"];
                this.columnReason = base.Columns["Reason"];
                this.columnFillInPersonnelCode = base.Columns["FillInPersonnelCode"];
                this.columnFillInPersonnel = base.Columns["FillInPersonnel"];
                this.columnDepartment = base.Columns["Department"];
                this.columnFinanceSignatory = base.Columns["FinanceSignatory"];
                this.columnDepotManager = base.Columns["DepotManager"];
                this.columnRemark = base.Columns["Remark"];
                this.columnBillStatus = base.Columns["BillStatus"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnOutDepotDate = base.Columns["OutDepotDate"];
                this.columnInvoiceFlag = base.Columns["InvoiceFlag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBill_ID = new global::System.Data.DataColumn("Bill_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.columnBill_Time = new global::System.Data.DataColumn("Bill_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Time);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnFillInPersonnelCode = new global::System.Data.DataColumn("FillInPersonnelCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFillInPersonnelCode);
                this.columnFillInPersonnel = new global::System.Data.DataColumn("FillInPersonnel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFillInPersonnel);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnFinanceSignatory = new global::System.Data.DataColumn("FinanceSignatory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinanceSignatory);
                this.columnDepotManager = new global::System.Data.DataColumn("DepotManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepotManager);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnBillStatus = new global::System.Data.DataColumn("BillStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillStatus);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnOutDepotDate = new global::System.Data.DataColumn("OutDepotDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutDepotDate);
                this.columnInvoiceFlag = new global::System.Data.DataColumn("InvoiceFlag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFlag);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBill_ID.MaxLength = 50;
                this.columnProvider.MaxLength = 26;
                this.columnReason.MaxLength = 2147483647;
                this.columnFillInPersonnelCode.MaxLength = 50;
                this.columnFillInPersonnel.MaxLength = 50;
                this.columnDepartment.MaxLength = 50;
                this.columnFinanceSignatory.MaxLength = 50;
                this.columnDepotManager.MaxLength = 50;
                this.columnRemark.MaxLength = 2147483647;
                this.columnBillStatus.MaxLength = 50;
                this.columnStorageID.MaxLength = 50;
                this.columnInvoiceFlag.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRow NewS_HomemadeRejectBillRow() {
                return ((S_HomemadeRejectBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_HomemadeRejectBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_HomemadeRejectBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_HomemadeRejectBillRowChanged != null)) {
                    this.S_HomemadeRejectBillRowChanged(this, new S_HomemadeRejectBillRowChangeEvent(((S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_HomemadeRejectBillRowChanging != null)) {
                    this.S_HomemadeRejectBillRowChanging(this, new S_HomemadeRejectBillRowChangeEvent(((S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_HomemadeRejectBillRowDeleted != null)) {
                    this.S_HomemadeRejectBillRowDeleted(this, new S_HomemadeRejectBillRowChangeEvent(((S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_HomemadeRejectBillRowDeleting != null)) {
                    this.S_HomemadeRejectBillRowDeleting(this, new S_HomemadeRejectBillRowChangeEvent(((S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_HomemadeRejectBillRow(S_HomemadeRejectBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_HomemadeRejectBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_HomemadeRejectListDataTable : global::System.Data.TypedTableBase<S_HomemadeRejectListRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBill_ID;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnProviderBatchNo;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPlanUnitPrice;
            
            private global::System.Data.DataColumn columnPlanPrice;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnInvoiceUnitPrice;
            
            private global::System.Data.DataColumn columnInvoicePrice;
            
            private global::System.Data.DataColumn columnHavingInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListDataTable() {
                this.TableName = "S_HomemadeRejectList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_HomemadeRejectListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_HomemadeRejectListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderBatchNoColumn {
                get {
                    return this.columnProviderBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanUnitPriceColumn {
                get {
                    return this.columnPlanUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanPriceColumn {
                get {
                    return this.columnPlanPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceUnitPriceColumn {
                get {
                    return this.columnInvoiceUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoicePriceColumn {
                get {
                    return this.columnInvoicePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HavingInvoiceColumn {
                get {
                    return this.columnHavingInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRow this[int index] {
                get {
                    return ((S_HomemadeRejectListRow)(this.Rows[index]));
                }
            }
            
            public event S_HomemadeRejectListRowChangeEventHandler S_HomemadeRejectListRowChanging;
            
            public event S_HomemadeRejectListRowChangeEventHandler S_HomemadeRejectListRowChanged;
            
            public event S_HomemadeRejectListRowChangeEventHandler S_HomemadeRejectListRowDeleting;
            
            public event S_HomemadeRejectListRowChangeEventHandler S_HomemadeRejectListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_HomemadeRejectListRow(S_HomemadeRejectListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRow AddS_HomemadeRejectListRow(string Bill_ID, int GoodsID, string Provider, string ProviderBatchNo, string BatchNo, decimal Amount, decimal PlanUnitPrice, decimal PlanPrice, decimal UnitPrice, decimal Price, string TotalPrice, string Remark, decimal InvoiceUnitPrice, decimal InvoicePrice, bool HavingInvoice) {
                S_HomemadeRejectListRow rowS_HomemadeRejectListRow = ((S_HomemadeRejectListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bill_ID,
                        GoodsID,
                        Provider,
                        ProviderBatchNo,
                        BatchNo,
                        Amount,
                        PlanUnitPrice,
                        PlanPrice,
                        UnitPrice,
                        Price,
                        TotalPrice,
                        Remark,
                        InvoiceUnitPrice,
                        InvoicePrice,
                        HavingInvoice};
                rowS_HomemadeRejectListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_HomemadeRejectListRow);
                return rowS_HomemadeRejectListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRow FindByID(long ID) {
                return ((S_HomemadeRejectListRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_HomemadeRejectListDataTable cln = ((S_HomemadeRejectListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_HomemadeRejectListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBill_ID = base.Columns["Bill_ID"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnProvider = base.Columns["Provider"];
                this.columnProviderBatchNo = base.Columns["ProviderBatchNo"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPlanUnitPrice = base.Columns["PlanUnitPrice"];
                this.columnPlanPrice = base.Columns["PlanPrice"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnPrice = base.Columns["Price"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnRemark = base.Columns["Remark"];
                this.columnInvoiceUnitPrice = base.Columns["InvoiceUnitPrice"];
                this.columnInvoicePrice = base.Columns["InvoicePrice"];
                this.columnHavingInvoice = base.Columns["HavingInvoice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBill_ID = new global::System.Data.DataColumn("Bill_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnProviderBatchNo = new global::System.Data.DataColumn("ProviderBatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderBatchNo);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPlanUnitPrice = new global::System.Data.DataColumn("PlanUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanUnitPrice);
                this.columnPlanPrice = new global::System.Data.DataColumn("PlanPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanPrice);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnInvoiceUnitPrice = new global::System.Data.DataColumn("InvoiceUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceUnitPrice);
                this.columnInvoicePrice = new global::System.Data.DataColumn("InvoicePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrice);
                this.columnHavingInvoice = new global::System.Data.DataColumn("HavingInvoice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHavingInvoice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBill_ID.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnProvider.MaxLength = 15;
                this.columnProviderBatchNo.MaxLength = 50;
                this.columnBatchNo.MaxLength = 26;
                this.columnAmount.AllowDBNull = false;
                this.columnPlanUnitPrice.AllowDBNull = false;
                this.columnPlanPrice.AllowDBNull = false;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnTotalPrice.MaxLength = 50;
                this.columnRemark.MaxLength = 2147483647;
                this.columnInvoiceUnitPrice.AllowDBNull = false;
                this.columnInvoicePrice.AllowDBNull = false;
                this.columnHavingInvoice.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRow NewS_HomemadeRejectListRow() {
                return ((S_HomemadeRejectListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_HomemadeRejectListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_HomemadeRejectListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_HomemadeRejectListRowChanged != null)) {
                    this.S_HomemadeRejectListRowChanged(this, new S_HomemadeRejectListRowChangeEvent(((S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_HomemadeRejectListRowChanging != null)) {
                    this.S_HomemadeRejectListRowChanging(this, new S_HomemadeRejectListRowChangeEvent(((S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_HomemadeRejectListRowDeleted != null)) {
                    this.S_HomemadeRejectListRowDeleted(this, new S_HomemadeRejectListRowChangeEvent(((S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_HomemadeRejectListRowDeleting != null)) {
                    this.S_HomemadeRejectListRowDeleting(this, new S_HomemadeRejectListRowChangeEvent(((S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_HomemadeRejectListRow(S_HomemadeRejectListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_HomemadeRejectListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_HomemadeRejectBillDataTable : global::System.Data.TypedTableBase<View_S_HomemadeRejectBillRow> {
            
            private global::System.Data.DataColumn column退货单号;
            
            private global::System.Data.DataColumn column退货时间;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column退货原因;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请部门编码;
            
            private global::System.Data.DataColumn column申请部门名称;
            
            private global::System.Data.DataColumn column财务签名;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column出库日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillDataTable() {
                this.TableName = "View_S_HomemadeRejectBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadeRejectBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_HomemadeRejectBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货单号Column {
                get {
                    return this.column退货单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货时间Column {
                get {
                    return this.column退货时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货原因Column {
                get {
                    return this.column退货原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编码Column {
                get {
                    return this.column申请部门编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门名称Column {
                get {
                    return this.column申请部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务签名Column {
                get {
                    return this.column财务签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库日期Column {
                get {
                    return this.column出库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRow this[int index] {
                get {
                    return ((View_S_HomemadeRejectBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_HomemadeRejectBillRowChangeEventHandler View_S_HomemadeRejectBillRowChanging;
            
            public event View_S_HomemadeRejectBillRowChangeEventHandler View_S_HomemadeRejectBillRowChanged;
            
            public event View_S_HomemadeRejectBillRowChangeEventHandler View_S_HomemadeRejectBillRowDeleting;
            
            public event View_S_HomemadeRejectBillRowChangeEventHandler View_S_HomemadeRejectBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_HomemadeRejectBillRow(View_S_HomemadeRejectBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRow AddView_S_HomemadeRejectBillRow(
                        string 退货单号, 
                        System.DateTime 退货时间, 
                        string 供应商, 
                        string 退货原因, 
                        string 申请人编码, 
                        string 申请人, 
                        string 申请部门编码, 
                        string 申请部门名称, 
                        string 财务签名, 
                        string 仓管签名, 
                        string 备注, 
                        string 单据状态, 
                        bool 是否已打印, 
                        string 库房代码, 
                        string 库房名称, 
                        System.DateTime 出库日期) {
                View_S_HomemadeRejectBillRow rowView_S_HomemadeRejectBillRow = ((View_S_HomemadeRejectBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        退货单号,
                        退货时间,
                        供应商,
                        退货原因,
                        申请人编码,
                        申请人,
                        申请部门编码,
                        申请部门名称,
                        财务签名,
                        仓管签名,
                        备注,
                        单据状态,
                        是否已打印,
                        库房代码,
                        库房名称,
                        出库日期};
                rowView_S_HomemadeRejectBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_HomemadeRejectBillRow);
                return rowView_S_HomemadeRejectBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRow FindBy申请部门编码(string 申请部门编码) {
                return ((View_S_HomemadeRejectBillRow)(this.Rows.Find(new object[] {
                            申请部门编码})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_HomemadeRejectBillDataTable cln = ((View_S_HomemadeRejectBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_HomemadeRejectBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column退货单号 = base.Columns["退货单号"];
                this.column退货时间 = base.Columns["退货时间"];
                this.column供应商 = base.Columns["供应商"];
                this.column退货原因 = base.Columns["退货原因"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请部门编码 = base.Columns["申请部门编码"];
                this.column申请部门名称 = base.Columns["申请部门名称"];
                this.column财务签名 = base.Columns["财务签名"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column备注 = base.Columns["备注"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column出库日期 = base.Columns["出库日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column退货单号 = new global::System.Data.DataColumn("退货单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货单号);
                this.column退货时间 = new global::System.Data.DataColumn("退货时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货时间);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column退货原因 = new global::System.Data.DataColumn("退货原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货原因);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请部门编码 = new global::System.Data.DataColumn("申请部门编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编码);
                this.column申请部门名称 = new global::System.Data.DataColumn("申请部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门名称);
                this.column财务签名 = new global::System.Data.DataColumn("财务签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务签名);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column出库日期 = new global::System.Data.DataColumn("出库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库日期);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column申请部门编码}, true));
                this.column退货单号.MaxLength = 50;
                this.column供应商.MaxLength = 26;
                this.column退货原因.MaxLength = 2147483647;
                this.column申请人编码.MaxLength = 50;
                this.column申请人.MaxLength = 50;
                this.column申请部门编码.AllowDBNull = false;
                this.column申请部门编码.Unique = true;
                this.column申请部门编码.MaxLength = 50;
                this.column申请部门名称.MaxLength = 50;
                this.column财务签名.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column单据状态.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRow NewView_S_HomemadeRejectBillRow() {
                return ((View_S_HomemadeRejectBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_HomemadeRejectBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_HomemadeRejectBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_HomemadeRejectBillRowChanged != null)) {
                    this.View_S_HomemadeRejectBillRowChanged(this, new View_S_HomemadeRejectBillRowChangeEvent(((View_S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_HomemadeRejectBillRowChanging != null)) {
                    this.View_S_HomemadeRejectBillRowChanging(this, new View_S_HomemadeRejectBillRowChangeEvent(((View_S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_HomemadeRejectBillRowDeleted != null)) {
                    this.View_S_HomemadeRejectBillRowDeleted(this, new View_S_HomemadeRejectBillRowChangeEvent(((View_S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_HomemadeRejectBillRowDeleting != null)) {
                    this.View_S_HomemadeRejectBillRowDeleting(this, new View_S_HomemadeRejectBillRowChangeEvent(((View_S_HomemadeRejectBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_HomemadeRejectBillRow(View_S_HomemadeRejectBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_HomemadeRejectBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_HomemadeRejectListDataTable : global::System.Data.TypedTableBase<View_S_HomemadeRejectListRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column退货单号;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column供方批次;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column退货数;
            
            private global::System.Data.DataColumn column库存数;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column物品类别名称;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column总金额;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column库房编码;
            
            private global::System.Data.DataColumn column是否有发票;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListDataTable() {
                this.TableName = "View_S_HomemadeRejectList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadeRejectListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_HomemadeRejectListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货单号Column {
                get {
                    return this.column退货单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次Column {
                get {
                    return this.column供方批次;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货数Column {
                get {
                    return this.column退货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数Column {
                get {
                    return this.column库存数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别名称Column {
                get {
                    return this.column物品类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总金额Column {
                get {
                    return this.column总金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房编码Column {
                get {
                    return this.column库房编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否有发票Column {
                get {
                    return this.column是否有发票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRow this[int index] {
                get {
                    return ((View_S_HomemadeRejectListRow)(this.Rows[index]));
                }
            }
            
            public event View_S_HomemadeRejectListRowChangeEventHandler View_S_HomemadeRejectListRowChanging;
            
            public event View_S_HomemadeRejectListRowChangeEventHandler View_S_HomemadeRejectListRowChanged;
            
            public event View_S_HomemadeRejectListRowChangeEventHandler View_S_HomemadeRejectListRowDeleting;
            
            public event View_S_HomemadeRejectListRowChangeEventHandler View_S_HomemadeRejectListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_HomemadeRejectListRow(View_S_HomemadeRejectListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRow AddView_S_HomemadeRejectListRow(
                        long 序号, 
                        string 退货单号, 
                        int 物品ID, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供应商, 
                        string 供方批次, 
                        string 批次号, 
                        decimal 退货数, 
                        decimal 库存数, 
                        string 单位, 
                        string 物品类别, 
                        string 物品类别名称, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        decimal 单价, 
                        decimal 金额, 
                        string 总金额, 
                        string 备注, 
                        string 库房编码, 
                        bool 是否有发票) {
                View_S_HomemadeRejectListRow rowView_S_HomemadeRejectListRow = ((View_S_HomemadeRejectListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        退货单号,
                        物品ID,
                        图号型号,
                        物品名称,
                        规格,
                        供应商,
                        供方批次,
                        批次号,
                        退货数,
                        库存数,
                        单位,
                        物品类别,
                        物品类别名称,
                        货架,
                        列,
                        层,
                        单价,
                        金额,
                        总金额,
                        备注,
                        库房编码,
                        是否有发票};
                rowView_S_HomemadeRejectListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_HomemadeRejectListRow);
                return rowView_S_HomemadeRejectListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRow FindBy序号(long 序号) {
                return ((View_S_HomemadeRejectListRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_HomemadeRejectListDataTable cln = ((View_S_HomemadeRejectListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_HomemadeRejectListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column退货单号 = base.Columns["退货单号"];
                this.column物品ID = base.Columns["物品ID"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商 = base.Columns["供应商"];
                this.column供方批次 = base.Columns["供方批次"];
                this.column批次号 = base.Columns["批次号"];
                this.column退货数 = base.Columns["退货数"];
                this.column库存数 = base.Columns["库存数"];
                this.column单位 = base.Columns["单位"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column物品类别名称 = base.Columns["物品类别名称"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column单价 = base.Columns["单价"];
                this.column金额 = base.Columns["金额"];
                this.column总金额 = base.Columns["总金额"];
                this.column备注 = base.Columns["备注"];
                this.column库房编码 = base.Columns["库房编码"];
                this.column是否有发票 = base.Columns["是否有发票"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column退货单号 = new global::System.Data.DataColumn("退货单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货单号);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column供方批次 = new global::System.Data.DataColumn("供方批次", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column退货数 = new global::System.Data.DataColumn("退货数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货数);
                this.column库存数 = new global::System.Data.DataColumn("库存数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column物品类别名称 = new global::System.Data.DataColumn("物品类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别名称);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column总金额 = new global::System.Data.DataColumn("总金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总金额);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column库房编码 = new global::System.Data.DataColumn("库房编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房编码);
                this.column是否有发票 = new global::System.Data.DataColumn("是否有发票", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有发票);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column退货单号.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column供应商.MaxLength = 15;
                this.column供方批次.MaxLength = 50;
                this.column批次号.MaxLength = 26;
                this.column退货数.AllowDBNull = false;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column物品类别.AllowDBNull = false;
                this.column物品类别.MaxLength = 50;
                this.column物品类别名称.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column单价.AllowDBNull = false;
                this.column金额.AllowDBNull = false;
                this.column总金额.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column库房编码.MaxLength = 50;
                this.column是否有发票.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRow NewView_S_HomemadeRejectListRow() {
                return ((View_S_HomemadeRejectListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_HomemadeRejectListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_HomemadeRejectListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_HomemadeRejectListRowChanged != null)) {
                    this.View_S_HomemadeRejectListRowChanged(this, new View_S_HomemadeRejectListRowChangeEvent(((View_S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_HomemadeRejectListRowChanging != null)) {
                    this.View_S_HomemadeRejectListRowChanging(this, new View_S_HomemadeRejectListRowChangeEvent(((View_S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_HomemadeRejectListRowDeleted != null)) {
                    this.View_S_HomemadeRejectListRowDeleted(this, new View_S_HomemadeRejectListRowChangeEvent(((View_S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_HomemadeRejectListRowDeleting != null)) {
                    this.View_S_HomemadeRejectListRowDeleting(this, new View_S_HomemadeRejectListRowChangeEvent(((View_S_HomemadeRejectListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_HomemadeRejectListRow(View_S_HomemadeRejectListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_HomemadeRejectListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FrockInDepotBillDataTable : global::System.Data.TypedTableBase<View_S_FrockInDepotBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据提交时间;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column供应商编码;
            
            private global::System.Data.DataColumn column材料类别;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column机加人员编码;
            
            private global::System.Data.DataColumn column机加人员签名;
            
            private global::System.Data.DataColumn column申请人编码;
            
            private global::System.Data.DataColumn column申请人签名;
            
            private global::System.Data.DataColumn column设计人编码;
            
            private global::System.Data.DataColumn column设计人签名;
            
            private global::System.Data.DataColumn column仓管员编码;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column工装验证时间;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillDataTable() {
                this.TableName = "View_S_FrockInDepotBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockInDepotBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FrockInDepotBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据提交时间Column {
                get {
                    return this.column单据提交时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商编码Column {
                get {
                    return this.column供应商编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 机加人员编码Column {
                get {
                    return this.column机加人员编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 机加人员签名Column {
                get {
                    return this.column机加人员签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人编码Column {
                get {
                    return this.column申请人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人签名Column {
                get {
                    return this.column申请人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 设计人编码Column {
                get {
                    return this.column设计人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 设计人签名Column {
                get {
                    return this.column设计人签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管员编码Column {
                get {
                    return this.column仓管员编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装验证时间Column {
                get {
                    return this.column工装验证时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillRow this[int index] {
                get {
                    return ((View_S_FrockInDepotBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FrockInDepotBillRowChangeEventHandler View_S_FrockInDepotBillRowChanging;
            
            public event View_S_FrockInDepotBillRowChangeEventHandler View_S_FrockInDepotBillRowChanged;
            
            public event View_S_FrockInDepotBillRowChangeEventHandler View_S_FrockInDepotBillRowDeleting;
            
            public event View_S_FrockInDepotBillRowChangeEventHandler View_S_FrockInDepotBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FrockInDepotBillRow(View_S_FrockInDepotBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillRow AddView_S_FrockInDepotBillRow(
                        string 单据号, 
                        System.DateTime 单据提交时间, 
                        string 单据状态, 
                        string 供应商编码, 
                        string 材料类别, 
                        System.DateTime 入库时间, 
                        string 机加人员编码, 
                        string 机加人员签名, 
                        string 申请人编码, 
                        string 申请人签名, 
                        string 设计人编码, 
                        string 设计人签名, 
                        string 仓管员编码, 
                        string 仓管签名, 
                        System.DateTime 工装验证时间, 
                        string 库房代码, 
                        string 库房名称, 
                        string 备注) {
                View_S_FrockInDepotBillRow rowView_S_FrockInDepotBillRow = ((View_S_FrockInDepotBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据提交时间,
                        单据状态,
                        供应商编码,
                        材料类别,
                        入库时间,
                        机加人员编码,
                        机加人员签名,
                        申请人编码,
                        申请人签名,
                        设计人编码,
                        设计人签名,
                        仓管员编码,
                        仓管签名,
                        工装验证时间,
                        库房代码,
                        库房名称,
                        备注};
                rowView_S_FrockInDepotBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FrockInDepotBillRow);
                return rowView_S_FrockInDepotBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FrockInDepotBillDataTable cln = ((View_S_FrockInDepotBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FrockInDepotBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据提交时间 = base.Columns["单据提交时间"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column供应商编码 = base.Columns["供应商编码"];
                this.column材料类别 = base.Columns["材料类别"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column机加人员编码 = base.Columns["机加人员编码"];
                this.column机加人员签名 = base.Columns["机加人员签名"];
                this.column申请人编码 = base.Columns["申请人编码"];
                this.column申请人签名 = base.Columns["申请人签名"];
                this.column设计人编码 = base.Columns["设计人编码"];
                this.column设计人签名 = base.Columns["设计人签名"];
                this.column仓管员编码 = base.Columns["仓管员编码"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column工装验证时间 = base.Columns["工装验证时间"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据提交时间 = new global::System.Data.DataColumn("单据提交时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据提交时间);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column供应商编码 = new global::System.Data.DataColumn("供应商编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商编码);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column机加人员编码 = new global::System.Data.DataColumn("机加人员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column机加人员编码);
                this.column机加人员签名 = new global::System.Data.DataColumn("机加人员签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column机加人员签名);
                this.column申请人编码 = new global::System.Data.DataColumn("申请人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人编码);
                this.column申请人签名 = new global::System.Data.DataColumn("申请人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人签名);
                this.column设计人编码 = new global::System.Data.DataColumn("设计人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column设计人编码);
                this.column设计人签名 = new global::System.Data.DataColumn("设计人签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column设计人签名);
                this.column仓管员编码 = new global::System.Data.DataColumn("仓管员编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管员编码);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column工装验证时间 = new global::System.Data.DataColumn("工装验证时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装验证时间);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column单据号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column单据提交时间.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column供应商编码.MaxLength = 50;
                this.column材料类别.MaxLength = 50;
                this.column机加人员编码.MaxLength = 50;
                this.column机加人员签名.MaxLength = 50;
                this.column申请人编码.MaxLength = 50;
                this.column申请人签名.MaxLength = 50;
                this.column设计人编码.MaxLength = 50;
                this.column设计人签名.MaxLength = 50;
                this.column仓管员编码.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillRow NewView_S_FrockInDepotBillRow() {
                return ((View_S_FrockInDepotBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FrockInDepotBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FrockInDepotBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FrockInDepotBillRowChanged != null)) {
                    this.View_S_FrockInDepotBillRowChanged(this, new View_S_FrockInDepotBillRowChangeEvent(((View_S_FrockInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FrockInDepotBillRowChanging != null)) {
                    this.View_S_FrockInDepotBillRowChanging(this, new View_S_FrockInDepotBillRowChangeEvent(((View_S_FrockInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FrockInDepotBillRowDeleted != null)) {
                    this.View_S_FrockInDepotBillRowDeleted(this, new View_S_FrockInDepotBillRowChangeEvent(((View_S_FrockInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FrockInDepotBillRowDeleting != null)) {
                    this.View_S_FrockInDepotBillRowDeleting(this, new View_S_FrockInDepotBillRowChangeEvent(((View_S_FrockInDepotBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FrockInDepotBillRow(View_S_FrockInDepotBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FrockInDepotBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FrockInDepotGoodsBillDataTable : global::System.Data.TypedTableBase<View_S_FrockInDepotGoodsBillRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column物品类别;
            
            private global::System.Data.DataColumn column物品类别名称;
            
            private global::System.Data.DataColumn column库房代码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillDataTable() {
                this.TableName = "View_S_FrockInDepotGoodsBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockInDepotGoodsBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FrockInDepotGoodsBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别Column {
                get {
                    return this.column物品类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品类别名称Column {
                get {
                    return this.column物品类别名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRow this[int index] {
                get {
                    return ((View_S_FrockInDepotGoodsBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FrockInDepotGoodsBillRowChangeEventHandler View_S_FrockInDepotGoodsBillRowChanging;
            
            public event View_S_FrockInDepotGoodsBillRowChangeEventHandler View_S_FrockInDepotGoodsBillRowChanged;
            
            public event View_S_FrockInDepotGoodsBillRowChangeEventHandler View_S_FrockInDepotGoodsBillRowDeleting;
            
            public event View_S_FrockInDepotGoodsBillRowChangeEventHandler View_S_FrockInDepotGoodsBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FrockInDepotGoodsBillRow(View_S_FrockInDepotGoodsBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRow AddView_S_FrockInDepotGoodsBillRow(int 序号, string 单据号, string 图号型号, string 物品名称, string 规格, string 单位, decimal 数量, string 批次号, string 货架, string 列, string 层, string 备注, string 物品类别, string 物品类别名称, string 库房代码) {
                View_S_FrockInDepotGoodsBillRow rowView_S_FrockInDepotGoodsBillRow = ((View_S_FrockInDepotGoodsBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        单据号,
                        图号型号,
                        物品名称,
                        规格,
                        单位,
                        数量,
                        批次号,
                        货架,
                        列,
                        层,
                        备注,
                        物品类别,
                        物品类别名称,
                        库房代码};
                rowView_S_FrockInDepotGoodsBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FrockInDepotGoodsBillRow);
                return rowView_S_FrockInDepotGoodsBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRow FindBy序号(int 序号) {
                return ((View_S_FrockInDepotGoodsBillRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FrockInDepotGoodsBillDataTable cln = ((View_S_FrockInDepotGoodsBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FrockInDepotGoodsBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column单据号 = base.Columns["单据号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column单位 = base.Columns["单位"];
                this.column数量 = base.Columns["数量"];
                this.column批次号 = base.Columns["批次号"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column备注 = base.Columns["备注"];
                this.column物品类别 = base.Columns["物品类别"];
                this.column物品类别名称 = base.Columns["物品类别名称"];
                this.column库房代码 = base.Columns["库房代码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column物品类别 = new global::System.Data.DataColumn("物品类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别);
                this.column物品类别名称 = new global::System.Data.DataColumn("物品类别名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品类别名称);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column单据号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column批次号.MaxLength = 25;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 10;
                this.column层.MaxLength = 10;
                this.column备注.MaxLength = 2147483647;
                this.column物品类别.AllowDBNull = false;
                this.column物品类别.MaxLength = 50;
                this.column物品类别名称.MaxLength = 50;
                this.column库房代码.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRow NewView_S_FrockInDepotGoodsBillRow() {
                return ((View_S_FrockInDepotGoodsBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FrockInDepotGoodsBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FrockInDepotGoodsBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FrockInDepotGoodsBillRowChanged != null)) {
                    this.View_S_FrockInDepotGoodsBillRowChanged(this, new View_S_FrockInDepotGoodsBillRowChangeEvent(((View_S_FrockInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FrockInDepotGoodsBillRowChanging != null)) {
                    this.View_S_FrockInDepotGoodsBillRowChanging(this, new View_S_FrockInDepotGoodsBillRowChangeEvent(((View_S_FrockInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FrockInDepotGoodsBillRowDeleted != null)) {
                    this.View_S_FrockInDepotGoodsBillRowDeleted(this, new View_S_FrockInDepotGoodsBillRowChangeEvent(((View_S_FrockInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FrockInDepotGoodsBillRowDeleting != null)) {
                    this.View_S_FrockInDepotGoodsBillRowDeleting(this, new View_S_FrockInDepotGoodsBillRowChangeEvent(((View_S_FrockInDepotGoodsBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FrockInDepotGoodsBillRow(View_S_FrockInDepotGoodsBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FrockInDepotGoodsBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_FrockProvingReportDataTable : global::System.Data.TypedTableBase<S_FrockProvingReportRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnDJZT;
            
            private global::System.Data.DataColumn columnConnectBillNumber;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnFrockNumber;
            
            private global::System.Data.DataColumn columnBZRY;
            
            private global::System.Data.DataColumn columnBZRQ;
            
            private global::System.Data.DataColumn columnExamineVerdict;
            
            private global::System.Data.DataColumn columnJYRY;
            
            private global::System.Data.DataColumn columnJYRQ;
            
            private global::System.Data.DataColumn columnProvingVerdict;
            
            private global::System.Data.DataColumn columnYZRY;
            
            private global::System.Data.DataColumn columnYZRQ;
            
            private global::System.Data.DataColumn columnFinalVerdict;
            
            private global::System.Data.DataColumn columnIsInStock;
            
            private global::System.Data.DataColumn columnGYRY;
            
            private global::System.Data.DataColumn columnGYRQ;
            
            private global::System.Data.DataColumn columnBillType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportDataTable() {
                this.TableName = "S_FrockProvingReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_FrockProvingReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_FrockProvingReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJZTColumn {
                get {
                    return this.columnDJZT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConnectBillNumberColumn {
                get {
                    return this.columnConnectBillNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrockNumberColumn {
                get {
                    return this.columnFrockNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZRYColumn {
                get {
                    return this.columnBZRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZRQColumn {
                get {
                    return this.columnBZRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamineVerdictColumn {
                get {
                    return this.columnExamineVerdict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYRYColumn {
                get {
                    return this.columnJYRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYRQColumn {
                get {
                    return this.columnJYRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvingVerdictColumn {
                get {
                    return this.columnProvingVerdict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YZRYColumn {
                get {
                    return this.columnYZRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YZRQColumn {
                get {
                    return this.columnYZRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVerdictColumn {
                get {
                    return this.columnFinalVerdict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsInStockColumn {
                get {
                    return this.columnIsInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYRYColumn {
                get {
                    return this.columnGYRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYRQColumn {
                get {
                    return this.columnGYRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillTypeColumn {
                get {
                    return this.columnBillType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRow this[int index] {
                get {
                    return ((S_FrockProvingReportRow)(this.Rows[index]));
                }
            }
            
            public event S_FrockProvingReportRowChangeEventHandler S_FrockProvingReportRowChanging;
            
            public event S_FrockProvingReportRowChangeEventHandler S_FrockProvingReportRowChanged;
            
            public event S_FrockProvingReportRowChangeEventHandler S_FrockProvingReportRowDeleting;
            
            public event S_FrockProvingReportRowChangeEventHandler S_FrockProvingReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_FrockProvingReportRow(S_FrockProvingReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRow AddS_FrockProvingReportRow(
                        string DJH, 
                        string DJZT, 
                        string ConnectBillNumber, 
                        int GoodsID, 
                        string FrockNumber, 
                        string BZRY, 
                        System.DateTime BZRQ, 
                        string ExamineVerdict, 
                        string JYRY, 
                        System.DateTime JYRQ, 
                        string ProvingVerdict, 
                        string YZRY, 
                        System.DateTime YZRQ, 
                        string FinalVerdict, 
                        bool IsInStock, 
                        string GYRY, 
                        System.DateTime GYRQ, 
                        string BillType) {
                S_FrockProvingReportRow rowS_FrockProvingReportRow = ((S_FrockProvingReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DJH,
                        DJZT,
                        ConnectBillNumber,
                        GoodsID,
                        FrockNumber,
                        BZRY,
                        BZRQ,
                        ExamineVerdict,
                        JYRY,
                        JYRQ,
                        ProvingVerdict,
                        YZRY,
                        YZRQ,
                        FinalVerdict,
                        IsInStock,
                        GYRY,
                        GYRQ,
                        BillType};
                rowS_FrockProvingReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_FrockProvingReportRow);
                return rowS_FrockProvingReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRow FindByID(int ID) {
                return ((S_FrockProvingReportRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_FrockProvingReportDataTable cln = ((S_FrockProvingReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_FrockProvingReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDJH = base.Columns["DJH"];
                this.columnDJZT = base.Columns["DJZT"];
                this.columnConnectBillNumber = base.Columns["ConnectBillNumber"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnFrockNumber = base.Columns["FrockNumber"];
                this.columnBZRY = base.Columns["BZRY"];
                this.columnBZRQ = base.Columns["BZRQ"];
                this.columnExamineVerdict = base.Columns["ExamineVerdict"];
                this.columnJYRY = base.Columns["JYRY"];
                this.columnJYRQ = base.Columns["JYRQ"];
                this.columnProvingVerdict = base.Columns["ProvingVerdict"];
                this.columnYZRY = base.Columns["YZRY"];
                this.columnYZRQ = base.Columns["YZRQ"];
                this.columnFinalVerdict = base.Columns["FinalVerdict"];
                this.columnIsInStock = base.Columns["IsInStock"];
                this.columnGYRY = base.Columns["GYRY"];
                this.columnGYRQ = base.Columns["GYRQ"];
                this.columnBillType = base.Columns["BillType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnDJZT = new global::System.Data.DataColumn("DJZT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJZT);
                this.columnConnectBillNumber = new global::System.Data.DataColumn("ConnectBillNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectBillNumber);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnFrockNumber = new global::System.Data.DataColumn("FrockNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrockNumber);
                this.columnBZRY = new global::System.Data.DataColumn("BZRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZRY);
                this.columnBZRQ = new global::System.Data.DataColumn("BZRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZRQ);
                this.columnExamineVerdict = new global::System.Data.DataColumn("ExamineVerdict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamineVerdict);
                this.columnJYRY = new global::System.Data.DataColumn("JYRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYRY);
                this.columnJYRQ = new global::System.Data.DataColumn("JYRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYRQ);
                this.columnProvingVerdict = new global::System.Data.DataColumn("ProvingVerdict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvingVerdict);
                this.columnYZRY = new global::System.Data.DataColumn("YZRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYZRY);
                this.columnYZRQ = new global::System.Data.DataColumn("YZRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYZRQ);
                this.columnFinalVerdict = new global::System.Data.DataColumn("FinalVerdict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVerdict);
                this.columnIsInStock = new global::System.Data.DataColumn("IsInStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInStock);
                this.columnGYRY = new global::System.Data.DataColumn("GYRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYRY);
                this.columnGYRQ = new global::System.Data.DataColumn("GYRQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYRQ);
                this.columnBillType = new global::System.Data.DataColumn("BillType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDJH.AllowDBNull = false;
                this.columnDJH.MaxLength = 50;
                this.columnDJZT.AllowDBNull = false;
                this.columnDJZT.MaxLength = 50;
                this.columnConnectBillNumber.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnFrockNumber.AllowDBNull = false;
                this.columnFrockNumber.MaxLength = 50;
                this.columnBZRY.MaxLength = 50;
                this.columnExamineVerdict.MaxLength = 2147483647;
                this.columnJYRY.MaxLength = 50;
                this.columnProvingVerdict.MaxLength = 2147483647;
                this.columnYZRY.MaxLength = 50;
                this.columnFinalVerdict.MaxLength = 2147483647;
                this.columnGYRY.MaxLength = 50;
                this.columnBillType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRow NewS_FrockProvingReportRow() {
                return ((S_FrockProvingReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_FrockProvingReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_FrockProvingReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_FrockProvingReportRowChanged != null)) {
                    this.S_FrockProvingReportRowChanged(this, new S_FrockProvingReportRowChangeEvent(((S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_FrockProvingReportRowChanging != null)) {
                    this.S_FrockProvingReportRowChanging(this, new S_FrockProvingReportRowChangeEvent(((S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_FrockProvingReportRowDeleted != null)) {
                    this.S_FrockProvingReportRowDeleted(this, new S_FrockProvingReportRowChangeEvent(((S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_FrockProvingReportRowDeleting != null)) {
                    this.S_FrockProvingReportRowDeleting(this, new S_FrockProvingReportRowChangeEvent(((S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_FrockProvingReportRow(S_FrockProvingReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_FrockProvingReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S_FrockProvingReportAttachedDataTable : global::System.Data.TypedTableBase<S_FrockProvingReportAttachedRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnAttachedType;
            
            private global::System.Data.DataColumn columnAskContent;
            
            private global::System.Data.DataColumn columnAnswerContent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedDataTable() {
                this.TableName = "S_FrockProvingReportAttached";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_FrockProvingReportAttachedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S_FrockProvingReportAttachedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttachedTypeColumn {
                get {
                    return this.columnAttachedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AskContentColumn {
                get {
                    return this.columnAskContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerContentColumn {
                get {
                    return this.columnAnswerContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRow this[int index] {
                get {
                    return ((S_FrockProvingReportAttachedRow)(this.Rows[index]));
                }
            }
            
            public event S_FrockProvingReportAttachedRowChangeEventHandler S_FrockProvingReportAttachedRowChanging;
            
            public event S_FrockProvingReportAttachedRowChangeEventHandler S_FrockProvingReportAttachedRowChanged;
            
            public event S_FrockProvingReportAttachedRowChangeEventHandler S_FrockProvingReportAttachedRowDeleting;
            
            public event S_FrockProvingReportAttachedRowChangeEventHandler S_FrockProvingReportAttachedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS_FrockProvingReportAttachedRow(S_FrockProvingReportAttachedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRow AddS_FrockProvingReportAttachedRow(string DJH, string AttachedType, string AskContent, string AnswerContent) {
                S_FrockProvingReportAttachedRow rowS_FrockProvingReportAttachedRow = ((S_FrockProvingReportAttachedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DJH,
                        AttachedType,
                        AskContent,
                        AnswerContent};
                rowS_FrockProvingReportAttachedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS_FrockProvingReportAttachedRow);
                return rowS_FrockProvingReportAttachedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRow FindByID(int ID) {
                return ((S_FrockProvingReportAttachedRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S_FrockProvingReportAttachedDataTable cln = ((S_FrockProvingReportAttachedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S_FrockProvingReportAttachedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDJH = base.Columns["DJH"];
                this.columnAttachedType = base.Columns["AttachedType"];
                this.columnAskContent = base.Columns["AskContent"];
                this.columnAnswerContent = base.Columns["AnswerContent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnAttachedType = new global::System.Data.DataColumn("AttachedType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachedType);
                this.columnAskContent = new global::System.Data.DataColumn("AskContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAskContent);
                this.columnAnswerContent = new global::System.Data.DataColumn("AnswerContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerContent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDJH.AllowDBNull = false;
                this.columnDJH.MaxLength = 50;
                this.columnAttachedType.MaxLength = 50;
                this.columnAskContent.MaxLength = 2147483647;
                this.columnAnswerContent.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRow NewS_FrockProvingReportAttachedRow() {
                return ((S_FrockProvingReportAttachedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S_FrockProvingReportAttachedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S_FrockProvingReportAttachedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S_FrockProvingReportAttachedRowChanged != null)) {
                    this.S_FrockProvingReportAttachedRowChanged(this, new S_FrockProvingReportAttachedRowChangeEvent(((S_FrockProvingReportAttachedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S_FrockProvingReportAttachedRowChanging != null)) {
                    this.S_FrockProvingReportAttachedRowChanging(this, new S_FrockProvingReportAttachedRowChangeEvent(((S_FrockProvingReportAttachedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S_FrockProvingReportAttachedRowDeleted != null)) {
                    this.S_FrockProvingReportAttachedRowDeleted(this, new S_FrockProvingReportAttachedRowChangeEvent(((S_FrockProvingReportAttachedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S_FrockProvingReportAttachedRowDeleting != null)) {
                    this.S_FrockProvingReportAttachedRowDeleting(this, new S_FrockProvingReportAttachedRowChangeEvent(((S_FrockProvingReportAttachedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS_FrockProvingReportAttachedRow(S_FrockProvingReportAttachedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S_FrockProvingReportAttachedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_FrockProvingReportDataTable : global::System.Data.TypedTableBase<View_S_FrockProvingReportRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据类别;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column关联单据;
            
            private global::System.Data.DataColumn column工装图号;
            
            private global::System.Data.DataColumn column工装名称;
            
            private global::System.Data.DataColumn column工装编号;
            
            private global::System.Data.DataColumn column是否入库;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column检验人;
            
            private global::System.Data.DataColumn column检验日期;
            
            private global::System.Data.DataColumn column验证人;
            
            private global::System.Data.DataColumn column验证日期;
            
            private global::System.Data.DataColumn column判定人;
            
            private global::System.Data.DataColumn column判定日期;
            
            private global::System.Data.DataColumn column物品ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportDataTable() {
                this.TableName = "View_S_FrockProvingReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockProvingReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_FrockProvingReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据类别Column {
                get {
                    return this.column单据类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单据Column {
                get {
                    return this.column关联单据;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装图号Column {
                get {
                    return this.column工装图号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装名称Column {
                get {
                    return this.column工装名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工装编号Column {
                get {
                    return this.column工装编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否入库Column {
                get {
                    return this.column是否入库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验人Column {
                get {
                    return this.column检验人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验日期Column {
                get {
                    return this.column检验日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 验证人Column {
                get {
                    return this.column验证人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 验证日期Column {
                get {
                    return this.column验证日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定人Column {
                get {
                    return this.column判定人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 判定日期Column {
                get {
                    return this.column判定日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportRow this[int index] {
                get {
                    return ((View_S_FrockProvingReportRow)(this.Rows[index]));
                }
            }
            
            public event View_S_FrockProvingReportRowChangeEventHandler View_S_FrockProvingReportRowChanging;
            
            public event View_S_FrockProvingReportRowChangeEventHandler View_S_FrockProvingReportRowChanged;
            
            public event View_S_FrockProvingReportRowChangeEventHandler View_S_FrockProvingReportRowDeleting;
            
            public event View_S_FrockProvingReportRowChangeEventHandler View_S_FrockProvingReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_FrockProvingReportRow(View_S_FrockProvingReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportRow AddView_S_FrockProvingReportRow(
                        string 单据号, 
                        string 单据类别, 
                        string 单据状态, 
                        string 关联单据, 
                        string 工装图号, 
                        string 工装名称, 
                        string 工装编号, 
                        bool 是否入库, 
                        string 编制人, 
                        System.DateTime 编制日期, 
                        string 检验人, 
                        System.DateTime 检验日期, 
                        string 验证人, 
                        System.DateTime 验证日期, 
                        string 判定人, 
                        System.DateTime 判定日期, 
                        int 物品ID) {
                View_S_FrockProvingReportRow rowView_S_FrockProvingReportRow = ((View_S_FrockProvingReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据类别,
                        单据状态,
                        关联单据,
                        工装图号,
                        工装名称,
                        工装编号,
                        是否入库,
                        编制人,
                        编制日期,
                        检验人,
                        检验日期,
                        验证人,
                        验证日期,
                        判定人,
                        判定日期,
                        物品ID};
                rowView_S_FrockProvingReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_FrockProvingReportRow);
                return rowView_S_FrockProvingReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_FrockProvingReportDataTable cln = ((View_S_FrockProvingReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_FrockProvingReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据类别 = base.Columns["单据类别"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column关联单据 = base.Columns["关联单据"];
                this.column工装图号 = base.Columns["工装图号"];
                this.column工装名称 = base.Columns["工装名称"];
                this.column工装编号 = base.Columns["工装编号"];
                this.column是否入库 = base.Columns["是否入库"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column检验人 = base.Columns["检验人"];
                this.column检验日期 = base.Columns["检验日期"];
                this.column验证人 = base.Columns["验证人"];
                this.column验证日期 = base.Columns["验证日期"];
                this.column判定人 = base.Columns["判定人"];
                this.column判定日期 = base.Columns["判定日期"];
                this.column物品ID = base.Columns["物品ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据类别 = new global::System.Data.DataColumn("单据类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据类别);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column关联单据 = new global::System.Data.DataColumn("关联单据", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单据);
                this.column工装图号 = new global::System.Data.DataColumn("工装图号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装图号);
                this.column工装名称 = new global::System.Data.DataColumn("工装名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装名称);
                this.column工装编号 = new global::System.Data.DataColumn("工装编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工装编号);
                this.column是否入库 = new global::System.Data.DataColumn("是否入库", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否入库);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column检验人 = new global::System.Data.DataColumn("检验人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验人);
                this.column检验日期 = new global::System.Data.DataColumn("检验日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验日期);
                this.column验证人 = new global::System.Data.DataColumn("验证人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column验证人);
                this.column验证日期 = new global::System.Data.DataColumn("验证日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column验证日期);
                this.column判定人 = new global::System.Data.DataColumn("判定人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定人);
                this.column判定日期 = new global::System.Data.DataColumn("判定日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column判定日期);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单据号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column单据类别.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column关联单据.MaxLength = 50;
                this.column工装图号.AllowDBNull = false;
                this.column工装图号.MaxLength = 50;
                this.column工装名称.AllowDBNull = false;
                this.column工装名称.MaxLength = 50;
                this.column工装编号.AllowDBNull = false;
                this.column工装编号.MaxLength = 50;
                this.column编制人.MaxLength = 50;
                this.column检验人.MaxLength = 50;
                this.column验证人.MaxLength = 50;
                this.column判定人.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportRow NewView_S_FrockProvingReportRow() {
                return ((View_S_FrockProvingReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_FrockProvingReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_FrockProvingReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_FrockProvingReportRowChanged != null)) {
                    this.View_S_FrockProvingReportRowChanged(this, new View_S_FrockProvingReportRowChangeEvent(((View_S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_FrockProvingReportRowChanging != null)) {
                    this.View_S_FrockProvingReportRowChanging(this, new View_S_FrockProvingReportRowChangeEvent(((View_S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_FrockProvingReportRowDeleted != null)) {
                    this.View_S_FrockProvingReportRowDeleted(this, new View_S_FrockProvingReportRowChangeEvent(((View_S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_FrockProvingReportRowDeleting != null)) {
                    this.View_S_FrockProvingReportRowDeleting(this, new View_S_FrockProvingReportRowChangeEvent(((View_S_FrockProvingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_FrockProvingReportRow(View_S_FrockProvingReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_FrockProvingReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_ScrapGoodsDataTable : global::System.Data.TypedTableBase<View_S_ScrapGoodsRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column报废单号;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column责任供应商;
            
            private global::System.Data.DataColumn column报废原因;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn columnCVT编号;
            
            private global::System.Data.DataColumn column报废数量;
            
            private global::System.Data.DataColumn column责任部门;
            
            private global::System.Data.DataColumn column责任部门名称;
            
            private global::System.Data.DataColumn column责任类型;
            
            private global::System.Data.DataColumn column报废类别;
            
            private global::System.Data.DataColumn column报废类别描述;
            
            private global::System.Data.DataColumn column损失金额;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column工时;
            
            private global::System.Data.DataColumn column报废方式;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsDataTable() {
                this.TableName = "View_S_ScrapGoods";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ScrapGoodsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_ScrapGoodsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废单号Column {
                get {
                    return this.column报废单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 责任供应商Column {
                get {
                    return this.column责任供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废原因Column {
                get {
                    return this.column报废原因;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CVT编号Column {
                get {
                    return this.columnCVT编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废数量Column {
                get {
                    return this.column报废数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 责任部门Column {
                get {
                    return this.column责任部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 责任部门名称Column {
                get {
                    return this.column责任部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 责任类型Column {
                get {
                    return this.column责任类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废类别Column {
                get {
                    return this.column报废类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废类别描述Column {
                get {
                    return this.column报废类别描述;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 损失金额Column {
                get {
                    return this.column损失金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工时Column {
                get {
                    return this.column工时;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废方式Column {
                get {
                    return this.column报废方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsRow this[int index] {
                get {
                    return ((View_S_ScrapGoodsRow)(this.Rows[index]));
                }
            }
            
            public event View_S_ScrapGoodsRowChangeEventHandler View_S_ScrapGoodsRowChanging;
            
            public event View_S_ScrapGoodsRowChangeEventHandler View_S_ScrapGoodsRowChanged;
            
            public event View_S_ScrapGoodsRowChangeEventHandler View_S_ScrapGoodsRowDeleting;
            
            public event View_S_ScrapGoodsRowChangeEventHandler View_S_ScrapGoodsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_ScrapGoodsRow(View_S_ScrapGoodsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsRow AddView_S_ScrapGoodsRow(
                        long 序号, 
                        string 报废单号, 
                        int 物品ID, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 供应商, 
                        string 责任供应商, 
                        string 报废原因, 
                        string 批次号, 
                        string CVT编号, 
                        decimal 报废数量, 
                        string 责任部门, 
                        string 责任部门名称, 
                        string 责任类型, 
                        int 报废类别, 
                        string 报废类别描述, 
                        decimal 损失金额, 
                        decimal 单价, 
                        decimal 工时, 
                        string 报废方式, 
                        string 备注) {
                View_S_ScrapGoodsRow rowView_S_ScrapGoodsRow = ((View_S_ScrapGoodsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        报废单号,
                        物品ID,
                        图号型号,
                        物品名称,
                        规格,
                        供应商,
                        责任供应商,
                        报废原因,
                        批次号,
                        CVT编号,
                        报废数量,
                        责任部门,
                        责任部门名称,
                        责任类型,
                        报废类别,
                        报废类别描述,
                        损失金额,
                        单价,
                        工时,
                        报废方式,
                        备注};
                rowView_S_ScrapGoodsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_ScrapGoodsRow);
                return rowView_S_ScrapGoodsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_ScrapGoodsDataTable cln = ((View_S_ScrapGoodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_ScrapGoodsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column报废单号 = base.Columns["报废单号"];
                this.column物品ID = base.Columns["物品ID"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商 = base.Columns["供应商"];
                this.column责任供应商 = base.Columns["责任供应商"];
                this.column报废原因 = base.Columns["报废原因"];
                this.column批次号 = base.Columns["批次号"];
                this.columnCVT编号 = base.Columns["CVT编号"];
                this.column报废数量 = base.Columns["报废数量"];
                this.column责任部门 = base.Columns["责任部门"];
                this.column责任部门名称 = base.Columns["责任部门名称"];
                this.column责任类型 = base.Columns["责任类型"];
                this.column报废类别 = base.Columns["报废类别"];
                this.column报废类别描述 = base.Columns["报废类别描述"];
                this.column损失金额 = base.Columns["损失金额"];
                this.column单价 = base.Columns["单价"];
                this.column工时 = base.Columns["工时"];
                this.column报废方式 = base.Columns["报废方式"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column报废单号 = new global::System.Data.DataColumn("报废单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废单号);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column责任供应商 = new global::System.Data.DataColumn("责任供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column责任供应商);
                this.column报废原因 = new global::System.Data.DataColumn("报废原因", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废原因);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.columnCVT编号 = new global::System.Data.DataColumn("CVT编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCVT编号);
                this.column报废数量 = new global::System.Data.DataColumn("报废数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废数量);
                this.column责任部门 = new global::System.Data.DataColumn("责任部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column责任部门);
                this.column责任部门名称 = new global::System.Data.DataColumn("责任部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column责任部门名称);
                this.column责任类型 = new global::System.Data.DataColumn("责任类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column责任类型);
                this.column报废类别 = new global::System.Data.DataColumn("报废类别", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废类别);
                this.column报废类别描述 = new global::System.Data.DataColumn("报废类别描述", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废类别描述);
                this.column损失金额 = new global::System.Data.DataColumn("损失金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column损失金额);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column工时 = new global::System.Data.DataColumn("工时", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工时);
                this.column报废方式 = new global::System.Data.DataColumn("报废方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废方式);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column序号.AllowDBNull = false;
                this.column报废单号.AllowDBNull = false;
                this.column报废单号.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 15;
                this.column责任供应商.MaxLength = 15;
                this.column报废原因.MaxLength = 2147483647;
                this.column批次号.MaxLength = 26;
                this.columnCVT编号.MaxLength = 2147483647;
                this.column报废数量.AllowDBNull = false;
                this.column责任部门.MaxLength = 50;
                this.column责任部门名称.AllowDBNull = false;
                this.column责任部门名称.MaxLength = 50;
                this.column责任类型.MaxLength = 50;
                this.column报废类别.AllowDBNull = false;
                this.column报废类别描述.MaxLength = 16;
                this.column工时.AllowDBNull = false;
                this.column报废方式.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsRow NewView_S_ScrapGoodsRow() {
                return ((View_S_ScrapGoodsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_ScrapGoodsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_ScrapGoodsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_ScrapGoodsRowChanged != null)) {
                    this.View_S_ScrapGoodsRowChanged(this, new View_S_ScrapGoodsRowChangeEvent(((View_S_ScrapGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_ScrapGoodsRowChanging != null)) {
                    this.View_S_ScrapGoodsRowChanging(this, new View_S_ScrapGoodsRowChangeEvent(((View_S_ScrapGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_ScrapGoodsRowDeleted != null)) {
                    this.View_S_ScrapGoodsRowDeleted(this, new View_S_ScrapGoodsRowChangeEvent(((View_S_ScrapGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_ScrapGoodsRowDeleting != null)) {
                    this.View_S_ScrapGoodsRowDeleting(this, new View_S_ScrapGoodsRowChangeEvent(((View_S_ScrapGoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_ScrapGoodsRow(View_S_ScrapGoodsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_ScrapGoodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Out_ManeuverBillDataTable : global::System.Data.TypedTableBase<View_Out_ManeuverBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column关联单据号;
            
            private global::System.Data.DataColumn column物流名称;
            
            private global::System.Data.DataColumn column物流单号;
            
            private global::System.Data.DataColumn column出库库房;
            
            private global::System.Data.DataColumn column入库库房;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请日期;
            
            private global::System.Data.DataColumn column审核人;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column出库人;
            
            private global::System.Data.DataColumn column出库日期;
            
            private global::System.Data.DataColumn column发货人;
            
            private global::System.Data.DataColumn column发货日期;
            
            private global::System.Data.DataColumn column收货人;
            
            private global::System.Data.DataColumn column收货日期;
            
            private global::System.Data.DataColumn column入库人;
            
            private global::System.Data.DataColumn column入库日期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillDataTable() {
                this.TableName = "View_Out_ManeuverBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Out_ManeuverBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Out_ManeuverBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联单据号Column {
                get {
                    return this.column关联单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物流名称Column {
                get {
                    return this.column物流名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物流单号Column {
                get {
                    return this.column物流单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库库房Column {
                get {
                    return this.column出库库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库库房Column {
                get {
                    return this.column入库库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请日期Column {
                get {
                    return this.column申请日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人Column {
                get {
                    return this.column审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库人Column {
                get {
                    return this.column出库人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库日期Column {
                get {
                    return this.column出库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发货人Column {
                get {
                    return this.column发货人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发货日期Column {
                get {
                    return this.column发货日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收货人Column {
                get {
                    return this.column收货人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收货日期Column {
                get {
                    return this.column收货日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库人Column {
                get {
                    return this.column入库人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库日期Column {
                get {
                    return this.column入库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRow this[int index] {
                get {
                    return ((View_Out_ManeuverBillRow)(this.Rows[index]));
                }
            }
            
            public event View_Out_ManeuverBillRowChangeEventHandler View_Out_ManeuverBillRowChanging;
            
            public event View_Out_ManeuverBillRowChangeEventHandler View_Out_ManeuverBillRowChanged;
            
            public event View_Out_ManeuverBillRowChangeEventHandler View_Out_ManeuverBillRowDeleting;
            
            public event View_Out_ManeuverBillRowChangeEventHandler View_Out_ManeuverBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Out_ManeuverBillRow(View_Out_ManeuverBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRow AddView_Out_ManeuverBillRow(
                        string 单据号, 
                        string 单据状态, 
                        string 关联单据号, 
                        string 物流名称, 
                        string 物流单号, 
                        string 出库库房, 
                        string 入库库房, 
                        string 申请人, 
                        System.DateTime 申请日期, 
                        string 审核人, 
                        System.DateTime 审核日期, 
                        string 出库人, 
                        System.DateTime 出库日期, 
                        string 发货人, 
                        System.DateTime 发货日期, 
                        string 收货人, 
                        System.DateTime 收货日期, 
                        string 入库人, 
                        System.DateTime 入库日期) {
                View_Out_ManeuverBillRow rowView_Out_ManeuverBillRow = ((View_Out_ManeuverBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        关联单据号,
                        物流名称,
                        物流单号,
                        出库库房,
                        入库库房,
                        申请人,
                        申请日期,
                        审核人,
                        审核日期,
                        出库人,
                        出库日期,
                        发货人,
                        发货日期,
                        收货人,
                        收货日期,
                        入库人,
                        入库日期};
                rowView_Out_ManeuverBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Out_ManeuverBillRow);
                return rowView_Out_ManeuverBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRow FindBy单据号(string 单据号) {
                return ((View_Out_ManeuverBillRow)(this.Rows.Find(new object[] {
                            单据号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Out_ManeuverBillDataTable cln = ((View_Out_ManeuverBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Out_ManeuverBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column关联单据号 = base.Columns["关联单据号"];
                this.column物流名称 = base.Columns["物流名称"];
                this.column物流单号 = base.Columns["物流单号"];
                this.column出库库房 = base.Columns["出库库房"];
                this.column入库库房 = base.Columns["入库库房"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请日期 = base.Columns["申请日期"];
                this.column审核人 = base.Columns["审核人"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column出库人 = base.Columns["出库人"];
                this.column出库日期 = base.Columns["出库日期"];
                this.column发货人 = base.Columns["发货人"];
                this.column发货日期 = base.Columns["发货日期"];
                this.column收货人 = base.Columns["收货人"];
                this.column收货日期 = base.Columns["收货日期"];
                this.column入库人 = base.Columns["入库人"];
                this.column入库日期 = base.Columns["入库日期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column关联单据号 = new global::System.Data.DataColumn("关联单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联单据号);
                this.column物流名称 = new global::System.Data.DataColumn("物流名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物流名称);
                this.column物流单号 = new global::System.Data.DataColumn("物流单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物流单号);
                this.column出库库房 = new global::System.Data.DataColumn("出库库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库库房);
                this.column入库库房 = new global::System.Data.DataColumn("入库库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库库房);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请日期 = new global::System.Data.DataColumn("申请日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请日期);
                this.column审核人 = new global::System.Data.DataColumn("审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column出库人 = new global::System.Data.DataColumn("出库人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库人);
                this.column出库日期 = new global::System.Data.DataColumn("出库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库日期);
                this.column发货人 = new global::System.Data.DataColumn("发货人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发货人);
                this.column发货日期 = new global::System.Data.DataColumn("发货日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发货日期);
                this.column收货人 = new global::System.Data.DataColumn("收货人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收货人);
                this.column收货日期 = new global::System.Data.DataColumn("收货日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收货日期);
                this.column入库人 = new global::System.Data.DataColumn("入库人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库人);
                this.column入库日期 = new global::System.Data.DataColumn("入库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库日期);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column单据号}, true));
                this.column单据号.AllowDBNull = false;
                this.column单据号.Unique = true;
                this.column单据号.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column关联单据号.MaxLength = 50;
                this.column物流名称.MaxLength = 50;
                this.column物流单号.MaxLength = 50;
                this.column出库库房.ReadOnly = true;
                this.column出库库房.MaxLength = 4000;
                this.column入库库房.ReadOnly = true;
                this.column入库库房.MaxLength = 4000;
                this.column申请人.AllowDBNull = false;
                this.column申请人.MaxLength = 50;
                this.column审核人.MaxLength = 50;
                this.column出库人.MaxLength = 50;
                this.column发货人.MaxLength = 50;
                this.column收货人.MaxLength = 50;
                this.column入库人.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRow NewView_Out_ManeuverBillRow() {
                return ((View_Out_ManeuverBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Out_ManeuverBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Out_ManeuverBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Out_ManeuverBillRowChanged != null)) {
                    this.View_Out_ManeuverBillRowChanged(this, new View_Out_ManeuverBillRowChangeEvent(((View_Out_ManeuverBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Out_ManeuverBillRowChanging != null)) {
                    this.View_Out_ManeuverBillRowChanging(this, new View_Out_ManeuverBillRowChangeEvent(((View_Out_ManeuverBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Out_ManeuverBillRowDeleted != null)) {
                    this.View_Out_ManeuverBillRowDeleted(this, new View_Out_ManeuverBillRowChangeEvent(((View_Out_ManeuverBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Out_ManeuverBillRowDeleting != null)) {
                    this.View_Out_ManeuverBillRowDeleting(this, new View_Out_ManeuverBillRowChangeEvent(((View_Out_ManeuverBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Out_ManeuverBillRow(View_Out_ManeuverBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Out_ManeuverBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Out_ManeuverListDataTable : global::System.Data.TypedTableBase<View_Out_ManeuverListRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column账务库房;
            
            private global::System.Data.DataColumn column申请数量;
            
            private global::System.Data.DataColumn column发货数量;
            
            private global::System.Data.DataColumn column收货数量;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column账务库房ID;
            
            private global::System.Data.DataColumn columnBill_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListDataTable() {
                this.TableName = "View_Out_ManeuverList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Out_ManeuverListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Out_ManeuverListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 账务库房Column {
                get {
                    return this.column账务库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请数量Column {
                get {
                    return this.column申请数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发货数量Column {
                get {
                    return this.column发货数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收货数量Column {
                get {
                    return this.column收货数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 账务库房IDColumn {
                get {
                    return this.column账务库房ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListRow this[int index] {
                get {
                    return ((View_Out_ManeuverListRow)(this.Rows[index]));
                }
            }
            
            public event View_Out_ManeuverListRowChangeEventHandler View_Out_ManeuverListRowChanging;
            
            public event View_Out_ManeuverListRowChangeEventHandler View_Out_ManeuverListRowChanged;
            
            public event View_Out_ManeuverListRowChangeEventHandler View_Out_ManeuverListRowDeleting;
            
            public event View_Out_ManeuverListRowChangeEventHandler View_Out_ManeuverListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Out_ManeuverListRow(View_Out_ManeuverListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListRow AddView_Out_ManeuverListRow(string 图号型号, string 物品名称, string 规格, string 账务库房, decimal 申请数量, decimal 发货数量, decimal 收货数量, string 单位, string 备注, int 物品ID, string 账务库房ID, string Bill_ID) {
                View_Out_ManeuverListRow rowView_Out_ManeuverListRow = ((View_Out_ManeuverListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        账务库房,
                        申请数量,
                        发货数量,
                        收货数量,
                        单位,
                        备注,
                        物品ID,
                        账务库房ID,
                        Bill_ID};
                rowView_Out_ManeuverListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Out_ManeuverListRow);
                return rowView_Out_ManeuverListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Out_ManeuverListDataTable cln = ((View_Out_ManeuverListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Out_ManeuverListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column账务库房 = base.Columns["账务库房"];
                this.column申请数量 = base.Columns["申请数量"];
                this.column发货数量 = base.Columns["发货数量"];
                this.column收货数量 = base.Columns["收货数量"];
                this.column单位 = base.Columns["单位"];
                this.column备注 = base.Columns["备注"];
                this.column物品ID = base.Columns["物品ID"];
                this.column账务库房ID = base.Columns["账务库房ID"];
                this.columnBill_ID = base.Columns["Bill_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column账务库房 = new global::System.Data.DataColumn("账务库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column账务库房);
                this.column申请数量 = new global::System.Data.DataColumn("申请数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请数量);
                this.column发货数量 = new global::System.Data.DataColumn("发货数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发货数量);
                this.column收货数量 = new global::System.Data.DataColumn("收货数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收货数量);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column账务库房ID = new global::System.Data.DataColumn("账务库房ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column账务库房ID);
                this.columnBill_ID = new global::System.Data.DataColumn("Bill_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column账务库房.MaxLength = 50;
                this.column申请数量.AllowDBNull = false;
                this.column单位.ReadOnly = true;
                this.column单位.MaxLength = 57;
                this.column备注.MaxLength = 200;
                this.column物品ID.AllowDBNull = false;
                this.column账务库房ID.AllowDBNull = false;
                this.column账务库房ID.MaxLength = 50;
                this.columnBill_ID.AllowDBNull = false;
                this.columnBill_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListRow NewView_Out_ManeuverListRow() {
                return ((View_Out_ManeuverListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Out_ManeuverListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Out_ManeuverListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Out_ManeuverListRowChanged != null)) {
                    this.View_Out_ManeuverListRowChanged(this, new View_Out_ManeuverListRowChangeEvent(((View_Out_ManeuverListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Out_ManeuverListRowChanging != null)) {
                    this.View_Out_ManeuverListRowChanging(this, new View_Out_ManeuverListRowChangeEvent(((View_Out_ManeuverListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Out_ManeuverListRowDeleted != null)) {
                    this.View_Out_ManeuverListRowDeleted(this, new View_Out_ManeuverListRowChangeEvent(((View_Out_ManeuverListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Out_ManeuverListRowDeleting != null)) {
                    this.View_Out_ManeuverListRowDeleting(this, new View_Out_ManeuverListRowChangeEvent(((View_Out_ManeuverListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Out_ManeuverListRow(View_Out_ManeuverListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Out_ManeuverListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_HomemadePartBillDataTable : global::System.Data.TypedTableBase<View_S_HomemadePartBillRow> {
            
            private global::System.Data.DataColumn column入库单号;
            
            private global::System.Data.DataColumn column报检日期;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column供货单位;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column报检人编码;
            
            private global::System.Data.DataColumn column报检签名;
            
            private global::System.Data.DataColumn column检验报告编号;
            
            private global::System.Data.DataColumn column检验入库时间;
            
            private global::System.Data.DataColumn column报检数量;
            
            private global::System.Data.DataColumn column合格数量;
            
            private global::System.Data.DataColumn column让步数量;
            
            private global::System.Data.DataColumn column退货数量;
            
            private global::System.Data.DataColumn column报废数量;
            
            private global::System.Data.DataColumn column入库数量;
            
            private global::System.Data.DataColumn column质量信息;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column质量签名;
            
            private global::System.Data.DataColumn column仓库收货员;
            
            private global::System.Data.DataColumn column仓管签名;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column大写金额;
            
            private global::System.Data.DataColumn column计划单价;
            
            private global::System.Data.DataColumn column计划金额;
            
            private global::System.Data.DataColumn column仓库;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column仓库确认数量;
            
            private global::System.Data.DataColumn column回退理由;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column质量检验时间;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column库房代码;
            
            private global::System.Data.DataColumn column库房名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillDataTable() {
                this.TableName = "View_S_HomemadePartBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadePartBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_HomemadePartBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单号Column {
                get {
                    return this.column入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检日期Column {
                get {
                    return this.column报检日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供货单位Column {
                get {
                    return this.column供货单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检人编码Column {
                get {
                    return this.column报检人编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检签名Column {
                get {
                    return this.column报检签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验报告编号Column {
                get {
                    return this.column检验报告编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验入库时间Column {
                get {
                    return this.column检验入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检数量Column {
                get {
                    return this.column报检数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合格数量Column {
                get {
                    return this.column合格数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 让步数量Column {
                get {
                    return this.column让步数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货数量Column {
                get {
                    return this.column退货数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废数量Column {
                get {
                    return this.column报废数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库数量Column {
                get {
                    return this.column入库数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量信息Column {
                get {
                    return this.column质量信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量签名Column {
                get {
                    return this.column质量签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库收货员Column {
                get {
                    return this.column仓库收货员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管签名Column {
                get {
                    return this.column仓管签名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大写金额Column {
                get {
                    return this.column大写金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计划单价Column {
                get {
                    return this.column计划单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 计划金额Column {
                get {
                    return this.column计划金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库Column {
                get {
                    return this.column仓库;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓库确认数量Column {
                get {
                    return this.column仓库确认数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 回退理由Column {
                get {
                    return this.column回退理由;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量检验时间Column {
                get {
                    return this.column质量检验时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房代码Column {
                get {
                    return this.column库房代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRow this[int index] {
                get {
                    return ((View_S_HomemadePartBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_HomemadePartBillRowChangeEventHandler View_S_HomemadePartBillRowChanging;
            
            public event View_S_HomemadePartBillRowChangeEventHandler View_S_HomemadePartBillRowChanged;
            
            public event View_S_HomemadePartBillRowChangeEventHandler View_S_HomemadePartBillRowDeleting;
            
            public event View_S_HomemadePartBillRowChangeEventHandler View_S_HomemadePartBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_HomemadePartBillRow(View_S_HomemadePartBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRow AddView_S_HomemadePartBillRow(
                        string 入库单号, 
                        System.DateTime 报检日期, 
                        int 物品ID, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 单位, 
                        string 供货单位, 
                        string 批次号, 
                        string 供方批次号, 
                        string 报检人编码, 
                        string 报检签名, 
                        string 检验报告编号, 
                        System.DateTime 检验入库时间, 
                        int 报检数量, 
                        int 合格数量, 
                        int 让步数量, 
                        int 退货数量, 
                        int 报废数量, 
                        int 入库数量, 
                        string 质量信息, 
                        string 检验员, 
                        string 质量签名, 
                        string 仓库收货员, 
                        string 仓管签名, 
                        decimal 单价, 
                        decimal 金额, 
                        string 大写金额, 
                        decimal 计划单价, 
                        decimal 计划金额, 
                        string 仓库, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        int 仓库确认数量, 
                        string 回退理由, 
                        string 单据状态, 
                        string 备注, 
                        bool 是否已打印, 
                        System.DateTime 质量检验时间, 
                        System.DateTime 入库时间, 
                        string 库房代码, 
                        string 库房名称) {
                View_S_HomemadePartBillRow rowView_S_HomemadePartBillRow = ((View_S_HomemadePartBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        入库单号,
                        报检日期,
                        物品ID,
                        图号型号,
                        物品名称,
                        规格,
                        单位,
                        供货单位,
                        批次号,
                        供方批次号,
                        报检人编码,
                        报检签名,
                        检验报告编号,
                        检验入库时间,
                        报检数量,
                        合格数量,
                        让步数量,
                        退货数量,
                        报废数量,
                        入库数量,
                        质量信息,
                        检验员,
                        质量签名,
                        仓库收货员,
                        仓管签名,
                        单价,
                        金额,
                        大写金额,
                        计划单价,
                        计划金额,
                        仓库,
                        货架,
                        列,
                        层,
                        仓库确认数量,
                        回退理由,
                        单据状态,
                        备注,
                        是否已打印,
                        质量检验时间,
                        入库时间,
                        库房代码,
                        库房名称};
                rowView_S_HomemadePartBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_HomemadePartBillRow);
                return rowView_S_HomemadePartBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRow FindBy入库单号(string 入库单号) {
                return ((View_S_HomemadePartBillRow)(this.Rows.Find(new object[] {
                            入库单号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_HomemadePartBillDataTable cln = ((View_S_HomemadePartBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_HomemadePartBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column入库单号 = base.Columns["入库单号"];
                this.column报检日期 = base.Columns["报检日期"];
                this.column物品ID = base.Columns["物品ID"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column单位 = base.Columns["单位"];
                this.column供货单位 = base.Columns["供货单位"];
                this.column批次号 = base.Columns["批次号"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column报检人编码 = base.Columns["报检人编码"];
                this.column报检签名 = base.Columns["报检签名"];
                this.column检验报告编号 = base.Columns["检验报告编号"];
                this.column检验入库时间 = base.Columns["检验入库时间"];
                this.column报检数量 = base.Columns["报检数量"];
                this.column合格数量 = base.Columns["合格数量"];
                this.column让步数量 = base.Columns["让步数量"];
                this.column退货数量 = base.Columns["退货数量"];
                this.column报废数量 = base.Columns["报废数量"];
                this.column入库数量 = base.Columns["入库数量"];
                this.column质量信息 = base.Columns["质量信息"];
                this.column检验员 = base.Columns["检验员"];
                this.column质量签名 = base.Columns["质量签名"];
                this.column仓库收货员 = base.Columns["仓库收货员"];
                this.column仓管签名 = base.Columns["仓管签名"];
                this.column单价 = base.Columns["单价"];
                this.column金额 = base.Columns["金额"];
                this.column大写金额 = base.Columns["大写金额"];
                this.column计划单价 = base.Columns["计划单价"];
                this.column计划金额 = base.Columns["计划金额"];
                this.column仓库 = base.Columns["仓库"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column仓库确认数量 = base.Columns["仓库确认数量"];
                this.column回退理由 = base.Columns["回退理由"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column备注 = base.Columns["备注"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column质量检验时间 = base.Columns["质量检验时间"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column库房代码 = base.Columns["库房代码"];
                this.column库房名称 = base.Columns["库房名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column入库单号 = new global::System.Data.DataColumn("入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单号);
                this.column报检日期 = new global::System.Data.DataColumn("报检日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检日期);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column供货单位 = new global::System.Data.DataColumn("供货单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供货单位);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column报检人编码 = new global::System.Data.DataColumn("报检人编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检人编码);
                this.column报检签名 = new global::System.Data.DataColumn("报检签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检签名);
                this.column检验报告编号 = new global::System.Data.DataColumn("检验报告编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验报告编号);
                this.column检验入库时间 = new global::System.Data.DataColumn("检验入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验入库时间);
                this.column报检数量 = new global::System.Data.DataColumn("报检数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检数量);
                this.column合格数量 = new global::System.Data.DataColumn("合格数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合格数量);
                this.column让步数量 = new global::System.Data.DataColumn("让步数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column让步数量);
                this.column退货数量 = new global::System.Data.DataColumn("退货数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货数量);
                this.column报废数量 = new global::System.Data.DataColumn("报废数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废数量);
                this.column入库数量 = new global::System.Data.DataColumn("入库数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库数量);
                this.column质量信息 = new global::System.Data.DataColumn("质量信息", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量信息);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column质量签名 = new global::System.Data.DataColumn("质量签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量签名);
                this.column仓库收货员 = new global::System.Data.DataColumn("仓库收货员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库收货员);
                this.column仓管签名 = new global::System.Data.DataColumn("仓管签名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管签名);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column大写金额 = new global::System.Data.DataColumn("大写金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大写金额);
                this.column计划单价 = new global::System.Data.DataColumn("计划单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计划单价);
                this.column计划金额 = new global::System.Data.DataColumn("计划金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column计划金额);
                this.column仓库 = new global::System.Data.DataColumn("仓库", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column仓库确认数量 = new global::System.Data.DataColumn("仓库确认数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓库确认数量);
                this.column回退理由 = new global::System.Data.DataColumn("回退理由", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回退理由);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column质量检验时间 = new global::System.Data.DataColumn("质量检验时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量检验时间);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column库房代码 = new global::System.Data.DataColumn("库房代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房代码);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column入库单号}, true));
                this.column入库单号.AllowDBNull = false;
                this.column入库单号.Unique = true;
                this.column入库单号.MaxLength = 50;
                this.column报检日期.AllowDBNull = false;
                this.column物品ID.AllowDBNull = false;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 6;
                this.column供货单位.AllowDBNull = false;
                this.column供货单位.MaxLength = 15;
                this.column批次号.MaxLength = 26;
                this.column供方批次号.MaxLength = 2147483647;
                this.column报检人编码.MaxLength = 50;
                this.column报检签名.MaxLength = 50;
                this.column检验报告编号.MaxLength = 50;
                this.column报检数量.AllowDBNull = false;
                this.column合格数量.AllowDBNull = false;
                this.column让步数量.AllowDBNull = false;
                this.column退货数量.AllowDBNull = false;
                this.column报废数量.AllowDBNull = false;
                this.column入库数量.AllowDBNull = false;
                this.column质量信息.MaxLength = 2147483647;
                this.column检验员.MaxLength = 50;
                this.column质量签名.MaxLength = 50;
                this.column仓库收货员.MaxLength = 50;
                this.column仓管签名.MaxLength = 50;
                this.column单价.AllowDBNull = false;
                this.column金额.AllowDBNull = false;
                this.column大写金额.AllowDBNull = false;
                this.column大写金额.MaxLength = 50;
                this.column计划单价.AllowDBNull = false;
                this.column计划金额.AllowDBNull = false;
                this.column仓库.AllowDBNull = false;
                this.column仓库.MaxLength = 50;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 10;
                this.column层.MaxLength = 10;
                this.column回退理由.MaxLength = 2147483647;
                this.column单据状态.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column是否已打印.ReadOnly = true;
                this.column库房代码.MaxLength = 50;
                this.column库房名称.AllowDBNull = false;
                this.column库房名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRow NewView_S_HomemadePartBillRow() {
                return ((View_S_HomemadePartBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_HomemadePartBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_HomemadePartBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_HomemadePartBillRowChanged != null)) {
                    this.View_S_HomemadePartBillRowChanged(this, new View_S_HomemadePartBillRowChangeEvent(((View_S_HomemadePartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_HomemadePartBillRowChanging != null)) {
                    this.View_S_HomemadePartBillRowChanging(this, new View_S_HomemadePartBillRowChangeEvent(((View_S_HomemadePartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_HomemadePartBillRowDeleted != null)) {
                    this.View_S_HomemadePartBillRowDeleted(this, new View_S_HomemadePartBillRowChangeEvent(((View_S_HomemadePartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_HomemadePartBillRowDeleting != null)) {
                    this.View_S_HomemadePartBillRowDeleting(this, new View_S_HomemadePartBillRowChangeEvent(((View_S_HomemadePartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_HomemadePartBillRow(View_S_HomemadePartBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_HomemadePartBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_CheckOutInDepotForOutsourcingBillDataTable : global::System.Data.TypedTableBase<View_S_CheckOutInDepotForOutsourcingBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column关联订单号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column材料类别;
            
            private global::System.Data.DataColumn column版次号;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column供应商编码;
            
            private global::System.Data.DataColumn column供方批次号;
            
            private global::System.Data.DataColumn column报检数;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column委外费;
            
            private global::System.Data.DataColumn column单价;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column是否仅限于返修箱;
            
            private global::System.Data.DataColumn column是否紧急报检;
            
            private global::System.Data.DataColumn column是否包含原材料费;
            
            private global::System.Data.DataColumn column原材料费;
            
            private global::System.Data.DataColumn column确认到货数;
            
            private global::System.Data.DataColumn column检验报告编号;
            
            private global::System.Data.DataColumn column检验员;
            
            private global::System.Data.DataColumn column合格数;
            
            private global::System.Data.DataColumn column让步数;
            
            private global::System.Data.DataColumn column退货数;
            
            private global::System.Data.DataColumn column报废数;
            
            private global::System.Data.DataColumn column质量信息;
            
            private global::System.Data.DataColumn column是否紧急放行;
            
            private global::System.Data.DataColumn column入库数;
            
            private global::System.Data.DataColumn column货架;
            
            private global::System.Data.DataColumn column列;
            
            private global::System.Data.DataColumn column层;
            
            private global::System.Data.DataColumn column报检人;
            
            private global::System.Data.DataColumn column报检时间;
            
            private global::System.Data.DataColumn column财务人;
            
            private global::System.Data.DataColumn column财务批准时间;
            
            private global::System.Data.DataColumn column确认到货人;
            
            private global::System.Data.DataColumn column确认到货时间;
            
            private global::System.Data.DataColumn column质检人;
            
            private global::System.Data.DataColumn column检验时间;
            
            private global::System.Data.DataColumn column质量主管;
            
            private global::System.Data.DataColumn column质量主管审核时间;
            
            private global::System.Data.DataColumn column仓管员;
            
            private global::System.Data.DataColumn column入库时间;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column是否有发票;
            
            private global::System.Data.DataColumn column所属库房;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column库房ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillDataTable() {
                this.TableName = "View_S_CheckOutInDepotForOutsourcingBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckOutInDepotForOutsourcingBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_CheckOutInDepotForOutsourcingBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 关联订单号Column {
                get {
                    return this.column关联订单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料类别Column {
                get {
                    return this.column材料类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 版次号Column {
                get {
                    return this.column版次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商编码Column {
                get {
                    return this.column供应商编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供方批次号Column {
                get {
                    return this.column供方批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检数Column {
                get {
                    return this.column报检数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 委外费Column {
                get {
                    return this.column委外费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否仅限于返修箱Column {
                get {
                    return this.column是否仅限于返修箱;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急报检Column {
                get {
                    return this.column是否紧急报检;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否包含原材料费Column {
                get {
                    return this.column是否包含原材料费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 原材料费Column {
                get {
                    return this.column原材料费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认到货数Column {
                get {
                    return this.column确认到货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验报告编号Column {
                get {
                    return this.column检验报告编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验员Column {
                get {
                    return this.column检验员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合格数Column {
                get {
                    return this.column合格数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 让步数Column {
                get {
                    return this.column让步数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退货数Column {
                get {
                    return this.column退货数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报废数Column {
                get {
                    return this.column报废数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量信息Column {
                get {
                    return this.column质量信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急放行Column {
                get {
                    return this.column是否紧急放行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库数Column {
                get {
                    return this.column入库数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 货架Column {
                get {
                    return this.column货架;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 列Column {
                get {
                    return this.column列;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 层Column {
                get {
                    return this.column层;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检人Column {
                get {
                    return this.column报检人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报检时间Column {
                get {
                    return this.column报检时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务人Column {
                get {
                    return this.column财务人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务批准时间Column {
                get {
                    return this.column财务批准时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认到货人Column {
                get {
                    return this.column确认到货人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 确认到货时间Column {
                get {
                    return this.column确认到货时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质检人Column {
                get {
                    return this.column质检人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验时间Column {
                get {
                    return this.column检验时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量主管Column {
                get {
                    return this.column质量主管;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 质量主管审核时间Column {
                get {
                    return this.column质量主管审核时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管员Column {
                get {
                    return this.column仓管员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库时间Column {
                get {
                    return this.column入库时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否有发票Column {
                get {
                    return this.column是否有发票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 所属库房Column {
                get {
                    return this.column所属库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房IDColumn {
                get {
                    return this.column库房ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillRow this[int index] {
                get {
                    return ((View_S_CheckOutInDepotForOutsourcingBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_CheckOutInDepotForOutsourcingBillRowChangeEventHandler View_S_CheckOutInDepotForOutsourcingBillRowChanging;
            
            public event View_S_CheckOutInDepotForOutsourcingBillRowChangeEventHandler View_S_CheckOutInDepotForOutsourcingBillRowChanged;
            
            public event View_S_CheckOutInDepotForOutsourcingBillRowChangeEventHandler View_S_CheckOutInDepotForOutsourcingBillRowDeleting;
            
            public event View_S_CheckOutInDepotForOutsourcingBillRowChangeEventHandler View_S_CheckOutInDepotForOutsourcingBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_CheckOutInDepotForOutsourcingBillRow(View_S_CheckOutInDepotForOutsourcingBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillRow AddView_S_CheckOutInDepotForOutsourcingBillRow(
                        string 单据号, 
                        string 单据状态, 
                        string 关联订单号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        string 材料类别, 
                        string 版次号, 
                        string 批次号, 
                        string 供应商编码, 
                        string 供方批次号, 
                        decimal 报检数, 
                        string 单位, 
                        decimal 委外费, 
                        decimal 单价, 
                        decimal 金额, 
                        string 备注, 
                        bool 是否仅限于返修箱, 
                        bool 是否紧急报检, 
                        bool 是否包含原材料费, 
                        decimal 原材料费, 
                        decimal 确认到货数, 
                        string 检验报告编号, 
                        string 检验员, 
                        decimal 合格数, 
                        decimal 让步数, 
                        decimal 退货数, 
                        decimal 报废数, 
                        string 质量信息, 
                        bool 是否紧急放行, 
                        decimal 入库数, 
                        string 货架, 
                        string 列, 
                        string 层, 
                        string 报检人, 
                        System.DateTime 报检时间, 
                        string 财务人, 
                        System.DateTime 财务批准时间, 
                        string 确认到货人, 
                        System.DateTime 确认到货时间, 
                        string 质检人, 
                        System.DateTime 检验时间, 
                        string 质量主管, 
                        System.DateTime 质量主管审核时间, 
                        string 仓管员, 
                        System.DateTime 入库时间, 
                        bool 是否已打印, 
                        bool 是否有发票, 
                        string 所属库房, 
                        int 物品ID, 
                        string 库房ID) {
                View_S_CheckOutInDepotForOutsourcingBillRow rowView_S_CheckOutInDepotForOutsourcingBillRow = ((View_S_CheckOutInDepotForOutsourcingBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        关联订单号,
                        图号型号,
                        物品名称,
                        规格,
                        材料类别,
                        版次号,
                        批次号,
                        供应商编码,
                        供方批次号,
                        报检数,
                        单位,
                        委外费,
                        单价,
                        金额,
                        备注,
                        是否仅限于返修箱,
                        是否紧急报检,
                        是否包含原材料费,
                        原材料费,
                        确认到货数,
                        检验报告编号,
                        检验员,
                        合格数,
                        让步数,
                        退货数,
                        报废数,
                        质量信息,
                        是否紧急放行,
                        入库数,
                        货架,
                        列,
                        层,
                        报检人,
                        报检时间,
                        财务人,
                        财务批准时间,
                        确认到货人,
                        确认到货时间,
                        质检人,
                        检验时间,
                        质量主管,
                        质量主管审核时间,
                        仓管员,
                        入库时间,
                        是否已打印,
                        是否有发票,
                        所属库房,
                        物品ID,
                        库房ID};
                rowView_S_CheckOutInDepotForOutsourcingBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_CheckOutInDepotForOutsourcingBillRow);
                return rowView_S_CheckOutInDepotForOutsourcingBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_CheckOutInDepotForOutsourcingBillDataTable cln = ((View_S_CheckOutInDepotForOutsourcingBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_CheckOutInDepotForOutsourcingBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column关联订单号 = base.Columns["关联订单号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column材料类别 = base.Columns["材料类别"];
                this.column版次号 = base.Columns["版次号"];
                this.column批次号 = base.Columns["批次号"];
                this.column供应商编码 = base.Columns["供应商编码"];
                this.column供方批次号 = base.Columns["供方批次号"];
                this.column报检数 = base.Columns["报检数"];
                this.column单位 = base.Columns["单位"];
                this.column委外费 = base.Columns["委外费"];
                this.column单价 = base.Columns["单价"];
                this.column金额 = base.Columns["金额"];
                this.column备注 = base.Columns["备注"];
                this.column是否仅限于返修箱 = base.Columns["是否仅限于返修箱"];
                this.column是否紧急报检 = base.Columns["是否紧急报检"];
                this.column是否包含原材料费 = base.Columns["是否包含原材料费"];
                this.column原材料费 = base.Columns["原材料费"];
                this.column确认到货数 = base.Columns["确认到货数"];
                this.column检验报告编号 = base.Columns["检验报告编号"];
                this.column检验员 = base.Columns["检验员"];
                this.column合格数 = base.Columns["合格数"];
                this.column让步数 = base.Columns["让步数"];
                this.column退货数 = base.Columns["退货数"];
                this.column报废数 = base.Columns["报废数"];
                this.column质量信息 = base.Columns["质量信息"];
                this.column是否紧急放行 = base.Columns["是否紧急放行"];
                this.column入库数 = base.Columns["入库数"];
                this.column货架 = base.Columns["货架"];
                this.column列 = base.Columns["列"];
                this.column层 = base.Columns["层"];
                this.column报检人 = base.Columns["报检人"];
                this.column报检时间 = base.Columns["报检时间"];
                this.column财务人 = base.Columns["财务人"];
                this.column财务批准时间 = base.Columns["财务批准时间"];
                this.column确认到货人 = base.Columns["确认到货人"];
                this.column确认到货时间 = base.Columns["确认到货时间"];
                this.column质检人 = base.Columns["质检人"];
                this.column检验时间 = base.Columns["检验时间"];
                this.column质量主管 = base.Columns["质量主管"];
                this.column质量主管审核时间 = base.Columns["质量主管审核时间"];
                this.column仓管员 = base.Columns["仓管员"];
                this.column入库时间 = base.Columns["入库时间"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column是否有发票 = base.Columns["是否有发票"];
                this.column所属库房 = base.Columns["所属库房"];
                this.column物品ID = base.Columns["物品ID"];
                this.column库房ID = base.Columns["库房ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column关联订单号 = new global::System.Data.DataColumn("关联订单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column关联订单号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column材料类别 = new global::System.Data.DataColumn("材料类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料类别);
                this.column版次号 = new global::System.Data.DataColumn("版次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column版次号);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column供应商编码 = new global::System.Data.DataColumn("供应商编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商编码);
                this.column供方批次号 = new global::System.Data.DataColumn("供方批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供方批次号);
                this.column报检数 = new global::System.Data.DataColumn("报检数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检数);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column委外费 = new global::System.Data.DataColumn("委外费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委外费);
                this.column单价 = new global::System.Data.DataColumn("单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单价);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column是否仅限于返修箱 = new global::System.Data.DataColumn("是否仅限于返修箱", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否仅限于返修箱);
                this.column是否紧急报检 = new global::System.Data.DataColumn("是否紧急报检", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急报检);
                this.column是否包含原材料费 = new global::System.Data.DataColumn("是否包含原材料费", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否包含原材料费);
                this.column原材料费 = new global::System.Data.DataColumn("原材料费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原材料费);
                this.column确认到货数 = new global::System.Data.DataColumn("确认到货数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认到货数);
                this.column检验报告编号 = new global::System.Data.DataColumn("检验报告编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验报告编号);
                this.column检验员 = new global::System.Data.DataColumn("检验员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验员);
                this.column合格数 = new global::System.Data.DataColumn("合格数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合格数);
                this.column让步数 = new global::System.Data.DataColumn("让步数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column让步数);
                this.column退货数 = new global::System.Data.DataColumn("退货数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退货数);
                this.column报废数 = new global::System.Data.DataColumn("报废数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报废数);
                this.column质量信息 = new global::System.Data.DataColumn("质量信息", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量信息);
                this.column是否紧急放行 = new global::System.Data.DataColumn("是否紧急放行", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急放行);
                this.column入库数 = new global::System.Data.DataColumn("入库数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库数);
                this.column货架 = new global::System.Data.DataColumn("货架", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column货架);
                this.column列 = new global::System.Data.DataColumn("列", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column列);
                this.column层 = new global::System.Data.DataColumn("层", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column层);
                this.column报检人 = new global::System.Data.DataColumn("报检人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检人);
                this.column报检时间 = new global::System.Data.DataColumn("报检时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报检时间);
                this.column财务人 = new global::System.Data.DataColumn("财务人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务人);
                this.column财务批准时间 = new global::System.Data.DataColumn("财务批准时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务批准时间);
                this.column确认到货人 = new global::System.Data.DataColumn("确认到货人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认到货人);
                this.column确认到货时间 = new global::System.Data.DataColumn("确认到货时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column确认到货时间);
                this.column质检人 = new global::System.Data.DataColumn("质检人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质检人);
                this.column检验时间 = new global::System.Data.DataColumn("检验时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验时间);
                this.column质量主管 = new global::System.Data.DataColumn("质量主管", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量主管);
                this.column质量主管审核时间 = new global::System.Data.DataColumn("质量主管审核时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column质量主管审核时间);
                this.column仓管员 = new global::System.Data.DataColumn("仓管员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管员);
                this.column入库时间 = new global::System.Data.DataColumn("入库时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库时间);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column是否有发票 = new global::System.Data.DataColumn("是否有发票", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有发票);
                this.column所属库房 = new global::System.Data.DataColumn("所属库房", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column所属库房);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column库房ID = new global::System.Data.DataColumn("库房ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房ID);
                this.column单据号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column关联订单号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column材料类别.AllowDBNull = false;
                this.column材料类别.MaxLength = 50;
                this.column版次号.MaxLength = 50;
                this.column批次号.MaxLength = 50;
                this.column供应商编码.MaxLength = 50;
                this.column供方批次号.MaxLength = 2147483647;
                this.column报检数.AllowDBNull = false;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 6;
                this.column委外费.AllowDBNull = false;
                this.column单价.AllowDBNull = false;
                this.column金额.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
                this.column是否紧急报检.AllowDBNull = false;
                this.column是否包含原材料费.AllowDBNull = false;
                this.column原材料费.AllowDBNull = false;
                this.column确认到货数.AllowDBNull = false;
                this.column检验报告编号.MaxLength = 2147483647;
                this.column检验员.MaxLength = 50;
                this.column合格数.AllowDBNull = false;
                this.column让步数.AllowDBNull = false;
                this.column退货数.AllowDBNull = false;
                this.column报废数.AllowDBNull = false;
                this.column质量信息.MaxLength = 2147483647;
                this.column是否紧急放行.AllowDBNull = false;
                this.column入库数.AllowDBNull = false;
                this.column货架.MaxLength = 50;
                this.column列.MaxLength = 50;
                this.column层.MaxLength = 50;
                this.column报检人.MaxLength = 50;
                this.column财务人.MaxLength = 50;
                this.column确认到货人.MaxLength = 50;
                this.column质检人.MaxLength = 50;
                this.column质量主管.MaxLength = 50;
                this.column仓管员.MaxLength = 50;
                this.column是否有发票.AllowDBNull = false;
                this.column所属库房.AllowDBNull = false;
                this.column所属库房.MaxLength = 50;
                this.column物品ID.AllowDBNull = false;
                this.column库房ID.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillRow NewView_S_CheckOutInDepotForOutsourcingBillRow() {
                return ((View_S_CheckOutInDepotForOutsourcingBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_CheckOutInDepotForOutsourcingBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_CheckOutInDepotForOutsourcingBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_CheckOutInDepotForOutsourcingBillRowChanged != null)) {
                    this.View_S_CheckOutInDepotForOutsourcingBillRowChanged(this, new View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent(((View_S_CheckOutInDepotForOutsourcingBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_CheckOutInDepotForOutsourcingBillRowChanging != null)) {
                    this.View_S_CheckOutInDepotForOutsourcingBillRowChanging(this, new View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent(((View_S_CheckOutInDepotForOutsourcingBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_CheckOutInDepotForOutsourcingBillRowDeleted != null)) {
                    this.View_S_CheckOutInDepotForOutsourcingBillRowDeleted(this, new View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent(((View_S_CheckOutInDepotForOutsourcingBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_CheckOutInDepotForOutsourcingBillRowDeleting != null)) {
                    this.View_S_CheckOutInDepotForOutsourcingBillRowDeleting(this, new View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent(((View_S_CheckOutInDepotForOutsourcingBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_CheckOutInDepotForOutsourcingBillRow(View_S_CheckOutInDepotForOutsourcingBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_CheckOutInDepotForOutsourcingBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 领料单汇总签字表DataTable : global::System.Data.TypedTableBase<领料单汇总签字表Row> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column序号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表DataTable() {
                this.TableName = "领料单汇总签字表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 领料单汇总签字表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 领料单汇总签字表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表Row this[int index] {
                get {
                    return ((领料单汇总签字表Row)(this.Rows[index]));
                }
            }
            
            public event 领料单汇总签字表RowChangeEventHandler 领料单汇总签字表RowChanging;
            
            public event 领料单汇总签字表RowChangeEventHandler 领料单汇总签字表RowChanged;
            
            public event 领料单汇总签字表RowChangeEventHandler 领料单汇总签字表RowDeleting;
            
            public event 领料单汇总签字表RowChangeEventHandler 领料单汇总签字表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add领料单汇总签字表Row(领料单汇总签字表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表Row Add领料单汇总签字表Row(string 图号型号, string 物品名称, string 规格, string 数量, string 单位, string 序号) {
                领料单汇总签字表Row row领料单汇总签字表Row = ((领料单汇总签字表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        单位,
                        序号};
                row领料单汇总签字表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row领料单汇总签字表Row);
                return row领料单汇总签字表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                领料单汇总签字表DataTable cln = ((领料单汇总签字表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 领料单汇总签字表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column单位 = base.Columns["单位"];
                this.column序号 = base.Columns["序号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表Row New领料单汇总签字表Row() {
                return ((领料单汇总签字表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 领料单汇总签字表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(领料单汇总签字表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.领料单汇总签字表RowChanged != null)) {
                    this.领料单汇总签字表RowChanged(this, new 领料单汇总签字表RowChangeEvent(((领料单汇总签字表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.领料单汇总签字表RowChanging != null)) {
                    this.领料单汇总签字表RowChanging(this, new 领料单汇总签字表RowChangeEvent(((领料单汇总签字表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.领料单汇总签字表RowDeleted != null)) {
                    this.领料单汇总签字表RowDeleted(this, new 领料单汇总签字表RowChangeEvent(((领料单汇总签字表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.领料单汇总签字表RowDeleting != null)) {
                    this.领料单汇总签字表RowDeleting(this, new 领料单汇总签字表RowChangeEvent(((领料单汇总签字表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove领料单汇总签字表Row(领料单汇总签字表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet ds = new DepotManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "领料单汇总签字表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_ReceiveSendSaveGatherBillRow : global::System.Data.DataRow {
            
            private S_ReceiveSendSaveGatherBillDataTable tableS_ReceiveSendSaveGatherBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_ReceiveSendSaveGatherBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_ReceiveSendSaveGatherBill = ((S_ReceiveSendSaveGatherBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableS_ReceiveSendSaveGatherBill.IDColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.GoodsCodeColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    try {
                        return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.SpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_ReceiveSendSaveGatherBill”中列“Spec”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.GoodsNameColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FormerCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.FormerCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.FormerCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormerUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.FormerUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.FormerUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormerPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.FormerPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.FormerPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NowInDepotCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowInDepotUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowInDepotPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowInDepotPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NowOutDepotCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowOutDepotUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowOutDepotPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowOutDepotPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NowExistCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.NowExistCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowExistCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowExistUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowExistUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowExistUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowExistPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.NowExistPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.NowExistPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialType {
                get {
                    try {
                        return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.MaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_ReceiveSendSaveGatherBill”中列“MaterialType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CumulateNowInDepotCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowInDepotCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowInDepotCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulateNowInDepotUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowInDepotUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowInDepotUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulatedNowInDepotPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.CumulatedNowInDepotPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulatedNowInDepotPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CumulateNowOutDepotCount {
                get {
                    return ((int)(this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotCountColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulateNowOutDepotUnitPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotUnitPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulateNowOutDepotPrice {
                get {
                    return ((string)(this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotPriceColumn]));
                }
                set {
                    this[this.tableS_ReceiveSendSaveGatherBill.CumulateNowOutDepotPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecNull() {
                return this.IsNull(this.tableS_ReceiveSendSaveGatherBill.SpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecNull() {
                this[this.tableS_ReceiveSendSaveGatherBill.SpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialTypeNull() {
                return this.IsNull(this.tableS_ReceiveSendSaveGatherBill.MaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialTypeNull() {
                this[this.tableS_ReceiveSendSaveGatherBill.MaterialTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FetchGoodsWithdrawDepotBillRow : global::System.Data.DataRow {
            
            private View_S_FetchGoodsWithdrawDepotBillDataTable tableView_S_FetchGoodsWithdrawDepotBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsWithdrawDepotBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FetchGoodsWithdrawDepotBill = ((View_S_FetchGoodsWithdrawDepotBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库单号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库单号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库日期 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库日期Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库部门 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库部门Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.用途Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.供货单位Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电位 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.电位Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.电位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 退库数量 {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库数量Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.退库数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制签名 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.编制签名Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.编制签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门负责人签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.部门负责人签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“部门负责人签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.部门负责人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人编码 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.编制人编码Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.编制人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓库 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓库Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“仓库”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货物类型 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.货物类型Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.货物类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 产品标志 {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.产品标志Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.产品标志Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量工程师签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.质量工程师签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“质量工程师签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.质量工程师签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物料类型 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.物料类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsWithdrawDepotBill”中列“物料类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.物料类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 详细用途说明 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsWithdrawDepotBill.详细用途说明Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsWithdrawDepotBill.详细用途说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门负责人签名Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.部门负责人签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门负责人签名Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.部门负责人签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.仓库Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.仓库Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is规格Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set规格Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量工程师签名Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.质量工程师签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量工程师签名Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.质量工程师签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物料类型Null() {
                return this.IsNull(this.tableView_S_FetchGoodsWithdrawDepotBill.物料类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物料类型Null() {
                this[this.tableView_S_FetchGoodsWithdrawDepotBill.物料类型Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialRequisitionGoodsRow : global::System.Data.DataRow {
            
            private View_S_MaterialRequisitionGoodsDataTable tableView_S_MaterialRequisitionGoods;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRequisitionGoodsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialRequisitionGoods = ((View_S_MaterialRequisitionGoodsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    return ((long)(this[this.tableView_S_MaterialRequisitionGoods.序号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 领料单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.领料单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.领料单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.规格Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.供应商编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.供应商编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.批次号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 基数 {
                get {
                    return ((int)(this[this.tableView_S_MaterialRequisitionGoods.基数Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.基数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 请领数 {
                get {
                    return ((decimal)(this[this.tableView_S_MaterialRequisitionGoods.请领数Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.请领数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实领数 {
                get {
                    return ((decimal)(this[this.tableView_S_MaterialRequisitionGoods.实领数Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.实领数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisitionGoods.单位Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 库存数 {
                get {
                    return ((int)(this[this.tableView_S_MaterialRequisitionGoods.库存数Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.库存数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    if (this.Is物品类别Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.物品类别Column]));
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    if (this.Is货架Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.货架Column]));
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    if (this.Is列Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.列Column]));
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    if (this.Is层Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.层Column]));
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisitionGoods”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 显示位置 {
                get {
                    return ((double)(this[this.tableView_S_MaterialRequisitionGoods.显示位置Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.显示位置Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_MaterialRequisitionGoods.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.物品类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisitionGoods”中列“物品类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.物品类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisitionGoods.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisitionGoods”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisitionGoods.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.物品类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别Null() {
                this[this.tableView_S_MaterialRequisitionGoods.物品类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_MaterialRequisitionGoods.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_MaterialRequisitionGoods.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_MaterialRequisitionGoods.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialRequisitionGoods.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别名称Null() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.物品类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别名称Null() {
                this[this.tableView_S_MaterialRequisitionGoods.物品类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableView_S_MaterialRequisitionGoods.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageIDNull() {
                this[this.tableView_S_MaterialRequisitionGoods.StorageIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_OrdinaryInDepotBillRow : global::System.Data.DataRow {
            
            private View_S_OrdinaryInDepotBillDataTable tableView_S_OrdinaryInDepotBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_OrdinaryInDepotBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_OrdinaryInDepotBill = ((View_S_OrdinaryInDepotBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库单号 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.入库单号Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_OrdinaryInDepotBill.入库时间Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发票号码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.发票号码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“发票号码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.发票号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 订单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.订单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“订单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.订单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.供应商编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.供应商编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商简称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.供应商简称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“供应商简称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.供应商简称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.材料编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.材料编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购员编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.采购员编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.采购员编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购员签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.采购员签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“采购员签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.采购员签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 需质检员确认 {
                get {
                    return ((bool)(this[this.tableView_S_OrdinaryInDepotBill.需质检员确认Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.需质检员确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质检员编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.质检员编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.质检员编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.质量签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“质量签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.质量签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.申请人编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.申请人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“申请人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 设计人编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.设计人编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.设计人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 设计工程师 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.设计工程师Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“设计工程师”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.设计工程师Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管员编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.仓管员编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.仓管员编码Column] = value;
                }
            }           
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 质检合格标志 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_OrdinaryInDepotBill.质检合格标志Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“质检合格标志”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.质检合格标志Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 需工装管理员验证 {
                get {
                    return ((bool)(this[this.tableView_S_OrdinaryInDepotBill.需工装管理员验证Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.需工装管理员验证Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装验证报告编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.工装验证报告编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“工装验证报告编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.工装验证报告编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装管理员编码 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.工装管理员编码Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.工装管理员编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装管理员签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.工装管理员签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“工装管理员签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.工装管理员签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.工装类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“工装类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.工装类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否允许入库 {
                get {
                    return ((bool)(this[this.tableView_S_OrdinaryInDepotBill.是否允许入库Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.是否允许入库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 单据提交时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_OrdinaryInDepotBill.单据提交时间Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.单据提交时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 质检时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_OrdinaryInDepotBill.质检时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“质检时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.质检时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发票状态 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotBill.发票状态Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.发票状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_OrdinaryInDepotBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票号码Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.发票号码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票号码Null() {
                this[this.tableView_S_OrdinaryInDepotBill.发票号码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is订单号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.订单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set订单号Null() {
                this[this.tableView_S_OrdinaryInDepotBill.订单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_OrdinaryInDepotBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_OrdinaryInDepotBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_OrdinaryInDepotBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商简称Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.供应商简称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商简称Null() {
                this[this.tableView_S_OrdinaryInDepotBill.供应商简称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_OrdinaryInDepotBill.材料类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is采购员签名Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.采购员签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set采购员签名Null() {
                this[this.tableView_S_OrdinaryInDepotBill.采购员签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量签名Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.质量签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量签名Null() {
                this[this.tableView_S_OrdinaryInDepotBill.质量签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.申请人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人Null() {
                this[this.tableView_S_OrdinaryInDepotBill.申请人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is设计工程师Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.设计工程师Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set设计工程师Null() {
                this[this.tableView_S_OrdinaryInDepotBill.设计工程师Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质检合格标志Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.质检合格标志Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质检合格标志Null() {
                this[this.tableView_S_OrdinaryInDepotBill.质检合格标志Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工装验证报告编号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.工装验证报告编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工装验证报告编号Null() {
                this[this.tableView_S_OrdinaryInDepotBill.工装验证报告编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工装管理员签名Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.工装管理员签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工装管理员签名Null() {
                this[this.tableView_S_OrdinaryInDepotBill.工装管理员签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工装类别Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.工装类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工装类别Null() {
                this[this.tableView_S_OrdinaryInDepotBill.工装类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质检时间Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.质检时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质检时间Null() {
                this[this.tableView_S_OrdinaryInDepotBill.质检时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_OrdinaryInDepotBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_OrdinaryInDepotBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_OrdinaryInDepotBill.库房名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_B_BargainGoodsRow : global::System.Data.DataRow {
            
            private View_B_BargainGoodsDataTable tableView_B_BargainGoods;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_BargainGoodsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_B_BargainGoods = ((View_B_BargainGoodsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_B_BargainGoods.序号Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同号 {
                get {
                    return ((string)(this[this.tableView_B_BargainGoods.合同号Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.合同号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_B_BargainGoods.图号型号Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_B_BargainGoods.规格Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_B_BargainGoods.物品名称Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_B_BargainGoods.单价Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 数量 {
                get {
                    return ((int)(this[this.tableView_B_BargainGoods.数量Column]));
                }
                set {
                    this[this.tableView_B_BargainGoods.数量Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_B_BargainInfoRow : global::System.Data.DataRow {
            
            private View_B_BargainInfoDataTable tableView_B_BargainInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_BargainInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_B_BargainInfo = ((View_B_BargainInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同号 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.合同号Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.合同号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.供货单位Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购员 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.采购员Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.采购员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 税率 {
                get {
                    return ((decimal)(this[this.tableView_B_BargainInfo.税率Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_B_BargainInfo.日期Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商联系人 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.供应商联系人Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.供应商联系人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系方式 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.联系方式Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.联系方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同录入员 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.合同录入员Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.合同录入员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 权限控制用登录名 {
                get {
                    return ((string)(this[this.tableView_B_BargainInfo.权限控制用登录名Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.权限控制用登录名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_BargainInfo.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_BargainInfo”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_BargainInfo.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否海外合同 {
                get {
                    return ((bool)(this[this.tableView_B_BargainInfo.是否海外合同Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.是否海外合同Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否委外合同 {
                get {
                    return ((bool)(this[this.tableView_B_BargainInfo.是否委外合同Column]));
                }
                set {
                    this[this.tableView_B_BargainInfo.是否委外合同Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门主管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_BargainInfo.部门主管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_BargainInfo”中列“部门主管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_BargainInfo.部门主管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_B_BargainInfo.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_B_BargainInfo.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门主管签名Null() {
                return this.IsNull(this.tableView_B_BargainInfo.部门主管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门主管签名Null() {
                this[this.tableView_B_BargainInfo.部门主管签名Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_StockRow : global::System.Data.DataRow {
            
            private View_S_StockDataTable tableView_S_Stock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_StockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_Stock = ((View_S_StockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_S_Stock.序号Column]));
                }
                set {
                    this[this.tableView_S_Stock.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_Stock.图号型号Column]));
                }
                set {
                    this[this.tableView_S_Stock.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_Stock.物品名称Column]));
                }
                set {
                    this[this.tableView_S_Stock.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_Stock.规格Column]));
                }
                set {
                    this[this.tableView_S_Stock.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_Stock.供货单位Column]));
                }
                set {
                    this[this.tableView_S_Stock.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    return ((string)(this[this.tableView_S_Stock.供方批次号Column]));
                }
                set {
                    this[this.tableView_S_Stock.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_S_Stock.批次号Column]));
                }
                set {
                    this[this.tableView_S_Stock.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_Stock.单位Column]));
                }
                set {
                    this[this.tableView_S_Stock.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 库存数量 {
                get {
                    return ((int)(this[this.tableView_S_Stock.库存数量Column]));
                }
                set {
                    this[this.tableView_S_Stock.库存数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_Stock.入库时间Column]));
                }
                set {
                    this[this.tableView_S_Stock.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际单价 {
                get {
                    return ((decimal)(this[this.tableView_S_Stock.实际单价Column]));
                }
                set {
                    this[this.tableView_S_Stock.实际单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_Stock.实际金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“实际金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.实际金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.材料类别编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“材料类别编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.材料类别编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.材料类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“材料类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.材料类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Stock.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Stock”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Stock.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_Stock.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_Stock.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 单位ID {
                get {
                    return ((int)(this[this.tableView_S_Stock.单位IDColumn]));
                }
                set {
                    this[this.tableView_S_Stock.单位IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品状态 {
                get {
                    return ((string)(this[this.tableView_S_Stock.物品状态Column]));
                }
                set {
                    this[this.tableView_S_Stock.物品状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 版次号 {
                get {
                    return ((string)(this[this.tableView_S_Stock.版次号Column]));
                }
                set {
                    this[this.tableView_S_Stock.版次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 禁用 {
                get {
                    return ((bool)(this[this.tableView_S_Stock.禁用Column]));
                }
                set {
                    this[this.tableView_S_Stock.禁用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_Stock.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_Stock.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_Stock.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_Stock.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_Stock.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_Stock.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_Stock.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_Stock.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is实际金额Null() {
                return this.IsNull(this.tableView_S_Stock.实际金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set实际金额Null() {
                this[this.tableView_S_Stock.实际金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_Stock.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_Stock.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别编码Null() {
                return this.IsNull(this.tableView_S_Stock.材料类别编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别编码Null() {
                this[this.tableView_S_Stock.材料类别编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别名称Null() {
                return this.IsNull(this.tableView_S_Stock.材料类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别名称Null() {
                this[this.tableView_S_Stock.材料类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_Stock.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_Stock.库房代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialRequisitionRow : global::System.Data.DataRow {
            
            private View_S_MaterialRequisitionDataTable tableView_S_MaterialRequisition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRequisitionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialRequisition = ((View_S_MaterialRequisitionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 领料单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.领料单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.领料单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MaterialRequisition.日期Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.用途编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.用途编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途说明 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.用途说明Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.用途说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单据 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.关联单据Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.关联单据Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.关联单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.关联单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 领料部门 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.领料部门Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.领料部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.部门名称Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 领料类型 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.领料类型Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.领料类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 产品类型 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.产品类型Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.产品类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 领料台数 {
                get {
                    return ((int)(this[this.tableView_S_MaterialRequisition.领料台数Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.领料台数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.编制人Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.编制人编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.编制人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门主管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.部门主管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“部门主管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.部门主管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRequisition.单据状态Column]));
                }
                set {
                    this[this.tableView_S_MaterialRequisition.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_MaterialRequisition.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MaterialRequisition.出库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“出库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.出库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门领导签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRequisition.部门领导签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRequisition”中列“部门领导签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRequisition.部门领导签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门主管签名Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.部门主管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门主管签名Null() {
                this[this.tableView_S_MaterialRequisition.部门主管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_MaterialRequisition.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialRequisition.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_MaterialRequisition.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_MaterialRequisition.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_MaterialRequisition.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库时间Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.出库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库时间Null() {
                this[this.tableView_S_MaterialRequisition.出库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门领导签名Null() {
                return this.IsNull(this.tableView_S_MaterialRequisition.部门领导签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门领导签名Null() {
                this[this.tableView_S_MaterialRequisition.部门领导签名Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_ScrapBillRow : global::System.Data.DataRow {
            
            private View_S_ScrapBillDataTable tableView_S_ScrapBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ScrapBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_ScrapBill = ((View_S_ScrapBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废单号 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.报废单号Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.报废单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 报废时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_ScrapBill.报废时间Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.报废时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 损失金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ScrapBill.损失金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“损失金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.损失金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.申请人编码Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人签名 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.申请人签名Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.申请人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编码 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.申请部门编码Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.申请部门编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.申请部门Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.申请部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门主管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.部门主管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“部门主管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.部门主管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审批人签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.审批人签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“审批人签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.审批人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_ScrapBill.单据状态Column]));
                }
                set {
                    this[this.tableView_S_ScrapBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 知会检验名编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.知会检验名编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“知会检验名编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.知会检验名编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 知会检验名姓名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.知会检验名姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“知会检验名姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.知会检验名姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 批准时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ScrapBill.批准时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“批准时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.批准时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 仓库确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ScrapBill.仓库确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“仓库确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.仓库确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据报废类型 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.单据报废类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“单据报废类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.单据报废类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQE {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapBill.SQEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“SQE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.SQEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SQE处理日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ScrapBill.SQE处理日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“SQE处理日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.SQE处理日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_ScrapBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is损失金额Null() {
                return this.IsNull(this.tableView_S_ScrapBill.损失金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set损失金额Null() {
                this[this.tableView_S_ScrapBill.损失金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门主管签名Null() {
                return this.IsNull(this.tableView_S_ScrapBill.部门主管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门主管签名Null() {
                this[this.tableView_S_ScrapBill.部门主管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_S_ScrapBill.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_S_ScrapBill.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审批人签名Null() {
                return this.IsNull(this.tableView_S_ScrapBill.审批人签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审批人签名Null() {
                this[this.tableView_S_ScrapBill.审批人签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_ScrapBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_ScrapBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_ScrapBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_ScrapBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is知会检验名编码Null() {
                return this.IsNull(this.tableView_S_ScrapBill.知会检验名编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set知会检验名编码Null() {
                this[this.tableView_S_ScrapBill.知会检验名编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is知会检验名姓名Null() {
                return this.IsNull(this.tableView_S_ScrapBill.知会检验名姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set知会检验名姓名Null() {
                this[this.tableView_S_ScrapBill.知会检验名姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准时间Null() {
                return this.IsNull(this.tableView_S_ScrapBill.批准时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准时间Null() {
                this[this.tableView_S_ScrapBill.批准时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库确认时间Null() {
                return this.IsNull(this.tableView_S_ScrapBill.仓库确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库确认时间Null() {
                this[this.tableView_S_ScrapBill.仓库确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据报废类型Null() {
                return this.IsNull(this.tableView_S_ScrapBill.单据报废类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据报废类型Null() {
                this[this.tableView_S_ScrapBill.单据报废类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQENull() {
                return this.IsNull(this.tableView_S_ScrapBill.SQEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQENull() {
                this[this.tableView_S_ScrapBill.SQEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE处理日期Null() {
                return this.IsNull(this.tableView_S_ScrapBill.SQE处理日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE处理日期Null() {
                this[this.tableView_S_ScrapBill.SQE处理日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_ScrapBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_ScrapBill.是否已打印Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialReturnedInTheDepotRow : global::System.Data.DataRow {
            
            private View_S_MaterialReturnedInTheDepotDataTable tableView_S_MaterialReturnedInTheDepot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialReturnedInTheDepotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialReturnedInTheDepot = ((View_S_MaterialReturnedInTheDepotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.退库单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.退库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 退库时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MaterialReturnedInTheDepot.退库时间Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.退库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 初始用途 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.初始用途Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.初始用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门主管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.部门主管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“部门主管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.部门主管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.退库原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“退库原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.退库原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.单据状态Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.申请部门编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.申请部门编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.申请部门Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.申请部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 初始用途编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.初始用途编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.初始用途编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.申请人Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.申请人编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量工程师签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.质量工程师签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“质量工程师签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.质量工程师签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.退库类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“退库类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.退库类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_MaterialReturnedInTheDepot.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialReturnedInTheDepot.退库方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“退库方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.退库方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MaterialReturnedInTheDepot.入库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialReturnedInTheDepot”中列“入库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialReturnedInTheDepot.入库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门主管签名Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.部门主管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门主管签名Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.部门主管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退库原因Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.退库原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退库原因Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.退库原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量工程师签名Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.质量工程师签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量工程师签名Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.质量工程师签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退库类别Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.退库类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退库类别Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.退库类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退库方式Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.退库方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退库方式Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.退库方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库日期Null() {
                return this.IsNull(this.tableView_S_MaterialReturnedInTheDepot.入库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库日期Null() {
                this[this.tableView_S_MaterialReturnedInTheDepot.入库日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialListRejectBillRow : global::System.Data.DataRow {
            
            private View_S_MaterialListRejectBillDataTable tableView_S_MaterialListRejectBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialListRejectBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialListRejectBill = ((View_S_MaterialListRejectBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    return ((long)(this[this.tableView_S_MaterialListRejectBill.序号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.退货单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.退货单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.规格Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.供应商Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.批次号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 退货数 {
                get {
                    return ((int)(this[this.tableView_S_MaterialListRejectBill.退货数Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.退货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_MaterialListRejectBill.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.关联单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“关联单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.关联单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.供方批次Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“供方批次”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.供方批次Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 库存数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MaterialListRejectBill.库存数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“库存数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.库存数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListRejectBill.物品类别Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.物品类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“物品类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.物品类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_S_MaterialListRejectBill.单价Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    return ((decimal)(this[this.tableView_S_MaterialListRejectBill.金额Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 总金额 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.总金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“总金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.总金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListRejectBill.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListRejectBill”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否有发票 {
                get {
                    return ((bool)(this[this.tableView_S_MaterialListRejectBill.是否有发票Column]));
                }
                set {
                    this[this.tableView_S_MaterialListRejectBill.是否有发票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单号Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.关联单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单号Null() {
                this[this.tableView_S_MaterialListRejectBill.关联单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.供方批次Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次Null() {
                this[this.tableView_S_MaterialListRejectBill.供方批次Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库存数Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.库存数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库存数Null() {
                this[this.tableView_S_MaterialListRejectBill.库存数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_MaterialListRejectBill.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别名称Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.物品类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别名称Null() {
                this[this.tableView_S_MaterialListRejectBill.物品类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_MaterialListRejectBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_MaterialListRejectBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_MaterialListRejectBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总金额Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.总金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总金额Null() {
                this[this.tableView_S_MaterialListRejectBill.总金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialListRejectBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableView_S_MaterialListRejectBill.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageIDNull() {
                this[this.tableView_S_MaterialListRejectBill.StorageIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialRejectBillRow : global::System.Data.DataRow {
            
            private View_S_MaterialRejectBillDataTable tableView_S_MaterialRejectBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialRejectBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialRejectBill = ((View_S_MaterialRejectBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.退货单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.退货单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 退货时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MaterialRejectBill.退货时间Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.退货时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.退货原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“退货原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.退货原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.申请人编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.申请人Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.申请部门编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.申请部门编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门名称 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.申请部门名称Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.申请部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.财务签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“财务签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.财务签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_MaterialRejectBill.单据状态Column]));
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_MaterialRejectBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据类型 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.单据类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“单据类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.单据类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialRejectBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MaterialRejectBill.出库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialRejectBill”中列“出库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialRejectBill.出库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货原因Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.退货原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货原因Null() {
                this[this.tableView_S_MaterialRejectBill.退货原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务签名Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.财务签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务签名Null() {
                this[this.tableView_S_MaterialRejectBill.财务签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_MaterialRejectBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialRejectBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商Null() {
                this[this.tableView_S_MaterialRejectBill.供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_MaterialRejectBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据类型Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.单据类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据类型Null() {
                this[this.tableView_S_MaterialRejectBill.单据类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_MaterialRejectBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_MaterialRejectBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库日期Null() {
                return this.IsNull(this.tableView_S_MaterialRejectBill.出库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库日期Null() {
                this[this.tableView_S_MaterialRejectBill.出库日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FetchGoodsDetailBillRow : global::System.Data.DataRow {
            
            private View_S_FetchGoodsDetailBillDataTable tableView_S_FetchGoodsDetailBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsDetailBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FetchGoodsDetailBill = ((View_S_FetchGoodsDetailBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据编号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.单据编号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.单据编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 单据日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_FetchGoodsDetailBill.单据日期Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.单据日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.规格Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 数量 {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsDetailBill.数量Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.用途Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 领料部门 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.领料部门Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.领料部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.供应商Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.供应商批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“供应商批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.供应商批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.批次号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制签名 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.编制签名Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.编制签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门负责人签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.部门负责人签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“部门负责人签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.部门负责人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务签名 {
                get {
                    if (this.Is财务签名Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.财务签名Column]));
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.财务签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsDetailBill.仓管签名Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    if (this.Is备注Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.备注Column]));
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单据 {
                get {
                    if (this.Is关联单据Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.关联单据Column]));
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.关联单据Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单号 {
                get {
                    if (this.Is关联单号Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.关联单号Column]));
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.关联单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际单价 {
                get {
                    return ((decimal)(this[this.tableView_S_FetchGoodsDetailBill.实际单价Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.实际单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际金额 {
                get {
                    return ((decimal)(this[this.tableView_S_FetchGoodsDetailBill.实际金额Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.实际金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品编码 {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsDetailBill.物品编码Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.物品编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废内容描述 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.报废内容描述Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“报废内容描述”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.报废内容描述Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否已审核 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsDetailBill.是否已审核Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsDetailBill”中列“是否已审核”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.是否已审核Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid 序号 {
                get {
                    return ((global::System.Guid)(this[this.tableView_S_FetchGoodsDetailBill.序号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 业务类型ID {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsDetailBill.业务类型IDColumn]));
                }
                set {
                    this[this.tableView_S_FetchGoodsDetailBill.业务类型IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商批次号Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.供应商批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商批次号Null() {
                this[this.tableView_S_FetchGoodsDetailBill.供应商批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门负责人签名Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.部门负责人签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门负责人签名Null() {
                this[this.tableView_S_FetchGoodsDetailBill.部门负责人签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务签名Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.财务签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务签名Null() {
                this[this.tableView_S_FetchGoodsDetailBill.财务签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_FetchGoodsDetailBill.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_FetchGoodsDetailBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单据Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.关联单据Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单据Null() {
                this[this.tableView_S_FetchGoodsDetailBill.关联单据Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单号Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.关联单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单号Null() {
                this[this.tableView_S_FetchGoodsDetailBill.关联单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_FetchGoodsDetailBill.材料类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_FetchGoodsDetailBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_FetchGoodsDetailBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报废内容描述Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.报废内容描述Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报废内容描述Null() {
                this[this.tableView_S_FetchGoodsDetailBill.报废内容描述Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已审核Null() {
                return this.IsNull(this.tableView_S_FetchGoodsDetailBill.是否已审核Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已审核Null() {
                this[this.tableView_S_FetchGoodsDetailBill.是否已审核Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FetchGoodsSummaryTableRow : global::System.Data.DataRow {
            
            private View_S_FetchGoodsSummaryTableDataTable tableView_S_FetchGoodsSummaryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FetchGoodsSummaryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FetchGoodsSummaryTable = ((View_S_FetchGoodsSummaryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsSummaryTable.图号型号Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsSummaryTable.物品名称Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_FetchGoodsSummaryTable.规格Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 数量 {
                get {
                    return ((int)(this[this.tableView_S_FetchGoodsSummaryTable.数量Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_FetchGoodsSummaryTable.日期Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsSummaryTable.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsSummaryTable”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际单价 {
                get {
                    return ((decimal)(this[this.tableView_S_FetchGoodsSummaryTable.实际单价Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.实际单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际金额 {
                get {
                    return ((decimal)(this[this.tableView_S_FetchGoodsSummaryTable.实际金额Column]));
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.实际金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FetchGoodsSummaryTable.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FetchGoodsSummaryTable”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FetchGoodsSummaryTable.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_FetchGoodsSummaryTable.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_FetchGoodsSummaryTable.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_FetchGoodsSummaryTable.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_FetchGoodsSummaryTable.材料类别Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_InDepotDetailBillRow : global::System.Data.DataRow {
            
            private View_S_InDepotDetailBillDataTable tableView_S_InDepotDetailBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_InDepotDetailBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_InDepotDetailBill = ((View_S_InDepotDetailBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.规格Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 数量 {
                get {
                    return ((int)(this[this.tableView_S_InDepotDetailBill.数量Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际单价 {
                get {
                    return ((decimal)(this[this.tableView_S_InDepotDetailBill.实际单价Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.实际单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据编号 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.单据编号Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.单据编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 单据日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_InDepotDetailBill.单据日期Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.单据日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库人 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.入库人Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.入库人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.部门名称Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.供应商Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 单据标志 {
                get {
                    return ((int)(this[this.tableView_S_InDepotDetailBill.单据标志Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.单据标志Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否已审核 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.是否已审核Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“是否已审核”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.是否已审核Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 凭证号 {
                get {
                    return ((string)(this[this.tableView_S_InDepotDetailBill.凭证号Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.凭证号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 到票时间 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotDetailBill.到票时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“到票时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.到票时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际金额 {
                get {
                    return ((decimal)(this[this.tableView_S_InDepotDetailBill.实际金额Column]));
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.实际金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票单价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_InDepotDetailBill.发票单价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“发票单价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.发票单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_InDepotDetailBill.发票金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotDetailBill”中列“发票金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotDetailBill.发票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_InDepotDetailBill.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_InDepotDetailBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_InDepotDetailBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_InDepotDetailBill.材料类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_InDepotDetailBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_InDepotDetailBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已审核Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.是否已审核Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已审核Null() {
                this[this.tableView_S_InDepotDetailBill.是否已审核Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is到票时间Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.到票时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set到票时间Null() {
                this[this.tableView_S_InDepotDetailBill.到票时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票单价Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.发票单价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票单价Null() {
                this[this.tableView_S_InDepotDetailBill.发票单价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票金额Null() {
                return this.IsNull(this.tableView_S_InDepotDetailBill.发票金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票金额Null() {
                this[this.tableView_S_InDepotDetailBill.发票金额Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_InDepotSummaryTableRow : global::System.Data.DataRow {
            
            private View_S_InDepotSummaryTableDataTable tableView_S_InDepotSummaryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_InDepotSummaryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_InDepotSummaryTable = ((View_S_InDepotSummaryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_InDepotSummaryTable.图号型号Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_InDepotSummaryTable.物品名称Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_InDepotSummaryTable.规格Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 数量 {
                get {
                    return ((int)(this[this.tableView_S_InDepotSummaryTable.数量Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际单价 {
                get {
                    return ((decimal)(this[this.tableView_S_InDepotSummaryTable.实际单价Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.实际单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实际金额 {
                get {
                    return ((decimal)(this[this.tableView_S_InDepotSummaryTable.实际金额Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.实际金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_InDepotSummaryTable.日期Column]));
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotSummaryTable.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotSummaryTable”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_InDepotSummaryTable.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_InDepotSummaryTable”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_InDepotSummaryTable.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_InDepotSummaryTable.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_InDepotSummaryTable.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_InDepotSummaryTable.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_InDepotSummaryTable.材料类别Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_OrdinaryInDepotGoodsBillRow : global::System.Data.DataRow {
            
            private View_S_OrdinaryInDepotGoodsBillDataTable tableView_S_OrdinaryInDepotGoodsBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_OrdinaryInDepotGoodsBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_OrdinaryInDepotGoodsBill = ((View_S_OrdinaryInDepotGoodsBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_S_OrdinaryInDepotGoodsBill.序号Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.入库单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“入库单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.图号型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“图号型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.物品名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“物品名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.单位Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 计划单价 {
                get {
                    return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.计划单价Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.计划单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 暂估单价 {
                get {
                    return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.暂估单价Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.暂估单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 暂估金额 {
                get {
                    return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.暂估金额Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.暂估金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票单价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.发票单价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“发票单价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.发票单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_OrdinaryInDepotGoodsBill.发票金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“发票金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.发票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 大写金额 {
                get {
                    return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.大写金额Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.大写金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“物品类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否有发票 {
                get {
                    return ((bool)(this[this.tableView_S_OrdinaryInDepotGoodsBill.是否有发票Column]));
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.是否有发票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_OrdinaryInDepotGoodsBill”中列“物品类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库单号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.入库单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库单号Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.入库单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is图号型号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.图号型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set图号型号Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.图号型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品名称Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.物品名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品名称Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.物品名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is规格Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set规格Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is数量Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set数量Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票单价Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.发票单价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票单价Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.发票单价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票金额Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.发票金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票金额Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.发票金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.物品类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别名称Null() {
                return this.IsNull(this.tableView_S_OrdinaryInDepotGoodsBill.物品类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别名称Null() {
                this[this.tableView_S_OrdinaryInDepotGoodsBill.物品类别名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_MaterialRequisitionGoodsRow : global::System.Data.DataRow {
            
            private S_MaterialRequisitionGoodsDataTable tableS_MaterialRequisitionGoods;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_MaterialRequisitionGoodsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_MaterialRequisitionGoods = ((S_MaterialRequisitionGoodsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableS_MaterialRequisitionGoods.IDColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_ID {
                get {
                    return ((string)(this[this.tableS_MaterialRequisitionGoods.Bill_IDColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProviderCode {
                get {
                    return ((string)(this[this.tableS_MaterialRequisitionGoods.ProviderCodeColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.ProviderCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    return ((string)(this[this.tableS_MaterialRequisitionGoods.BatchNoColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicCount {
                get {
                    return ((decimal)(this[this.tableS_MaterialRequisitionGoods.BasicCountColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.BasicCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RequestCount {
                get {
                    return ((decimal)(this[this.tableS_MaterialRequisitionGoods.RequestCountColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.RequestCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RealCount {
                get {
                    return ((decimal)(this[this.tableS_MaterialRequisitionGoods.RealCountColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.RealCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableS_MaterialRequisitionGoods.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_MaterialRequisitionGoods”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShowPosition {
                get {
                    return ((double)(this[this.tableS_MaterialRequisitionGoods.ShowPositionColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.ShowPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsID {
                get {
                    return ((int)(this[this.tableS_MaterialRequisitionGoods.GoodsIDColumn]));
                }
                set {
                    this[this.tableS_MaterialRequisitionGoods.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableS_MaterialRequisitionGoods.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableS_MaterialRequisitionGoods.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_PrintBillRow : global::System.Data.DataRow {
            
            private View_S_PrintBillDataTable tableView_S_PrintBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_PrintBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_PrintBill = ((View_S_PrintBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分发部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.分发部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“分发部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.分发部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.单据类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“单据类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.单据类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.单据编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“单据编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.单据编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据颜色 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.单据颜色Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“单据颜色”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.单据颜色Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 打印时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_PrintBill.打印时间Column]));
                }
                set {
                    this[this.tableView_S_PrintBill.打印时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 打印人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.打印人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“打印人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.打印人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_PrintBill.审核状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_PrintBill”中列“审核状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_PrintBill.审核状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分发部门Null() {
                return this.IsNull(this.tableView_S_PrintBill.分发部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分发部门Null() {
                this[this.tableView_S_PrintBill.分发部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据类别Null() {
                return this.IsNull(this.tableView_S_PrintBill.单据类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据类别Null() {
                this[this.tableView_S_PrintBill.单据类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据编号Null() {
                return this.IsNull(this.tableView_S_PrintBill.单据编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据编号Null() {
                this[this.tableView_S_PrintBill.单据编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据颜色Null() {
                return this.IsNull(this.tableView_S_PrintBill.单据颜色Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据颜色Null() {
                this[this.tableView_S_PrintBill.单据颜色Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打印人Null() {
                return this.IsNull(this.tableView_S_PrintBill.打印人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打印人Null() {
                this[this.tableView_S_PrintBill.打印人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核状态Null() {
                return this.IsNull(this.tableView_S_PrintBill.审核状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核状态Null() {
                this[this.tableView_S_PrintBill.审核状态Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketingAllRow : global::System.Data.DataRow {
            
            private View_S_MarketingAllDataTable tableView_S_MarketingAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketingAll = ((View_S_MarketingAllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.IDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.DJHColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.LRRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“LRRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.LRRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“Dept”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.SHRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“SHRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.SHRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YWLX {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.YWLXColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.YWLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KFRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.KFRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“KFRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.KFRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJZT_FLAG {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.DJZT_FLAGColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJZT_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DELETE_FLAG {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.DELETE_FLAGColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DELETE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MarketingAll.DateColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.PriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ListID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.ListIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.ListIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DJ_ID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.DJ_IDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPID {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.CPIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.CPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.ProviderColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.UnitPriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoodsPrice {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.GoodsPriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Count {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.CountColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.UnitColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.BatchNoColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsRemark {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsRemarkColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YWFS {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.YWFSColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.YWFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageName {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.StorageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“StorageName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.StorageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsCodeColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsNameColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.SpecColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRKS {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.LRKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“LRKS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.LRKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AffirmDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingAll.AffirmDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“AffirmDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.AffirmDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.FSRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“FSRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.FSRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.LRRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRRYNull() {
                this[this.tableView_S_MarketingAll.LRRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNull() {
                return this.IsNull(this.tableView_S_MarketingAll.DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNull() {
                this[this.tableView_S_MarketingAll.DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.SHRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRYNull() {
                this[this.tableView_S_MarketingAll.SHRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKFRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.KFRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKFRYNull() {
                this[this.tableView_S_MarketingAll.KFRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableView_S_MarketingAll.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableView_S_MarketingAll.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableView_S_MarketingAll.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageIDNull() {
                this[this.tableView_S_MarketingAll.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageNameNull() {
                return this.IsNull(this.tableView_S_MarketingAll.StorageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageNameNull() {
                this[this.tableView_S_MarketingAll.StorageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRKSNull() {
                return this.IsNull(this.tableView_S_MarketingAll.LRKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRKSNull() {
                this[this.tableView_S_MarketingAll.LRKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAffirmDateNull() {
                return this.IsNull(this.tableView_S_MarketingAll.AffirmDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAffirmDateNull() {
                this[this.tableView_S_MarketingAll.AffirmDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.FSRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSRYNull() {
                this[this.tableView_S_MarketingAll.FSRYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_CannibalizeRow : global::System.Data.DataRow {
            
            private View_S_CannibalizeDataTable tableView_S_Cannibalize;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CannibalizeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_Cannibalize = ((View_S_CannibalizeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.DJHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“DJH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InStoreRoom {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.InStoreRoomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“InStoreRoom”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.InStoreRoomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutStoreRoom {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.OutStoreRoomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“OutStoreRoom”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.OutStoreRoomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AllPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_Cannibalize.AllPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“AllPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.AllPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.LRRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“LRRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.LRRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LRRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_Cannibalize.LRRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“LRRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.LRRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.SHRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“SHRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.SHRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SHRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_Cannibalize.SHRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“SHRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.SHRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CWRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.CWRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“CWRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.CWRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CWRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_Cannibalize.CWRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“CWRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.CWRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KFRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.KFRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“KFRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.KFRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime KFRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_Cannibalize.KFRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“KFRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.KFRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJZT {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.DJZTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“DJZT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.DJZTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AllRemark {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.AllRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“AllRemark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.AllRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.GoodsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“GoodsID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_Cannibalize.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“UnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.ProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“Provider”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_Cannibalize.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“Price”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Count {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_Cannibalize.CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“Count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“Unit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“BatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableView_S_Cannibalize.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableView_S_Cannibalize.IDColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DJ_ID {
                get {
                    try {
                        return ((int)(this[this.tableView_S_Cannibalize.DJ_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_Cannibalize”中列“DJ_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_Cannibalize.DJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableView_S_Cannibalize.GoodsCodeColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableView_S_Cannibalize.GoodsNameColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    return ((string)(this[this.tableView_S_Cannibalize.SpecColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoodsUnitPrice {
                get {
                    return ((decimal)(this[this.tableView_S_Cannibalize.GoodsUnitPriceColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.GoodsUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsType {
                get {
                    return ((string)(this[this.tableView_S_Cannibalize.GoodsTypeColumn]));
                }
                set {
                    this[this.tableView_S_Cannibalize.GoodsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJHNull() {
                return this.IsNull(this.tableView_S_Cannibalize.DJHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJHNull() {
                this[this.tableView_S_Cannibalize.DJHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInStoreRoomNull() {
                return this.IsNull(this.tableView_S_Cannibalize.InStoreRoomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInStoreRoomNull() {
                this[this.tableView_S_Cannibalize.InStoreRoomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutStoreRoomNull() {
                return this.IsNull(this.tableView_S_Cannibalize.OutStoreRoomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutStoreRoomNull() {
                this[this.tableView_S_Cannibalize.OutStoreRoomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllPriceNull() {
                return this.IsNull(this.tableView_S_Cannibalize.AllPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllPriceNull() {
                this[this.tableView_S_Cannibalize.AllPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRRYNull() {
                return this.IsNull(this.tableView_S_Cannibalize.LRRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRRYNull() {
                this[this.tableView_S_Cannibalize.LRRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRRQNull() {
                return this.IsNull(this.tableView_S_Cannibalize.LRRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRRQNull() {
                this[this.tableView_S_Cannibalize.LRRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRYNull() {
                return this.IsNull(this.tableView_S_Cannibalize.SHRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRYNull() {
                this[this.tableView_S_Cannibalize.SHRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRQNull() {
                return this.IsNull(this.tableView_S_Cannibalize.SHRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRQNull() {
                this[this.tableView_S_Cannibalize.SHRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCWRYNull() {
                return this.IsNull(this.tableView_S_Cannibalize.CWRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCWRYNull() {
                this[this.tableView_S_Cannibalize.CWRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCWRQNull() {
                return this.IsNull(this.tableView_S_Cannibalize.CWRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCWRQNull() {
                this[this.tableView_S_Cannibalize.CWRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKFRYNull() {
                return this.IsNull(this.tableView_S_Cannibalize.KFRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKFRYNull() {
                this[this.tableView_S_Cannibalize.KFRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKFRQNull() {
                return this.IsNull(this.tableView_S_Cannibalize.KFRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKFRQNull() {
                this[this.tableView_S_Cannibalize.KFRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJZTNull() {
                return this.IsNull(this.tableView_S_Cannibalize.DJZTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJZTNull() {
                this[this.tableView_S_Cannibalize.DJZTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllRemarkNull() {
                return this.IsNull(this.tableView_S_Cannibalize.AllRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllRemarkNull() {
                this[this.tableView_S_Cannibalize.AllRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsIDNull() {
                return this.IsNull(this.tableView_S_Cannibalize.GoodsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsIDNull() {
                this[this.tableView_S_Cannibalize.GoodsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableView_S_Cannibalize.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tableView_S_Cannibalize.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNull() {
                return this.IsNull(this.tableView_S_Cannibalize.ProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNull() {
                this[this.tableView_S_Cannibalize.ProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableView_S_Cannibalize.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableView_S_Cannibalize.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tableView_S_Cannibalize.CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tableView_S_Cannibalize.CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableView_S_Cannibalize.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableView_S_Cannibalize.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableView_S_Cannibalize.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableView_S_Cannibalize.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableView_S_Cannibalize.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableView_S_Cannibalize.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJ_IDNull() {
                return this.IsNull(this.tableView_S_Cannibalize.DJ_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJ_IDNull() {
                this[this.tableView_S_Cannibalize.DJ_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_CheckReturnRepairBillRow : global::System.Data.DataRow {
            
            private View_S_CheckReturnRepairBillDataTable tableView_S_CheckReturnRepairBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckReturnRepairBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_CheckReturnRepairBill = ((View_S_CheckReturnRepairBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_CheckReturnRepairBill.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联入库单号 {
                get {
                    return ((string)(this[this.tableView_S_CheckReturnRepairBill.关联入库单号Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.关联入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_CheckReturnRepairBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_CheckReturnRepairBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_CheckReturnRepairBill.规格Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_CheckReturnRepairBill.供货单位Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挑返原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.挑返原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“挑返原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.挑返原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挑返方法及要求 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.挑返方法及要求Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“挑返方法及要求”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.挑返方法及要求Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挑返损耗及工时 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.挑返损耗及工时Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“挑返损耗及工时”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.挑返损耗及工时Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.QC合格数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.QC合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC让步数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.QC让步数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.QC让步数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC退货数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.QC退货数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.QC退货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC报废数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.QC报废数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.QC报废数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SQE工时 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.SQE工时Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.SQE工时Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 创建人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.创建人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“创建人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.创建人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 创建日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckReturnRepairBill.创建日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“创建日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.创建日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckReturnRepairBill.编制日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“编制日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckReturnRepairBill.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 处理人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.处理人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“处理人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.处理人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 处理日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckReturnRepairBill.处理日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“处理日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.处理日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckReturnRepairBill.检验人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“检验人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.检验人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckReturnRepairBill.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckReturnRepairBill”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 挑返数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckReturnRepairBill.挑返数量Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.挑返数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 采购工程师合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.采购工程师合格数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.采购工程师合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 采购工程师不合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckReturnRepairBill.采购工程师不合格数Column]));
                }
                set {
                    this[this.tableView_S_CheckReturnRepairBill.采购工程师不合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_CheckReturnRepairBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_CheckReturnRepairBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_CheckReturnRepairBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is挑返原因Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.挑返原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set挑返原因Null() {
                this[this.tableView_S_CheckReturnRepairBill.挑返原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is挑返方法及要求Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.挑返方法及要求Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set挑返方法及要求Null() {
                this[this.tableView_S_CheckReturnRepairBill.挑返方法及要求Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is挑返损耗及工时Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.挑返损耗及工时Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set挑返损耗及工时Null() {
                this[this.tableView_S_CheckReturnRepairBill.挑返损耗及工时Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is创建人Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.创建人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set创建人Null() {
                this[this.tableView_S_CheckReturnRepairBill.创建人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is创建日期Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.创建日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set创建日期Null() {
                this[this.tableView_S_CheckReturnRepairBill.创建日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_S_CheckReturnRepairBill.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制日期Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.编制日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制日期Null() {
                this[this.tableView_S_CheckReturnRepairBill.编制日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人Null() {
                this[this.tableView_S_CheckReturnRepairBill.审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_S_CheckReturnRepairBill.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理人Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.处理人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理人Null() {
                this[this.tableView_S_CheckReturnRepairBill.处理人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理日期Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.处理日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理日期Null() {
                this[this.tableView_S_CheckReturnRepairBill.处理日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验人Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.检验人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验人Null() {
                this[this.tableView_S_CheckReturnRepairBill.检验人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_S_CheckReturnRepairBill.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_S_CheckReturnRepairBill.检验日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_IsolationManageBillRow : global::System.Data.DataRow {
            
            private View_S_IsolationManageBillDataTable tableView_S_IsolationManageBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_IsolationManageBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_IsolationManageBill = ((View_S_IsolationManageBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    try {
                        return ((int)(this[this.tableView_S_IsolationManageBill.物品IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“物品ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_IsolationManageBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_IsolationManageBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_IsolationManageBill.规格Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_IsolationManageBill.供货单位Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.材料类别编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“材料类别编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.材料类别编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.材料类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“材料类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.材料类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 隔离原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.隔离原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“隔离原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.隔离原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 隔离方法和要求 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.隔离方法和要求Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“隔离方法和要求”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.隔离方法和要求Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.QC合格数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.QC合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC让步数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.QC让步数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.QC让步数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC退货数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.QC退货数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.QC退货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC报废数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.QC报废数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.QC报废数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.编制日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“编制日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 调出人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.调出人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“调出人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.调出人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 调出日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.调出日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“调出日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.调出日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 处理人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.处理人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“处理人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.处理人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 处理日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.处理日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“处理日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.处理日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.检验人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“检验人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.检验人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 调入人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.调入人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“调入人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.调入人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 调入日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.调入日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“调入日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.调入日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联采购退货单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.关联采购退货单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“关联采购退货单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.关联采购退货单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.退货方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“退货方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.退货方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQE退货建议人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.SQE退货建议人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“SQE退货建议人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.SQE退货建议人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SQE退货建议填写时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.SQE退货建议填写时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“SQE退货建议填写时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.SQE退货建议填写时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.合格数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 不合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.不合格数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.不合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 处理工时 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.处理工时Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.处理工时Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QC废弃数 {
                get {
                    return ((decimal)(this[this.tableView_S_IsolationManageBill.QC废弃数Column]));
                }
                set {
                    this[this.tableView_S_IsolationManageBill.QC废弃数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 处理部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.处理部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“处理部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.处理部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 确认人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.确认人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“确认人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.确认人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 确认日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_IsolationManageBill.确认日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“确认日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.确认日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 确认说明 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.确认说明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“确认说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.确认说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 处理部门代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_IsolationManageBill.处理部门代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_IsolationManageBill”中列“处理部门代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_IsolationManageBill.处理部门代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_IsolationManageBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_IsolationManageBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_IsolationManageBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品IDNull() {
                return this.IsNull(this.tableView_S_IsolationManageBill.物品IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品IDNull() {
                this[this.tableView_S_IsolationManageBill.物品IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_IsolationManageBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_IsolationManageBill.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别编码Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.材料类别编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别编码Null() {
                this[this.tableView_S_IsolationManageBill.材料类别编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别名称Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.材料类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别名称Null() {
                this[this.tableView_S_IsolationManageBill.材料类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is隔离原因Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.隔离原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set隔离原因Null() {
                this[this.tableView_S_IsolationManageBill.隔离原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is隔离方法和要求Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.隔离方法和要求Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set隔离方法和要求Null() {
                this[this.tableView_S_IsolationManageBill.隔离方法和要求Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_S_IsolationManageBill.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.编制日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制日期Null() {
                this[this.tableView_S_IsolationManageBill.编制日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人Null() {
                this[this.tableView_S_IsolationManageBill.审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_S_IsolationManageBill.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调出人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.调出人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调出人Null() {
                this[this.tableView_S_IsolationManageBill.调出人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调出日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.调出日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调出日期Null() {
                this[this.tableView_S_IsolationManageBill.调出日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.处理人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理人Null() {
                this[this.tableView_S_IsolationManageBill.处理人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.处理日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理日期Null() {
                this[this.tableView_S_IsolationManageBill.处理日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.检验人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验人Null() {
                this[this.tableView_S_IsolationManageBill.检验人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_S_IsolationManageBill.检验日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调入人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.调入人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调入人Null() {
                this[this.tableView_S_IsolationManageBill.调入人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调入日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.调入日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调入日期Null() {
                this[this.tableView_S_IsolationManageBill.调入日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联采购退货单号Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.关联采购退货单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联采购退货单号Null() {
                this[this.tableView_S_IsolationManageBill.关联采购退货单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_IsolationManageBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货方式Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.退货方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货方式Null() {
                this[this.tableView_S_IsolationManageBill.退货方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE退货建议人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.SQE退货建议人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE退货建议人Null() {
                this[this.tableView_S_IsolationManageBill.SQE退货建议人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE退货建议填写时间Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.SQE退货建议填写时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE退货建议填写时间Null() {
                this[this.tableView_S_IsolationManageBill.SQE退货建议填写时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理部门Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.处理部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理部门Null() {
                this[this.tableView_S_IsolationManageBill.处理部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认人Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.确认人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认人Null() {
                this[this.tableView_S_IsolationManageBill.确认人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认日期Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.确认日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认日期Null() {
                this[this.tableView_S_IsolationManageBill.确认日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认说明Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.确认说明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认说明Null() {
                this[this.tableView_S_IsolationManageBill.确认说明Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is处理部门代码Null() {
                return this.IsNull(this.tableView_S_IsolationManageBill.处理部门代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set处理部门代码Null() {
                this[this.tableView_S_IsolationManageBill.处理部门代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MessMessageFeedbackBillRow : global::System.Data.DataRow {
            
            private View_S_MessMessageFeedbackBillDataTable tableView_S_MessMessageFeedbackBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MessMessageFeedbackBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MessMessageFeedbackBill = ((View_S_MessMessageFeedbackBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MessMessageFeedbackBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MessMessageFeedbackBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MessMessageFeedbackBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MessMessageFeedbackBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MessMessageFeedbackBill.规格Column]));
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MessMessageFeedbackBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MessMessageFeedbackBill.供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MessMessageFeedbackBill.关联单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“关联单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.关联单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 创建日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MessMessageFeedbackBill.创建日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MessMessageFeedbackBill”中列“创建日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MessMessageFeedbackBill.创建日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_MessMessageFeedbackBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_MessMessageFeedbackBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_MessMessageFeedbackBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商Null() {
                this[this.tableView_S_MessMessageFeedbackBill.供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单号Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.关联单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单号Null() {
                this[this.tableView_S_MessMessageFeedbackBill.关联单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is创建日期Null() {
                return this.IsNull(this.tableView_S_MessMessageFeedbackBill.创建日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set创建日期Null() {
                this[this.tableView_S_MessMessageFeedbackBill.创建日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_StorageCheckRow : global::System.Data.DataRow {
            
            private View_S_StorageCheckDataTable tableView_S_StorageCheck;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_StorageCheckRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_StorageCheck = ((View_S_StorageCheckDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 所属库房 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.所属库房Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“所属库房”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.所属库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.单据方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“单据方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.单据方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.编制人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“编制人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.编制人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_StorageCheck.编制日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“编制日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.审核人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“审核人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.审核人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_StorageCheck.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批准人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.批准人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“批准人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.批准人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 批准日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_StorageCheck.批准日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“批准日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.批准日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.仓管人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“仓管人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.仓管人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 确认日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_StorageCheck.确认日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“确认日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.确认日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.分管领导Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“分管领导”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.分管领导Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 分管领导批准日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_StorageCheck.分管领导批准日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“分管领导批准日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.分管领导批准日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_StorageCheck.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_StorageCheck”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_StorageCheck.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_StorageCheck.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_StorageCheck.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is所属库房Null() {
                return this.IsNull(this.tableView_S_StorageCheck.所属库房Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set所属库房Null() {
                this[this.tableView_S_StorageCheck.所属库房Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_StorageCheck.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_StorageCheck.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据方式Null() {
                return this.IsNull(this.tableView_S_StorageCheck.单据方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据方式Null() {
                this[this.tableView_S_StorageCheck.单据方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人员Null() {
                return this.IsNull(this.tableView_S_StorageCheck.编制人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人员Null() {
                this[this.tableView_S_StorageCheck.编制人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制日期Null() {
                return this.IsNull(this.tableView_S_StorageCheck.编制日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制日期Null() {
                this[this.tableView_S_StorageCheck.编制日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人员Null() {
                return this.IsNull(this.tableView_S_StorageCheck.审核人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人员Null() {
                this[this.tableView_S_StorageCheck.审核人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_S_StorageCheck.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_S_StorageCheck.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准人员Null() {
                return this.IsNull(this.tableView_S_StorageCheck.批准人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准人员Null() {
                this[this.tableView_S_StorageCheck.批准人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准日期Null() {
                return this.IsNull(this.tableView_S_StorageCheck.批准日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准日期Null() {
                this[this.tableView_S_StorageCheck.批准日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管人员Null() {
                return this.IsNull(this.tableView_S_StorageCheck.仓管人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管人员Null() {
                this[this.tableView_S_StorageCheck.仓管人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认日期Null() {
                return this.IsNull(this.tableView_S_StorageCheck.确认日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认日期Null() {
                this[this.tableView_S_StorageCheck.确认日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导Null() {
                return this.IsNull(this.tableView_S_StorageCheck.分管领导Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导Null() {
                this[this.tableView_S_StorageCheck.分管领导Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导批准日期Null() {
                return this.IsNull(this.tableView_S_StorageCheck.分管领导批准日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导批准日期Null() {
                this[this.tableView_S_StorageCheck.分管领导批准日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_StorageCheck.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_StorageCheck.库房代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_ReportForStorageCheckRow : global::System.Data.DataRow {
            
            private View_S_ReportForStorageCheckDataTable tableView_S_ReportForStorageCheck;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ReportForStorageCheckRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_ReportForStorageCheck = ((View_S_ReportForStorageCheckDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.DJHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“DJH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableView_S_ReportForStorageCheck.GoodsCodeColumn]));
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableView_S_ReportForStorageCheck.GoodsNameColumn]));
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    return ((string)(this[this.tableView_S_ReportForStorageCheck.SpecColumn]));
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“BatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZMSL {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ReportForStorageCheck.ZMSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“ZMSL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.ZMSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PDSL {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ReportForStorageCheck.PDSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“PDSL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.PDSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YKSL {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ReportForStorageCheck.YKSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“YKSL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.YKSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 所属库房 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.所属库房Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“所属库房”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.所属库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.编制人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“编制人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.编制人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.审核人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“审核人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.审核人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批准人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.批准人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“批准人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.批准人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.仓管人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“仓管人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.仓管人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 确认日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ReportForStorageCheck.确认日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“确认日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.确认日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ReportForStorageCheck.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_ReportForStorageCheck.入库时间Column]));
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 账龄 {
                get {
                    try {
                        return ((int)(this[this.tableView_S_ReportForStorageCheck.账龄Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ReportForStorageCheck”中列“账龄”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ReportForStorageCheck.账龄Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJHNull() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.DJHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJHNull() {
                this[this.tableView_S_ReportForStorageCheck.DJHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableView_S_ReportForStorageCheck.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZMSLNull() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.ZMSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZMSLNull() {
                this[this.tableView_S_ReportForStorageCheck.ZMSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPDSLNull() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.PDSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPDSLNull() {
                this[this.tableView_S_ReportForStorageCheck.PDSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYKSLNull() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.YKSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYKSLNull() {
                this[this.tableView_S_ReportForStorageCheck.YKSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is所属库房Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.所属库房Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set所属库房Null() {
                this[this.tableView_S_ReportForStorageCheck.所属库房Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人员Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.编制人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人员Null() {
                this[this.tableView_S_ReportForStorageCheck.编制人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人员Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.审核人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人员Null() {
                this[this.tableView_S_ReportForStorageCheck.审核人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准人员Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.批准人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准人员Null() {
                this[this.tableView_S_ReportForStorageCheck.批准人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管人员Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.仓管人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管人员Null() {
                this[this.tableView_S_ReportForStorageCheck.仓管人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认日期Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.确认日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认日期Null() {
                this[this.tableView_S_ReportForStorageCheck.确认日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_ReportForStorageCheck.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is账龄Null() {
                return this.IsNull(this.tableView_S_ReportForStorageCheck.账龄Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set账龄Null() {
                this[this.tableView_S_ReportForStorageCheck.账龄Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MaterialListReturnedInTheDepotRow : global::System.Data.DataRow {
            
            private View_S_MaterialListReturnedInTheDepotDataTable tableView_S_MaterialListReturnedInTheDepot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MaterialListReturnedInTheDepotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MaterialListReturnedInTheDepot = ((View_S_MaterialListReturnedInTheDepotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    return ((long)(this[this.tableView_S_MaterialListReturnedInTheDepot.序号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退库单号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.退库单号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.退库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.规格Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.供应商Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 退库数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MaterialListReturnedInTheDepot.退库数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“退库数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.退库数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别编码 {
                get {
                    return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.材料类别编码Column]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.材料类别编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.材料类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“材料类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.材料类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MaterialListReturnedInTheDepot.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_MaterialListReturnedInTheDepot.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 返修状态 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_MaterialListReturnedInTheDepot.返修状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MaterialListReturnedInTheDepot”中列“返修状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MaterialListReturnedInTheDepot.返修状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退库数Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.退库数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退库数Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.退库数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别名称Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.材料类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别名称Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.材料类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is返修状态Null() {
                return this.IsNull(this.tableView_S_MaterialListReturnedInTheDepot.返修状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set返修状态Null() {
                this[this.tableView_S_MaterialListReturnedInTheDepot.返修状态Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_ALLMessMessageFeedbackRow : global::System.Data.DataRow {
            
            private View_S_ALLMessMessageFeedbackDataTable tableView_S_ALLMessMessageFeedback;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ALLMessMessageFeedbackRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_ALLMessMessageFeedback = ((View_S_ALLMessMessageFeedbackDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableView_S_ALLMessMessageFeedback.IDColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.DJHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“DJH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InDepotBillID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.InDepotBillIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“InDepotBillID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.InDepotBillIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QCRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.QCRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QCRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QCRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime QCRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.QCRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QCRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QCRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQERY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQERYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQERY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SQERQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.SQERQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQERQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQERQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkMan {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.LinkManColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“LinkMan”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.LinkManColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkPhone {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.LinkPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“LinkPhone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.LinkPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkEmail {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.LinkEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“LinkEmail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.LinkEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RevertTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.RevertTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“RevertTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.RevertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLRD_LinkMan {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkManColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“JLRD_LinkMan”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkManColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLRD_LinkPhone {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“JLRD_LinkPhone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLRD_LinkEmail {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“JLRD_LinkEmail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForGoodsStatus {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.ForGoodsStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“ForGoodsStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.ForGoodsStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MessageFromStatus {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.MessageFromStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“MessageFromStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.MessageFromStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisqualificationDepict {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.DisqualificationDepictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“DisqualificationDepict”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.DisqualificationDepictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQEMindStatus {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQEMindStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEMindStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEMindStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQEElseMindMessage {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQEElseMindMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEElseMindMessage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEElseMindMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQEvalidateMessage {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQEvalidateMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEvalidateMessage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEvalidateMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQEYZRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQEYZRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEYZRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEYZRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SQEYZRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.SQEYZRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEYZRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEYZRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QEAffirmMessage {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.QEAffirmMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QEAffirmMessage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QEAffirmMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QEQRRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.QEQRRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QEQRRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QEQRRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime QEQRRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.QEQRRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QEQRRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QEQRRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJZT {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.DJZTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“DJZT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.DJZTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ArriveGoods_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_ALLMessMessageFeedback.ArriveGoods_TimeColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.ArriveGoods_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderFormNumber {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.OrderFormNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“OrderFormNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.OrderFormNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsID {
                get {
                    return ((int)(this[this.tableView_S_ALLMessMessageFeedback.GoodsIDColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableView_S_ALLMessMessageFeedback.GoodsCodeColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableView_S_ALLMessMessageFeedback.GoodsNameColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SpecColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProviderName {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.ProviderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“ProviderName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.ProviderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    return ((string)(this[this.tableView_S_ALLMessMessageFeedback.ProviderColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“BatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QEQR_RY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.QEQR_RYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QEQR_RY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QEQR_RYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQEYZ_RY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQEYZ_RYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQEYZ_RY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQEYZ_RYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QC_RY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.QC_RYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“QC_RY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.QC_RYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQE_RY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ALLMessMessageFeedback.SQE_RYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“SQE_RY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.SQE_RYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_ID {
                get {
                    return ((string)(this[this.tableView_S_ALLMessMessageFeedback.Bill_IDColumn]));
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Picture {
                get {
                    try {
                        return ((byte[])(this[this.tableView_S_ALLMessMessageFeedback.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“Picture”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.PictureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AllCount {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ALLMessMessageFeedback.AllCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“AllCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.AllCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DefectiveRate {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ALLMessMessageFeedback.DefectiveRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ALLMessMessageFeedback”中列“DefectiveRate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ALLMessMessageFeedback.DefectiveRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJHNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.DJHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJHNull() {
                this[this.tableView_S_ALLMessMessageFeedback.DJHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDepotBillIDNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.InDepotBillIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDepotBillIDNull() {
                this[this.tableView_S_ALLMessMessageFeedback.InDepotBillIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQCRYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QCRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQCRYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QCRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQCRQNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QCRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQCRQNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QCRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQERYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQERYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQERYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQERYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQERQNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQERQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQERQNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQERQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkManNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.LinkManColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkManNull() {
                this[this.tableView_S_ALLMessMessageFeedback.LinkManColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkPhoneNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.LinkPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkPhoneNull() {
                this[this.tableView_S_ALLMessMessageFeedback.LinkPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkEmailNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.LinkEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkEmailNull() {
                this[this.tableView_S_ALLMessMessageFeedback.LinkEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRevertTimeNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.RevertTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRevertTimeNull() {
                this[this.tableView_S_ALLMessMessageFeedback.RevertTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLRD_LinkManNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.JLRD_LinkManColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLRD_LinkManNull() {
                this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkManColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLRD_LinkPhoneNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.JLRD_LinkPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLRD_LinkPhoneNull() {
                this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLRD_LinkEmailNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.JLRD_LinkEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLRD_LinkEmailNull() {
                this[this.tableView_S_ALLMessMessageFeedback.JLRD_LinkEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForGoodsStatusNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.ForGoodsStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForGoodsStatusNull() {
                this[this.tableView_S_ALLMessMessageFeedback.ForGoodsStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageFromStatusNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.MessageFromStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageFromStatusNull() {
                this[this.tableView_S_ALLMessMessageFeedback.MessageFromStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisqualificationDepictNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.DisqualificationDepictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisqualificationDepictNull() {
                this[this.tableView_S_ALLMessMessageFeedback.DisqualificationDepictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEMindStatusNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEMindStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEMindStatusNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEMindStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEElseMindMessageNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEElseMindMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEElseMindMessageNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEElseMindMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEvalidateMessageNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEvalidateMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEvalidateMessageNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEvalidateMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEYZRYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEYZRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEYZRYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEYZRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEYZRQNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEYZRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEYZRQNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEYZRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQEAffirmMessageNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QEAffirmMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQEAffirmMessageNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QEAffirmMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQEQRRYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QEQRRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQEQRRYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QEQRRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQEQRRQNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QEQRRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQEQRRQNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QEQRRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJZTNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.DJZTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJZTNull() {
                this[this.tableView_S_ALLMessMessageFeedback.DJZTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderFormNumberNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.OrderFormNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderFormNumberNull() {
                this[this.tableView_S_ALLMessMessageFeedback.OrderFormNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNameNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.ProviderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNameNull() {
                this[this.tableView_S_ALLMessMessageFeedback.ProviderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableView_S_ALLMessMessageFeedback.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQEQR_RYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QEQR_RYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQEQR_RYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QEQR_RYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQEYZ_RYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQEYZ_RYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQEYZ_RYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQEYZ_RYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQC_RYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.QC_RYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQC_RYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.QC_RYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE_RYNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.SQE_RYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE_RYNull() {
                this[this.tableView_S_ALLMessMessageFeedback.SQE_RYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.PictureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureNull() {
                this[this.tableView_S_ALLMessMessageFeedback.PictureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllCountNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.AllCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllCountNull() {
                this[this.tableView_S_ALLMessMessageFeedback.AllCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefectiveRateNull() {
                return this.IsNull(this.tableView_S_ALLMessMessageFeedback.DefectiveRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefectiveRateNull() {
                this[this.tableView_S_ALLMessMessageFeedback.DefectiveRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketingPlanBillRow : global::System.Data.DataRow {
            
            private View_S_MarketingPlanBillDataTable tableView_S_MarketingPlanBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPlanBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketingPlanBill = ((View_S_MarketingPlanBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据年月 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.单据年月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“单据年月”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.单据年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第一个月计划总数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanBill.第一个月计划总数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“第一个月计划总数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.第一个月计划总数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第二个月计划总数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanBill.第二个月计划总数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“第二个月计划总数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.第二个月计划总数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第三个月计划总数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanBill.第三个月计划总数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“第三个月计划总数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.第三个月计划总数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingPlanBill.编制日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“编制日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingPlanBill.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批准人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.批准人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“批准人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.批准人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 批准日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingPlanBill.批准日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“批准日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.批准日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据类型 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanBill.单据类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanBill”中列“单据类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanBill.单据类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_MarketingPlanBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据年月Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.单据年月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据年月Null() {
                this[this.tableView_S_MarketingPlanBill.单据年月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_MarketingPlanBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第一个月计划总数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.第一个月计划总数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第一个月计划总数Null() {
                this[this.tableView_S_MarketingPlanBill.第一个月计划总数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第二个月计划总数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.第二个月计划总数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第二个月计划总数Null() {
                this[this.tableView_S_MarketingPlanBill.第二个月计划总数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第三个月计划总数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.第三个月计划总数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第三个月计划总数Null() {
                this[this.tableView_S_MarketingPlanBill.第三个月计划总数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_S_MarketingPlanBill.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制日期Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.编制日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制日期Null() {
                this[this.tableView_S_MarketingPlanBill.编制日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人Null() {
                this[this.tableView_S_MarketingPlanBill.审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_S_MarketingPlanBill.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准人Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.批准人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准人Null() {
                this[this.tableView_S_MarketingPlanBill.批准人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批准日期Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.批准日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批准日期Null() {
                this[this.tableView_S_MarketingPlanBill.批准日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MarketingPlanBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据类型Null() {
                return this.IsNull(this.tableView_S_MarketingPlanBill.单据类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据类型Null() {
                this[this.tableView_S_MarketingPlanBill.单据类型Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketingPlanListRow : global::System.Data.DataRow {
            
            private View_S_MarketingPlanListDataTable tableView_S_MarketingPlanList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPlanListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketingPlanList = ((View_S_MarketingPlanListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPlanList.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MarketingPlanList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPlanList.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MarketingPlanList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPlanList.规格Column]));
                }
                set {
                    this[this.tableView_S_MarketingPlanList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第一个月计划数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanList.第一个月计划数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“第一个月计划数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.第一个月计划数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第二个月计划数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanList.第二个月计划数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“第二个月计划数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.第二个月计划数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 第三个月计划数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPlanList.第三个月计划数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“第三个月计划数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.第三个月计划数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPlanList.单位Column]));
                }
                set {
                    this[this.tableView_S_MarketingPlanList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    try {
                        return ((int)(this[this.tableView_S_MarketingPlanList.物品IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“物品ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPlanList.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    try {
                        return ((long)(this[this.tableView_S_MarketingPlanList.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPlanList”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPlanList.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第一个月计划数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.第一个月计划数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第一个月计划数Null() {
                this[this.tableView_S_MarketingPlanList.第一个月计划数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第二个月计划数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.第二个月计划数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第二个月计划数Null() {
                this[this.tableView_S_MarketingPlanList.第二个月计划数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is第三个月计划数Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.第三个月计划数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set第三个月计划数Null() {
                this[this.tableView_S_MarketingPlanList.第三个月计划数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MarketingPlanList.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品IDNull() {
                return this.IsNull(this.tableView_S_MarketingPlanList.物品IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品IDNull() {
                this[this.tableView_S_MarketingPlanList.物品IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_MarketingPlanList.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.tableView_S_MarketingPlanList.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.tableView_S_MarketingPlanList.序号Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_P_DeliveryInspectionRow : global::System.Data.DataRow {
            
            private View_P_DeliveryInspectionDataTable tableView_P_DeliveryInspection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_P_DeliveryInspectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_P_DeliveryInspection = ((View_P_DeliveryInspectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 产品型号 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.产品型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“产品型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.产品型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 产品编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.产品编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“产品编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.产品编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 结论 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.结论Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“结论”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.结论Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_P_DeliveryInspection.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.关联单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“关联单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.关联单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检测项目 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.检测项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“检测项目”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.检测项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 不合格项目 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.不合格项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“不合格项目”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.不合格项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 不合格情况 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.不合格情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“不合格情况”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.不合格情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 最终判定 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.最终判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“最终判定”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.最终判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 判定人 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspection.判定人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“判定人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.判定人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 判定日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_P_DeliveryInspection.判定日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“判定日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.判定日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 不合格项目ID {
                get {
                    try {
                        return ((int)(this[this.tableView_P_DeliveryInspection.不合格项目IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspection”中列“不合格项目ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspection.不合格项目IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_P_DeliveryInspection.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is产品型号Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.产品型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set产品型号Null() {
                this[this.tableView_P_DeliveryInspection.产品型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is产品编号Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.产品编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set产品编号Null() {
                this[this.tableView_P_DeliveryInspection.产品编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is结论Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.结论Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set结论Null() {
                this[this.tableView_P_DeliveryInspection.结论Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_P_DeliveryInspection.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_P_DeliveryInspection.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_P_DeliveryInspection.检验日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_P_DeliveryInspection.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单号Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.关联单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单号Null() {
                this[this.tableView_P_DeliveryInspection.关联单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检测项目Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.检测项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检测项目Null() {
                this[this.tableView_P_DeliveryInspection.检测项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is不合格项目Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.不合格项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set不合格项目Null() {
                this[this.tableView_P_DeliveryInspection.不合格项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is不合格情况Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.不合格情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set不合格情况Null() {
                this[this.tableView_P_DeliveryInspection.不合格情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is最终判定Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.最终判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set最终判定Null() {
                this[this.tableView_P_DeliveryInspection.最终判定Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定人Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.判定人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定人Null() {
                this[this.tableView_P_DeliveryInspection.判定人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定日期Null() {
                return this.IsNull(this.tableView_P_DeliveryInspection.判定日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定日期Null() {
                this[this.tableView_P_DeliveryInspection.判定日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is不合格项目IDNull() {
                return this.IsNull(this.tableView_P_DeliveryInspection.不合格项目IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set不合格项目IDNull() {
                this[this.tableView_P_DeliveryInspection.不合格项目IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_P_DeliveryInspectionItemsRow : global::System.Data.DataRow {
            
            private View_P_DeliveryInspectionItemsDataTable tableView_P_DeliveryInspectionItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_P_DeliveryInspectionItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_P_DeliveryInspectionItems = ((View_P_DeliveryInspectionItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_P_DeliveryInspectionItems.序号Column]));
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 检测项目ID {
                get {
                    return ((int)(this[this.tableView_P_DeliveryInspectionItems.检测项目IDColumn]));
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.检测项目IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检测项目 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspectionItems.检测项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“检测项目”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.检测项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 技术要求ID {
                get {
                    try {
                        return ((int)(this[this.tableView_P_DeliveryInspectionItems.技术要求IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“技术要求ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.技术要求IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 技术要求 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspectionItems.技术要求Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“技术要求”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.技术要求Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 判定 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspectionItems.判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“判定”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspectionItems.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 不合格情况 {
                get {
                    try {
                        return ((string)(this[this.tableView_P_DeliveryInspectionItems.不合格情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_P_DeliveryInspectionItems”中列“不合格情况”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_P_DeliveryInspectionItems.不合格情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检测项目Null() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.检测项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检测项目Null() {
                this[this.tableView_P_DeliveryInspectionItems.检测项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is技术要求IDNull() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.技术要求IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set技术要求IDNull() {
                this[this.tableView_P_DeliveryInspectionItems.技术要求IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is技术要求Null() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.技术要求Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set技术要求Null() {
                this[this.tableView_P_DeliveryInspectionItems.技术要求Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定Null() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定Null() {
                this[this.tableView_P_DeliveryInspectionItems.判定Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_P_DeliveryInspectionItems.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is不合格情况Null() {
                return this.IsNull(this.tableView_P_DeliveryInspectionItems.不合格情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set不合格情况Null() {
                this[this.tableView_P_DeliveryInspectionItems.不合格情况Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Report_DeliveryInspectionRow : global::System.Data.DataRow {
            
            private View_Report_DeliveryInspectionDataTable tableView_Report_DeliveryInspection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Report_DeliveryInspectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Report_DeliveryInspection = ((View_Report_DeliveryInspectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_Report_DeliveryInspection.序号Column]));
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 产品型号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.产品型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“产品型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.产品型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 产品编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.产品编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“产品编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.产品编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 结论 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.结论Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“结论”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.结论Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Report_DeliveryInspection.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 检测项目ID {
                get {
                    return ((int)(this[this.tableView_Report_DeliveryInspection.检测项目IDColumn]));
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.检测项目IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检测项目 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.检测项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“检测项目”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.检测项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 技术要求 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.技术要求Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“技术要求”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.技术要求Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 判定 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“判定”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 不合格情况 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.不合格情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“不合格情况”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.不合格情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 判定人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.判定人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“判定人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.判定人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 最终判定 {
                get {
                    try {
                        return ((string)(this[this.tableView_Report_DeliveryInspection.最终判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“最终判定”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.最终判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 判定日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Report_DeliveryInspection.判定日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Report_DeliveryInspection”中列“判定日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Report_DeliveryInspection.判定日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_Report_DeliveryInspection.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is产品型号Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.产品型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set产品型号Null() {
                this[this.tableView_Report_DeliveryInspection.产品型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is产品编号Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.产品编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set产品编号Null() {
                this[this.tableView_Report_DeliveryInspection.产品编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is结论Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.结论Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set结论Null() {
                this[this.tableView_Report_DeliveryInspection.结论Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_Report_DeliveryInspection.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_Report_DeliveryInspection.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_Report_DeliveryInspection.检验日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检测项目Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.检测项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检测项目Null() {
                this[this.tableView_Report_DeliveryInspection.检测项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is技术要求Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.技术要求Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set技术要求Null() {
                this[this.tableView_Report_DeliveryInspection.技术要求Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定Null() {
                this[this.tableView_Report_DeliveryInspection.判定Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is不合格情况Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.不合格情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set不合格情况Null() {
                this[this.tableView_Report_DeliveryInspection.不合格情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定人Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.判定人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定人Null() {
                this[this.tableView_Report_DeliveryInspection.判定人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is最终判定Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.最终判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set最终判定Null() {
                this[this.tableView_Report_DeliveryInspection.最终判定Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定日期Null() {
                return this.IsNull(this.tableView_Report_DeliveryInspection.判定日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定日期Null() {
                this[this.tableView_Report_DeliveryInspection.判定日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_CheckOutInDepotBillRow : global::System.Data.DataRow {
            
            private View_S_CheckOutInDepotBillDataTable tableView_S_CheckOutInDepotBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckOutInDepotBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_CheckOutInDepotBill = ((View_S_CheckOutInDepotBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库单号 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.入库单号Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 订单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.订单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“订单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.订单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.供货单位Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.规格Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 版次号 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.版次号Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.版次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报检人编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.报检人编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“报检人编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.报检人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报检签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.报检签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“报检签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.报检签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 报检日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.报检日期Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.报检日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验报告编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.检验报告编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“检验报告编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.检验报告编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.检验入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“检验入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.检验入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 报检数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.报检数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.报检数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 合格数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.合格数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.合格数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 让步数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.让步数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.让步数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 退货数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.退货数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.退货数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 报废数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.报废数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.报废数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量信息 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.质量信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“质量信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.质量信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 入库数量 {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.入库数量Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.入库数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.质量签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“质量签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.质量签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 仓库确认数量 {
                get {
                    try {
                        return ((int)(this[this.tableView_S_CheckOutInDepotBill.仓库确认数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“仓库确认数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.仓库确认数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓库收货员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.仓库收货员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“仓库收货员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.仓库收货员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 到货日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.到货日期Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.到货日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotBill.单价Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_CheckOutInDepotBill.金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 大写金额 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.大写金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“大写金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.大写金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 计划单价 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotBill.计划单价Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.计划单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 计划金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_CheckOutInDepotBill.计划金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“计划金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.计划金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.采购签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“采购签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.采购签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓库 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.仓库Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.仓库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 回退理由 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.回退理由Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“回退理由”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.回退理由Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 仓库确认到货时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.仓库确认到货时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“仓库确认到货时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.仓库确认到货时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotBill.物品类别Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否有发票 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否有发票Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否有发票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否挑返 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否挑返Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否挑返Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 建议退货方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.建议退货方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“建议退货方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.建议退货方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQE退货建议提出人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“SQE退货建议提出人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SQE退货建议提出日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“SQE退货建议提出日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否仅限于返修箱用 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否仅限于返修箱用Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否仅限于返修箱用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否紧急报检 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否紧急报检Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否紧急报检Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否紧急放行 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotBill.是否紧急放行Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.是否紧急放行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 单位ID {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotBill.单位IDColumn]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.单位IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotBill.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotBill”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotBill.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is订单号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.订单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set订单号Null() {
                this[this.tableView_S_CheckOutInDepotBill.订单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_CheckOutInDepotBill.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_CheckOutInDepotBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_CheckOutInDepotBill.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检人编码Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.报检人编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检人编码Null() {
                this[this.tableView_S_CheckOutInDepotBill.报检人编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检签名Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.报检签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检签名Null() {
                this[this.tableView_S_CheckOutInDepotBill.报检签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验报告编号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.检验报告编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验报告编号Null() {
                this[this.tableView_S_CheckOutInDepotBill.检验报告编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验入库时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.检验入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验入库时间Null() {
                this[this.tableView_S_CheckOutInDepotBill.检验入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量信息Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.质量信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量信息Null() {
                this[this.tableView_S_CheckOutInDepotBill.质量信息Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_S_CheckOutInDepotBill.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量签名Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.质量签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量签名Null() {
                this[this.tableView_S_CheckOutInDepotBill.质量签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库确认数量Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.仓库确认数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库确认数量Null() {
                this[this.tableView_S_CheckOutInDepotBill.仓库确认数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库收货员Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.仓库收货员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库收货员Null() {
                this[this.tableView_S_CheckOutInDepotBill.仓库收货员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_CheckOutInDepotBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库时间Null() {
                this[this.tableView_S_CheckOutInDepotBill.入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is金额Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set金额Null() {
                this[this.tableView_S_CheckOutInDepotBill.金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is大写金额Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.大写金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set大写金额Null() {
                this[this.tableView_S_CheckOutInDepotBill.大写金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is计划金额Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.计划金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set计划金额Null() {
                this[this.tableView_S_CheckOutInDepotBill.计划金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is采购签名Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.采购签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set采购签名Null() {
                this[this.tableView_S_CheckOutInDepotBill.采购签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_CheckOutInDepotBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_CheckOutInDepotBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_CheckOutInDepotBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is回退理由Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.回退理由Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set回退理由Null() {
                this[this.tableView_S_CheckOutInDepotBill.回退理由Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_CheckOutInDepotBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_CheckOutInDepotBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库确认到货时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.仓库确认到货时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库确认到货时间Null() {
                this[this.tableView_S_CheckOutInDepotBill.仓库确认到货时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_CheckOutInDepotBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_CheckOutInDepotBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_CheckOutInDepotBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is建议退货方式Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.建议退货方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set建议退货方式Null() {
                this[this.tableView_S_CheckOutInDepotBill.建议退货方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE退货建议提出人Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.SQE退货建议提出人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE退货建议提出人Null() {
                this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQE退货建议提出日期Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.SQE退货建议提出日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQE退货建议提出日期Null() {
                this[this.tableView_S_CheckOutInDepotBill.SQE退货建议提出日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotBill.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_S_CheckOutInDepotBill.检验日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_HomemadeRejectBillRow : global::System.Data.DataRow {
            
            private S_HomemadeRejectBillDataTable tableS_HomemadeRejectBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_HomemadeRejectBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_HomemadeRejectBill = ((S_HomemadeRejectBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableS_HomemadeRejectBill.IDColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectBill.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_ID {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.Bill_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Bill_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bill_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_HomemadeRejectBill.Bill_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Bill_Time”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.Bill_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.ProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Provider”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Reason”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FillInPersonnelCode {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.FillInPersonnelCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“FillInPersonnelCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.FillInPersonnelCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FillInPersonnel {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.FillInPersonnelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“FillInPersonnel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.FillInPersonnelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Department”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinanceSignatory {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.FinanceSignatoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“FinanceSignatory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.FinanceSignatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepotManager {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.DepotManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“DepotManager”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.DepotManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillStatus {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.BillStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“BillStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.BillStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageID {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectBill.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OutDepotDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_HomemadeRejectBill.OutDepotDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectBill”中列“OutDepotDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectBill.OutDepotDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceFlag {
                get {
                    return ((int)(this[this.tableS_HomemadeRejectBill.InvoiceFlagColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectBill.InvoiceFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_IDNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.Bill_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_IDNull() {
                this[this.tableS_HomemadeRejectBill.Bill_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_TimeNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.Bill_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_TimeNull() {
                this[this.tableS_HomemadeRejectBill.Bill_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.ProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNull() {
                this[this.tableS_HomemadeRejectBill.ProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableS_HomemadeRejectBill.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFillInPersonnelCodeNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.FillInPersonnelCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFillInPersonnelCodeNull() {
                this[this.tableS_HomemadeRejectBill.FillInPersonnelCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFillInPersonnelNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.FillInPersonnelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFillInPersonnelNull() {
                this[this.tableS_HomemadeRejectBill.FillInPersonnelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tableS_HomemadeRejectBill.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinanceSignatoryNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.FinanceSignatoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinanceSignatoryNull() {
                this[this.tableS_HomemadeRejectBill.FinanceSignatoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepotManagerNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.DepotManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepotManagerNull() {
                this[this.tableS_HomemadeRejectBill.DepotManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableS_HomemadeRejectBill.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillStatusNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.BillStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillStatusNull() {
                this[this.tableS_HomemadeRejectBill.BillStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageIDNull() {
                this[this.tableS_HomemadeRejectBill.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutDepotDateNull() {
                return this.IsNull(this.tableS_HomemadeRejectBill.OutDepotDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutDepotDateNull() {
                this[this.tableS_HomemadeRejectBill.OutDepotDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_HomemadeRejectListRow : global::System.Data.DataRow {
            
            private S_HomemadeRejectListDataTable tableS_HomemadeRejectList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_HomemadeRejectListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_HomemadeRejectList = ((S_HomemadeRejectListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableS_HomemadeRejectList.IDColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_ID {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.Bill_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“Bill_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsID {
                get {
                    return ((int)(this[this.tableS_HomemadeRejectList.GoodsIDColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.ProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“Provider”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProviderBatchNo {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.ProviderBatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“ProviderBatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.ProviderBatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“BatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.AmountColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PlanUnitPrice {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.PlanUnitPriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.PlanUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PlanPrice {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.PlanPriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.PlanPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.UnitPriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.PriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPrice {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.TotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“TotalPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableS_HomemadeRejectList.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_HomemadeRejectList”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_HomemadeRejectList.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InvoiceUnitPrice {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.InvoiceUnitPriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.InvoiceUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InvoicePrice {
                get {
                    return ((decimal)(this[this.tableS_HomemadeRejectList.InvoicePriceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.InvoicePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HavingInvoice {
                get {
                    return ((bool)(this[this.tableS_HomemadeRejectList.HavingInvoiceColumn]));
                }
                set {
                    this[this.tableS_HomemadeRejectList.HavingInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_IDNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.Bill_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_IDNull() {
                this[this.tableS_HomemadeRejectList.Bill_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.ProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNull() {
                this[this.tableS_HomemadeRejectList.ProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderBatchNoNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.ProviderBatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderBatchNoNull() {
                this[this.tableS_HomemadeRejectList.ProviderBatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableS_HomemadeRejectList.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPriceNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.TotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPriceNull() {
                this[this.tableS_HomemadeRejectList.TotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableS_HomemadeRejectList.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableS_HomemadeRejectList.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_HomemadeRejectBillRow : global::System.Data.DataRow {
            
            private View_S_HomemadeRejectBillDataTable tableView_S_HomemadeRejectBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadeRejectBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_HomemadeRejectBill = ((View_S_HomemadeRejectBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.退货单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“退货单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.退货单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 退货时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_HomemadeRejectBill.退货时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“退货时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.退货时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.退货原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“退货原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.退货原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.申请人编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“申请人编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.申请人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“申请人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编码 {
                get {
                    return ((string)(this[this.tableView_S_HomemadeRejectBill.申请部门编码Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.申请部门编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.申请部门名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“申请部门名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.申请部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.财务签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“财务签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.财务签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_HomemadeRejectBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_HomemadeRejectBill.出库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectBill”中列“出库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectBill.出库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货单号Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.退货单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货单号Null() {
                this[this.tableView_S_HomemadeRejectBill.退货单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货时间Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.退货时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货时间Null() {
                this[this.tableView_S_HomemadeRejectBill.退货时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商Null() {
                this[this.tableView_S_HomemadeRejectBill.供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货原因Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.退货原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货原因Null() {
                this[this.tableView_S_HomemadeRejectBill.退货原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人编码Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.申请人编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人编码Null() {
                this[this.tableView_S_HomemadeRejectBill.申请人编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.申请人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人Null() {
                this[this.tableView_S_HomemadeRejectBill.申请人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请部门名称Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.申请部门名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请部门名称Null() {
                this[this.tableView_S_HomemadeRejectBill.申请部门名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务签名Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.财务签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务签名Null() {
                this[this.tableView_S_HomemadeRejectBill.财务签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_HomemadeRejectBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_HomemadeRejectBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_HomemadeRejectBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_HomemadeRejectBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_HomemadeRejectBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_HomemadeRejectBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库日期Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectBill.出库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库日期Null() {
                this[this.tableView_S_HomemadeRejectBill.出库日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_HomemadeRejectListRow : global::System.Data.DataRow {
            
            private View_S_HomemadeRejectListDataTable tableView_S_HomemadeRejectList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadeRejectListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_HomemadeRejectList = ((View_S_HomemadeRejectListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    return ((long)(this[this.tableView_S_HomemadeRejectList.序号Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退货单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.退货单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“退货单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.退货单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_HomemadeRejectList.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_HomemadeRejectList.图号型号Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_HomemadeRejectList.物品名称Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_HomemadeRejectList.规格Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.供方批次Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“供方批次”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.供方批次Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 退货数 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadeRejectList.退货数Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.退货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 库存数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_HomemadeRejectList.库存数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“库存数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.库存数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    return ((string)(this[this.tableView_S_HomemadeRejectList.物品类别Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.物品类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“物品类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.物品类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadeRejectList.单价Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadeRejectList.金额Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 总金额 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.总金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“总金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.总金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadeRejectList.库房编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadeRejectList”中列“库房编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.库房编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否有发票 {
                get {
                    return ((bool)(this[this.tableView_S_HomemadeRejectList.是否有发票Column]));
                }
                set {
                    this[this.tableView_S_HomemadeRejectList.是否有发票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退货单号Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.退货单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退货单号Null() {
                this[this.tableView_S_HomemadeRejectList.退货单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商Null() {
                this[this.tableView_S_HomemadeRejectList.供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.供方批次Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次Null() {
                this[this.tableView_S_HomemadeRejectList.供方批次Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_HomemadeRejectList.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库存数Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.库存数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库存数Null() {
                this[this.tableView_S_HomemadeRejectList.库存数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_HomemadeRejectList.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别名称Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.物品类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别名称Null() {
                this[this.tableView_S_HomemadeRejectList.物品类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_HomemadeRejectList.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_HomemadeRejectList.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_HomemadeRejectList.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总金额Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.总金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总金额Null() {
                this[this.tableView_S_HomemadeRejectList.总金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_HomemadeRejectList.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房编码Null() {
                return this.IsNull(this.tableView_S_HomemadeRejectList.库房编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房编码Null() {
                this[this.tableView_S_HomemadeRejectList.库房编码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FrockInDepotBillRow : global::System.Data.DataRow {
            
            private View_S_FrockInDepotBillDataTable tableView_S_FrockInDepotBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockInDepotBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FrockInDepotBill = ((View_S_FrockInDepotBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_S_FrockInDepotBill.单据号Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 单据提交时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_FrockInDepotBill.单据提交时间Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.单据提交时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.供应商编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“供应商编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.供应商编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.材料类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“材料类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockInDepotBill.入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 机加人员编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.机加人员编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“机加人员编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.机加人员编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 机加人员签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.机加人员签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“机加人员签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.机加人员签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.申请人编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“申请人编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.申请人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.申请人签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“申请人签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.申请人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 设计人编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.设计人编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“设计人编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.设计人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 设计人签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.设计人签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“设计人签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.设计人签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管员编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.仓管员编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“仓管员编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.仓管员编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 工装验证时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockInDepotBill.工装验证时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“工装验证时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.工装验证时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_FrockInDepotBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商编码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.供应商编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商编码Null() {
                this[this.tableView_S_FrockInDepotBill.供应商编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料类别Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.材料类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料类别Null() {
                this[this.tableView_S_FrockInDepotBill.材料类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库时间Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库时间Null() {
                this[this.tableView_S_FrockInDepotBill.入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is机加人员编码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.机加人员编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set机加人员编码Null() {
                this[this.tableView_S_FrockInDepotBill.机加人员编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is机加人员签名Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.机加人员签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set机加人员签名Null() {
                this[this.tableView_S_FrockInDepotBill.机加人员签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人编码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.申请人编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人编码Null() {
                this[this.tableView_S_FrockInDepotBill.申请人编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人签名Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.申请人签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人签名Null() {
                this[this.tableView_S_FrockInDepotBill.申请人签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is设计人编码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.设计人编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set设计人编码Null() {
                this[this.tableView_S_FrockInDepotBill.设计人编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is设计人签名Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.设计人签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set设计人签名Null() {
                this[this.tableView_S_FrockInDepotBill.设计人签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管员编码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.仓管员编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管员编码Null() {
                this[this.tableView_S_FrockInDepotBill.仓管员编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_FrockInDepotBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工装验证时间Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.工装验证时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工装验证时间Null() {
                this[this.tableView_S_FrockInDepotBill.工装验证时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_FrockInDepotBill.库房代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_FrockInDepotBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_FrockInDepotBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_FrockInDepotBill.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FrockInDepotGoodsBillRow : global::System.Data.DataRow {
            
            private View_S_FrockInDepotGoodsBillDataTable tableView_S_FrockInDepotGoodsBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockInDepotGoodsBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FrockInDepotGoodsBill = ((View_S_FrockInDepotGoodsBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_S_FrockInDepotGoodsBill.序号Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.规格Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_FrockInDepotGoodsBill.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别 {
                get {
                    return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.物品类别Column]));
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.物品类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.物品类别名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“物品类别名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.物品类别名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockInDepotGoodsBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockInDepotGoodsBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockInDepotGoodsBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is数量Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set数量Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品类别名称Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.物品类别名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品类别名称Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.物品类别名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_FrockInDepotGoodsBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_FrockInDepotGoodsBill.库房代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_FrockProvingReportRow : global::System.Data.DataRow {
            
            private S_FrockProvingReportDataTable tableS_FrockProvingReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_FrockProvingReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_FrockProvingReport = ((S_FrockProvingReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableS_FrockProvingReport.IDColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReport.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    return ((string)(this[this.tableS_FrockProvingReport.DJHColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReport.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJZT {
                get {
                    return ((string)(this[this.tableS_FrockProvingReport.DJZTColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReport.DJZTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConnectBillNumber {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.ConnectBillNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“ConnectBillNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.ConnectBillNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsID {
                get {
                    return ((int)(this[this.tableS_FrockProvingReport.GoodsIDColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReport.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrockNumber {
                get {
                    return ((string)(this[this.tableS_FrockProvingReport.FrockNumberColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReport.FrockNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZRY {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.BZRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“BZRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.BZRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BZRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_FrockProvingReport.BZRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“BZRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.BZRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamineVerdict {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.ExamineVerdictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“ExamineVerdict”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.ExamineVerdictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYRY {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.JYRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“JYRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.JYRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JYRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_FrockProvingReport.JYRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“JYRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.JYRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvingVerdict {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.ProvingVerdictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“ProvingVerdict”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.ProvingVerdictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YZRY {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.YZRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“YZRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.YZRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime YZRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_FrockProvingReport.YZRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“YZRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.YZRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinalVerdict {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.FinalVerdictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“FinalVerdict”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.FinalVerdictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInStock {
                get {
                    try {
                        return ((bool)(this[this.tableS_FrockProvingReport.IsInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“IsInStock”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.IsInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYRY {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.GYRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“GYRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.GYRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GYRQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS_FrockProvingReport.GYRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“GYRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.GYRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillType {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReport.BillTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReport”中列“BillType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReport.BillTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConnectBillNumberNull() {
                return this.IsNull(this.tableS_FrockProvingReport.ConnectBillNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConnectBillNumberNull() {
                this[this.tableS_FrockProvingReport.ConnectBillNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZRYNull() {
                return this.IsNull(this.tableS_FrockProvingReport.BZRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZRYNull() {
                this[this.tableS_FrockProvingReport.BZRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZRQNull() {
                return this.IsNull(this.tableS_FrockProvingReport.BZRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZRQNull() {
                this[this.tableS_FrockProvingReport.BZRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamineVerdictNull() {
                return this.IsNull(this.tableS_FrockProvingReport.ExamineVerdictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamineVerdictNull() {
                this[this.tableS_FrockProvingReport.ExamineVerdictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYRYNull() {
                return this.IsNull(this.tableS_FrockProvingReport.JYRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYRYNull() {
                this[this.tableS_FrockProvingReport.JYRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYRQNull() {
                return this.IsNull(this.tableS_FrockProvingReport.JYRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYRQNull() {
                this[this.tableS_FrockProvingReport.JYRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvingVerdictNull() {
                return this.IsNull(this.tableS_FrockProvingReport.ProvingVerdictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvingVerdictNull() {
                this[this.tableS_FrockProvingReport.ProvingVerdictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYZRYNull() {
                return this.IsNull(this.tableS_FrockProvingReport.YZRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYZRYNull() {
                this[this.tableS_FrockProvingReport.YZRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYZRQNull() {
                return this.IsNull(this.tableS_FrockProvingReport.YZRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYZRQNull() {
                this[this.tableS_FrockProvingReport.YZRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVerdictNull() {
                return this.IsNull(this.tableS_FrockProvingReport.FinalVerdictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVerdictNull() {
                this[this.tableS_FrockProvingReport.FinalVerdictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsInStockNull() {
                return this.IsNull(this.tableS_FrockProvingReport.IsInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsInStockNull() {
                this[this.tableS_FrockProvingReport.IsInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYRYNull() {
                return this.IsNull(this.tableS_FrockProvingReport.GYRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYRYNull() {
                this[this.tableS_FrockProvingReport.GYRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYRQNull() {
                return this.IsNull(this.tableS_FrockProvingReport.GYRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYRQNull() {
                this[this.tableS_FrockProvingReport.GYRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillTypeNull() {
                return this.IsNull(this.tableS_FrockProvingReport.BillTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillTypeNull() {
                this[this.tableS_FrockProvingReport.BillTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S_FrockProvingReportAttachedRow : global::System.Data.DataRow {
            
            private S_FrockProvingReportAttachedDataTable tableS_FrockProvingReportAttached;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S_FrockProvingReportAttachedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS_FrockProvingReportAttached = ((S_FrockProvingReportAttachedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableS_FrockProvingReportAttached.IDColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReportAttached.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    return ((string)(this[this.tableS_FrockProvingReportAttached.DJHColumn]));
                }
                set {
                    this[this.tableS_FrockProvingReportAttached.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttachedType {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReportAttached.AttachedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReportAttached”中列“AttachedType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReportAttached.AttachedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AskContent {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReportAttached.AskContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReportAttached”中列“AskContent”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReportAttached.AskContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnswerContent {
                get {
                    try {
                        return ((string)(this[this.tableS_FrockProvingReportAttached.AnswerContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“S_FrockProvingReportAttached”中列“AnswerContent”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableS_FrockProvingReportAttached.AnswerContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttachedTypeNull() {
                return this.IsNull(this.tableS_FrockProvingReportAttached.AttachedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttachedTypeNull() {
                this[this.tableS_FrockProvingReportAttached.AttachedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAskContentNull() {
                return this.IsNull(this.tableS_FrockProvingReportAttached.AskContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAskContentNull() {
                this[this.tableS_FrockProvingReportAttached.AskContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerContentNull() {
                return this.IsNull(this.tableS_FrockProvingReportAttached.AnswerContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerContentNull() {
                this[this.tableS_FrockProvingReportAttached.AnswerContentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_FrockProvingReportRow : global::System.Data.DataRow {
            
            private View_S_FrockProvingReportDataTable tableView_S_FrockProvingReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_FrockProvingReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_FrockProvingReport = ((View_S_FrockProvingReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_S_FrockProvingReport.单据号Column]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据类别 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.单据类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“单据类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.单据类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_FrockProvingReport.单据状态Column]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单据 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.关联单据Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“关联单据”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.关联单据Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装图号 {
                get {
                    return ((string)(this[this.tableView_S_FrockProvingReport.工装图号Column]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.工装图号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装名称 {
                get {
                    return ((string)(this[this.tableView_S_FrockProvingReport.工装名称Column]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.工装名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 工装编号 {
                get {
                    return ((string)(this[this.tableView_S_FrockProvingReport.工装编号Column]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.工装编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否入库 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_FrockProvingReport.是否入库Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“是否入库”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.是否入库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockProvingReport.编制日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“编制日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.检验人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“检验人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.检验人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockProvingReport.检验日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“检验日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.检验日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 验证人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.验证人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“验证人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.验证人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 验证日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockProvingReport.验证日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“验证日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.验证日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 判定人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_FrockProvingReport.判定人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“判定人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.判定人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 判定日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_FrockProvingReport.判定日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_FrockProvingReport”中列“判定日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_FrockProvingReport.判定日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_FrockProvingReport.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_FrockProvingReport.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据类别Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.单据类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据类别Null() {
                this[this.tableView_S_FrockProvingReport.单据类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单据Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.关联单据Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单据Null() {
                this[this.tableView_S_FrockProvingReport.关联单据Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否入库Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.是否入库Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否入库Null() {
                this[this.tableView_S_FrockProvingReport.是否入库Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_S_FrockProvingReport.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制日期Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.编制日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制日期Null() {
                this[this.tableView_S_FrockProvingReport.编制日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验人Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.检验人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验人Null() {
                this[this.tableView_S_FrockProvingReport.检验人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验日期Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.检验日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验日期Null() {
                this[this.tableView_S_FrockProvingReport.检验日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is验证人Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.验证人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set验证人Null() {
                this[this.tableView_S_FrockProvingReport.验证人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is验证日期Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.验证日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set验证日期Null() {
                this[this.tableView_S_FrockProvingReport.验证日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定人Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.判定人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定人Null() {
                this[this.tableView_S_FrockProvingReport.判定人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is判定日期Null() {
                return this.IsNull(this.tableView_S_FrockProvingReport.判定日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set判定日期Null() {
                this[this.tableView_S_FrockProvingReport.判定日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_ScrapGoodsRow : global::System.Data.DataRow {
            
            private View_S_ScrapGoodsDataTable tableView_S_ScrapGoods;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_ScrapGoodsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_ScrapGoods = ((View_S_ScrapGoodsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long 序号 {
                get {
                    return ((long)(this[this.tableView_S_ScrapGoods.序号Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废单号 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.报废单号Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_ScrapGoods.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.图号型号Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.物品名称Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.规格Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.供应商Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 责任供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.责任供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“责任供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.责任供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废原因 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.报废原因Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“报废原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废原因Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CVT编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.CVT编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“CVT编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.CVT编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 报废数量 {
                get {
                    return ((decimal)(this[this.tableView_S_ScrapGoods.报废数量Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 责任部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.责任部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“责任部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.责任部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 责任部门名称 {
                get {
                    return ((string)(this[this.tableView_S_ScrapGoods.责任部门名称Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.责任部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 责任类型 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.责任类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“责任类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.责任类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 报废类别 {
                get {
                    return ((int)(this[this.tableView_S_ScrapGoods.报废类别Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废类别描述 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.报废类别描述Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“报废类别描述”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废类别描述Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 损失金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ScrapGoods.损失金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“损失金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.损失金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_ScrapGoods.单价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“单价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 工时 {
                get {
                    return ((decimal)(this[this.tableView_S_ScrapGoods.工时Column]));
                }
                set {
                    this[this.tableView_S_ScrapGoods.工时Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报废方式 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.报废方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“报废方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.报废方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_ScrapGoods.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_ScrapGoods”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_ScrapGoods.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is责任供应商Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.责任供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set责任供应商Null() {
                this[this.tableView_S_ScrapGoods.责任供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报废原因Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.报废原因Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报废原因Null() {
                this[this.tableView_S_ScrapGoods.报废原因Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_ScrapGoods.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCVT编号Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.CVT编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCVT编号Null() {
                this[this.tableView_S_ScrapGoods.CVT编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is责任部门Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.责任部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set责任部门Null() {
                this[this.tableView_S_ScrapGoods.责任部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is责任类型Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.责任类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set责任类型Null() {
                this[this.tableView_S_ScrapGoods.责任类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报废类别描述Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.报废类别描述Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报废类别描述Null() {
                this[this.tableView_S_ScrapGoods.报废类别描述Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is损失金额Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.损失金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set损失金额Null() {
                this[this.tableView_S_ScrapGoods.损失金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单价Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.单价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单价Null() {
                this[this.tableView_S_ScrapGoods.单价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报废方式Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.报废方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报废方式Null() {
                this[this.tableView_S_ScrapGoods.报废方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_ScrapGoods.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_ScrapGoods.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Out_ManeuverBillRow : global::System.Data.DataRow {
            
            private View_Out_ManeuverBillDataTable tableView_Out_ManeuverBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Out_ManeuverBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Out_ManeuverBill = ((View_Out_ManeuverBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverBill.单据号Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.关联单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“关联单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.关联单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物流名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.物流名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“物流名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.物流名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物流单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.物流单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“物流单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.物流单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 出库库房 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.出库库房Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“出库库房”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.出库库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库库房 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.入库库房Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“入库库房”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.入库库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverBill.申请人Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.申请日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“申请日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.申请日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 出库人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.出库人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“出库人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.出库人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.出库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“出库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.出库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发货人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.发货人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“发货人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.发货人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 发货日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.发货日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“发货日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.发货日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收货人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.收货人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“收货人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.收货人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 收货日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.收货日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“收货日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.收货日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverBill.入库人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“入库人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.入库人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Out_ManeuverBill.入库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverBill”中列“入库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverBill.入库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_Out_ManeuverBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联单据号Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.关联单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联单据号Null() {
                this[this.tableView_Out_ManeuverBill.关联单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物流名称Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.物流名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物流名称Null() {
                this[this.tableView_Out_ManeuverBill.物流名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物流单号Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.物流单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物流单号Null() {
                this[this.tableView_Out_ManeuverBill.物流单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库库房Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.出库库房Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库库房Null() {
                this[this.tableView_Out_ManeuverBill.出库库房Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库库房Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.入库库房Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库库房Null() {
                this[this.tableView_Out_ManeuverBill.入库库房Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.申请日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请日期Null() {
                this[this.tableView_Out_ManeuverBill.申请日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人Null() {
                this[this.tableView_Out_ManeuverBill.审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_Out_ManeuverBill.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库人Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.出库人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库人Null() {
                this[this.tableView_Out_ManeuverBill.出库人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.出库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库日期Null() {
                this[this.tableView_Out_ManeuverBill.出库日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发货人Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.发货人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发货人Null() {
                this[this.tableView_Out_ManeuverBill.发货人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发货日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.发货日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发货日期Null() {
                this[this.tableView_Out_ManeuverBill.发货日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收货人Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.收货人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收货人Null() {
                this[this.tableView_Out_ManeuverBill.收货人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收货日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.收货日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收货日期Null() {
                this[this.tableView_Out_ManeuverBill.收货日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库人Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.入库人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库人Null() {
                this[this.tableView_Out_ManeuverBill.入库人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库日期Null() {
                return this.IsNull(this.tableView_Out_ManeuverBill.入库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库日期Null() {
                this[this.tableView_Out_ManeuverBill.入库日期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Out_ManeuverListRow : global::System.Data.DataRow {
            
            private View_Out_ManeuverListDataTable tableView_Out_ManeuverList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Out_ManeuverListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Out_ManeuverList = ((View_Out_ManeuverListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverList.图号型号Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverList.物品名称Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverList.规格Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 账务库房 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverList.账务库房Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverList”中列“账务库房”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverList.账务库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 申请数量 {
                get {
                    return ((decimal)(this[this.tableView_Out_ManeuverList.申请数量Column]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.申请数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发货数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Out_ManeuverList.发货数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverList”中列“发货数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverList.发货数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 收货数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Out_ManeuverList.收货数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverList”中列“收货数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverList.收货数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverList.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverList”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_Out_ManeuverList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Out_ManeuverList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Out_ManeuverList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_Out_ManeuverList.物品IDColumn]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 账务库房ID {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverList.账务库房IDColumn]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.账务库房IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_ID {
                get {
                    return ((string)(this[this.tableView_Out_ManeuverList.Bill_IDColumn]));
                }
                set {
                    this[this.tableView_Out_ManeuverList.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is账务库房Null() {
                return this.IsNull(this.tableView_Out_ManeuverList.账务库房Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set账务库房Null() {
                this[this.tableView_Out_ManeuverList.账务库房Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发货数量Null() {
                return this.IsNull(this.tableView_Out_ManeuverList.发货数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发货数量Null() {
                this[this.tableView_Out_ManeuverList.发货数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收货数量Null() {
                return this.IsNull(this.tableView_Out_ManeuverList.收货数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收货数量Null() {
                this[this.tableView_Out_ManeuverList.收货数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_Out_ManeuverList.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_Out_ManeuverList.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_Out_ManeuverList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_Out_ManeuverList.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_HomemadePartBillRow : global::System.Data.DataRow {
            
            private View_S_HomemadePartBillDataTable tableView_S_HomemadePartBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_HomemadePartBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_HomemadePartBill = ((View_S_HomemadePartBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库单号 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.入库单号Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 报检日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_HomemadePartBill.报检日期Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.报检日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.规格Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.单位Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供货单位 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.供货单位Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.供货单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报检人编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.报检人编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“报检人编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.报检人编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报检签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.报检签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“报检签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.报检签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验报告编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.检验报告编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“检验报告编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.检验报告编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_HomemadePartBill.检验入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“检验入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.检验入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 报检数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.报检数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.报检数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 合格数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.合格数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.合格数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 让步数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.让步数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.让步数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 退货数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.退货数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.退货数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 报废数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.报废数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.报废数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 入库数量 {
                get {
                    return ((int)(this[this.tableView_S_HomemadePartBill.入库数量Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.入库数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量信息 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.质量信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“质量信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.质量信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.质量签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“质量签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.质量签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓库收货员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.仓库收货员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“仓库收货员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.仓库收货员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管签名 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.仓管签名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“仓管签名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.仓管签名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadePartBill.单价Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadePartBill.金额Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 大写金额 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.大写金额Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.大写金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 计划单价 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadePartBill.计划单价Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.计划单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 计划金额 {
                get {
                    return ((decimal)(this[this.tableView_S_HomemadePartBill.计划金额Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.计划金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓库 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.仓库Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.仓库Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 仓库确认数量 {
                get {
                    try {
                        return ((int)(this[this.tableView_S_HomemadePartBill.仓库确认数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“仓库确认数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.仓库确认数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 回退理由 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.回退理由Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“回退理由”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.回退理由Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_HomemadePartBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 质量检验时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_HomemadePartBill.质量检验时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“质量检验时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.质量检验时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_HomemadePartBill.入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_HomemadePartBill.库房代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_HomemadePartBill”中列“库房代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_HomemadePartBill.库房代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    return ((string)(this[this.tableView_S_HomemadePartBill.库房名称Column]));
                }
                set {
                    this[this.tableView_S_HomemadePartBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_HomemadePartBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_HomemadePartBill.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检人编码Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.报检人编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检人编码Null() {
                this[this.tableView_S_HomemadePartBill.报检人编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检签名Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.报检签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检签名Null() {
                this[this.tableView_S_HomemadePartBill.报检签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验报告编号Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.检验报告编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验报告编号Null() {
                this[this.tableView_S_HomemadePartBill.检验报告编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验入库时间Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.检验入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验入库时间Null() {
                this[this.tableView_S_HomemadePartBill.检验入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量信息Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.质量信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量信息Null() {
                this[this.tableView_S_HomemadePartBill.质量信息Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_S_HomemadePartBill.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量签名Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.质量签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量签名Null() {
                this[this.tableView_S_HomemadePartBill.质量签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库收货员Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.仓库收货员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库收货员Null() {
                this[this.tableView_S_HomemadePartBill.仓库收货员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管签名Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.仓管签名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管签名Null() {
                this[this.tableView_S_HomemadePartBill.仓管签名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_HomemadePartBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_HomemadePartBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_HomemadePartBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓库确认数量Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.仓库确认数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓库确认数量Null() {
                this[this.tableView_S_HomemadePartBill.仓库确认数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is回退理由Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.回退理由Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set回退理由Null() {
                this[this.tableView_S_HomemadePartBill.回退理由Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_HomemadePartBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_HomemadePartBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_HomemadePartBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量检验时间Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.质量检验时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量检验时间Null() {
                this[this.tableView_S_HomemadePartBill.质量检验时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库时间Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库时间Null() {
                this[this.tableView_S_HomemadePartBill.入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房代码Null() {
                return this.IsNull(this.tableView_S_HomemadePartBill.库房代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房代码Null() {
                this[this.tableView_S_HomemadePartBill.库房代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_CheckOutInDepotForOutsourcingBillRow : global::System.Data.DataRow {
            
            private View_S_CheckOutInDepotForOutsourcingBillDataTable tableView_S_CheckOutInDepotForOutsourcingBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_CheckOutInDepotForOutsourcingBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_CheckOutInDepotForOutsourcingBill = ((View_S_CheckOutInDepotForOutsourcingBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单据号Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单据状态Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 关联订单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.关联订单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“关联订单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.关联订单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.图号型号Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.物品名称Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.规格Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料类别 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.材料类别Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.材料类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 版次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.版次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“版次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.版次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供应商编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“供应商编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供应商编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供方批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供方批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“供方批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供方批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 报检数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单位Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 委外费 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.委外费Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.委外费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单价 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单价Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.金额Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否仅限于返修箱 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否仅限于返修箱Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“是否仅限于返修箱”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否仅限于返修箱Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否紧急报检 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否紧急报检Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否紧急报检Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否包含原材料费 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否包含原材料费Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否包含原材料费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 原材料费 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.原材料费Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.原材料费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 确认到货数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验报告编号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验报告编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“检验报告编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验报告编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“检验员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 合格数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.合格数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.合格数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 让步数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.让步数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.让步数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 退货数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.退货数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.退货数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 报废数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报废数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报废数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量信息 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“质量信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否紧急放行 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否紧急放行Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否紧急放行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入库数 {
                get {
                    return ((decimal)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.入库数Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.入库数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 货架 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.货架Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“货架”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.货架Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 列 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.列Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“列”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.列Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 层 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.层Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“层”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.层Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报检人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“报检人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 报检时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“报检时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“财务人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 财务批准时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务批准时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“财务批准时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务批准时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 确认到货人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“确认到货人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 确认到货时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“确认到货时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质检人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质检人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“质检人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质检人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 检验时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“检验时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 质量主管 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“质量主管”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 质量主管审核时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管审核时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“质量主管审核时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管审核时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.仓管员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“仓管员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.仓管员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 入库时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.入库时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“入库时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.入库时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否有发票 {
                get {
                    return ((bool)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否有发票Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否有发票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 所属库房 {
                get {
                    return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.所属库房Column]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.所属库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.物品IDColumn]));
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房ID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_CheckOutInDepotForOutsourcingBill.库房IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_CheckOutInDepotForOutsourcingBill”中列“库房ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_CheckOutInDepotForOutsourcingBill.库房IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is关联订单号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.关联订单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set关联订单号Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.关联订单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is版次号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.版次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set版次号Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.版次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商编码Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.供应商编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商编码Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供应商编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供方批次号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.供方批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供方批次号Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.供方批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否仅限于返修箱Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.是否仅限于返修箱Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否仅限于返修箱Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否仅限于返修箱Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验报告编号Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.检验报告编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验报告编号Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验报告编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验员Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.检验员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验员Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量信息Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.质量信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量信息Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量信息Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is货架Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.货架Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set货架Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.货架Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is列Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.列Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set列Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.列Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is层Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.层Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set层Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.层Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检人Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.报检人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检人Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报检时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.报检时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报检时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.报检时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务人Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.财务人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务人Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务批准时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.财务批准时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务批准时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.财务批准时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认到货人Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认到货人Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is确认到货时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set确认到货时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.确认到货时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质检人Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.质检人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质检人Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质检人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.检验时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.检验时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量主管Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量主管Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is质量主管审核时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管审核时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set质量主管审核时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.质量主管审核时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管员Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.仓管员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管员Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.仓管员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入库时间Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.入库时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入库时间Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.入库时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房IDNull() {
                return this.IsNull(this.tableView_S_CheckOutInDepotForOutsourcingBill.库房IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房IDNull() {
                this[this.tableView_S_CheckOutInDepotForOutsourcingBill.库房IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 领料单汇总签字表Row : global::System.Data.DataRow {
            
            private 领料单汇总签字表DataTable table领料单汇总签字表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 领料单汇总签字表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table领料单汇总签字表 = ((领料单汇总签字表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.图号型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“图号型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.物品名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“物品名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 数量 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table领料单汇总签字表.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“领料单汇总签字表”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table领料单汇总签字表.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is图号型号Null() {
                return this.IsNull(this.table领料单汇总签字表.图号型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set图号型号Null() {
                this[this.table领料单汇总签字表.图号型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品名称Null() {
                return this.IsNull(this.table领料单汇总签字表.物品名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品名称Null() {
                this[this.table领料单汇总签字表.物品名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is规格Null() {
                return this.IsNull(this.table领料单汇总签字表.规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set规格Null() {
                this[this.table领料单汇总签字表.规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is数量Null() {
                return this.IsNull(this.table领料单汇总签字表.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set数量Null() {
                this[this.table领料单汇总签字表.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.table领料单汇总签字表.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.table领料单汇总签字表.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table领料单汇总签字表.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table领料单汇总签字表.序号Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_ReceiveSendSaveGatherBillRowChangeEvent : global::System.EventArgs {
            
            private S_ReceiveSendSaveGatherBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRowChangeEvent(S_ReceiveSendSaveGatherBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_ReceiveSendSaveGatherBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FetchGoodsWithdrawDepotBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_FetchGoodsWithdrawDepotBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRowChangeEvent(View_S_FetchGoodsWithdrawDepotBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsWithdrawDepotBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialRequisitionGoodsRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialRequisitionGoodsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRowChangeEvent(View_S_MaterialRequisitionGoodsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionGoodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_OrdinaryInDepotBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_OrdinaryInDepotBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRowChangeEvent(View_S_OrdinaryInDepotBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_B_BargainGoodsRowChangeEvent : global::System.EventArgs {
            
            private View_B_BargainGoodsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRowChangeEvent(View_B_BargainGoodsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainGoodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_B_BargainInfoRowChangeEvent : global::System.EventArgs {
            
            private View_B_BargainInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRowChangeEvent(View_B_BargainInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_BargainInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_StockRowChangeEvent : global::System.EventArgs {
            
            private View_S_StockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRowChangeEvent(View_S_StockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialRequisitionRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialRequisitionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRowChangeEvent(View_S_MaterialRequisitionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRequisitionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_ScrapBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_ScrapBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRowChangeEvent(View_S_ScrapBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialReturnedInTheDepotRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialReturnedInTheDepotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRowChangeEvent(View_S_MaterialReturnedInTheDepotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialReturnedInTheDepotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialListRejectBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialListRejectBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRowChangeEvent(View_S_MaterialListRejectBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListRejectBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialRejectBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialRejectBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRowChangeEvent(View_S_MaterialRejectBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialRejectBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FetchGoodsDetailBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_FetchGoodsDetailBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRowChangeEvent(View_S_FetchGoodsDetailBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsDetailBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FetchGoodsSummaryTableRowChangeEvent : global::System.EventArgs {
            
            private View_S_FetchGoodsSummaryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableRowChangeEvent(View_S_FetchGoodsSummaryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FetchGoodsSummaryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_InDepotDetailBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_InDepotDetailBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillRowChangeEvent(View_S_InDepotDetailBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotDetailBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_InDepotSummaryTableRowChangeEvent : global::System.EventArgs {
            
            private View_S_InDepotSummaryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableRowChangeEvent(View_S_InDepotSummaryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_InDepotSummaryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_OrdinaryInDepotGoodsBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_OrdinaryInDepotGoodsBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRowChangeEvent(View_S_OrdinaryInDepotGoodsBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_OrdinaryInDepotGoodsBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_MaterialRequisitionGoodsRowChangeEvent : global::System.EventArgs {
            
            private S_MaterialRequisitionGoodsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRowChangeEvent(S_MaterialRequisitionGoodsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_MaterialRequisitionGoodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_PrintBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_PrintBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillRowChangeEvent(View_S_PrintBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_PrintBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketingAllRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketingAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRowChangeEvent(View_S_MarketingAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_CannibalizeRowChangeEvent : global::System.EventArgs {
            
            private View_S_CannibalizeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRowChangeEvent(View_S_CannibalizeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CannibalizeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_CheckReturnRepairBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_CheckReturnRepairBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRowChangeEvent(View_S_CheckReturnRepairBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckReturnRepairBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_IsolationManageBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_IsolationManageBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillRowChangeEvent(View_S_IsolationManageBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_IsolationManageBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MessMessageFeedbackBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MessMessageFeedbackBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillRowChangeEvent(View_S_MessMessageFeedbackBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MessMessageFeedbackBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_StorageCheckRowChangeEvent : global::System.EventArgs {
            
            private View_S_StorageCheckRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckRowChangeEvent(View_S_StorageCheckRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_StorageCheckRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_ReportForStorageCheckRowChangeEvent : global::System.EventArgs {
            
            private View_S_ReportForStorageCheckRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckRowChangeEvent(View_S_ReportForStorageCheckRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ReportForStorageCheckRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MaterialListReturnedInTheDepotRowChangeEvent : global::System.EventArgs {
            
            private View_S_MaterialListReturnedInTheDepotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotRowChangeEvent(View_S_MaterialListReturnedInTheDepotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MaterialListReturnedInTheDepotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_ALLMessMessageFeedbackRowChangeEvent : global::System.EventArgs {
            
            private View_S_ALLMessMessageFeedbackRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackRowChangeEvent(View_S_ALLMessMessageFeedbackRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ALLMessMessageFeedbackRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketingPlanBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketingPlanBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillRowChangeEvent(View_S_MarketingPlanBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketingPlanListRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketingPlanListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListRowChangeEvent(View_S_MarketingPlanListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPlanListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_P_DeliveryInspectionRowChangeEvent : global::System.EventArgs {
            
            private View_P_DeliveryInspectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionRowChangeEvent(View_P_DeliveryInspectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_P_DeliveryInspectionItemsRowChangeEvent : global::System.EventArgs {
            
            private View_P_DeliveryInspectionItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsRowChangeEvent(View_P_DeliveryInspectionItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_P_DeliveryInspectionItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Report_DeliveryInspectionRowChangeEvent : global::System.EventArgs {
            
            private View_Report_DeliveryInspectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionRowChangeEvent(View_Report_DeliveryInspectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Report_DeliveryInspectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_CheckOutInDepotBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_CheckOutInDepotBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillRowChangeEvent(View_S_CheckOutInDepotBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_HomemadeRejectBillRowChangeEvent : global::System.EventArgs {
            
            private S_HomemadeRejectBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRowChangeEvent(S_HomemadeRejectBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_HomemadeRejectListRowChangeEvent : global::System.EventArgs {
            
            private S_HomemadeRejectListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRowChangeEvent(S_HomemadeRejectListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_HomemadeRejectListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_HomemadeRejectBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_HomemadeRejectBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRowChangeEvent(View_S_HomemadeRejectBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_HomemadeRejectListRowChangeEvent : global::System.EventArgs {
            
            private View_S_HomemadeRejectListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRowChangeEvent(View_S_HomemadeRejectListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadeRejectListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FrockInDepotBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_FrockInDepotBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillRowChangeEvent(View_S_FrockInDepotBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FrockInDepotGoodsBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_FrockInDepotGoodsBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRowChangeEvent(View_S_FrockInDepotGoodsBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockInDepotGoodsBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_FrockProvingReportRowChangeEvent : global::System.EventArgs {
            
            private S_FrockProvingReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRowChangeEvent(S_FrockProvingReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S_FrockProvingReportAttachedRowChangeEvent : global::System.EventArgs {
            
            private S_FrockProvingReportAttachedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRowChangeEvent(S_FrockProvingReportAttachedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S_FrockProvingReportAttachedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_FrockProvingReportRowChangeEvent : global::System.EventArgs {
            
            private View_S_FrockProvingReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportRowChangeEvent(View_S_FrockProvingReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_FrockProvingReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_ScrapGoodsRowChangeEvent : global::System.EventArgs {
            
            private View_S_ScrapGoodsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsRowChangeEvent(View_S_ScrapGoodsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_ScrapGoodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Out_ManeuverBillRowChangeEvent : global::System.EventArgs {
            
            private View_Out_ManeuverBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRowChangeEvent(View_Out_ManeuverBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Out_ManeuverListRowChangeEvent : global::System.EventArgs {
            
            private View_Out_ManeuverListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListRowChangeEvent(View_Out_ManeuverListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Out_ManeuverListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_HomemadePartBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_HomemadePartBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRowChangeEvent(View_S_HomemadePartBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_HomemadePartBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_CheckOutInDepotForOutsourcingBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillRowChangeEvent(View_S_CheckOutInDepotForOutsourcingBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_CheckOutInDepotForOutsourcingBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 领料单汇总签字表RowChangeEvent : global::System.EventArgs {
            
            private 领料单汇总签字表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表RowChangeEvent(领料单汇总签字表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 领料单汇总签字表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Expression.DepotManagementDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_ReceiveSendSaveGatherBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_ReceiveSendSaveGatherBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_ReceiveSendSaveGatherBill";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("FormerCount", "FormerCount");
            tableMapping.ColumnMappings.Add("FormerUnitPrice", "FormerUnitPrice");
            tableMapping.ColumnMappings.Add("FormerPrice", "FormerPrice");
            tableMapping.ColumnMappings.Add("NowInDepotCount", "NowInDepotCount");
            tableMapping.ColumnMappings.Add("NowInDepotUnitPrice", "NowInDepotUnitPrice");
            tableMapping.ColumnMappings.Add("NowInDepotPrice", "NowInDepotPrice");
            tableMapping.ColumnMappings.Add("NowOutDepotCount", "NowOutDepotCount");
            tableMapping.ColumnMappings.Add("NowOutDepotUnitPrice", "NowOutDepotUnitPrice");
            tableMapping.ColumnMappings.Add("NowOutDepotPrice", "NowOutDepotPrice");
            tableMapping.ColumnMappings.Add("NowExistCount", "NowExistCount");
            tableMapping.ColumnMappings.Add("NowExistUnitPrice", "NowExistUnitPrice");
            tableMapping.ColumnMappings.Add("NowExistPrice", "NowExistPrice");
            tableMapping.ColumnMappings.Add("MaterialType", "MaterialType");
            tableMapping.ColumnMappings.Add("CumulateNowInDepotCount", "CumulateNowInDepotCount");
            tableMapping.ColumnMappings.Add("CumulateNowInDepotUnitPrice", "CumulateNowInDepotUnitPrice");
            tableMapping.ColumnMappings.Add("CumulatedNowInDepotPrice", "CumulatedNowInDepotPrice");
            tableMapping.ColumnMappings.Add("CumulateNowOutDepotCount", "CumulateNowOutDepotCount");
            tableMapping.ColumnMappings.Add("CumulateNowOutDepotUnitPrice", "CumulateNowOutDepotUnitPrice");
            tableMapping.ColumnMappings.Add("CumulateNowOutDepotPrice", "CumulateNowOutDepotPrice");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [S_ReceiveSendSaveGatherBill] WHERE (([ID] = @Original_ID) AND ([GoodsCode] = @Original_GoodsCode) AND ((@IsNull_Spec = 1 AND [Spec] IS NULL) OR ([Spec] = @Original_Spec)) AND ([GoodsName] = @Original_GoodsName) AND ([FormerCount] = @Original_FormerCount) AND ([FormerUnitPrice] = @Original_FormerUnitPrice) AND ([FormerPrice] = @Original_FormerPrice) AND ([NowInDepotCount] = @Original_NowInDepotCount) AND ([NowInDepotUnitPrice] = @Original_NowInDepotUnitPrice) AND ([NowInDepotPrice] = @Original_NowInDepotPrice) AND ([NowOutDepotCount] = @Original_NowOutDepotCount) AND ([NowOutDepotUnitPrice] = @Original_NowOutDepotUnitPrice) AND ([NowOutDepotPrice] = @Original_NowOutDepotPrice) AND ([NowExistCount] = @Original_NowExistCount) AND ([NowExistUnitPrice] = @Original_NowExistUnitPrice) AND ([NowExistPrice] = @Original_NowExistPrice) AND ((@IsNull_MaterialType = 1 AND [MaterialType] IS NULL) OR ([MaterialType] = @Original_MaterialType)) AND ([CumulateNowInDepotCount] = @Original_CumulateNowInDepotCount) AND ([CumulateNowInDepotUnitPrice] = @Original_CumulateNowInDepotUnitPrice) AND ([CumulateNowOutDepotCount] = @Original_CumulateNowOutDepotCount) AND ([CumulateNowOutDepotPrice] = @Original_CumulateNowOutDepotPrice) AND ([CumulateNowOutDepotUnitPrice] = @Original_CumulateNowOutDepotUnitPrice) AND ([CumulatedNowInDepotPrice] = @Original_CumulatedNowInDepotPrice))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spec", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulatedNowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulatedNowInDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [S_ReceiveSendSaveGatherBill] ([ID], [GoodsCode], [Spec], [GoodsName], [FormerCount], [FormerUnitPrice], [FormerPrice], [NowInDepotCount], [NowInDepotUnitPrice], [NowInDepotPrice], [NowOutDepotCount], [NowOutDepotUnitPrice], [NowOutDepotPrice], [NowExistCount], [NowExistUnitPrice], [NowExistPrice], [MaterialType], [CumulateNowInDepotCount], [CumulateNowInDepotUnitPrice], [CumulateNowOutDepotCount], [CumulateNowOutDepotPrice], [CumulateNowOutDepotUnitPrice], [CumulatedNowInDepotPrice]) VALUES (@ID, @GoodsCode, @Spec, @GoodsName, @FormerCount, @FormerUnitPrice, @FormerPrice, @NowInDepotCount, @NowInDepotUnitPrice, @NowInDepotPrice, @NowOutDepotCount, @NowOutDepotUnitPrice, @NowOutDepotPrice, @NowExistCount, @NowExistUnitPrice, @NowExistPrice, @MaterialType, @CumulateNowInDepotCount, @CumulateNowInDepotUnitPrice, @CumulateNowOutDepotCount, @CumulateNowOutDepotPrice, @CumulateNowOutDepotUnitPrice, @CumulatedNowInDepotPrice);
SELECT ID, GoodsCode, Spec, GoodsName, FormerCount, FormerUnitPrice, FormerPrice, NowInDepotCount, NowInDepotUnitPrice, NowInDepotPrice, NowOutDepotCount, NowOutDepotUnitPrice, NowOutDepotPrice, NowExistCount, NowExistUnitPrice, NowExistPrice, MaterialType, CumulateNowInDepotCount, CumulateNowInDepotUnitPrice, CumulateNowOutDepotCount, CumulateNowOutDepotPrice, CumulateNowOutDepotUnitPrice, CumulatedNowInDepotPrice FROM S_ReceiveSendSaveGatherBill WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spec", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulatedNowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulatedNowInDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [S_ReceiveSendSaveGatherBill] SET [ID] = @ID, [GoodsCode] = @GoodsCode, [S" +
                "pec] = @Spec, [GoodsName] = @GoodsName, [FormerCount] = @FormerCount, [FormerUni" +
                "tPrice] = @FormerUnitPrice, [FormerPrice] = @FormerPrice, [NowInDepotCount] = @N" +
                "owInDepotCount, [NowInDepotUnitPrice] = @NowInDepotUnitPrice, [NowInDepotPrice] " +
                "= @NowInDepotPrice, [NowOutDepotCount] = @NowOutDepotCount, [NowOutDepotUnitPric" +
                "e] = @NowOutDepotUnitPrice, [NowOutDepotPrice] = @NowOutDepotPrice, [NowExistCou" +
                "nt] = @NowExistCount, [NowExistUnitPrice] = @NowExistUnitPrice, [NowExistPrice] " +
                "= @NowExistPrice, [MaterialType] = @MaterialType, [CumulateNowInDepotCount] = @C" +
                "umulateNowInDepotCount, [CumulateNowInDepotUnitPrice] = @CumulateNowInDepotUnitP" +
                "rice, [CumulateNowOutDepotCount] = @CumulateNowOutDepotCount, [CumulateNowOutDep" +
                "otPrice] = @CumulateNowOutDepotPrice, [CumulateNowOutDepotUnitPrice] = @Cumulate" +
                "NowOutDepotUnitPrice, [CumulatedNowInDepotPrice] = @CumulatedNowInDepotPrice WHE" +
                "RE (([ID] = @Original_ID) AND ([GoodsCode] = @Original_GoodsCode) AND ((@IsNull_" +
                "Spec = 1 AND [Spec] IS NULL) OR ([Spec] = @Original_Spec)) AND ([GoodsName] = @O" +
                "riginal_GoodsName) AND ([FormerCount] = @Original_FormerCount) AND ([FormerUnitP" +
                "rice] = @Original_FormerUnitPrice) AND ([FormerPrice] = @Original_FormerPrice) A" +
                "ND ([NowInDepotCount] = @Original_NowInDepotCount) AND ([NowInDepotUnitPrice] = " +
                "@Original_NowInDepotUnitPrice) AND ([NowInDepotPrice] = @Original_NowInDepotPric" +
                "e) AND ([NowOutDepotCount] = @Original_NowOutDepotCount) AND ([NowOutDepotUnitPr" +
                "ice] = @Original_NowOutDepotUnitPrice) AND ([NowOutDepotPrice] = @Original_NowOu" +
                "tDepotPrice) AND ([NowExistCount] = @Original_NowExistCount) AND ([NowExistUnitP" +
                "rice] = @Original_NowExistUnitPrice) AND ([NowExistPrice] = @Original_NowExistPr" +
                "ice) AND ((@IsNull_MaterialType = 1 AND [MaterialType] IS NULL) OR ([MaterialTyp" +
                "e] = @Original_MaterialType)) AND ([CumulateNowInDepotCount] = @Original_Cumulat" +
                "eNowInDepotCount) AND ([CumulateNowInDepotUnitPrice] = @Original_CumulateNowInDe" +
                "potUnitPrice) AND ([CumulateNowOutDepotCount] = @Original_CumulateNowOutDepotCou" +
                "nt) AND ([CumulateNowOutDepotPrice] = @Original_CumulateNowOutDepotPrice) AND ([" +
                "CumulateNowOutDepotUnitPrice] = @Original_CumulateNowOutDepotUnitPrice) AND ([Cu" +
                "mulatedNowInDepotPrice] = @Original_CumulatedNowInDepotPrice));\r\nSELECT ID, Good" +
                "sCode, Spec, GoodsName, FormerCount, FormerUnitPrice, FormerPrice, NowInDepotCou" +
                "nt, NowInDepotUnitPrice, NowInDepotPrice, NowOutDepotCount, NowOutDepotUnitPrice" +
                ", NowOutDepotPrice, NowExistCount, NowExistUnitPrice, NowExistPrice, MaterialTyp" +
                "e, CumulateNowInDepotCount, CumulateNowInDepotUnitPrice, CumulateNowOutDepotCoun" +
                "t, CumulateNowOutDepotPrice, CumulateNowOutDepotUnitPrice, CumulatedNowInDepotPr" +
                "ice FROM S_ReceiveSendSaveGatherBill WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spec", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormerPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NowExistPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulateNowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CumulatedNowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulatedNowInDepotPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spec", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormerPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormerPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowInDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowOutDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NowExistPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NowExistPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowInDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowInDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowInDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulateNowOutDepotUnitPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulateNowOutDepotUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CumulatedNowInDepotPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CumulatedNowInDepotPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, GoodsCode, Spec, GoodsName, FormerCount, FormerUnitPrice, FormerPrice, NowInDepotCount, NowInDepotUnitPrice, NowInDepotPrice, NowOutDepotCount, NowOutDepotUnitPrice, NowOutDepotPrice, NowExistCount, NowExistUnitPrice, NowExistPrice, MaterialType, CumulateNowInDepotCount, CumulateNowInDepotUnitPrice, CumulateNowOutDepotCount, CumulateNowOutDepotPrice, CumulateNowOutDepotUnitPrice, CumulatedNowInDepotPrice FROM S_ReceiveSendSaveGatherBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_ReceiveSendSaveGatherBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_ReceiveSendSaveGatherBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_ReceiveSendSaveGatherBillDataTable dataTable = new DepotManagementDataSet.S_ReceiveSendSaveGatherBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_ReceiveSendSaveGatherBillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_ReceiveSendSaveGatherBill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.Guid Original_ID, 
                    string Original_GoodsCode, 
                    string Original_Spec, 
                    string Original_GoodsName, 
                    int Original_FormerCount, 
                    string Original_FormerUnitPrice, 
                    string Original_FormerPrice, 
                    int Original_NowInDepotCount, 
                    string Original_NowInDepotUnitPrice, 
                    string Original_NowInDepotPrice, 
                    int Original_NowOutDepotCount, 
                    string Original_NowOutDepotUnitPrice, 
                    string Original_NowOutDepotPrice, 
                    int Original_NowExistCount, 
                    string Original_NowExistUnitPrice, 
                    string Original_NowExistPrice, 
                    string Original_MaterialType, 
                    int Original_CumulateNowInDepotCount, 
                    string Original_CumulateNowInDepotUnitPrice, 
                    int Original_CumulateNowOutDepotCount, 
                    string Original_CumulateNowOutDepotPrice, 
                    string Original_CumulateNowOutDepotUnitPrice, 
                    string Original_CumulatedNowInDepotPrice) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ID));
            if ((Original_GoodsCode == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_GoodsCode));
            }
            if ((Original_Spec == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Spec));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_FormerCount));
            if ((Original_FormerUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_FormerUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FormerUnitPrice));
            }
            if ((Original_FormerPrice == null)) {
                throw new global::System.ArgumentNullException("Original_FormerPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_FormerPrice));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_NowInDepotCount));
            if ((Original_NowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowInDepotUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_NowInDepotUnitPrice));
            }
            if ((Original_NowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowInDepotPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_NowInDepotPrice));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_NowOutDepotCount));
            if ((Original_NowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowOutDepotUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_NowOutDepotUnitPrice));
            }
            if ((Original_NowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowOutDepotPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_NowOutDepotPrice));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_NowExistCount));
            if ((Original_NowExistUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowExistUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_NowExistUnitPrice));
            }
            if ((Original_NowExistPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowExistPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_NowExistPrice));
            }
            if ((Original_MaterialType == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MaterialType));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_CumulateNowInDepotCount));
            if ((Original_CumulateNowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowInDepotUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_CumulateNowInDepotUnitPrice));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_CumulateNowOutDepotCount));
            if ((Original_CumulateNowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowOutDepotPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CumulateNowOutDepotPrice));
            }
            if ((Original_CumulateNowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowOutDepotUnitPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_CumulateNowOutDepotUnitPrice));
            }
            if ((Original_CumulatedNowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulatedNowInDepotPrice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_CumulatedNowInDepotPrice));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid ID, 
                    string GoodsCode, 
                    string Spec, 
                    string GoodsName, 
                    int FormerCount, 
                    string FormerUnitPrice, 
                    string FormerPrice, 
                    int NowInDepotCount, 
                    string NowInDepotUnitPrice, 
                    string NowInDepotPrice, 
                    int NowOutDepotCount, 
                    string NowOutDepotUnitPrice, 
                    string NowOutDepotPrice, 
                    int NowExistCount, 
                    string NowExistUnitPrice, 
                    string NowExistPrice, 
                    string MaterialType, 
                    int CumulateNowInDepotCount, 
                    string CumulateNowInDepotUnitPrice, 
                    int CumulateNowOutDepotCount, 
                    string CumulateNowOutDepotPrice, 
                    string CumulateNowOutDepotUnitPrice, 
                    string CumulatedNowInDepotPrice) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((GoodsCode == null)) {
                throw new global::System.ArgumentNullException("GoodsCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GoodsCode));
            }
            if ((Spec == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Spec));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GoodsName));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(FormerCount));
            if ((FormerUnitPrice == null)) {
                throw new global::System.ArgumentNullException("FormerUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FormerUnitPrice));
            }
            if ((FormerPrice == null)) {
                throw new global::System.ArgumentNullException("FormerPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FormerPrice));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NowInDepotCount));
            if ((NowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowInDepotUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NowInDepotUnitPrice));
            }
            if ((NowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("NowInDepotPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(NowInDepotPrice));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(NowOutDepotCount));
            if ((NowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowOutDepotUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(NowOutDepotUnitPrice));
            }
            if ((NowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("NowOutDepotPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(NowOutDepotPrice));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(NowExistCount));
            if ((NowExistUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowExistUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(NowExistUnitPrice));
            }
            if ((NowExistPrice == null)) {
                throw new global::System.ArgumentNullException("NowExistPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(NowExistPrice));
            }
            if ((MaterialType == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MaterialType));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(CumulateNowInDepotCount));
            if ((CumulateNowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowInDepotUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CumulateNowInDepotUnitPrice));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(CumulateNowOutDepotCount));
            if ((CumulateNowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowOutDepotPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CumulateNowOutDepotPrice));
            }
            if ((CumulateNowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowOutDepotUnitPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CumulateNowOutDepotUnitPrice));
            }
            if ((CumulatedNowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("CumulatedNowInDepotPrice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CumulatedNowInDepotPrice));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid ID, 
                    string GoodsCode, 
                    string Spec, 
                    string GoodsName, 
                    int FormerCount, 
                    string FormerUnitPrice, 
                    string FormerPrice, 
                    int NowInDepotCount, 
                    string NowInDepotUnitPrice, 
                    string NowInDepotPrice, 
                    int NowOutDepotCount, 
                    string NowOutDepotUnitPrice, 
                    string NowOutDepotPrice, 
                    int NowExistCount, 
                    string NowExistUnitPrice, 
                    string NowExistPrice, 
                    string MaterialType, 
                    int CumulateNowInDepotCount, 
                    string CumulateNowInDepotUnitPrice, 
                    int CumulateNowOutDepotCount, 
                    string CumulateNowOutDepotPrice, 
                    string CumulateNowOutDepotUnitPrice, 
                    string CumulatedNowInDepotPrice, 
                    System.Guid Original_ID, 
                    string Original_GoodsCode, 
                    string Original_Spec, 
                    string Original_GoodsName, 
                    int Original_FormerCount, 
                    string Original_FormerUnitPrice, 
                    string Original_FormerPrice, 
                    int Original_NowInDepotCount, 
                    string Original_NowInDepotUnitPrice, 
                    string Original_NowInDepotPrice, 
                    int Original_NowOutDepotCount, 
                    string Original_NowOutDepotUnitPrice, 
                    string Original_NowOutDepotPrice, 
                    int Original_NowExistCount, 
                    string Original_NowExistUnitPrice, 
                    string Original_NowExistPrice, 
                    string Original_MaterialType, 
                    int Original_CumulateNowInDepotCount, 
                    string Original_CumulateNowInDepotUnitPrice, 
                    int Original_CumulateNowOutDepotCount, 
                    string Original_CumulateNowOutDepotPrice, 
                    string Original_CumulateNowOutDepotUnitPrice, 
                    string Original_CumulatedNowInDepotPrice) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((GoodsCode == null)) {
                throw new global::System.ArgumentNullException("GoodsCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GoodsCode));
            }
            if ((Spec == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Spec));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(FormerCount));
            if ((FormerUnitPrice == null)) {
                throw new global::System.ArgumentNullException("FormerUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FormerUnitPrice));
            }
            if ((FormerPrice == null)) {
                throw new global::System.ArgumentNullException("FormerPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FormerPrice));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NowInDepotCount));
            if ((NowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowInDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NowInDepotUnitPrice));
            }
            if ((NowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("NowInDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(NowInDepotPrice));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(NowOutDepotCount));
            if ((NowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowOutDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(NowOutDepotUnitPrice));
            }
            if ((NowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("NowOutDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(NowOutDepotPrice));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(NowExistCount));
            if ((NowExistUnitPrice == null)) {
                throw new global::System.ArgumentNullException("NowExistUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(NowExistUnitPrice));
            }
            if ((NowExistPrice == null)) {
                throw new global::System.ArgumentNullException("NowExistPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(NowExistPrice));
            }
            if ((MaterialType == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MaterialType));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(CumulateNowInDepotCount));
            if ((CumulateNowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowInDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(CumulateNowInDepotUnitPrice));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(CumulateNowOutDepotCount));
            if ((CumulateNowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowOutDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(CumulateNowOutDepotPrice));
            }
            if ((CumulateNowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("CumulateNowOutDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CumulateNowOutDepotUnitPrice));
            }
            if ((CumulatedNowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("CumulatedNowInDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CumulatedNowInDepotPrice));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.Guid)(Original_ID));
            if ((Original_GoodsCode == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_GoodsCode));
            }
            if ((Original_Spec == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Spec));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_FormerCount));
            if ((Original_FormerUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_FormerUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_FormerUnitPrice));
            }
            if ((Original_FormerPrice == null)) {
                throw new global::System.ArgumentNullException("Original_FormerPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_FormerPrice));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_NowInDepotCount));
            if ((Original_NowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowInDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_NowInDepotUnitPrice));
            }
            if ((Original_NowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowInDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_NowInDepotPrice));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_NowOutDepotCount));
            if ((Original_NowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowOutDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_NowOutDepotUnitPrice));
            }
            if ((Original_NowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowOutDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_NowOutDepotPrice));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_NowExistCount));
            if ((Original_NowExistUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowExistUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_NowExistUnitPrice));
            }
            if ((Original_NowExistPrice == null)) {
                throw new global::System.ArgumentNullException("Original_NowExistPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_NowExistPrice));
            }
            if ((Original_MaterialType == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_MaterialType));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_CumulateNowInDepotCount));
            if ((Original_CumulateNowInDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowInDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CumulateNowInDepotUnitPrice));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_CumulateNowOutDepotCount));
            if ((Original_CumulateNowOutDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowOutDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_CumulateNowOutDepotPrice));
            }
            if ((Original_CumulateNowOutDepotUnitPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulateNowOutDepotUnitPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_CumulateNowOutDepotUnitPrice));
            }
            if ((Original_CumulatedNowInDepotPrice == null)) {
                throw new global::System.ArgumentNullException("Original_CumulatedNowInDepotPrice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_CumulatedNowInDepotPrice));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GoodsCode, 
                    string Spec, 
                    string GoodsName, 
                    int FormerCount, 
                    string FormerUnitPrice, 
                    string FormerPrice, 
                    int NowInDepotCount, 
                    string NowInDepotUnitPrice, 
                    string NowInDepotPrice, 
                    int NowOutDepotCount, 
                    string NowOutDepotUnitPrice, 
                    string NowOutDepotPrice, 
                    int NowExistCount, 
                    string NowExistUnitPrice, 
                    string NowExistPrice, 
                    string MaterialType, 
                    int CumulateNowInDepotCount, 
                    string CumulateNowInDepotUnitPrice, 
                    int CumulateNowOutDepotCount, 
                    string CumulateNowOutDepotPrice, 
                    string CumulateNowOutDepotUnitPrice, 
                    string CumulatedNowInDepotPrice, 
                    System.Guid Original_ID, 
                    string Original_GoodsCode, 
                    string Original_Spec, 
                    string Original_GoodsName, 
                    int Original_FormerCount, 
                    string Original_FormerUnitPrice, 
                    string Original_FormerPrice, 
                    int Original_NowInDepotCount, 
                    string Original_NowInDepotUnitPrice, 
                    string Original_NowInDepotPrice, 
                    int Original_NowOutDepotCount, 
                    string Original_NowOutDepotUnitPrice, 
                    string Original_NowOutDepotPrice, 
                    int Original_NowExistCount, 
                    string Original_NowExistUnitPrice, 
                    string Original_NowExistPrice, 
                    string Original_MaterialType, 
                    int Original_CumulateNowInDepotCount, 
                    string Original_CumulateNowInDepotUnitPrice, 
                    int Original_CumulateNowOutDepotCount, 
                    string Original_CumulateNowOutDepotPrice, 
                    string Original_CumulateNowOutDepotUnitPrice, 
                    string Original_CumulatedNowInDepotPrice) {
            return this.Update(Original_ID, GoodsCode, Spec, GoodsName, FormerCount, FormerUnitPrice, FormerPrice, NowInDepotCount, NowInDepotUnitPrice, NowInDepotPrice, NowOutDepotCount, NowOutDepotUnitPrice, NowOutDepotPrice, NowExistCount, NowExistUnitPrice, NowExistPrice, MaterialType, CumulateNowInDepotCount, CumulateNowInDepotUnitPrice, CumulateNowOutDepotCount, CumulateNowOutDepotPrice, CumulateNowOutDepotUnitPrice, CumulatedNowInDepotPrice, Original_ID, Original_GoodsCode, Original_Spec, Original_GoodsName, Original_FormerCount, Original_FormerUnitPrice, Original_FormerPrice, Original_NowInDepotCount, Original_NowInDepotUnitPrice, Original_NowInDepotPrice, Original_NowOutDepotCount, Original_NowOutDepotUnitPrice, Original_NowOutDepotPrice, Original_NowExistCount, Original_NowExistUnitPrice, Original_NowExistPrice, Original_MaterialType, Original_CumulateNowInDepotCount, Original_CumulateNowInDepotUnitPrice, Original_CumulateNowOutDepotCount, Original_CumulateNowOutDepotPrice, Original_CumulateNowOutDepotUnitPrice, Original_CumulatedNowInDepotPrice);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FetchGoodsWithdrawDepotBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FetchGoodsWithdrawDepotBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FetchGoodsWithdrawDepotBill";
            tableMapping.ColumnMappings.Add("退库单号", "退库单号");
            tableMapping.ColumnMappings.Add("退库日期", "退库日期");
            tableMapping.ColumnMappings.Add("退库部门", "退库部门");
            tableMapping.ColumnMappings.Add("用途", "用途");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("电位", "电位");
            tableMapping.ColumnMappings.Add("退库数量", "退库数量");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("编制签名", "编制签名");
            tableMapping.ColumnMappings.Add("部门负责人签名", "部门负责人签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("编制人编码", "编制人编码");
            tableMapping.ColumnMappings.Add("仓库", "仓库");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("货物类型", "货物类型");
            tableMapping.ColumnMappings.Add("产品标志", "产品标志");
            tableMapping.ColumnMappings.Add("质量工程师签名", "质量工程师签名");
            tableMapping.ColumnMappings.Add("物料类型", "物料类型");
            tableMapping.ColumnMappings.Add("详细用途说明", "详细用途说明");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 退库单号, 退库日期, 退库部门, 用途, 物品名称, 图号型号, 供货单位, 批次号, 电位, 退库数量, 备注, 编制签名, 部门负责人签名, " +
                "仓管签名, 编制人编码, 仓库, 货架, 列, 层, 规格, 货物类型, 产品标志, 物料类型, 详细用途说明, 质量工程师签名 FROM View_S_Fet" +
                "chGoodsWithdrawDepotBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FetchGoodsWithdrawDepotBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FetchGoodsWithdrawDepotBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FetchGoodsWithdrawDepotBillDataTable dataTable = new DepotManagementDataSet.View_S_FetchGoodsWithdrawDepotBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialRequisitionGoodsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialRequisitionGoodsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialRequisitionGoods";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("领料单号", "领料单号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供应商编码", "供应商编码");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("基数", "基数");
            tableMapping.ColumnMappings.Add("请领数", "请领数");
            tableMapping.ColumnMappings.Add("实领数", "实领数");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("库存数", "库存数");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("显示位置", "显示位置");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("物品类别名称", "物品类别名称");
            tableMapping.ColumnMappings.Add("StorageID", "StorageID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 领料单号, 图号型号, 物品名称, 规格, 供应商编码, 批次号, 基数, 请领数, 实领数, 单位, 库存数, 物品类别, 货架, 列, " +
                "层, 备注, 显示位置, 物品ID, StorageID, 物品类别名称 FROM View_S_MaterialRequisitionGoods";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialRequisitionGoodsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialRequisitionGoodsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialRequisitionGoodsDataTable dataTable = new DepotManagementDataSet.View_S_MaterialRequisitionGoodsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_OrdinaryInDepotBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_OrdinaryInDepotBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_OrdinaryInDepotBill";
            tableMapping.ColumnMappings.Add("入库单号", "入库单号");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("发票号码", "发票号码");
            tableMapping.ColumnMappings.Add("订单号", "订单号");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("供应商编码", "供应商编码");
            tableMapping.ColumnMappings.Add("供应商简称", "供应商简称");
            tableMapping.ColumnMappings.Add("材料编码", "材料编码");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            tableMapping.ColumnMappings.Add("采购员编码", "采购员编码");
            tableMapping.ColumnMappings.Add("采购员签名", "采购员签名");
            tableMapping.ColumnMappings.Add("需质检员确认", "需质检员确认");
            tableMapping.ColumnMappings.Add("质检员编码", "质检员编码");
            tableMapping.ColumnMappings.Add("质量签名", "质量签名");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("设计人编码", "设计人编码");
            tableMapping.ColumnMappings.Add("设计工程师", "设计工程师");
            tableMapping.ColumnMappings.Add("仓管员编码", "仓管员编码");
            tableMapping.ColumnMappings.Add("质检合格标志", "质检合格标志");
            tableMapping.ColumnMappings.Add("需工装管理员验证", "需工装管理员验证");
            tableMapping.ColumnMappings.Add("工装验证报告编号", "工装验证报告编号");
            tableMapping.ColumnMappings.Add("工装管理员编码", "工装管理员编码");
            tableMapping.ColumnMappings.Add("工装管理员签名", "工装管理员签名");
            tableMapping.ColumnMappings.Add("工装类别", "工装类别");
            tableMapping.ColumnMappings.Add("是否允许入库", "是否允许入库");
            tableMapping.ColumnMappings.Add("单据提交时间", "单据提交时间");
            tableMapping.ColumnMappings.Add("质检时间", "质检时间");
            tableMapping.ColumnMappings.Add("发票状态", "发票状态");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 入库单号, 入库时间, 发票号码, 订单号, 仓管签名, 备注, 单据状态, 材料类别, 材料编码, 仓管员编码, 供应商简称, 供应商编码, 申请人, 申请人编码, 设计人编码, 设计工程师, 质检员编码, 质量签名, 采购员签名, 采购员编码, 需质检员确认, 工装管理员签名, 工装管理员编码, 工装验证报告编号, 质检合格标志, 需工装管理员验证, 工装类别, 是否允许入库, 单据提交时间, 发票状态, 库房代码, 库房名称, 是否已打印, 质检时间 FROM View_S_OrdinaryInDepotBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_OrdinaryInDepotBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_OrdinaryInDepotBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_OrdinaryInDepotBillDataTable dataTable = new DepotManagementDataSet.View_S_OrdinaryInDepotBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_B_BargainGoodsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_B_BargainGoodsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_B_BargainGoods";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("合同号", "合同号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("数量", "数量");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 合同号, 图号型号, 规格, 物品名称, 单价, 数量 FROM dbo.View_B_BargainGoods";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_B_BargainGoodsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_B_BargainGoodsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_B_BargainGoodsDataTable dataTable = new DepotManagementDataSet.View_B_BargainGoodsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_B_BargainInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_B_BargainInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_B_BargainInfo";
            tableMapping.ColumnMappings.Add("合同号", "合同号");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("采购员", "采购员");
            tableMapping.ColumnMappings.Add("税率", "税率");
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("供应商联系人", "供应商联系人");
            tableMapping.ColumnMappings.Add("联系方式", "联系方式");
            tableMapping.ColumnMappings.Add("合同录入员", "合同录入员");
            tableMapping.ColumnMappings.Add("权限控制用登录名", "权限控制用登录名");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("是否海外合同", "是否海外合同");
            tableMapping.ColumnMappings.Add("是否委外合同", "是否委外合同");
            tableMapping.ColumnMappings.Add("部门主管签名", "部门主管签名");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 合同号, 供货单位, 采购员, 税率, 日期, 供应商联系人, 联系方式, 合同录入员, 权限控制用登录名, 备注, 是否海外合同, 是否委外合同," +
                " 部门主管签名 FROM View_B_BargainInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_B_BargainInfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_B_BargainInfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_B_BargainInfoDataTable dataTable = new DepotManagementDataSet.View_B_BargainInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_StockTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_StockTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_Stock";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("库存数量", "库存数量");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("实际单价", "实际单价");
            tableMapping.ColumnMappings.Add("实际金额", "实际金额");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("材料类别编码", "材料类别编码");
            tableMapping.ColumnMappings.Add("材料类别名称", "材料类别名称");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("单位ID", "单位ID");
            tableMapping.ColumnMappings.Add("物品状态", "物品状态");
            tableMapping.ColumnMappings.Add("版次号", "版次号");
            tableMapping.ColumnMappings.Add("禁用", "禁用");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 图号型号, 物品名称, 规格, 供货单位, 供方批次号, 批次号, 单位, 库存数量, 货架, 列, 层, 入库时间, 备注, 实际单价, " +
                "实际金额, 库房代码, 库房名称, 材料类别名称, 材料类别编码, 单位ID, 物品ID, 物品状态, 版次号, 禁用 FROM View_S_Stock";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_StockDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_StockDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_StockDataTable dataTable = new DepotManagementDataSet.View_S_StockDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialRequisitionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialRequisitionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialRequisition";
            tableMapping.ColumnMappings.Add("领料单号", "领料单号");
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("用途编码", "用途编码");
            tableMapping.ColumnMappings.Add("用途说明", "用途说明");
            tableMapping.ColumnMappings.Add("关联单据", "关联单据");
            tableMapping.ColumnMappings.Add("关联单号", "关联单号");
            tableMapping.ColumnMappings.Add("领料部门", "领料部门");
            tableMapping.ColumnMappings.Add("部门名称", "部门名称");
            tableMapping.ColumnMappings.Add("领料类型", "领料类型");
            tableMapping.ColumnMappings.Add("产品类型", "产品类型");
            tableMapping.ColumnMappings.Add("领料台数", "领料台数");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制人编码", "编制人编码");
            tableMapping.ColumnMappings.Add("部门主管签名", "部门主管签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("出库时间", "出库时间");
            tableMapping.ColumnMappings.Add("部门领导签名", "部门领导签名");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 领料单号, 日期, 用途编码, 用途说明, 关联单据, 关联单号, 领料部门, 部门名称, 领料类型, 产品类型, 领料台数, 编制人, 编制人编码" +
                ", 部门主管签名, 仓管签名, 单据状态, 备注, 出库时间, 库房代码, 库房名称, 是否已打印, 部门领导签名 FROM View_S_MaterialRe" +
                "quisition";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialRequisitionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialRequisitionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialRequisitionDataTable dataTable = new DepotManagementDataSet.View_S_MaterialRequisitionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_ScrapBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_ScrapBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_ScrapBill";
            tableMapping.ColumnMappings.Add("报废单号", "报废单号");
            tableMapping.ColumnMappings.Add("报废时间", "报废时间");
            tableMapping.ColumnMappings.Add("损失金额", "损失金额");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("申请人签名", "申请人签名");
            tableMapping.ColumnMappings.Add("申请部门编码", "申请部门编码");
            tableMapping.ColumnMappings.Add("申请部门", "申请部门");
            tableMapping.ColumnMappings.Add("部门主管签名", "部门主管签名");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("审批人签名", "审批人签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("知会检验名编码", "知会检验名编码");
            tableMapping.ColumnMappings.Add("知会检验名姓名", "知会检验名姓名");
            tableMapping.ColumnMappings.Add("批准时间", "批准时间");
            tableMapping.ColumnMappings.Add("仓库确认时间", "仓库确认时间");
            tableMapping.ColumnMappings.Add("单据报废类型", "单据报废类型");
            tableMapping.ColumnMappings.Add("SQE", "SQE");
            tableMapping.ColumnMappings.Add("SQE处理日期", "SQE处理日期");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 报废单号, 报废时间, 损失金额, 申请人编码, 申请人签名, 申请部门编码, 申请部门, 部门主管签名, 检验员, 审批人签名, 仓管签名, 单据" +
                "状态, 仓库确认时间, 备注, 批准时间, 知会检验名姓名, 知会检验名编码, SQE, SQE处理日期, 单据报废类型, 是否已打印 FROM View_S_" +
                "ScrapBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_ScrapBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_ScrapBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_ScrapBillDataTable dataTable = new DepotManagementDataSet.View_S_ScrapBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialReturnedInTheDepotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialReturnedInTheDepotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialReturnedInTheDepot";
            tableMapping.ColumnMappings.Add("退库单号", "退库单号");
            tableMapping.ColumnMappings.Add("退库时间", "退库时间");
            tableMapping.ColumnMappings.Add("初始用途", "初始用途");
            tableMapping.ColumnMappings.Add("部门主管签名", "部门主管签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("退库原因", "退库原因");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("申请部门编码", "申请部门编码");
            tableMapping.ColumnMappings.Add("申请部门", "申请部门");
            tableMapping.ColumnMappings.Add("初始用途编码", "初始用途编码");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("质量工程师签名", "质量工程师签名");
            tableMapping.ColumnMappings.Add("退库类别", "退库类别");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("退库方式", "退库方式");
            tableMapping.ColumnMappings.Add("入库日期", "入库日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 退库单号, 退库时间, 初始用途, 部门主管签名, 仓管签名, 退库原因, 单据状态, 备注, 初始用途编码, 申请人, 申请人编码, 申请部门, " +
                "申请部门编码, 质量工程师签名, 退库类别, 入库日期, 库房代码, 库房名称, 是否已打印, 退库方式 FROM View_S_MaterialReturne" +
                "dInTheDepot";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialReturnedInTheDepotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialReturnedInTheDepotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialReturnedInTheDepotDataTable dataTable = new DepotManagementDataSet.View_S_MaterialReturnedInTheDepotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialListRejectBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialListRejectBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialListRejectBill";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("退货单号", "退货单号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("退货数", "退货数");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("关联单号", "关联单号");
            tableMapping.ColumnMappings.Add("供方批次", "供方批次");
            tableMapping.ColumnMappings.Add("库存数", "库存数");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("物品类别名称", "物品类别名称");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("金额", "金额");
            tableMapping.ColumnMappings.Add("总金额", "总金额");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("StorageID", "StorageID");
            tableMapping.ColumnMappings.Add("是否有发票", "是否有发票");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 退货单号, 图号型号, 物品名称, 规格, 供应商, 批次号, 退货数, 物品ID, StorageID, 供方批次, 关联单号, 列, 单" +
                "价, 单位, 备注, 层, 库存数, 总金额, 物品类别, 物品类别名称, 货架, 金额, 是否有发票 FROM View_S_MaterialListReje" +
                "ctBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialListRejectBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialListRejectBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialListRejectBillDataTable dataTable = new DepotManagementDataSet.View_S_MaterialListRejectBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialRejectBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialRejectBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialRejectBill";
            tableMapping.ColumnMappings.Add("退货单号", "退货单号");
            tableMapping.ColumnMappings.Add("退货时间", "退货时间");
            tableMapping.ColumnMappings.Add("退货原因", "退货原因");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请部门编码", "申请部门编码");
            tableMapping.ColumnMappings.Add("申请部门名称", "申请部门名称");
            tableMapping.ColumnMappings.Add("财务签名", "财务签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("单据类型", "单据类型");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("出库日期", "出库日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 退货单号, 退货时间, 退货原因, 申请人编码, 申请人, 申请部门编码, 申请部门名称, 财务签名, 仓管签名, 备注, 单据状态, 供应商, 单" +
                "据类型, 库房代码, 是否已打印, 出库日期, 库房名称 FROM View_S_MaterialRejectBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialRejectBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialRejectBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialRejectBillDataTable dataTable = new DepotManagementDataSet.View_S_MaterialRejectBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FetchGoodsDetailBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FetchGoodsDetailBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FetchGoodsDetailBill";
            tableMapping.ColumnMappings.Add("单据编号", "单据编号");
            tableMapping.ColumnMappings.Add("单据日期", "单据日期");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("用途", "用途");
            tableMapping.ColumnMappings.Add("领料部门", "领料部门");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("供应商批次号", "供应商批次号");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("编制签名", "编制签名");
            tableMapping.ColumnMappings.Add("部门负责人签名", "部门负责人签名");
            tableMapping.ColumnMappings.Add("财务签名", "财务签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("关联单据", "关联单据");
            tableMapping.ColumnMappings.Add("关联单号", "关联单号");
            tableMapping.ColumnMappings.Add("实际单价", "实际单价");
            tableMapping.ColumnMappings.Add("实际金额", "实际金额");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("物品编码", "物品编码");
            tableMapping.ColumnMappings.Add("报废内容描述", "报废内容描述");
            tableMapping.ColumnMappings.Add("是否已审核", "是否已审核");
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("业务类型ID", "业务类型ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据编号, 单据日期, 图号型号, 物品名称, 规格, 数量, 用途, 领料部门, 供应商, 供应商批次号, 批次号, 编制签名, 部门负责人签名," +
                " 财务签名, 仓管签名, 单位, 备注, 关联单号, 关联单据, 实际单价, 实际金额, 库房代码, 库房名称, 材料类别, 报废内容描述, 物品编码, 序号," +
                " 是否已审核, 业务类型ID FROM View_S_FetchGoodsDetailBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FetchGoodsDetailBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FetchGoodsDetailBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FetchGoodsDetailBillDataTable dataTable = new DepotManagementDataSet.View_S_FetchGoodsDetailBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FetchGoodsSummaryTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FetchGoodsSummaryTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FetchGoodsSummaryTable";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("实际单价", "实际单价");
            tableMapping.ColumnMappings.Add("实际金额", "实际金额");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 数量, 日期, 单位, 实际单价, 实际金额, 材料类别 FROM View_S_FetchGoodsSummary" +
                "Table";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FetchGoodsSummaryTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FetchGoodsSummaryTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FetchGoodsSummaryTableDataTable dataTable = new DepotManagementDataSet.View_S_FetchGoodsSummaryTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_InDepotDetailBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_InDepotDetailBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_InDepotDetailBill";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("实际单价", "实际单价");
            tableMapping.ColumnMappings.Add("单据编号", "单据编号");
            tableMapping.ColumnMappings.Add("单据日期", "单据日期");
            tableMapping.ColumnMappings.Add("入库人", "入库人");
            tableMapping.ColumnMappings.Add("部门名称", "部门名称");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("单据标志", "单据标志");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("是否已审核", "是否已审核");
            tableMapping.ColumnMappings.Add("凭证号", "凭证号");
            tableMapping.ColumnMappings.Add("到票时间", "到票时间");
            tableMapping.ColumnMappings.Add("实际金额", "实际金额");
            tableMapping.ColumnMappings.Add("发票单价", "发票单价");
            tableMapping.ColumnMappings.Add("发票金额", "发票金额");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 数量, 实际单价, 单据编号, 单据日期, 入库人, 部门名称, 供应商, 单据标志, 单位, 备注, 批次号, 库" +
                "房代码, 库房名称, 材料类别, 凭证号, 到票时间, 是否已审核, 发票单价, 发票金额, 实际金额 FROM View_S_InDepotDetailBil" +
                "l";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_InDepotDetailBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_InDepotDetailBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_InDepotDetailBillDataTable dataTable = new DepotManagementDataSet.View_S_InDepotDetailBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_InDepotSummaryTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_InDepotSummaryTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_InDepotSummaryTable";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("实际单价", "实际单价");
            tableMapping.ColumnMappings.Add("实际金额", "实际金额");
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 数量, 实际单价, 实际金额, 日期, 单位, 材料类别 FROM View_S_InDepotSummaryTab" +
                "le";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_InDepotSummaryTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_InDepotSummaryTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_InDepotSummaryTableDataTable dataTable = new DepotManagementDataSet.View_S_InDepotSummaryTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_OrdinaryInDepotGoodsBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_OrdinaryInDepotGoodsBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_OrdinaryInDepotGoodsBill";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("入库单号", "入库单号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("计划单价", "计划单价");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("暂估单价", "暂估单价");
            tableMapping.ColumnMappings.Add("暂估金额", "暂估金额");
            tableMapping.ColumnMappings.Add("发票单价", "发票单价");
            tableMapping.ColumnMappings.Add("发票金额", "发票金额");
            tableMapping.ColumnMappings.Add("大写金额", "大写金额");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("是否有发票", "是否有发票");
            tableMapping.ColumnMappings.Add("物品类别名称", "物品类别名称");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 入库单号, 图号型号, 物品名称, 规格, 单位, 计划单价, 数量, 暂估单价, 暂估金额, 发票单价, 发票金额, 大写金额, 供方批次" +
                "号, 批次号, 货架, 列, 层, 备注, 物品类别, 是否有发票, 物品类别名称 FROM View_S_OrdinaryInDepotGoodsBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_OrdinaryInDepotGoodsBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_OrdinaryInDepotGoodsBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_OrdinaryInDepotGoodsBillDataTable dataTable = new DepotManagementDataSet.View_S_OrdinaryInDepotGoodsBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_MaterialRequisitionGoodsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_MaterialRequisitionGoodsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_MaterialRequisitionGoods";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Bill_ID", "Bill_ID");
            tableMapping.ColumnMappings.Add("ProviderCode", "ProviderCode");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("BasicCount", "BasicCount");
            tableMapping.ColumnMappings.Add("RequestCount", "RequestCount");
            tableMapping.ColumnMappings.Add("RealCount", "RealCount");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("ShowPosition", "ShowPosition");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [S_MaterialRequisitionGoods] WHERE (([ID] = @Original_ID) AND ([Bill_ID] = @Original_Bill_ID) AND ([ProviderCode] = @Original_ProviderCode) AND ([BatchNo] = @Original_BatchNo) AND ([BasicCount] = @Original_BasicCount) AND ([RequestCount] = @Original_RequestCount) AND ([RealCount] = @Original_RealCount) AND ([ShowPosition] = @Original_ShowPosition) AND ([GoodsID] = @Original_GoodsID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProviderCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RequestCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RealCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShowPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [S_MaterialRequisitionGoods] ([Bill_ID], [ProviderCode], [BatchNo], [BasicCount], [RequestCount], [RealCount], [Remark], [ShowPosition], [GoodsID]) VALUES (@Bill_ID, @ProviderCode, @BatchNo, @BasicCount, @RequestCount, @RealCount, @Remark, @ShowPosition, @GoodsID);
SELECT ID, Bill_ID, ProviderCode, BatchNo, BasicCount, RequestCount, RealCount, Remark, ShowPosition, GoodsID FROM S_MaterialRequisitionGoods WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RequestCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RealCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [S_MaterialRequisitionGoods] SET [Bill_ID] = @Bill_ID, [ProviderCode] = @ProviderCode, [BatchNo] = @BatchNo, [BasicCount] = @BasicCount, [RequestCount] = @RequestCount, [RealCount] = @RealCount, [Remark] = @Remark, [ShowPosition] = @ShowPosition, [GoodsID] = @GoodsID WHERE (([ID] = @Original_ID) AND ([Bill_ID] = @Original_Bill_ID) AND ([ProviderCode] = @Original_ProviderCode) AND ([BatchNo] = @Original_BatchNo) AND ([BasicCount] = @Original_BasicCount) AND ([RequestCount] = @Original_RequestCount) AND ([RealCount] = @Original_RealCount) AND ([ShowPosition] = @Original_ShowPosition) AND ([GoodsID] = @Original_GoodsID));
SELECT ID, Bill_ID, ProviderCode, BatchNo, BasicCount, RequestCount, RealCount, Remark, ShowPosition, GoodsID FROM S_MaterialRequisitionGoods WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RequestCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RealCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProviderCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RequestCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RealCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShowPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Bill_ID, ProviderCode, BatchNo, BasicCount, RequestCount, RealCount, R" +
                "emark, ShowPosition, GoodsID FROM S_MaterialRequisitionGoods";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_MaterialRequisitionGoodsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_MaterialRequisitionGoodsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_MaterialRequisitionGoodsDataTable dataTable = new DepotManagementDataSet.S_MaterialRequisitionGoodsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_MaterialRequisitionGoodsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_MaterialRequisitionGoods");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, string Original_Bill_ID, string Original_ProviderCode, string Original_BatchNo, decimal Original_BasicCount, decimal Original_RequestCount, decimal Original_RealCount, double Original_ShowPosition, int Original_GoodsID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            if ((Original_Bill_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Bill_ID));
            }
            if ((Original_ProviderCode == null)) {
                throw new global::System.ArgumentNullException("Original_ProviderCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ProviderCode));
            }
            if ((Original_BatchNo == null)) {
                throw new global::System.ArgumentNullException("Original_BatchNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_BatchNo));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_BasicCount));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_RequestCount));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_RealCount));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_ShowPosition));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_GoodsID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Bill_ID, string ProviderCode, string BatchNo, decimal BasicCount, decimal RequestCount, decimal RealCount, string Remark, double ShowPosition, int GoodsID) {
            if ((Bill_ID == null)) {
                throw new global::System.ArgumentNullException("Bill_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            if ((ProviderCode == null)) {
                throw new global::System.ArgumentNullException("ProviderCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ProviderCode));
            }
            if ((BatchNo == null)) {
                throw new global::System.ArgumentNullException("BatchNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BatchNo));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(BasicCount));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(RequestCount));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(RealCount));
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Remark));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ShowPosition));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(GoodsID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    string ProviderCode, 
                    string BatchNo, 
                    decimal BasicCount, 
                    decimal RequestCount, 
                    decimal RealCount, 
                    string Remark, 
                    double ShowPosition, 
                    int GoodsID, 
                    long Original_ID, 
                    string Original_Bill_ID, 
                    string Original_ProviderCode, 
                    string Original_BatchNo, 
                    decimal Original_BasicCount, 
                    decimal Original_RequestCount, 
                    decimal Original_RealCount, 
                    double Original_ShowPosition, 
                    int Original_GoodsID, 
                    long ID) {
            if ((Bill_ID == null)) {
                throw new global::System.ArgumentNullException("Bill_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            if ((ProviderCode == null)) {
                throw new global::System.ArgumentNullException("ProviderCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ProviderCode));
            }
            if ((BatchNo == null)) {
                throw new global::System.ArgumentNullException("BatchNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BatchNo));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(BasicCount));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(RequestCount));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(RealCount));
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ShowPosition));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(GoodsID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_ID));
            if ((Original_Bill_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Bill_ID));
            }
            if ((Original_ProviderCode == null)) {
                throw new global::System.ArgumentNullException("Original_ProviderCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ProviderCode));
            }
            if ((Original_BatchNo == null)) {
                throw new global::System.ArgumentNullException("Original_BatchNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_BatchNo));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_BasicCount));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_RequestCount));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_RealCount));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_ShowPosition));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_GoodsID));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    string ProviderCode, 
                    string BatchNo, 
                    decimal BasicCount, 
                    decimal RequestCount, 
                    decimal RealCount, 
                    string Remark, 
                    double ShowPosition, 
                    int GoodsID, 
                    long Original_ID, 
                    string Original_Bill_ID, 
                    string Original_ProviderCode, 
                    string Original_BatchNo, 
                    decimal Original_BasicCount, 
                    decimal Original_RequestCount, 
                    decimal Original_RealCount, 
                    double Original_ShowPosition, 
                    int Original_GoodsID) {
            return this.Update(Bill_ID, ProviderCode, BatchNo, BasicCount, RequestCount, RealCount, Remark, ShowPosition, GoodsID, Original_ID, Original_Bill_ID, Original_ProviderCode, Original_BatchNo, Original_BasicCount, Original_RequestCount, Original_RealCount, Original_ShowPosition, Original_GoodsID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_PrintBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_PrintBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_PrintBill";
            tableMapping.ColumnMappings.Add("分发部门", "分发部门");
            tableMapping.ColumnMappings.Add("单据类别", "单据类别");
            tableMapping.ColumnMappings.Add("单据编号", "单据编号");
            tableMapping.ColumnMappings.Add("单据颜色", "单据颜色");
            tableMapping.ColumnMappings.Add("打印时间", "打印时间");
            tableMapping.ColumnMappings.Add("打印人", "打印人");
            tableMapping.ColumnMappings.Add("审核状态", "审核状态");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 分发部门, 单据类别, 单据编号, 单据颜色, 打印时间, 打印人, 审核状态 FROM View_S_PrintBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_PrintBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_PrintBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_PrintBillDataTable dataTable = new DepotManagementDataSet.View_S_PrintBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketingAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketingAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketingAll";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("LRRY", "LRRY");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("SHRY", "SHRY");
            tableMapping.ColumnMappings.Add("YWLX", "YWLX");
            tableMapping.ColumnMappings.Add("KFRY", "KFRY");
            tableMapping.ColumnMappings.Add("DJZT_FLAG", "DJZT_FLAG");
            tableMapping.ColumnMappings.Add("DELETE_FLAG", "DELETE_FLAG");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("ListID", "ListID");
            tableMapping.ColumnMappings.Add("DJ_ID", "DJ_ID");
            tableMapping.ColumnMappings.Add("CPID", "CPID");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("GoodsPrice", "GoodsPrice");
            tableMapping.ColumnMappings.Add("Count", "Count");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("GoodsRemark", "GoodsRemark");
            tableMapping.ColumnMappings.Add("StorageID", "StorageID");
            tableMapping.ColumnMappings.Add("YWFS", "YWFS");
            tableMapping.ColumnMappings.Add("StorageName", "StorageName");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("LRKS", "LRKS");
            tableMapping.ColumnMappings.Add("AffirmDate", "AffirmDate");
            tableMapping.ColumnMappings.Add("FSRY", "FSRY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, DJH, LRRY, Dept, SHRY, YWLX, KFRY, DJZT_FLAG, DELETE_FLAG, Date, Price, Remark, ListID, DJ_ID, CPID, Provider, UnitPrice, GoodsPrice, Count, Unit, BatchNo, GoodsRemark, StorageID, YWFS, GoodsCode, GoodsName, Spec, StorageName, LRKS, AffirmDate, FSRY FROM View_S_MarketingAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MarketingAllDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MarketingAllDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MarketingAllDataTable dataTable = new DepotManagementDataSet.View_S_MarketingAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_CannibalizeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_CannibalizeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_Cannibalize";
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("InStoreRoom", "InStoreRoom");
            tableMapping.ColumnMappings.Add("OutStoreRoom", "OutStoreRoom");
            tableMapping.ColumnMappings.Add("AllPrice", "AllPrice");
            tableMapping.ColumnMappings.Add("LRRY", "LRRY");
            tableMapping.ColumnMappings.Add("LRRQ", "LRRQ");
            tableMapping.ColumnMappings.Add("SHRY", "SHRY");
            tableMapping.ColumnMappings.Add("SHRQ", "SHRQ");
            tableMapping.ColumnMappings.Add("CWRY", "CWRY");
            tableMapping.ColumnMappings.Add("CWRQ", "CWRQ");
            tableMapping.ColumnMappings.Add("KFRY", "KFRY");
            tableMapping.ColumnMappings.Add("KFRQ", "KFRQ");
            tableMapping.ColumnMappings.Add("DJZT", "DJZT");
            tableMapping.ColumnMappings.Add("AllRemark", "AllRemark");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Count", "Count");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJ_ID", "DJ_ID");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("GoodsUnitPrice", "GoodsUnitPrice");
            tableMapping.ColumnMappings.Add("GoodsType", "GoodsType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DJH, InStoreRoom, OutStoreRoom, AllPrice, LRRY, LRRQ, SHRY, SHRQ, CWRY, CWRQ, KFRY, KFRQ, DJZT, AllRemark, GoodsID, UnitPrice, Provider, Price, Count, Unit, BatchNo, Remark, ID, DJ_ID, GoodsCode, GoodsName, GoodsType, GoodsUnitPrice, Spec FROM View_S_Cannibalize";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_CannibalizeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_CannibalizeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_CannibalizeDataTable dataTable = new DepotManagementDataSet.View_S_CannibalizeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_CheckReturnRepairBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_CheckReturnRepairBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_CheckReturnRepairBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("关联入库单号", "关联入库单号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("挑返原因", "挑返原因");
            tableMapping.ColumnMappings.Add("挑返方法及要求", "挑返方法及要求");
            tableMapping.ColumnMappings.Add("挑返损耗及工时", "挑返损耗及工时");
            tableMapping.ColumnMappings.Add("QC合格数", "QC合格数");
            tableMapping.ColumnMappings.Add("QC让步数", "QC让步数");
            tableMapping.ColumnMappings.Add("QC退货数", "QC退货数");
            tableMapping.ColumnMappings.Add("QC报废数", "QC报废数");
            tableMapping.ColumnMappings.Add("SQE工时", "SQE工时");
            tableMapping.ColumnMappings.Add("创建人", "创建人");
            tableMapping.ColumnMappings.Add("创建日期", "创建日期");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("审核人", "审核人");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("处理人", "处理人");
            tableMapping.ColumnMappings.Add("处理日期", "处理日期");
            tableMapping.ColumnMappings.Add("检验人", "检验人");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            tableMapping.ColumnMappings.Add("挑返数量", "挑返数量");
            tableMapping.ColumnMappings.Add("采购工程师合格数", "采购工程师合格数");
            tableMapping.ColumnMappings.Add("采购工程师不合格数", "采购工程师不合格数");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 物品ID, 关联入库单号, 物品名称, 图号型号, 规格, 批次号, 供货单位, 单据状态, 挑返原因, 挑返方法及要求, 挑返损耗及工时" +
                ", QC合格数, QC让步数, QC退货数, QC报废数, SQE工时, 创建人, 创建日期, 编制人, 编制日期, 审核人, 审核日期, 处理人, 处理日期," +
                " 检验人, 检验日期, 挑返数量, 采购工程师不合格数, 采购工程师合格数 FROM View_S_CheckReturnRepairBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_CheckReturnRepairBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_CheckReturnRepairBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_CheckReturnRepairBillDataTable dataTable = new DepotManagementDataSet.View_S_CheckReturnRepairBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_IsolationManageBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_IsolationManageBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_IsolationManageBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("材料类别编码", "材料类别编码");
            tableMapping.ColumnMappings.Add("材料类别名称", "材料类别名称");
            tableMapping.ColumnMappings.Add("隔离原因", "隔离原因");
            tableMapping.ColumnMappings.Add("隔离方法和要求", "隔离方法和要求");
            tableMapping.ColumnMappings.Add("QC合格数", "QC合格数");
            tableMapping.ColumnMappings.Add("QC让步数", "QC让步数");
            tableMapping.ColumnMappings.Add("QC退货数", "QC退货数");
            tableMapping.ColumnMappings.Add("QC报废数", "QC报废数");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("审核人", "审核人");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("调出人", "调出人");
            tableMapping.ColumnMappings.Add("调出日期", "调出日期");
            tableMapping.ColumnMappings.Add("处理人", "处理人");
            tableMapping.ColumnMappings.Add("处理日期", "处理日期");
            tableMapping.ColumnMappings.Add("检验人", "检验人");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            tableMapping.ColumnMappings.Add("调入人", "调入人");
            tableMapping.ColumnMappings.Add("调入日期", "调入日期");
            tableMapping.ColumnMappings.Add("关联采购退货单号", "关联采购退货单号");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("退货方式", "退货方式");
            tableMapping.ColumnMappings.Add("SQE退货建议人", "SQE退货建议人");
            tableMapping.ColumnMappings.Add("SQE退货建议填写时间", "SQE退货建议填写时间");
            tableMapping.ColumnMappings.Add("合格数", "合格数");
            tableMapping.ColumnMappings.Add("不合格数", "不合格数");
            tableMapping.ColumnMappings.Add("处理工时", "处理工时");
            tableMapping.ColumnMappings.Add("QC废弃数", "QC废弃数");
            tableMapping.ColumnMappings.Add("处理部门", "处理部门");
            tableMapping.ColumnMappings.Add("确认人", "确认人");
            tableMapping.ColumnMappings.Add("确认日期", "确认日期");
            tableMapping.ColumnMappings.Add("确认说明", "确认说明");
            tableMapping.ColumnMappings.Add("处理部门代码", "处理部门代码");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 单据号, 单据状态, 库房名称, 物品ID, 图号型号, 物品名称, 规格, 批次号, 供货单位, 供方批次号, 材料类别编码, 材料类别名称, 隔离原因, 隔离方法和要求, QC合格数, QC让步数, QC退货数, QC报废数, 编制人, 编制日期, 审核人, 审核日期, 调出人, 调出日期, 处理人, 处理日期, 检验人, 检验日期, 调入人, 调入日期, 关联采购退货单号, 库房代码, 退货方式, SQE退货建议人, SQE退货建议填写时间, QC废弃数, 不合格数, 合格数, 处理工时, 处理部门, 处理部门代码, 确认人, 确认日期, 确认说明 FROM View_S_IsolationManageBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_IsolationManageBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_IsolationManageBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_IsolationManageBillDataTable dataTable = new DepotManagementDataSet.View_S_IsolationManageBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MessMessageFeedbackBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MessMessageFeedbackBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MessMessageFeedbackBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("关联单号", "关联单号");
            tableMapping.ColumnMappings.Add("创建日期", "创建日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据状态, 图号型号, 物品名称, 规格, 批次号, 供应商, 关联单号, 创建日期 FROM View_S_MessMessageFee" +
                "dbackBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MessMessageFeedbackBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MessMessageFeedbackBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MessMessageFeedbackBillDataTable dataTable = new DepotManagementDataSet.View_S_MessMessageFeedbackBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_StorageCheckTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_StorageCheckTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_StorageCheck";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("所属库房", "所属库房");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("单据方式", "单据方式");
            tableMapping.ColumnMappings.Add("编制人员", "编制人员");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("审核人员", "审核人员");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("批准人员", "批准人员");
            tableMapping.ColumnMappings.Add("批准日期", "批准日期");
            tableMapping.ColumnMappings.Add("仓管人员", "仓管人员");
            tableMapping.ColumnMappings.Add("确认日期", "确认日期");
            tableMapping.ColumnMappings.Add("分管领导", "分管领导");
            tableMapping.ColumnMappings.Add("分管领导批准日期", "分管领导批准日期");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 所属库房, 单据状态, 单据方式, 编制人员, 编制日期, 审核人员, 审核日期, 批准人员, 批准日期, 仓管人员, 确认日期, 分管领" +
                "导, 分管领导批准日期, 库房代码 FROM View_S_StorageCheck";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_StorageCheckDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_StorageCheckDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_StorageCheckDataTable dataTable = new DepotManagementDataSet.View_S_StorageCheckDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_ReportForStorageCheckTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_ReportForStorageCheckTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_ReportForStorageCheck";
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("ZMSL", "ZMSL");
            tableMapping.ColumnMappings.Add("PDSL", "PDSL");
            tableMapping.ColumnMappings.Add("YKSL", "YKSL");
            tableMapping.ColumnMappings.Add("所属库房", "所属库房");
            tableMapping.ColumnMappings.Add("编制人员", "编制人员");
            tableMapping.ColumnMappings.Add("审核人员", "审核人员");
            tableMapping.ColumnMappings.Add("批准人员", "批准人员");
            tableMapping.ColumnMappings.Add("仓管人员", "仓管人员");
            tableMapping.ColumnMappings.Add("确认日期", "确认日期");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("账龄", "账龄");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DJH, GoodsCode, GoodsName, Spec, BatchNo, ZMSL, PDSL, YKSL, 仓管人员, 审核人员, 所属" +
                "库房, 批准人员, 确认日期, 编制人员, 入库时间, 单据号, 账龄 FROM View_S_ReportForStorageCheck";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_ReportForStorageCheckDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_ReportForStorageCheckDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_ReportForStorageCheckDataTable dataTable = new DepotManagementDataSet.View_S_ReportForStorageCheckDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MaterialListReturnedInTheDepotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MaterialListReturnedInTheDepotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MaterialListReturnedInTheDepot";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("退库单号", "退库单号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("退库数", "退库数");
            tableMapping.ColumnMappings.Add("材料类别编码", "材料类别编码");
            tableMapping.ColumnMappings.Add("材料类别名称", "材料类别名称");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("返修状态", "返修状态");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 退库单号, 图号型号, 物品名称, 规格, 单位, 供应商, 供方批次号, 批次号, 退库数, 材料类别编码, 材料类别名称, 货架, 列," +
                " 层, 备注, 物品ID, 返修状态 FROM View_S_MaterialListReturnedInTheDepot";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MaterialListReturnedInTheDepotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MaterialListReturnedInTheDepotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MaterialListReturnedInTheDepotDataTable dataTable = new DepotManagementDataSet.View_S_MaterialListReturnedInTheDepotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_ALLMessMessageFeedbackTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_ALLMessMessageFeedbackTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_ALLMessMessageFeedback";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("InDepotBillID", "InDepotBillID");
            tableMapping.ColumnMappings.Add("QCRY", "QCRY");
            tableMapping.ColumnMappings.Add("QCRQ", "QCRQ");
            tableMapping.ColumnMappings.Add("SQERY", "SQERY");
            tableMapping.ColumnMappings.Add("SQERQ", "SQERQ");
            tableMapping.ColumnMappings.Add("LinkMan", "LinkMan");
            tableMapping.ColumnMappings.Add("LinkPhone", "LinkPhone");
            tableMapping.ColumnMappings.Add("LinkEmail", "LinkEmail");
            tableMapping.ColumnMappings.Add("RevertTime", "RevertTime");
            tableMapping.ColumnMappings.Add("JLRD_LinkMan", "JLRD_LinkMan");
            tableMapping.ColumnMappings.Add("JLRD_LinkPhone", "JLRD_LinkPhone");
            tableMapping.ColumnMappings.Add("JLRD_LinkEmail", "JLRD_LinkEmail");
            tableMapping.ColumnMappings.Add("ForGoodsStatus", "ForGoodsStatus");
            tableMapping.ColumnMappings.Add("MessageFromStatus", "MessageFromStatus");
            tableMapping.ColumnMappings.Add("DisqualificationDepict", "DisqualificationDepict");
            tableMapping.ColumnMappings.Add("SQEMindStatus", "SQEMindStatus");
            tableMapping.ColumnMappings.Add("SQEElseMindMessage", "SQEElseMindMessage");
            tableMapping.ColumnMappings.Add("SQEvalidateMessage", "SQEvalidateMessage");
            tableMapping.ColumnMappings.Add("SQEYZRY", "SQEYZRY");
            tableMapping.ColumnMappings.Add("SQEYZRQ", "SQEYZRQ");
            tableMapping.ColumnMappings.Add("QEAffirmMessage", "QEAffirmMessage");
            tableMapping.ColumnMappings.Add("QEQRRY", "QEQRRY");
            tableMapping.ColumnMappings.Add("QEQRRQ", "QEQRRQ");
            tableMapping.ColumnMappings.Add("DJZT", "DJZT");
            tableMapping.ColumnMappings.Add("ArriveGoods_Time", "ArriveGoods_Time");
            tableMapping.ColumnMappings.Add("OrderFormNumber", "OrderFormNumber");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("ProviderName", "ProviderName");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("QEQR_RY", "QEQR_RY");
            tableMapping.ColumnMappings.Add("SQEYZ_RY", "SQEYZ_RY");
            tableMapping.ColumnMappings.Add("QC_RY", "QC_RY");
            tableMapping.ColumnMappings.Add("SQE_RY", "SQE_RY");
            tableMapping.ColumnMappings.Add("Bill_ID", "Bill_ID");
            tableMapping.ColumnMappings.Add("Picture", "Picture");
            tableMapping.ColumnMappings.Add("AllCount", "AllCount");
            tableMapping.ColumnMappings.Add("DefectiveRate", "DefectiveRate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, DJH, InDepotBillID, QCRY, QCRQ, SQERY, SQERQ, LinkMan, LinkPhone, LinkEmail, RevertTime, JLRD_LinkMan, JLRD_LinkPhone, JLRD_LinkEmail, ForGoodsStatus, MessageFromStatus, DisqualificationDepict, SQEMindStatus, SQEElseMindMessage, SQEvalidateMessage, SQEYZRY, SQEYZRQ, QEAffirmMessage, QEQRRY, QEQRRQ, DJZT, ArriveGoods_Time, OrderFormNumber, GoodsID, GoodsCode, GoodsName, Spec, ProviderName, Provider, BatchNo, QEQR_RY, SQEYZ_RY, QC_RY, SQE_RY, Bill_ID, Picture, AllCount, DefectiveRate FROM View_S_ALLMessMessageFeedback";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_ALLMessMessageFeedbackDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_ALLMessMessageFeedbackDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_ALLMessMessageFeedbackDataTable dataTable = new DepotManagementDataSet.View_S_ALLMessMessageFeedbackDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketingPlanBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketingPlanBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketingPlanBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据年月", "单据年月");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("第一个月计划总数", "第一个月计划总数");
            tableMapping.ColumnMappings.Add("第二个月计划总数", "第二个月计划总数");
            tableMapping.ColumnMappings.Add("第三个月计划总数", "第三个月计划总数");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("审核人", "审核人");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("批准人", "批准人");
            tableMapping.ColumnMappings.Add("批准日期", "批准日期");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("单据类型", "单据类型");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据年月, 单据状态, 第一个月计划总数, 第二个月计划总数, 第三个月计划总数, 编制人, 编制日期, 审核人, 审核日期, 批准人, " +
                "批准日期, 备注, 单据类型 FROM View_S_MarketingPlanBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MarketingPlanBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MarketingPlanBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MarketingPlanBillDataTable dataTable = new DepotManagementDataSet.View_S_MarketingPlanBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketingPlanListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketingPlanListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketingPlanList";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("第一个月计划数", "第一个月计划数");
            tableMapping.ColumnMappings.Add("第二个月计划数", "第二个月计划数");
            tableMapping.ColumnMappings.Add("第三个月计划数", "第三个月计划数");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("序号", "序号");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 第一个月计划数, 第二个月计划数, 第三个月计划数, 单位, 备注, 物品ID, 单据号, 序号 FROM View" +
                "_S_MarketingPlanList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_MarketingPlanListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_MarketingPlanListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_MarketingPlanListDataTable dataTable = new DepotManagementDataSet.View_S_MarketingPlanListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_P_DeliveryInspectionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_P_DeliveryInspectionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_P_DeliveryInspection";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("产品型号", "产品型号");
            tableMapping.ColumnMappings.Add("产品编号", "产品编号");
            tableMapping.ColumnMappings.Add("结论", "结论");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("关联单号", "关联单号");
            tableMapping.ColumnMappings.Add("检测项目", "检测项目");
            tableMapping.ColumnMappings.Add("不合格项目", "不合格项目");
            tableMapping.ColumnMappings.Add("不合格情况", "不合格情况");
            tableMapping.ColumnMappings.Add("最终判定", "最终判定");
            tableMapping.ColumnMappings.Add("判定人", "判定人");
            tableMapping.ColumnMappings.Add("判定日期", "判定日期");
            tableMapping.ColumnMappings.Add("不合格项目ID", "不合格项目ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 产品型号, 产品编号, 结论, 备注, 检验员, 检验日期, 不合格情况, 不合格项目, 不合格项目ID, 关联单号, 判定人, 判定日期" +
                ", 单据状态, 最终判定, 检测项目 FROM View_P_DeliveryInspection";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_P_DeliveryInspectionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_P_DeliveryInspectionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_P_DeliveryInspectionDataTable dataTable = new DepotManagementDataSet.View_P_DeliveryInspectionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_P_DeliveryInspectionItemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_P_DeliveryInspectionItemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_P_DeliveryInspectionItems";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("检测项目ID", "检测项目ID");
            tableMapping.ColumnMappings.Add("检测项目", "检测项目");
            tableMapping.ColumnMappings.Add("技术要求ID", "技术要求ID");
            tableMapping.ColumnMappings.Add("技术要求", "技术要求");
            tableMapping.ColumnMappings.Add("判定", "判定");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("不合格情况", "不合格情况");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 检测项目ID, 检测项目, 技术要求ID, 技术要求, 判定, 单据号, 不合格情况 FROM View_P_DeliveryInspect" +
                "ionItems";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_P_DeliveryInspectionItemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_P_DeliveryInspectionItemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_P_DeliveryInspectionItemsDataTable dataTable = new DepotManagementDataSet.View_P_DeliveryInspectionItemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Report_DeliveryInspectionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Report_DeliveryInspectionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Report_DeliveryInspection";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("产品型号", "产品型号");
            tableMapping.ColumnMappings.Add("产品编号", "产品编号");
            tableMapping.ColumnMappings.Add("结论", "结论");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            tableMapping.ColumnMappings.Add("检测项目ID", "检测项目ID");
            tableMapping.ColumnMappings.Add("检测项目", "检测项目");
            tableMapping.ColumnMappings.Add("技术要求", "技术要求");
            tableMapping.ColumnMappings.Add("判定", "判定");
            tableMapping.ColumnMappings.Add("不合格情况", "不合格情况");
            tableMapping.ColumnMappings.Add("判定人", "判定人");
            tableMapping.ColumnMappings.Add("最终判定", "最终判定");
            tableMapping.ColumnMappings.Add("判定日期", "判定日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 单据号, 产品型号, 产品编号, 结论, 备注, 检验员, 检验日期, 检测项目ID, 检测项目, 技术要求, 判定, 不合格情况, 判定人" +
                ", 最终判定, 判定日期 FROM dbo.View_Report_DeliveryInspection";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_Report_DeliveryInspectionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_Report_DeliveryInspectionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_Report_DeliveryInspectionDataTable dataTable = new DepotManagementDataSet.View_Report_DeliveryInspectionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_CheckOutInDepotBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_CheckOutInDepotBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_CheckOutInDepotBill";
            tableMapping.ColumnMappings.Add("入库单号", "入库单号");
            tableMapping.ColumnMappings.Add("订单号", "订单号");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("版次号", "版次号");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("报检人编码", "报检人编码");
            tableMapping.ColumnMappings.Add("报检签名", "报检签名");
            tableMapping.ColumnMappings.Add("报检日期", "报检日期");
            tableMapping.ColumnMappings.Add("检验报告编号", "检验报告编号");
            tableMapping.ColumnMappings.Add("检验入库时间", "检验入库时间");
            tableMapping.ColumnMappings.Add("报检数量", "报检数量");
            tableMapping.ColumnMappings.Add("合格数量", "合格数量");
            tableMapping.ColumnMappings.Add("让步数量", "让步数量");
            tableMapping.ColumnMappings.Add("退货数量", "退货数量");
            tableMapping.ColumnMappings.Add("报废数量", "报废数量");
            tableMapping.ColumnMappings.Add("质量信息", "质量信息");
            tableMapping.ColumnMappings.Add("入库数量", "入库数量");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("质量签名", "质量签名");
            tableMapping.ColumnMappings.Add("仓库确认数量", "仓库确认数量");
            tableMapping.ColumnMappings.Add("仓库收货员", "仓库收货员");
            tableMapping.ColumnMappings.Add("到货日期", "到货日期");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("金额", "金额");
            tableMapping.ColumnMappings.Add("大写金额", "大写金额");
            tableMapping.ColumnMappings.Add("计划单价", "计划单价");
            tableMapping.ColumnMappings.Add("计划金额", "计划金额");
            tableMapping.ColumnMappings.Add("采购签名", "采购签名");
            tableMapping.ColumnMappings.Add("仓库", "仓库");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("回退理由", "回退理由");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("仓库确认到货时间", "仓库确认到货时间");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("是否有发票", "是否有发票");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("是否挑返", "是否挑返");
            tableMapping.ColumnMappings.Add("建议退货方式", "建议退货方式");
            tableMapping.ColumnMappings.Add("SQE退货建议提出人", "SQE退货建议提出人");
            tableMapping.ColumnMappings.Add("SQE退货建议提出日期", "SQE退货建议提出日期");
            tableMapping.ColumnMappings.Add("是否仅限于返修箱用", "是否仅限于返修箱用");
            tableMapping.ColumnMappings.Add("是否紧急报检", "是否紧急报检");
            tableMapping.ColumnMappings.Add("是否紧急放行", "是否紧急放行");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("单位ID", "单位ID");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 入库单号, 订单号, 供货单位, 图号型号, 物品名称, 规格, 版次号, 单位, 批次号, 供方批次号, 报检人编码, 报检签名, 报检日期, 检验报告编号, 检验入库时间, 报检数量, 合格数量, 让步数量, 退货数量, 报废数量, 质量信息, 入库数量, 检验员, 质量签名, 仓库确认数量, 仓库收货员, 到货日期, 仓管签名, 入库时间, 单价, 金额, 大写金额, 计划单价, 计划金额, 采购签名, 仓库, 货架, 列, 层, 回退理由, 单据状态, 备注, 仓库确认到货时间, 是否已打印, 物品类别, 是否有发票, 库房代码, 库房名称, 是否挑返, 建议退货方式, SQE退货建议提出人, SQE退货建议提出日期, 是否仅限于返修箱用, 是否紧急报检, 是否紧急放行, 物品ID, 单位ID, 检验日期 FROM View_S_CheckOutInDepotBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_CheckOutInDepotBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_CheckOutInDepotBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_CheckOutInDepotBillDataTable dataTable = new DepotManagementDataSet.View_S_CheckOutInDepotBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_HomemadeRejectBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_HomemadeRejectBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_HomemadeRejectBill";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Bill_ID", "Bill_ID");
            tableMapping.ColumnMappings.Add("Bill_Time", "Bill_Time");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("FillInPersonnelCode", "FillInPersonnelCode");
            tableMapping.ColumnMappings.Add("FillInPersonnel", "FillInPersonnel");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("FinanceSignatory", "FinanceSignatory");
            tableMapping.ColumnMappings.Add("DepotManager", "DepotManager");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("BillStatus", "BillStatus");
            tableMapping.ColumnMappings.Add("StorageID", "StorageID");
            tableMapping.ColumnMappings.Add("OutDepotDate", "OutDepotDate");
            tableMapping.ColumnMappings.Add("InvoiceFlag", "InvoiceFlag");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[S_HomemadeRejectBill] WHERE (([ID] = @Original_ID) AND ((@IsNull_Bill_ID = 1 AND [Bill_ID] IS NULL) OR ([Bill_ID] = @Original_Bill_ID)) AND ((@IsNull_Bill_Time = 1 AND [Bill_Time] IS NULL) OR ([Bill_Time] = @Original_Bill_Time)) AND ((@IsNull_Provider = 1 AND [Provider] IS NULL) OR ([Provider] = @Original_Provider)) AND ((@IsNull_FillInPersonnelCode = 1 AND [FillInPersonnelCode] IS NULL) OR ([FillInPersonnelCode] = @Original_FillInPersonnelCode)) AND ((@IsNull_FillInPersonnel = 1 AND [FillInPersonnel] IS NULL) OR ([FillInPersonnel] = @Original_FillInPersonnel)) AND ((@IsNull_Department = 1 AND [Department] IS NULL) OR ([Department] = @Original_Department)) AND ((@IsNull_FinanceSignatory = 1 AND [FinanceSignatory] IS NULL) OR ([FinanceSignatory] = @Original_FinanceSignatory)) AND ((@IsNull_DepotManager = 1 AND [DepotManager] IS NULL) OR ([DepotManager] = @Original_DepotManager)) AND ((@IsNull_BillStatus = 1 AND [BillStatus] IS NULL) OR ([BillStatus] = @Original_BillStatus)) AND ((@IsNull_StorageID = 1 AND [StorageID] IS NULL) OR ([StorageID] = @Original_StorageID)) AND ((@IsNull_OutDepotDate = 1 AND [OutDepotDate] IS NULL) OR ([OutDepotDate] = @Original_OutDepotDate)) AND ([InvoiceFlag] = @Original_InvoiceFlag))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Provider", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FillInPersonnelCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FillInPersonnelCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FillInPersonnel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FillInPersonnel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FinanceSignatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FinanceSignatory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DepotManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepotManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StorageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StorageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutDepotDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutDepotDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[S_HomemadeRejectBill] ([Bill_ID], [Bill_Time], [Provider], [Reason], [FillInPersonnelCode], [FillInPersonnel], [Department], [FinanceSignatory], [DepotManager], [Remark], [BillStatus], [StorageID], [OutDepotDate], [InvoiceFlag]) VALUES (@Bill_ID, @Bill_Time, @Provider, @Reason, @FillInPersonnelCode, @FillInPersonnel, @Department, @FinanceSignatory, @DepotManager, @Remark, @BillStatus, @StorageID, @OutDepotDate, @InvoiceFlag);
SELECT ID, Bill_ID, Bill_Time, Provider, Reason, FillInPersonnelCode, FillInPersonnel, Department, FinanceSignatory, DepotManager, Remark, BillStatus, StorageID, OutDepotDate, InvoiceFlag FROM S_HomemadeRejectBill WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FillInPersonnelCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FillInPersonnel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinanceSignatory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepotManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StorageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutDepotDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_HomemadeRejectBill] SET [Bill_ID] = @Bill_ID, [Bill_Time] = @Bill" +
                "_Time, [Provider] = @Provider, [Reason] = @Reason, [FillInPersonnelCode] = @Fill" +
                "InPersonnelCode, [FillInPersonnel] = @FillInPersonnel, [Department] = @Departmen" +
                "t, [FinanceSignatory] = @FinanceSignatory, [DepotManager] = @DepotManager, [Rema" +
                "rk] = @Remark, [BillStatus] = @BillStatus, [StorageID] = @StorageID, [OutDepotDa" +
                "te] = @OutDepotDate, [InvoiceFlag] = @InvoiceFlag WHERE (([ID] = @Original_ID) A" +
                "ND ((@IsNull_Bill_ID = 1 AND [Bill_ID] IS NULL) OR ([Bill_ID] = @Original_Bill_I" +
                "D)) AND ((@IsNull_Bill_Time = 1 AND [Bill_Time] IS NULL) OR ([Bill_Time] = @Orig" +
                "inal_Bill_Time)) AND ((@IsNull_Provider = 1 AND [Provider] IS NULL) OR ([Provide" +
                "r] = @Original_Provider)) AND ((@IsNull_FillInPersonnelCode = 1 AND [FillInPerso" +
                "nnelCode] IS NULL) OR ([FillInPersonnelCode] = @Original_FillInPersonnelCode)) A" +
                "ND ((@IsNull_FillInPersonnel = 1 AND [FillInPersonnel] IS NULL) OR ([FillInPerso" +
                "nnel] = @Original_FillInPersonnel)) AND ((@IsNull_Department = 1 AND [Department" +
                "] IS NULL) OR ([Department] = @Original_Department)) AND ((@IsNull_FinanceSignat" +
                "ory = 1 AND [FinanceSignatory] IS NULL) OR ([FinanceSignatory] = @Original_Finan" +
                "ceSignatory)) AND ((@IsNull_DepotManager = 1 AND [DepotManager] IS NULL) OR ([De" +
                "potManager] = @Original_DepotManager)) AND ((@IsNull_BillStatus = 1 AND [BillSta" +
                "tus] IS NULL) OR ([BillStatus] = @Original_BillStatus)) AND ((@IsNull_StorageID " +
                "= 1 AND [StorageID] IS NULL) OR ([StorageID] = @Original_StorageID)) AND ((@IsNu" +
                "ll_OutDepotDate = 1 AND [OutDepotDate] IS NULL) OR ([OutDepotDate] = @Original_O" +
                "utDepotDate)) AND ([InvoiceFlag] = @Original_InvoiceFlag));\r\nSELECT ID, Bill_ID," +
                " Bill_Time, Provider, Reason, FillInPersonnelCode, FillInPersonnel, Department, " +
                "FinanceSignatory, DepotManager, Remark, BillStatus, StorageID, OutDepotDate, Inv" +
                "oiceFlag FROM S_HomemadeRejectBill WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FillInPersonnelCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FillInPersonnel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinanceSignatory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepotManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StorageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutDepotDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Provider", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FillInPersonnelCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FillInPersonnelCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnelCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FillInPersonnel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FillInPersonnel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FillInPersonnel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FinanceSignatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FinanceSignatory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinanceSignatory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DepotManager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepotManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepotManager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StorageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StorageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutDepotDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutDepotDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutDepotDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Bill_ID, Bill_Time, Provider, Reason, FillInPersonnelCode, FillInPerso" +
                "nnel, Department, FinanceSignatory, DepotManager, Remark, BillStatus, StorageID," +
                " OutDepotDate, InvoiceFlag FROM dbo.S_HomemadeRejectBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_HomemadeRejectBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_HomemadeRejectBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_HomemadeRejectBillDataTable dataTable = new DepotManagementDataSet.S_HomemadeRejectBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_HomemadeRejectBillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_HomemadeRejectBill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Bill_ID, global::System.Nullable<global::System.DateTime> Original_Bill_Time, string Original_Provider, string Original_FillInPersonnelCode, string Original_FillInPersonnel, string Original_Department, string Original_FinanceSignatory, string Original_DepotManager, string Original_BillStatus, string Original_StorageID, global::System.Nullable<global::System.DateTime> Original_OutDepotDate, int Original_InvoiceFlag) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Bill_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Bill_ID));
            }
            if ((Original_Bill_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Bill_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Provider == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Provider));
            }
            if ((Original_FillInPersonnelCode == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FillInPersonnelCode));
            }
            if ((Original_FillInPersonnel == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FillInPersonnel));
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Department));
            }
            if ((Original_FinanceSignatory == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_FinanceSignatory));
            }
            if ((Original_DepotManager == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_DepotManager));
            }
            if ((Original_BillStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_BillStatus));
            }
            if ((Original_StorageID == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_StorageID));
            }
            if ((Original_OutDepotDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_OutDepotDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_InvoiceFlag));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Bill_ID, global::System.Nullable<global::System.DateTime> Bill_Time, string Provider, string Reason, string FillInPersonnelCode, string FillInPersonnel, string Department, string FinanceSignatory, string DepotManager, string Remark, string BillStatus, string StorageID, global::System.Nullable<global::System.DateTime> OutDepotDate, int InvoiceFlag) {
            if ((Bill_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            if ((Bill_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Bill_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Provider == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Provider));
            }
            if ((Reason == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Reason));
            }
            if ((FillInPersonnelCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FillInPersonnelCode));
            }
            if ((FillInPersonnel == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FillInPersonnel));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Department));
            }
            if ((FinanceSignatory == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FinanceSignatory));
            }
            if ((DepotManager == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DepotManager));
            }
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((BillStatus == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BillStatus));
            }
            if ((StorageID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(StorageID));
            }
            if ((OutDepotDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(OutDepotDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(InvoiceFlag));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    global::System.Nullable<global::System.DateTime> Bill_Time, 
                    string Provider, 
                    string Reason, 
                    string FillInPersonnelCode, 
                    string FillInPersonnel, 
                    string Department, 
                    string FinanceSignatory, 
                    string DepotManager, 
                    string Remark, 
                    string BillStatus, 
                    string StorageID, 
                    global::System.Nullable<global::System.DateTime> OutDepotDate, 
                    int InvoiceFlag, 
                    int Original_ID, 
                    string Original_Bill_ID, 
                    global::System.Nullable<global::System.DateTime> Original_Bill_Time, 
                    string Original_Provider, 
                    string Original_FillInPersonnelCode, 
                    string Original_FillInPersonnel, 
                    string Original_Department, 
                    string Original_FinanceSignatory, 
                    string Original_DepotManager, 
                    string Original_BillStatus, 
                    string Original_StorageID, 
                    global::System.Nullable<global::System.DateTime> Original_OutDepotDate, 
                    int Original_InvoiceFlag, 
                    int ID) {
            if ((Bill_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            if ((Bill_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Bill_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Provider == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Provider));
            }
            if ((Reason == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Reason));
            }
            if ((FillInPersonnelCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FillInPersonnelCode));
            }
            if ((FillInPersonnel == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FillInPersonnel));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Department));
            }
            if ((FinanceSignatory == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FinanceSignatory));
            }
            if ((DepotManager == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DepotManager));
            }
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((BillStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BillStatus));
            }
            if ((StorageID == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(StorageID));
            }
            if ((OutDepotDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(OutDepotDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(InvoiceFlag));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID));
            if ((Original_Bill_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Bill_ID));
            }
            if ((Original_Bill_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_Bill_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Provider == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Provider));
            }
            if ((Original_FillInPersonnelCode == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_FillInPersonnelCode));
            }
            if ((Original_FillInPersonnel == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_FillInPersonnel));
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Department));
            }
            if ((Original_FinanceSignatory == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_FinanceSignatory));
            }
            if ((Original_DepotManager == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_DepotManager));
            }
            if ((Original_BillStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_BillStatus));
            }
            if ((Original_StorageID == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_StorageID));
            }
            if ((Original_OutDepotDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_OutDepotDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_InvoiceFlag));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    global::System.Nullable<global::System.DateTime> Bill_Time, 
                    string Provider, 
                    string Reason, 
                    string FillInPersonnelCode, 
                    string FillInPersonnel, 
                    string Department, 
                    string FinanceSignatory, 
                    string DepotManager, 
                    string Remark, 
                    string BillStatus, 
                    string StorageID, 
                    global::System.Nullable<global::System.DateTime> OutDepotDate, 
                    int InvoiceFlag, 
                    int Original_ID, 
                    string Original_Bill_ID, 
                    global::System.Nullable<global::System.DateTime> Original_Bill_Time, 
                    string Original_Provider, 
                    string Original_FillInPersonnelCode, 
                    string Original_FillInPersonnel, 
                    string Original_Department, 
                    string Original_FinanceSignatory, 
                    string Original_DepotManager, 
                    string Original_BillStatus, 
                    string Original_StorageID, 
                    global::System.Nullable<global::System.DateTime> Original_OutDepotDate, 
                    int Original_InvoiceFlag) {
            return this.Update(Bill_ID, Bill_Time, Provider, Reason, FillInPersonnelCode, FillInPersonnel, Department, FinanceSignatory, DepotManager, Remark, BillStatus, StorageID, OutDepotDate, InvoiceFlag, Original_ID, Original_Bill_ID, Original_Bill_Time, Original_Provider, Original_FillInPersonnelCode, Original_FillInPersonnel, Original_Department, Original_FinanceSignatory, Original_DepotManager, Original_BillStatus, Original_StorageID, Original_OutDepotDate, Original_InvoiceFlag, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_HomemadeRejectListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_HomemadeRejectListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_HomemadeRejectList";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Bill_ID", "Bill_ID");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("ProviderBatchNo", "ProviderBatchNo");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PlanUnitPrice", "PlanUnitPrice");
            tableMapping.ColumnMappings.Add("PlanPrice", "PlanPrice");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("InvoiceUnitPrice", "InvoiceUnitPrice");
            tableMapping.ColumnMappings.Add("InvoicePrice", "InvoicePrice");
            tableMapping.ColumnMappings.Add("HavingInvoice", "HavingInvoice");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[S_HomemadeRejectList] WHERE (([ID] = @Original_ID) AND ((@IsNull_Bill_ID = 1 AND [Bill_ID] IS NULL) OR ([Bill_ID] = @Original_Bill_ID)) AND ([GoodsID] = @Original_GoodsID) AND ((@IsNull_Provider = 1 AND [Provider] IS NULL) OR ([Provider] = @Original_Provider)) AND ((@IsNull_ProviderBatchNo = 1 AND [ProviderBatchNo] IS NULL) OR ([ProviderBatchNo] = @Original_ProviderBatchNo)) AND ((@IsNull_BatchNo = 1 AND [BatchNo] IS NULL) OR ([BatchNo] = @Original_BatchNo)) AND ([Amount] = @Original_Amount) AND ([PlanUnitPrice] = @Original_PlanUnitPrice) AND ([PlanPrice] = @Original_PlanPrice) AND ([UnitPrice] = @Original_UnitPrice) AND ([Price] = @Original_Price) AND ((@IsNull_TotalPrice = 1 AND [TotalPrice] IS NULL) OR ([TotalPrice] = @Original_TotalPrice)) AND ([InvoiceUnitPrice] = @Original_InvoiceUnitPrice) AND ([InvoicePrice] = @Original_InvoicePrice) AND ([HavingInvoice] = @Original_HavingInvoice))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Provider", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProviderBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProviderBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "PlanUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PlanPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "InvoiceUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoicePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoicePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HavingInvoice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HavingInvoice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[S_HomemadeRejectList] ([Bill_ID], [GoodsID], [Provider], [ProviderBatchNo], [BatchNo], [Amount], [PlanUnitPrice], [PlanPrice], [UnitPrice], [Price], [TotalPrice], [Remark], [InvoiceUnitPrice], [InvoicePrice], [HavingInvoice]) VALUES (@Bill_ID, @GoodsID, @Provider, @ProviderBatchNo, @BatchNo, @Amount, @PlanUnitPrice, @PlanPrice, @UnitPrice, @Price, @TotalPrice, @Remark, @InvoiceUnitPrice, @InvoicePrice, @HavingInvoice);
SELECT ID, Bill_ID, GoodsID, Provider, ProviderBatchNo, BatchNo, Amount, PlanUnitPrice, PlanPrice, UnitPrice, Price, TotalPrice, Remark, InvoiceUnitPrice, InvoicePrice, HavingInvoice FROM S_HomemadeRejectList WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "PlanUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PlanPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "InvoiceUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoicePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HavingInvoice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HavingInvoice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_HomemadeRejectList] SET [Bill_ID] = @Bill_ID, [GoodsID] = @GoodsI" +
                "D, [Provider] = @Provider, [ProviderBatchNo] = @ProviderBatchNo, [BatchNo] = @Ba" +
                "tchNo, [Amount] = @Amount, [PlanUnitPrice] = @PlanUnitPrice, [PlanPrice] = @Plan" +
                "Price, [UnitPrice] = @UnitPrice, [Price] = @Price, [TotalPrice] = @TotalPrice, [" +
                "Remark] = @Remark, [InvoiceUnitPrice] = @InvoiceUnitPrice, [InvoicePrice] = @Inv" +
                "oicePrice, [HavingInvoice] = @HavingInvoice WHERE (([ID] = @Original_ID) AND ((@" +
                "IsNull_Bill_ID = 1 AND [Bill_ID] IS NULL) OR ([Bill_ID] = @Original_Bill_ID)) AN" +
                "D ([GoodsID] = @Original_GoodsID) AND ((@IsNull_Provider = 1 AND [Provider] IS N" +
                "ULL) OR ([Provider] = @Original_Provider)) AND ((@IsNull_ProviderBatchNo = 1 AND" +
                " [ProviderBatchNo] IS NULL) OR ([ProviderBatchNo] = @Original_ProviderBatchNo)) " +
                "AND ((@IsNull_BatchNo = 1 AND [BatchNo] IS NULL) OR ([BatchNo] = @Original_Batch" +
                "No)) AND ([Amount] = @Original_Amount) AND ([PlanUnitPrice] = @Original_PlanUnit" +
                "Price) AND ([PlanPrice] = @Original_PlanPrice) AND ([UnitPrice] = @Original_Unit" +
                "Price) AND ([Price] = @Original_Price) AND ((@IsNull_TotalPrice = 1 AND [TotalPr" +
                "ice] IS NULL) OR ([TotalPrice] = @Original_TotalPrice)) AND ([InvoiceUnitPrice] " +
                "= @Original_InvoiceUnitPrice) AND ([InvoicePrice] = @Original_InvoicePrice) AND " +
                "([HavingInvoice] = @Original_HavingInvoice));\r\nSELECT ID, Bill_ID, GoodsID, Prov" +
                "ider, ProviderBatchNo, BatchNo, Amount, PlanUnitPrice, PlanPrice, UnitPrice, Pri" +
                "ce, TotalPrice, Remark, InvoiceUnitPrice, InvoicePrice, HavingInvoice FROM S_Hom" +
                "emadeRejectList WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "PlanUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PlanPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "InvoiceUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoicePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HavingInvoice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HavingInvoice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Provider", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Provider", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Provider", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProviderBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProviderBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "PlanUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PlanPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPrice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceUnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "InvoiceUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoicePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoicePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HavingInvoice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HavingInvoice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Bill_ID, GoodsID, Provider, ProviderBatchNo, BatchNo, Amount, PlanUnit" +
                "Price, PlanPrice, UnitPrice, Price, TotalPrice, Remark, InvoiceUnitPrice, Invoic" +
                "ePrice, HavingInvoice FROM dbo.S_HomemadeRejectList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_HomemadeRejectListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_HomemadeRejectListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_HomemadeRejectListDataTable dataTable = new DepotManagementDataSet.S_HomemadeRejectListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_HomemadeRejectListDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_HomemadeRejectList");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, string Original_Bill_ID, int Original_GoodsID, string Original_Provider, string Original_ProviderBatchNo, string Original_BatchNo, decimal Original_Amount, decimal Original_PlanUnitPrice, decimal Original_PlanPrice, decimal Original_UnitPrice, decimal Original_Price, string Original_TotalPrice, decimal Original_InvoiceUnitPrice, decimal Original_InvoicePrice, bool Original_HavingInvoice) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            if ((Original_Bill_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Bill_ID));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_GoodsID));
            if ((Original_Provider == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Provider));
            }
            if ((Original_ProviderBatchNo == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ProviderBatchNo));
            }
            if ((Original_BatchNo == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_BatchNo));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Amount));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_PlanUnitPrice));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_PlanPrice));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_UnitPrice));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_Price));
            if ((Original_TotalPrice == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TotalPrice));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_InvoiceUnitPrice));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_InvoicePrice));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_HavingInvoice));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Bill_ID, int GoodsID, string Provider, string ProviderBatchNo, string BatchNo, decimal Amount, decimal PlanUnitPrice, decimal PlanPrice, decimal UnitPrice, decimal Price, string TotalPrice, string Remark, decimal InvoiceUnitPrice, decimal InvoicePrice, bool HavingInvoice) {
            if ((Bill_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(GoodsID));
            if ((Provider == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Provider));
            }
            if ((ProviderBatchNo == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ProviderBatchNo));
            }
            if ((BatchNo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BatchNo));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Amount));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PlanUnitPrice));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PlanPrice));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(UnitPrice));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Price));
            if ((TotalPrice == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TotalPrice));
            }
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Remark));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(InvoiceUnitPrice));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(InvoicePrice));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(HavingInvoice));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    int GoodsID, 
                    string Provider, 
                    string ProviderBatchNo, 
                    string BatchNo, 
                    decimal Amount, 
                    decimal PlanUnitPrice, 
                    decimal PlanPrice, 
                    decimal UnitPrice, 
                    decimal Price, 
                    string TotalPrice, 
                    string Remark, 
                    decimal InvoiceUnitPrice, 
                    decimal InvoicePrice, 
                    bool HavingInvoice, 
                    long Original_ID, 
                    string Original_Bill_ID, 
                    int Original_GoodsID, 
                    string Original_Provider, 
                    string Original_ProviderBatchNo, 
                    string Original_BatchNo, 
                    decimal Original_Amount, 
                    decimal Original_PlanUnitPrice, 
                    decimal Original_PlanPrice, 
                    decimal Original_UnitPrice, 
                    decimal Original_Price, 
                    string Original_TotalPrice, 
                    decimal Original_InvoiceUnitPrice, 
                    decimal Original_InvoicePrice, 
                    bool Original_HavingInvoice, 
                    long ID) {
            if ((Bill_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Bill_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(GoodsID));
            if ((Provider == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Provider));
            }
            if ((ProviderBatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ProviderBatchNo));
            }
            if ((BatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BatchNo));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Amount));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PlanUnitPrice));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PlanPrice));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(UnitPrice));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Price));
            if ((TotalPrice == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TotalPrice));
            }
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(InvoiceUnitPrice));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(InvoicePrice));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(HavingInvoice));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_ID));
            if ((Original_Bill_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Bill_ID));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_GoodsID));
            if ((Original_Provider == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Provider));
            }
            if ((Original_ProviderBatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ProviderBatchNo));
            }
            if ((Original_BatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_BatchNo));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_Amount));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_PlanUnitPrice));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_PlanPrice));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_UnitPrice));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_Price));
            if ((Original_TotalPrice == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_TotalPrice));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_InvoiceUnitPrice));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_InvoicePrice));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_HavingInvoice));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Bill_ID, 
                    int GoodsID, 
                    string Provider, 
                    string ProviderBatchNo, 
                    string BatchNo, 
                    decimal Amount, 
                    decimal PlanUnitPrice, 
                    decimal PlanPrice, 
                    decimal UnitPrice, 
                    decimal Price, 
                    string TotalPrice, 
                    string Remark, 
                    decimal InvoiceUnitPrice, 
                    decimal InvoicePrice, 
                    bool HavingInvoice, 
                    long Original_ID, 
                    string Original_Bill_ID, 
                    int Original_GoodsID, 
                    string Original_Provider, 
                    string Original_ProviderBatchNo, 
                    string Original_BatchNo, 
                    decimal Original_Amount, 
                    decimal Original_PlanUnitPrice, 
                    decimal Original_PlanPrice, 
                    decimal Original_UnitPrice, 
                    decimal Original_Price, 
                    string Original_TotalPrice, 
                    decimal Original_InvoiceUnitPrice, 
                    decimal Original_InvoicePrice, 
                    bool Original_HavingInvoice) {
            return this.Update(Bill_ID, GoodsID, Provider, ProviderBatchNo, BatchNo, Amount, PlanUnitPrice, PlanPrice, UnitPrice, Price, TotalPrice, Remark, InvoiceUnitPrice, InvoicePrice, HavingInvoice, Original_ID, Original_Bill_ID, Original_GoodsID, Original_Provider, Original_ProviderBatchNo, Original_BatchNo, Original_Amount, Original_PlanUnitPrice, Original_PlanPrice, Original_UnitPrice, Original_Price, Original_TotalPrice, Original_InvoiceUnitPrice, Original_InvoicePrice, Original_HavingInvoice, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_HomemadeRejectBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_HomemadeRejectBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_HomemadeRejectBill";
            tableMapping.ColumnMappings.Add("退货单号", "退货单号");
            tableMapping.ColumnMappings.Add("退货时间", "退货时间");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("退货原因", "退货原因");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请部门编码", "申请部门编码");
            tableMapping.ColumnMappings.Add("申请部门名称", "申请部门名称");
            tableMapping.ColumnMappings.Add("财务签名", "财务签名");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("出库日期", "出库日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 退货单号, 退货时间, 供应商, 退货原因, 申请人编码, 申请人, 申请部门编码, 申请部门名称, 财务签名, 仓管签名, 备注, 单据状态, 是" +
                "否已打印, 库房代码, 库房名称, 出库日期 FROM dbo.View_S_HomemadeRejectBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_HomemadeRejectBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_HomemadeRejectBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_HomemadeRejectBillDataTable dataTable = new DepotManagementDataSet.View_S_HomemadeRejectBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_HomemadeRejectListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_HomemadeRejectListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_HomemadeRejectList";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("退货单号", "退货单号");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("供方批次", "供方批次");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("退货数", "退货数");
            tableMapping.ColumnMappings.Add("库存数", "库存数");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("物品类别名称", "物品类别名称");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("金额", "金额");
            tableMapping.ColumnMappings.Add("总金额", "总金额");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("库房编码", "库房编码");
            tableMapping.ColumnMappings.Add("是否有发票", "是否有发票");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 退货单号, 物品ID, 图号型号, 物品名称, 规格, 供应商, 供方批次, 批次号, 退货数, 库存数, 单位, 物品类别, 物品类别名称" +
                ", 货架, 列, 层, 单价, 金额, 总金额, 备注, 库房编码, 是否有发票 FROM dbo.View_S_HomemadeRejectList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_HomemadeRejectListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_HomemadeRejectListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_HomemadeRejectListDataTable dataTable = new DepotManagementDataSet.View_S_HomemadeRejectListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FrockInDepotBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FrockInDepotBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FrockInDepotBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据提交时间", "单据提交时间");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("供应商编码", "供应商编码");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("机加人员编码", "机加人员编码");
            tableMapping.ColumnMappings.Add("机加人员签名", "机加人员签名");
            tableMapping.ColumnMappings.Add("申请人编码", "申请人编码");
            tableMapping.ColumnMappings.Add("申请人签名", "申请人签名");
            tableMapping.ColumnMappings.Add("设计人编码", "设计人编码");
            tableMapping.ColumnMappings.Add("设计人签名", "设计人签名");
            tableMapping.ColumnMappings.Add("仓管员编码", "仓管员编码");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("工装验证时间", "工装验证时间");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("备注", "备注");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据提交时间, 单据状态, 供应商编码, 材料类别, 入库时间, 机加人员编码, 机加人员签名, 申请人编码, 申请人签名, 设计人编码," +
                " 设计人签名, 仓管员编码, 仓管签名, 工装验证时间, 库房代码, 库房名称, 备注 FROM dbo.View_S_FrockInDepotBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FrockInDepotBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FrockInDepotBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FrockInDepotBillDataTable dataTable = new DepotManagementDataSet.View_S_FrockInDepotBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FrockInDepotGoodsBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FrockInDepotGoodsBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FrockInDepotGoodsBill";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("物品类别", "物品类别");
            tableMapping.ColumnMappings.Add("物品类别名称", "物品类别名称");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 单据号, 图号型号, 物品名称, 规格, 单位, 数量, 批次号, 货架, 列, 层, 备注, 物品类别, 物品类别名称, 库房代码 FRO" +
                "M dbo.View_S_FrockInDepotGoodsBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FrockInDepotGoodsBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FrockInDepotGoodsBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FrockInDepotGoodsBillDataTable dataTable = new DepotManagementDataSet.View_S_FrockInDepotGoodsBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_FrockProvingReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_FrockProvingReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_FrockProvingReport";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("DJZT", "DJZT");
            tableMapping.ColumnMappings.Add("ConnectBillNumber", "ConnectBillNumber");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("FrockNumber", "FrockNumber");
            tableMapping.ColumnMappings.Add("BZRY", "BZRY");
            tableMapping.ColumnMappings.Add("BZRQ", "BZRQ");
            tableMapping.ColumnMappings.Add("ExamineVerdict", "ExamineVerdict");
            tableMapping.ColumnMappings.Add("JYRY", "JYRY");
            tableMapping.ColumnMappings.Add("JYRQ", "JYRQ");
            tableMapping.ColumnMappings.Add("ProvingVerdict", "ProvingVerdict");
            tableMapping.ColumnMappings.Add("YZRY", "YZRY");
            tableMapping.ColumnMappings.Add("YZRQ", "YZRQ");
            tableMapping.ColumnMappings.Add("FinalVerdict", "FinalVerdict");
            tableMapping.ColumnMappings.Add("IsInStock", "IsInStock");
            tableMapping.ColumnMappings.Add("GYRY", "GYRY");
            tableMapping.ColumnMappings.Add("GYRQ", "GYRQ");
            tableMapping.ColumnMappings.Add("BillType", "BillType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[S_FrockProvingReport] WHERE (([ID] = @Original_ID) AND ([DJH] = @Original_DJH) AND ([DJZT] = @Original_DJZT) AND ((@IsNull_ConnectBillNumber = 1 AND [ConnectBillNumber] IS NULL) OR ([ConnectBillNumber] = @Original_ConnectBillNumber)) AND ([GoodsID] = @Original_GoodsID) AND ([FrockNumber] = @Original_FrockNumber) AND ((@IsNull_BZRY = 1 AND [BZRY] IS NULL) OR ([BZRY] = @Original_BZRY)) AND ((@IsNull_BZRQ = 1 AND [BZRQ] IS NULL) OR ([BZRQ] = @Original_BZRQ)) AND ((@IsNull_JYRY = 1 AND [JYRY] IS NULL) OR ([JYRY] = @Original_JYRY)) AND ((@IsNull_JYRQ = 1 AND [JYRQ] IS NULL) OR ([JYRQ] = @Original_JYRQ)) AND ((@IsNull_YZRY = 1 AND [YZRY] IS NULL) OR ([YZRY] = @Original_YZRY)) AND ((@IsNull_YZRQ = 1 AND [YZRQ] IS NULL) OR ([YZRQ] = @Original_YZRQ)) AND ((@IsNull_IsInStock = 1 AND [IsInStock] IS NULL) OR ([IsInStock] = @Original_IsInStock)) AND ((@IsNull_GYRY = 1 AND [GYRY] IS NULL) OR ([GYRY] = @Original_GYRY)) AND ((@IsNull_GYRQ = 1 AND [GYRQ] IS NULL) OR ([GYRQ] = @Original_GYRQ)) AND ((@IsNull_BillType = 1 AND [BillType] IS NULL) OR ([BillType] = @Original_BillType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJZT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJZT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectBillNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectBillNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrockNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrockNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BZRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BZRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JYRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JYRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YZRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YZRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsInStock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsInStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[S_FrockProvingReport] ([DJH], [DJZT], [ConnectBillNumber], [GoodsID], [FrockNumber], [BZRY], [BZRQ], [ExamineVerdict], [JYRY], [JYRQ], [ProvingVerdict], [YZRY], [YZRQ], [FinalVerdict], [IsInStock], [GYRY], [GYRQ], [BillType]) VALUES (@DJH, @DJZT, @ConnectBillNumber, @GoodsID, @FrockNumber, @BZRY, @BZRQ, @ExamineVerdict, @JYRY, @JYRQ, @ProvingVerdict, @YZRY, @YZRQ, @FinalVerdict, @IsInStock, @GYRY, @GYRQ, @BillType);
SELECT ID, DJH, DJZT, ConnectBillNumber, GoodsID, FrockNumber, BZRY, BZRQ, ExamineVerdict, JYRY, JYRQ, ProvingVerdict, YZRY, YZRQ, FinalVerdict, IsInStock, GYRY, GYRQ, BillType FROM S_FrockProvingReport WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJZT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJZT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectBillNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrockNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrockNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExamineVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExamineVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProvingVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvingVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinalVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_FrockProvingReport] SET [DJH] = @DJH, [DJZT] = @DJZT, [ConnectBil" +
                "lNumber] = @ConnectBillNumber, [GoodsID] = @GoodsID, [FrockNumber] = @FrockNumbe" +
                "r, [BZRY] = @BZRY, [BZRQ] = @BZRQ, [ExamineVerdict] = @ExamineVerdict, [JYRY] = " +
                "@JYRY, [JYRQ] = @JYRQ, [ProvingVerdict] = @ProvingVerdict, [YZRY] = @YZRY, [YZRQ" +
                "] = @YZRQ, [FinalVerdict] = @FinalVerdict, [IsInStock] = @IsInStock, [GYRY] = @G" +
                "YRY, [GYRQ] = @GYRQ, [BillType] = @BillType WHERE (([ID] = @Original_ID) AND ([D" +
                "JH] = @Original_DJH) AND ([DJZT] = @Original_DJZT) AND ((@IsNull_ConnectBillNumb" +
                "er = 1 AND [ConnectBillNumber] IS NULL) OR ([ConnectBillNumber] = @Original_Conn" +
                "ectBillNumber)) AND ([GoodsID] = @Original_GoodsID) AND ([FrockNumber] = @Origin" +
                "al_FrockNumber) AND ((@IsNull_BZRY = 1 AND [BZRY] IS NULL) OR ([BZRY] = @Origina" +
                "l_BZRY)) AND ((@IsNull_BZRQ = 1 AND [BZRQ] IS NULL) OR ([BZRQ] = @Original_BZRQ)" +
                ") AND ((@IsNull_JYRY = 1 AND [JYRY] IS NULL) OR ([JYRY] = @Original_JYRY)) AND (" +
                "(@IsNull_JYRQ = 1 AND [JYRQ] IS NULL) OR ([JYRQ] = @Original_JYRQ)) AND ((@IsNul" +
                "l_YZRY = 1 AND [YZRY] IS NULL) OR ([YZRY] = @Original_YZRY)) AND ((@IsNull_YZRQ " +
                "= 1 AND [YZRQ] IS NULL) OR ([YZRQ] = @Original_YZRQ)) AND ((@IsNull_IsInStock = " +
                "1 AND [IsInStock] IS NULL) OR ([IsInStock] = @Original_IsInStock)) AND ((@IsNull" +
                "_GYRY = 1 AND [GYRY] IS NULL) OR ([GYRY] = @Original_GYRY)) AND ((@IsNull_GYRQ =" +
                " 1 AND [GYRQ] IS NULL) OR ([GYRQ] = @Original_GYRQ)) AND ((@IsNull_BillType = 1 " +
                "AND [BillType] IS NULL) OR ([BillType] = @Original_BillType)));\r\nSELECT ID, DJH," +
                " DJZT, ConnectBillNumber, GoodsID, FrockNumber, BZRY, BZRQ, ExamineVerdict, JYRY" +
                ", JYRQ, ProvingVerdict, YZRY, YZRQ, FinalVerdict, IsInStock, GYRY, GYRQ, BillTyp" +
                "e FROM S_FrockProvingReport WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJZT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJZT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectBillNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrockNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrockNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExamineVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExamineVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProvingVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvingVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinalVerdict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalVerdict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJZT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJZT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectBillNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectBillNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectBillNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrockNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrockNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BZRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BZRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BZRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JYRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JYRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JYRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YZRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YZRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YZRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YZRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YZRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsInStock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsInStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInStock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYRY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYRQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYRQ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYRQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, DJH, DJZT, ConnectBillNumber, GoodsID, FrockNumber, BZRY, BZRQ, Examin" +
                "eVerdict, JYRY, JYRQ, ProvingVerdict, YZRY, YZRQ, FinalVerdict, IsInStock, GYRY," +
                " GYRQ, BillType FROM dbo.S_FrockProvingReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_FrockProvingReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_FrockProvingReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_FrockProvingReportDataTable dataTable = new DepotManagementDataSet.S_FrockProvingReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_FrockProvingReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_FrockProvingReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_DJH, 
                    string Original_DJZT, 
                    string Original_ConnectBillNumber, 
                    int Original_GoodsID, 
                    string Original_FrockNumber, 
                    string Original_BZRY, 
                    global::System.Nullable<global::System.DateTime> Original_BZRQ, 
                    string Original_JYRY, 
                    global::System.Nullable<global::System.DateTime> Original_JYRQ, 
                    string Original_YZRY, 
                    global::System.Nullable<global::System.DateTime> Original_YZRQ, 
                    global::System.Nullable<bool> Original_IsInStock, 
                    string Original_GYRY, 
                    global::System.Nullable<global::System.DateTime> Original_GYRQ, 
                    string Original_BillType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_DJH == null)) {
                throw new global::System.ArgumentNullException("Original_DJH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DJH));
            }
            if ((Original_DJZT == null)) {
                throw new global::System.ArgumentNullException("Original_DJZT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DJZT));
            }
            if ((Original_ConnectBillNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ConnectBillNumber));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_GoodsID));
            if ((Original_FrockNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FrockNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FrockNumber));
            }
            if ((Original_BZRY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_BZRY));
            }
            if ((Original_BZRQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_BZRQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_JYRY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_JYRY));
            }
            if ((Original_JYRQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_JYRQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_YZRY == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_YZRY));
            }
            if ((Original_YZRQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_YZRQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_IsInStock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_IsInStock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_GYRY == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_GYRY));
            }
            if ((Original_GYRQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_GYRQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_BillType == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_BillType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string DJH, 
                    string DJZT, 
                    string ConnectBillNumber, 
                    int GoodsID, 
                    string FrockNumber, 
                    string BZRY, 
                    global::System.Nullable<global::System.DateTime> BZRQ, 
                    string ExamineVerdict, 
                    string JYRY, 
                    global::System.Nullable<global::System.DateTime> JYRQ, 
                    string ProvingVerdict, 
                    string YZRY, 
                    global::System.Nullable<global::System.DateTime> YZRQ, 
                    string FinalVerdict, 
                    global::System.Nullable<bool> IsInStock, 
                    string GYRY, 
                    global::System.Nullable<global::System.DateTime> GYRQ, 
                    string BillType) {
            if ((DJH == null)) {
                throw new global::System.ArgumentNullException("DJH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DJH));
            }
            if ((DJZT == null)) {
                throw new global::System.ArgumentNullException("DJZT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DJZT));
            }
            if ((ConnectBillNumber == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ConnectBillNumber));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(GoodsID));
            if ((FrockNumber == null)) {
                throw new global::System.ArgumentNullException("FrockNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FrockNumber));
            }
            if ((BZRY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BZRY));
            }
            if ((BZRQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(BZRQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ExamineVerdict == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ExamineVerdict));
            }
            if ((JYRY == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(JYRY));
            }
            if ((JYRQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(JYRQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ProvingVerdict == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ProvingVerdict));
            }
            if ((YZRY == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(YZRY));
            }
            if ((YZRQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(YZRQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FinalVerdict == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FinalVerdict));
            }
            if ((IsInStock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(IsInStock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GYRY == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(GYRY));
            }
            if ((GYRQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(GYRQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BillType == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BillType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DJH, 
                    string DJZT, 
                    string ConnectBillNumber, 
                    int GoodsID, 
                    string FrockNumber, 
                    string BZRY, 
                    global::System.Nullable<global::System.DateTime> BZRQ, 
                    string ExamineVerdict, 
                    string JYRY, 
                    global::System.Nullable<global::System.DateTime> JYRQ, 
                    string ProvingVerdict, 
                    string YZRY, 
                    global::System.Nullable<global::System.DateTime> YZRQ, 
                    string FinalVerdict, 
                    global::System.Nullable<bool> IsInStock, 
                    string GYRY, 
                    global::System.Nullable<global::System.DateTime> GYRQ, 
                    string BillType, 
                    int Original_ID, 
                    string Original_DJH, 
                    string Original_DJZT, 
                    string Original_ConnectBillNumber, 
                    int Original_GoodsID, 
                    string Original_FrockNumber, 
                    string Original_BZRY, 
                    global::System.Nullable<global::System.DateTime> Original_BZRQ, 
                    string Original_JYRY, 
                    global::System.Nullable<global::System.DateTime> Original_JYRQ, 
                    string Original_YZRY, 
                    global::System.Nullable<global::System.DateTime> Original_YZRQ, 
                    global::System.Nullable<bool> Original_IsInStock, 
                    string Original_GYRY, 
                    global::System.Nullable<global::System.DateTime> Original_GYRQ, 
                    string Original_BillType, 
                    int ID) {
            if ((DJH == null)) {
                throw new global::System.ArgumentNullException("DJH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DJH));
            }
            if ((DJZT == null)) {
                throw new global::System.ArgumentNullException("DJZT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DJZT));
            }
            if ((ConnectBillNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ConnectBillNumber));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(GoodsID));
            if ((FrockNumber == null)) {
                throw new global::System.ArgumentNullException("FrockNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FrockNumber));
            }
            if ((BZRY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BZRY));
            }
            if ((BZRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(BZRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ExamineVerdict == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ExamineVerdict));
            }
            if ((JYRY == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(JYRY));
            }
            if ((JYRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(JYRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ProvingVerdict == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ProvingVerdict));
            }
            if ((YZRY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(YZRY));
            }
            if ((YZRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(YZRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FinalVerdict == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(FinalVerdict));
            }
            if ((IsInStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(IsInStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GYRY == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(GYRY));
            }
            if ((GYRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(GYRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BillType == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BillType));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ID));
            if ((Original_DJH == null)) {
                throw new global::System.ArgumentNullException("Original_DJH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_DJH));
            }
            if ((Original_DJZT == null)) {
                throw new global::System.ArgumentNullException("Original_DJZT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_DJZT));
            }
            if ((Original_ConnectBillNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ConnectBillNumber));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_GoodsID));
            if ((Original_FrockNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FrockNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_FrockNumber));
            }
            if ((Original_BZRY == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_BZRY));
            }
            if ((Original_BZRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_BZRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_JYRY == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_JYRY));
            }
            if ((Original_JYRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_JYRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_YZRY == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_YZRY));
            }
            if ((Original_YZRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_YZRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_IsInStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_IsInStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_GYRY == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_GYRY));
            }
            if ((Original_GYRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_GYRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_BillType == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_BillType));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DJH, 
                    string DJZT, 
                    string ConnectBillNumber, 
                    int GoodsID, 
                    string FrockNumber, 
                    string BZRY, 
                    global::System.Nullable<global::System.DateTime> BZRQ, 
                    string ExamineVerdict, 
                    string JYRY, 
                    global::System.Nullable<global::System.DateTime> JYRQ, 
                    string ProvingVerdict, 
                    string YZRY, 
                    global::System.Nullable<global::System.DateTime> YZRQ, 
                    string FinalVerdict, 
                    global::System.Nullable<bool> IsInStock, 
                    string GYRY, 
                    global::System.Nullable<global::System.DateTime> GYRQ, 
                    string BillType, 
                    int Original_ID, 
                    string Original_DJH, 
                    string Original_DJZT, 
                    string Original_ConnectBillNumber, 
                    int Original_GoodsID, 
                    string Original_FrockNumber, 
                    string Original_BZRY, 
                    global::System.Nullable<global::System.DateTime> Original_BZRQ, 
                    string Original_JYRY, 
                    global::System.Nullable<global::System.DateTime> Original_JYRQ, 
                    string Original_YZRY, 
                    global::System.Nullable<global::System.DateTime> Original_YZRQ, 
                    global::System.Nullable<bool> Original_IsInStock, 
                    string Original_GYRY, 
                    global::System.Nullable<global::System.DateTime> Original_GYRQ, 
                    string Original_BillType) {
            return this.Update(DJH, DJZT, ConnectBillNumber, GoodsID, FrockNumber, BZRY, BZRQ, ExamineVerdict, JYRY, JYRQ, ProvingVerdict, YZRY, YZRQ, FinalVerdict, IsInStock, GYRY, GYRQ, BillType, Original_ID, Original_DJH, Original_DJZT, Original_ConnectBillNumber, Original_GoodsID, Original_FrockNumber, Original_BZRY, Original_BZRQ, Original_JYRY, Original_JYRQ, Original_YZRY, Original_YZRQ, Original_IsInStock, Original_GYRY, Original_GYRQ, Original_BillType, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S_FrockProvingReportAttachedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S_FrockProvingReportAttachedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S_FrockProvingReportAttached";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("AttachedType", "AttachedType");
            tableMapping.ColumnMappings.Add("AskContent", "AskContent");
            tableMapping.ColumnMappings.Add("AnswerContent", "AnswerContent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_FrockProvingReportAttached] WHERE (([ID] = @Original_ID) AND" +
                " ([DJH] = @Original_DJH) AND ((@IsNull_AttachedType = 1 AND [AttachedType] IS NU" +
                "LL) OR ([AttachedType] = @Original_AttachedType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttachedType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttachedType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[S_FrockProvingReportAttached] ([DJH], [AttachedType], [AskContent], [AnswerContent]) VALUES (@DJH, @AttachedType, @AskContent, @AnswerContent);
SELECT ID, DJH, AttachedType, AskContent, AnswerContent FROM S_FrockProvingReportAttached WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttachedType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AskContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AskContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnswerContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnswerContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[S_FrockProvingReportAttached] SET [DJH] = @DJH, [AttachedType] = @AttachedType, [AskContent] = @AskContent, [AnswerContent] = @AnswerContent WHERE (([ID] = @Original_ID) AND ([DJH] = @Original_DJH) AND ((@IsNull_AttachedType = 1 AND [AttachedType] IS NULL) OR ([AttachedType] = @Original_AttachedType)));
SELECT ID, DJH, AttachedType, AskContent, AnswerContent FROM S_FrockProvingReportAttached WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttachedType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AskContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AskContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnswerContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnswerContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DJH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DJH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttachedType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttachedType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachedType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, DJH, AttachedType, AskContent, AnswerContent FROM dbo.S_FrockProvingRe" +
                "portAttached";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.S_FrockProvingReportAttachedDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.S_FrockProvingReportAttachedDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.S_FrockProvingReportAttachedDataTable dataTable = new DepotManagementDataSet.S_FrockProvingReportAttachedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet.S_FrockProvingReportAttachedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DepotManagementDataSet dataSet) {
            return this.Adapter.Update(dataSet, "S_FrockProvingReportAttached");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_DJH, string Original_AttachedType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_DJH == null)) {
                throw new global::System.ArgumentNullException("Original_DJH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DJH));
            }
            if ((Original_AttachedType == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_AttachedType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DJH, string AttachedType, string AskContent, string AnswerContent) {
            if ((DJH == null)) {
                throw new global::System.ArgumentNullException("DJH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DJH));
            }
            if ((AttachedType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AttachedType));
            }
            if ((AskContent == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(AskContent));
            }
            if ((AnswerContent == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AnswerContent));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DJH, string AttachedType, string AskContent, string AnswerContent, int Original_ID, string Original_DJH, string Original_AttachedType, int ID) {
            if ((DJH == null)) {
                throw new global::System.ArgumentNullException("DJH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DJH));
            }
            if ((AttachedType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AttachedType));
            }
            if ((AskContent == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(AskContent));
            }
            if ((AnswerContent == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(AnswerContent));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            if ((Original_DJH == null)) {
                throw new global::System.ArgumentNullException("Original_DJH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_DJH));
            }
            if ((Original_AttachedType == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_AttachedType));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DJH, string AttachedType, string AskContent, string AnswerContent, int Original_ID, string Original_DJH, string Original_AttachedType) {
            return this.Update(DJH, AttachedType, AskContent, AnswerContent, Original_ID, Original_DJH, Original_AttachedType, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_FrockProvingReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_FrockProvingReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_FrockProvingReport";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据类别", "单据类别");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("关联单据", "关联单据");
            tableMapping.ColumnMappings.Add("工装图号", "工装图号");
            tableMapping.ColumnMappings.Add("工装名称", "工装名称");
            tableMapping.ColumnMappings.Add("工装编号", "工装编号");
            tableMapping.ColumnMappings.Add("是否入库", "是否入库");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("检验人", "检验人");
            tableMapping.ColumnMappings.Add("检验日期", "检验日期");
            tableMapping.ColumnMappings.Add("验证人", "验证人");
            tableMapping.ColumnMappings.Add("验证日期", "验证日期");
            tableMapping.ColumnMappings.Add("判定人", "判定人");
            tableMapping.ColumnMappings.Add("判定日期", "判定日期");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据类别, 单据状态, 关联单据, 工装图号, 工装名称, 工装编号, 是否入库, 编制人, 编制日期, 检验人, 检验日期, 验证人, " +
                "验证日期, 判定人, 判定日期, 物品ID FROM dbo.View_S_FrockProvingReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_FrockProvingReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_FrockProvingReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_FrockProvingReportDataTable dataTable = new DepotManagementDataSet.View_S_FrockProvingReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_ScrapGoodsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_ScrapGoodsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_ScrapGoods";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("报废单号", "报废单号");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("责任供应商", "责任供应商");
            tableMapping.ColumnMappings.Add("报废原因", "报废原因");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("CVT编号", "CVT编号");
            tableMapping.ColumnMappings.Add("报废数量", "报废数量");
            tableMapping.ColumnMappings.Add("责任部门", "责任部门");
            tableMapping.ColumnMappings.Add("责任部门名称", "责任部门名称");
            tableMapping.ColumnMappings.Add("责任类型", "责任类型");
            tableMapping.ColumnMappings.Add("报废类别", "报废类别");
            tableMapping.ColumnMappings.Add("报废类别描述", "报废类别描述");
            tableMapping.ColumnMappings.Add("损失金额", "损失金额");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("工时", "工时");
            tableMapping.ColumnMappings.Add("报废方式", "报废方式");
            tableMapping.ColumnMappings.Add("备注", "备注");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 报废单号, 物品ID, 图号型号, 物品名称, 规格, 供应商, 责任供应商, 报废原因, 批次号, CVT编号, 报废数量, 责任部门, " +
                "责任部门名称, 责任类型, 报废类别, 报废类别描述, 损失金额, 单价, 工时, 报废方式, 备注 FROM dbo.View_S_ScrapGoods";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_ScrapGoodsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_ScrapGoodsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_ScrapGoodsDataTable dataTable = new DepotManagementDataSet.View_S_ScrapGoodsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Out_ManeuverBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Out_ManeuverBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Out_ManeuverBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("关联单据号", "关联单据号");
            tableMapping.ColumnMappings.Add("物流名称", "物流名称");
            tableMapping.ColumnMappings.Add("物流单号", "物流单号");
            tableMapping.ColumnMappings.Add("出库库房", "出库库房");
            tableMapping.ColumnMappings.Add("入库库房", "入库库房");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请日期", "申请日期");
            tableMapping.ColumnMappings.Add("审核人", "审核人");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("出库人", "出库人");
            tableMapping.ColumnMappings.Add("出库日期", "出库日期");
            tableMapping.ColumnMappings.Add("发货人", "发货人");
            tableMapping.ColumnMappings.Add("发货日期", "发货日期");
            tableMapping.ColumnMappings.Add("收货人", "收货人");
            tableMapping.ColumnMappings.Add("收货日期", "收货日期");
            tableMapping.ColumnMappings.Add("入库人", "入库人");
            tableMapping.ColumnMappings.Add("入库日期", "入库日期");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据状态, 关联单据号, 物流名称, 物流单号, 出库库房, 入库库房, 申请人, 申请日期, 审核人, 审核日期, 出库人, 出库日期," +
                " 发货人, 发货日期, 收货人, 收货日期, 入库人, 入库日期 FROM dbo.View_Out_ManeuverBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_Out_ManeuverBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_Out_ManeuverBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_Out_ManeuverBillDataTable dataTable = new DepotManagementDataSet.View_Out_ManeuverBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Out_ManeuverListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Out_ManeuverListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Out_ManeuverList";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("账务库房", "账务库房");
            tableMapping.ColumnMappings.Add("申请数量", "申请数量");
            tableMapping.ColumnMappings.Add("发货数量", "发货数量");
            tableMapping.ColumnMappings.Add("收货数量", "收货数量");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("账务库房ID", "账务库房ID");
            tableMapping.ColumnMappings.Add("Bill_ID", "Bill_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 账务库房, 申请数量, 发货数量, 收货数量, 单位, 备注, 物品ID, 账务库房ID, Bill_ID FROM" +
                " dbo.View_Out_ManeuverList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_Out_ManeuverListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_Out_ManeuverListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_Out_ManeuverListDataTable dataTable = new DepotManagementDataSet.View_Out_ManeuverListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_HomemadePartBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_HomemadePartBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_HomemadePartBill";
            tableMapping.ColumnMappings.Add("入库单号", "入库单号");
            tableMapping.ColumnMappings.Add("报检日期", "报检日期");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("供货单位", "供货单位");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("报检人编码", "报检人编码");
            tableMapping.ColumnMappings.Add("报检签名", "报检签名");
            tableMapping.ColumnMappings.Add("检验报告编号", "检验报告编号");
            tableMapping.ColumnMappings.Add("检验入库时间", "检验入库时间");
            tableMapping.ColumnMappings.Add("报检数量", "报检数量");
            tableMapping.ColumnMappings.Add("合格数量", "合格数量");
            tableMapping.ColumnMappings.Add("让步数量", "让步数量");
            tableMapping.ColumnMappings.Add("退货数量", "退货数量");
            tableMapping.ColumnMappings.Add("报废数量", "报废数量");
            tableMapping.ColumnMappings.Add("入库数量", "入库数量");
            tableMapping.ColumnMappings.Add("质量信息", "质量信息");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("质量签名", "质量签名");
            tableMapping.ColumnMappings.Add("仓库收货员", "仓库收货员");
            tableMapping.ColumnMappings.Add("仓管签名", "仓管签名");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("金额", "金额");
            tableMapping.ColumnMappings.Add("大写金额", "大写金额");
            tableMapping.ColumnMappings.Add("计划单价", "计划单价");
            tableMapping.ColumnMappings.Add("计划金额", "计划金额");
            tableMapping.ColumnMappings.Add("仓库", "仓库");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("仓库确认数量", "仓库确认数量");
            tableMapping.ColumnMappings.Add("回退理由", "回退理由");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("质量检验时间", "质量检验时间");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("库房代码", "库房代码");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 入库单号, 报检日期, 物品ID, 图号型号, 物品名称, 规格, 单位, 供货单位, 批次号, 供方批次号, 报检人编码, 报检签名, 检验报告编号, 检验入库时间, 报检数量, 合格数量, 让步数量, 退货数量, 报废数量, 入库数量, 质量信息, 检验员, 质量签名, 仓库收货员, 仓管签名, 单价, 金额, 大写金额, 计划单价, 计划金额, 仓库, 货架, 列, 层, 仓库确认数量, 回退理由, 单据状态, 备注, 是否已打印, 质量检验时间, 入库时间, 库房代码, 库房名称 FROM dbo.View_S_HomemadePartBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_HomemadePartBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_HomemadePartBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_HomemadePartBillDataTable dataTable = new DepotManagementDataSet.View_S_HomemadePartBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_CheckOutInDepotForOutsourcingBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_CheckOutInDepotForOutsourcingBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_CheckOutInDepotForOutsourcingBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("关联订单号", "关联订单号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("材料类别", "材料类别");
            tableMapping.ColumnMappings.Add("版次号", "版次号");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("供应商编码", "供应商编码");
            tableMapping.ColumnMappings.Add("供方批次号", "供方批次号");
            tableMapping.ColumnMappings.Add("报检数", "报检数");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("委外费", "委外费");
            tableMapping.ColumnMappings.Add("单价", "单价");
            tableMapping.ColumnMappings.Add("金额", "金额");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("是否仅限于返修箱", "是否仅限于返修箱");
            tableMapping.ColumnMappings.Add("是否紧急报检", "是否紧急报检");
            tableMapping.ColumnMappings.Add("是否包含原材料费", "是否包含原材料费");
            tableMapping.ColumnMappings.Add("原材料费", "原材料费");
            tableMapping.ColumnMappings.Add("确认到货数", "确认到货数");
            tableMapping.ColumnMappings.Add("检验报告编号", "检验报告编号");
            tableMapping.ColumnMappings.Add("检验员", "检验员");
            tableMapping.ColumnMappings.Add("合格数", "合格数");
            tableMapping.ColumnMappings.Add("让步数", "让步数");
            tableMapping.ColumnMappings.Add("退货数", "退货数");
            tableMapping.ColumnMappings.Add("报废数", "报废数");
            tableMapping.ColumnMappings.Add("质量信息", "质量信息");
            tableMapping.ColumnMappings.Add("是否紧急放行", "是否紧急放行");
            tableMapping.ColumnMappings.Add("入库数", "入库数");
            tableMapping.ColumnMappings.Add("货架", "货架");
            tableMapping.ColumnMappings.Add("列", "列");
            tableMapping.ColumnMappings.Add("层", "层");
            tableMapping.ColumnMappings.Add("报检人", "报检人");
            tableMapping.ColumnMappings.Add("报检时间", "报检时间");
            tableMapping.ColumnMappings.Add("财务人", "财务人");
            tableMapping.ColumnMappings.Add("财务批准时间", "财务批准时间");
            tableMapping.ColumnMappings.Add("确认到货人", "确认到货人");
            tableMapping.ColumnMappings.Add("确认到货时间", "确认到货时间");
            tableMapping.ColumnMappings.Add("质检人", "质检人");
            tableMapping.ColumnMappings.Add("检验时间", "检验时间");
            tableMapping.ColumnMappings.Add("质量主管", "质量主管");
            tableMapping.ColumnMappings.Add("质量主管审核时间", "质量主管审核时间");
            tableMapping.ColumnMappings.Add("仓管员", "仓管员");
            tableMapping.ColumnMappings.Add("入库时间", "入库时间");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("是否有发票", "是否有发票");
            tableMapping.ColumnMappings.Add("所属库房", "所属库房");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("库房ID", "库房ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 单据号, 单据状态, 关联订单号, 图号型号, 物品名称, 规格, 材料类别, 版次号, 批次号, 供应商编码, 供方批次号, 报检数, 单位, 委外费, 单价, 金额, 备注, 是否仅限于返修箱, 是否紧急报检, 是否包含原材料费, 原材料费, 确认到货数, 检验报告编号, 检验员, 合格数, 让步数, 退货数, 报废数, 质量信息, 是否紧急放行, 入库数, 货架, 列, 层, 报检人, 报检时间, 财务人, 财务批准时间, 确认到货人, 确认到货时间, 质检人, 检验时间, 质量主管, 质量主管审核时间, 仓管员, 入库时间, 是否已打印, 是否有发票, 所属库房, 物品ID, 库房ID FROM dbo.View_S_CheckOutInDepotForOutsourcingBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet.View_S_CheckOutInDepotForOutsourcingBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet.View_S_CheckOutInDepotForOutsourcingBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet.View_S_CheckOutInDepotForOutsourcingBillDataTable dataTable = new DepotManagementDataSet.View_S_CheckOutInDepotForOutsourcingBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private S_ReceiveSendSaveGatherBillTableAdapter _s_ReceiveSendSaveGatherBillTableAdapter;
        
        private S_MaterialRequisitionGoodsTableAdapter _s_MaterialRequisitionGoodsTableAdapter;
        
        private S_HomemadeRejectBillTableAdapter _s_HomemadeRejectBillTableAdapter;
        
        private S_HomemadeRejectListTableAdapter _s_HomemadeRejectListTableAdapter;
        
        private S_FrockProvingReportTableAdapter _s_FrockProvingReportTableAdapter;
        
        private S_FrockProvingReportAttachedTableAdapter _s_FrockProvingReportAttachedTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_ReceiveSendSaveGatherBillTableAdapter S_ReceiveSendSaveGatherBillTableAdapter {
            get {
                return this._s_ReceiveSendSaveGatherBillTableAdapter;
            }
            set {
                this._s_ReceiveSendSaveGatherBillTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_MaterialRequisitionGoodsTableAdapter S_MaterialRequisitionGoodsTableAdapter {
            get {
                return this._s_MaterialRequisitionGoodsTableAdapter;
            }
            set {
                this._s_MaterialRequisitionGoodsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_HomemadeRejectBillTableAdapter S_HomemadeRejectBillTableAdapter {
            get {
                return this._s_HomemadeRejectBillTableAdapter;
            }
            set {
                this._s_HomemadeRejectBillTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_HomemadeRejectListTableAdapter S_HomemadeRejectListTableAdapter {
            get {
                return this._s_HomemadeRejectListTableAdapter;
            }
            set {
                this._s_HomemadeRejectListTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_FrockProvingReportTableAdapter S_FrockProvingReportTableAdapter {
            get {
                return this._s_FrockProvingReportTableAdapter;
            }
            set {
                this._s_FrockProvingReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S_FrockProvingReportAttachedTableAdapter S_FrockProvingReportAttachedTableAdapter {
            get {
                return this._s_FrockProvingReportAttachedTableAdapter;
            }
            set {
                this._s_FrockProvingReportAttachedTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._s_ReceiveSendSaveGatherBillTableAdapter != null) 
                            && (this._s_ReceiveSendSaveGatherBillTableAdapter.Connection != null))) {
                    return this._s_ReceiveSendSaveGatherBillTableAdapter.Connection;
                }
                if (((this._s_MaterialRequisitionGoodsTableAdapter != null) 
                            && (this._s_MaterialRequisitionGoodsTableAdapter.Connection != null))) {
                    return this._s_MaterialRequisitionGoodsTableAdapter.Connection;
                }
                if (((this._s_HomemadeRejectBillTableAdapter != null) 
                            && (this._s_HomemadeRejectBillTableAdapter.Connection != null))) {
                    return this._s_HomemadeRejectBillTableAdapter.Connection;
                }
                if (((this._s_HomemadeRejectListTableAdapter != null) 
                            && (this._s_HomemadeRejectListTableAdapter.Connection != null))) {
                    return this._s_HomemadeRejectListTableAdapter.Connection;
                }
                if (((this._s_FrockProvingReportTableAdapter != null) 
                            && (this._s_FrockProvingReportTableAdapter.Connection != null))) {
                    return this._s_FrockProvingReportTableAdapter.Connection;
                }
                if (((this._s_FrockProvingReportAttachedTableAdapter != null) 
                            && (this._s_FrockProvingReportAttachedTableAdapter.Connection != null))) {
                    return this._s_FrockProvingReportAttachedTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s_HomemadeRejectListTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s_FrockProvingReportTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s_HomemadeRejectListTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_HomemadeRejectList.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_HomemadeRejectListTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_HomemadeRejectBill.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_HomemadeRejectBillTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_FrockProvingReportAttached.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_FrockProvingReportAttachedTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s_FrockProvingReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_FrockProvingReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_FrockProvingReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_ReceiveSendSaveGatherBill.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_ReceiveSendSaveGatherBillTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S_MaterialRequisitionGoods.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s_MaterialRequisitionGoodsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s_HomemadeRejectListTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_HomemadeRejectList.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_HomemadeRejectListTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_HomemadeRejectBill.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_HomemadeRejectBillTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_FrockProvingReportAttached.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_FrockProvingReportAttachedTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s_FrockProvingReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_FrockProvingReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_FrockProvingReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_ReceiveSendSaveGatherBill.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_ReceiveSendSaveGatherBillTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S_MaterialRequisitionGoods.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s_MaterialRequisitionGoodsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DepotManagementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_MaterialRequisitionGoods.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_MaterialRequisitionGoodsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_ReceiveSendSaveGatherBill.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_ReceiveSendSaveGatherBillTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s_FrockProvingReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_FrockProvingReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_FrockProvingReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_FrockProvingReportAttached.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_FrockProvingReportAttachedTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_HomemadeRejectBill.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_HomemadeRejectBillTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s_HomemadeRejectListTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S_HomemadeRejectList.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s_HomemadeRejectListTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DepotManagementDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._s_ReceiveSendSaveGatherBillTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_ReceiveSendSaveGatherBillTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._s_MaterialRequisitionGoodsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_MaterialRequisitionGoodsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._s_HomemadeRejectBillTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_HomemadeRejectBillTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._s_HomemadeRejectListTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_HomemadeRejectListTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._s_FrockProvingReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_FrockProvingReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._s_FrockProvingReportAttachedTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s_FrockProvingReportAttachedTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                    revertConnections.Add(this._s_ReceiveSendSaveGatherBillTableAdapter, this._s_ReceiveSendSaveGatherBillTableAdapter.Connection);
                    this._s_ReceiveSendSaveGatherBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_ReceiveSendSaveGatherBillTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_ReceiveSendSaveGatherBillTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_ReceiveSendSaveGatherBillTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_ReceiveSendSaveGatherBillTableAdapter.Adapter);
                    }
                }
                if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                    revertConnections.Add(this._s_MaterialRequisitionGoodsTableAdapter, this._s_MaterialRequisitionGoodsTableAdapter.Connection);
                    this._s_MaterialRequisitionGoodsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_MaterialRequisitionGoodsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_MaterialRequisitionGoodsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_MaterialRequisitionGoodsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_MaterialRequisitionGoodsTableAdapter.Adapter);
                    }
                }
                if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                    revertConnections.Add(this._s_HomemadeRejectBillTableAdapter, this._s_HomemadeRejectBillTableAdapter.Connection);
                    this._s_HomemadeRejectBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_HomemadeRejectBillTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_HomemadeRejectBillTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_HomemadeRejectBillTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_HomemadeRejectBillTableAdapter.Adapter);
                    }
                }
                if ((this._s_HomemadeRejectListTableAdapter != null)) {
                    revertConnections.Add(this._s_HomemadeRejectListTableAdapter, this._s_HomemadeRejectListTableAdapter.Connection);
                    this._s_HomemadeRejectListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_HomemadeRejectListTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_HomemadeRejectListTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_HomemadeRejectListTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_HomemadeRejectListTableAdapter.Adapter);
                    }
                }
                if ((this._s_FrockProvingReportTableAdapter != null)) {
                    revertConnections.Add(this._s_FrockProvingReportTableAdapter, this._s_FrockProvingReportTableAdapter.Connection);
                    this._s_FrockProvingReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_FrockProvingReportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_FrockProvingReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_FrockProvingReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_FrockProvingReportTableAdapter.Adapter);
                    }
                }
                if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                    revertConnections.Add(this._s_FrockProvingReportAttachedTableAdapter, this._s_FrockProvingReportAttachedTableAdapter.Connection);
                    this._s_FrockProvingReportAttachedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s_FrockProvingReportAttachedTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s_FrockProvingReportAttachedTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s_FrockProvingReportAttachedTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s_FrockProvingReportAttachedTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._s_ReceiveSendSaveGatherBillTableAdapter != null)) {
                    this._s_ReceiveSendSaveGatherBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_ReceiveSendSaveGatherBillTableAdapter]));
                    this._s_ReceiveSendSaveGatherBillTableAdapter.Transaction = null;
                }
                if ((this._s_MaterialRequisitionGoodsTableAdapter != null)) {
                    this._s_MaterialRequisitionGoodsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_MaterialRequisitionGoodsTableAdapter]));
                    this._s_MaterialRequisitionGoodsTableAdapter.Transaction = null;
                }
                if ((this._s_HomemadeRejectBillTableAdapter != null)) {
                    this._s_HomemadeRejectBillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_HomemadeRejectBillTableAdapter]));
                    this._s_HomemadeRejectBillTableAdapter.Transaction = null;
                }
                if ((this._s_HomemadeRejectListTableAdapter != null)) {
                    this._s_HomemadeRejectListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_HomemadeRejectListTableAdapter]));
                    this._s_HomemadeRejectListTableAdapter.Transaction = null;
                }
                if ((this._s_FrockProvingReportTableAdapter != null)) {
                    this._s_FrockProvingReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_FrockProvingReportTableAdapter]));
                    this._s_FrockProvingReportTableAdapter.Transaction = null;
                }
                if ((this._s_FrockProvingReportAttachedTableAdapter != null)) {
                    this._s_FrockProvingReportAttachedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s_FrockProvingReportAttachedTableAdapter]));
                    this._s_FrockProvingReportAttachedTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591