//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3655
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Expression {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DepotManagementDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DepotManagementDataSet1 : global::System.Data.DataSet {
        
        private View_ClientDataTable tableView_Client;
        
        private View_S_MarketingPartBillDataTable tableView_S_MarketingPartBill;
        
        private View_S_MarketintPartListDataTable tableView_S_MarketintPartList;
        
        private View_B_MinorPurchaseBillDataTable tableView_B_MinorPurchaseBill;
        
        private View_B_MinorPurchaseListDataTable tableView_B_MinorPurchaseList;
        
        private View_S_MusterUseBillDataTable tableView_S_MusterUseBill;
        
        private View_S_MusterUseListDataTable tableView_S_MusterUseList;
        
        private View_S_MarketingAllDataTable tableView_S_MarketingAll;
        
        private View_B_MinorPurchaseBill1DataTable tableView_B_MinorPurchaseBill1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepotManagementDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DepotManagementDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View_Client"] != null)) {
                    base.Tables.Add(new View_ClientDataTable(ds.Tables["View_Client"]));
                }
                if ((ds.Tables["View_S_MarketingPartBill"] != null)) {
                    base.Tables.Add(new View_S_MarketingPartBillDataTable(ds.Tables["View_S_MarketingPartBill"]));
                }
                if ((ds.Tables["View_S_MarketintPartList"] != null)) {
                    base.Tables.Add(new View_S_MarketintPartListDataTable(ds.Tables["View_S_MarketintPartList"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseBill"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseBillDataTable(ds.Tables["View_B_MinorPurchaseBill"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseList"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseListDataTable(ds.Tables["View_B_MinorPurchaseList"]));
                }
                if ((ds.Tables["View_S_MusterUseBill"] != null)) {
                    base.Tables.Add(new View_S_MusterUseBillDataTable(ds.Tables["View_S_MusterUseBill"]));
                }
                if ((ds.Tables["View_S_MusterUseList"] != null)) {
                    base.Tables.Add(new View_S_MusterUseListDataTable(ds.Tables["View_S_MusterUseList"]));
                }
                if ((ds.Tables["View_S_MarketingAll"] != null)) {
                    base.Tables.Add(new View_S_MarketingAllDataTable(ds.Tables["View_S_MarketingAll"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseBill1"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseBill1DataTable(ds.Tables["View_B_MinorPurchaseBill1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_ClientDataTable View_Client {
            get {
                return this.tableView_Client;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketingPartBillDataTable View_S_MarketingPartBill {
            get {
                return this.tableView_S_MarketingPartBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketintPartListDataTable View_S_MarketintPartList {
            get {
                return this.tableView_S_MarketintPartList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_B_MinorPurchaseBillDataTable View_B_MinorPurchaseBill {
            get {
                return this.tableView_B_MinorPurchaseBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_B_MinorPurchaseListDataTable View_B_MinorPurchaseList {
            get {
                return this.tableView_B_MinorPurchaseList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MusterUseBillDataTable View_S_MusterUseBill {
            get {
                return this.tableView_S_MusterUseBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MusterUseListDataTable View_S_MusterUseList {
            get {
                return this.tableView_S_MusterUseList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_S_MarketingAllDataTable View_S_MarketingAll {
            get {
                return this.tableView_S_MarketingAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_B_MinorPurchaseBill1DataTable View_B_MinorPurchaseBill1 {
            get {
                return this.tableView_B_MinorPurchaseBill1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DepotManagementDataSet1 cln = ((DepotManagementDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View_Client"] != null)) {
                    base.Tables.Add(new View_ClientDataTable(ds.Tables["View_Client"]));
                }
                if ((ds.Tables["View_S_MarketingPartBill"] != null)) {
                    base.Tables.Add(new View_S_MarketingPartBillDataTable(ds.Tables["View_S_MarketingPartBill"]));
                }
                if ((ds.Tables["View_S_MarketintPartList"] != null)) {
                    base.Tables.Add(new View_S_MarketintPartListDataTable(ds.Tables["View_S_MarketintPartList"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseBill"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseBillDataTable(ds.Tables["View_B_MinorPurchaseBill"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseList"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseListDataTable(ds.Tables["View_B_MinorPurchaseList"]));
                }
                if ((ds.Tables["View_S_MusterUseBill"] != null)) {
                    base.Tables.Add(new View_S_MusterUseBillDataTable(ds.Tables["View_S_MusterUseBill"]));
                }
                if ((ds.Tables["View_S_MusterUseList"] != null)) {
                    base.Tables.Add(new View_S_MusterUseListDataTable(ds.Tables["View_S_MusterUseList"]));
                }
                if ((ds.Tables["View_S_MarketingAll"] != null)) {
                    base.Tables.Add(new View_S_MarketingAllDataTable(ds.Tables["View_S_MarketingAll"]));
                }
                if ((ds.Tables["View_B_MinorPurchaseBill1"] != null)) {
                    base.Tables.Add(new View_B_MinorPurchaseBill1DataTable(ds.Tables["View_B_MinorPurchaseBill1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableView_Client = ((View_ClientDataTable)(base.Tables["View_Client"]));
            if ((initTable == true)) {
                if ((this.tableView_Client != null)) {
                    this.tableView_Client.InitVars();
                }
            }
            this.tableView_S_MarketingPartBill = ((View_S_MarketingPartBillDataTable)(base.Tables["View_S_MarketingPartBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketingPartBill != null)) {
                    this.tableView_S_MarketingPartBill.InitVars();
                }
            }
            this.tableView_S_MarketintPartList = ((View_S_MarketintPartListDataTable)(base.Tables["View_S_MarketintPartList"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketintPartList != null)) {
                    this.tableView_S_MarketintPartList.InitVars();
                }
            }
            this.tableView_B_MinorPurchaseBill = ((View_B_MinorPurchaseBillDataTable)(base.Tables["View_B_MinorPurchaseBill"]));
            if ((initTable == true)) {
                if ((this.tableView_B_MinorPurchaseBill != null)) {
                    this.tableView_B_MinorPurchaseBill.InitVars();
                }
            }
            this.tableView_B_MinorPurchaseList = ((View_B_MinorPurchaseListDataTable)(base.Tables["View_B_MinorPurchaseList"]));
            if ((initTable == true)) {
                if ((this.tableView_B_MinorPurchaseList != null)) {
                    this.tableView_B_MinorPurchaseList.InitVars();
                }
            }
            this.tableView_S_MusterUseBill = ((View_S_MusterUseBillDataTable)(base.Tables["View_S_MusterUseBill"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MusterUseBill != null)) {
                    this.tableView_S_MusterUseBill.InitVars();
                }
            }
            this.tableView_S_MusterUseList = ((View_S_MusterUseListDataTable)(base.Tables["View_S_MusterUseList"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MusterUseList != null)) {
                    this.tableView_S_MusterUseList.InitVars();
                }
            }
            this.tableView_S_MarketingAll = ((View_S_MarketingAllDataTable)(base.Tables["View_S_MarketingAll"]));
            if ((initTable == true)) {
                if ((this.tableView_S_MarketingAll != null)) {
                    this.tableView_S_MarketingAll.InitVars();
                }
            }
            this.tableView_B_MinorPurchaseBill1 = ((View_B_MinorPurchaseBill1DataTable)(base.Tables["View_B_MinorPurchaseBill1"]));
            if ((initTable == true)) {
                if ((this.tableView_B_MinorPurchaseBill1 != null)) {
                    this.tableView_B_MinorPurchaseBill1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DepotManagementDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DepotManagementDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView_Client = new View_ClientDataTable();
            base.Tables.Add(this.tableView_Client);
            this.tableView_S_MarketingPartBill = new View_S_MarketingPartBillDataTable();
            base.Tables.Add(this.tableView_S_MarketingPartBill);
            this.tableView_S_MarketintPartList = new View_S_MarketintPartListDataTable();
            base.Tables.Add(this.tableView_S_MarketintPartList);
            this.tableView_B_MinorPurchaseBill = new View_B_MinorPurchaseBillDataTable();
            base.Tables.Add(this.tableView_B_MinorPurchaseBill);
            this.tableView_B_MinorPurchaseList = new View_B_MinorPurchaseListDataTable();
            base.Tables.Add(this.tableView_B_MinorPurchaseList);
            this.tableView_S_MusterUseBill = new View_S_MusterUseBillDataTable();
            base.Tables.Add(this.tableView_S_MusterUseBill);
            this.tableView_S_MusterUseList = new View_S_MusterUseListDataTable();
            base.Tables.Add(this.tableView_S_MusterUseList);
            this.tableView_S_MarketingAll = new View_S_MarketingAllDataTable();
            base.Tables.Add(this.tableView_S_MarketingAll);
            this.tableView_B_MinorPurchaseBill1 = new View_B_MinorPurchaseBill1DataTable();
            base.Tables.Add(this.tableView_B_MinorPurchaseBill1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Client() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketingPartBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketintPartList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_B_MinorPurchaseBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_B_MinorPurchaseList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MusterUseBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MusterUseList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_S_MarketingAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_B_MinorPurchaseBill1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DepotManagementDataSet1 ds = new DepotManagementDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void View_ClientRowChangeEventHandler(object sender, View_ClientRowChangeEvent e);
        
        public delegate void View_S_MarketingPartBillRowChangeEventHandler(object sender, View_S_MarketingPartBillRowChangeEvent e);
        
        public delegate void View_S_MarketintPartListRowChangeEventHandler(object sender, View_S_MarketintPartListRowChangeEvent e);
        
        public delegate void View_B_MinorPurchaseBillRowChangeEventHandler(object sender, View_B_MinorPurchaseBillRowChangeEvent e);
        
        public delegate void View_B_MinorPurchaseListRowChangeEventHandler(object sender, View_B_MinorPurchaseListRowChangeEvent e);
        
        public delegate void View_S_MusterUseBillRowChangeEventHandler(object sender, View_S_MusterUseBillRowChangeEvent e);
        
        public delegate void View_S_MusterUseListRowChangeEventHandler(object sender, View_S_MusterUseListRowChangeEvent e);
        
        public delegate void View_S_MarketingAllRowChangeEventHandler(object sender, View_S_MarketingAllRowChangeEvent e);
        
        public delegate void View_B_MinorPurchaseBill1RowChangeEventHandler(object sender, View_B_MinorPurchaseBill1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_ClientDataTable : global::System.Data.TypedTableBase<View_ClientRow> {
            
            private global::System.Data.DataColumn column客户编码;
            
            private global::System.Data.DataColumn column客户名称;
            
            private global::System.Data.DataColumn column客户全称;
            
            private global::System.Data.DataColumn column联系电话;
            
            private global::System.Data.DataColumn column详细地址;
            
            private global::System.Data.DataColumn column联系人;
            
            private global::System.Data.DataColumn column省份;
            
            private global::System.Data.DataColumn column服务区域;
            
            private global::System.Data.DataColumn column负责人;
            
            private global::System.Data.DataColumn _column是否为服务站点_4S店_二级库房;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientDataTable() {
                this.TableName = "View_Client";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_ClientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_ClientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 客户编码Column {
                get {
                    return this.column客户编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 客户名称Column {
                get {
                    return this.column客户名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 客户全称Column {
                get {
                    return this.column客户全称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 联系电话Column {
                get {
                    return this.column联系电话;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 详细地址Column {
                get {
                    return this.column详细地址;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 联系人Column {
                get {
                    return this.column联系人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 省份Column {
                get {
                    return this.column省份;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 服务区域Column {
                get {
                    return this.column服务区域;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 负责人Column {
                get {
                    return this.column负责人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _是否为服务站点_4S店_二级库房Column {
                get {
                    return this._column是否为服务站点_4S店_二级库房;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRow this[int index] {
                get {
                    return ((View_ClientRow)(this.Rows[index]));
                }
            }
            
            public event View_ClientRowChangeEventHandler View_ClientRowChanging;
            
            public event View_ClientRowChangeEventHandler View_ClientRowChanged;
            
            public event View_ClientRowChangeEventHandler View_ClientRowDeleting;
            
            public event View_ClientRowChangeEventHandler View_ClientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_ClientRow(View_ClientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRow AddView_ClientRow(string 客户编码, string 客户名称, string 客户全称, string 联系电话, string 详细地址, string 联系人, string 省份, string 服务区域, string 负责人, bool _是否为服务站点_4S店_二级库房, string 备注) {
                View_ClientRow rowView_ClientRow = ((View_ClientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        客户编码,
                        客户名称,
                        客户全称,
                        联系电话,
                        详细地址,
                        联系人,
                        省份,
                        服务区域,
                        负责人,
                        _是否为服务站点_4S店_二级库房,
                        备注};
                rowView_ClientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_ClientRow);
                return rowView_ClientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRow FindBy客户编码(string 客户编码) {
                return ((View_ClientRow)(this.Rows.Find(new object[] {
                            客户编码})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_ClientDataTable cln = ((View_ClientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_ClientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column客户编码 = base.Columns["客户编码"];
                this.column客户名称 = base.Columns["客户名称"];
                this.column客户全称 = base.Columns["客户全称"];
                this.column联系电话 = base.Columns["联系电话"];
                this.column详细地址 = base.Columns["详细地址"];
                this.column联系人 = base.Columns["联系人"];
                this.column省份 = base.Columns["省份"];
                this.column服务区域 = base.Columns["服务区域"];
                this.column负责人 = base.Columns["负责人"];
                this._column是否为服务站点_4S店_二级库房 = base.Columns["是否为服务站点/4S店/二级库房"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column客户编码 = new global::System.Data.DataColumn("客户编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客户编码);
                this.column客户名称 = new global::System.Data.DataColumn("客户名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客户名称);
                this.column客户全称 = new global::System.Data.DataColumn("客户全称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客户全称);
                this.column联系电话 = new global::System.Data.DataColumn("联系电话", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column联系电话);
                this.column详细地址 = new global::System.Data.DataColumn("详细地址", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column详细地址);
                this.column联系人 = new global::System.Data.DataColumn("联系人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column联系人);
                this.column省份 = new global::System.Data.DataColumn("省份", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column省份);
                this.column服务区域 = new global::System.Data.DataColumn("服务区域", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column服务区域);
                this.column负责人 = new global::System.Data.DataColumn("负责人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column负责人);
                this._column是否为服务站点_4S店_二级库房 = new global::System.Data.DataColumn("是否为服务站点/4S店/二级库房", typeof(bool), null, global::System.Data.MappingType.Element);
                this._column是否为服务站点_4S店_二级库房.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column是否为服务站点_4S店_二级库房");
                this._column是否为服务站点_4S店_二级库房.ExtendedProperties.Add("Generator_UserColumnName", "是否为服务站点/4S店/二级库房");
                base.Columns.Add(this._column是否为服务站点_4S店_二级库房);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column客户编码}, true));
                this.column客户编码.AllowDBNull = false;
                this.column客户编码.Unique = true;
                this.column客户编码.MaxLength = 50;
                this.column客户名称.MaxLength = 50;
                this.column客户全称.MaxLength = 200;
                this.column联系电话.MaxLength = 2147483647;
                this.column详细地址.MaxLength = 2147483647;
                this.column联系人.MaxLength = 2147483647;
                this.column省份.MaxLength = 50;
                this.column服务区域.MaxLength = 50;
                this.column负责人.MaxLength = 50;
                this._column是否为服务站点_4S店_二级库房.AllowDBNull = false;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRow NewView_ClientRow() {
                return ((View_ClientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_ClientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_ClientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_ClientRowChanged != null)) {
                    this.View_ClientRowChanged(this, new View_ClientRowChangeEvent(((View_ClientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_ClientRowChanging != null)) {
                    this.View_ClientRowChanging(this, new View_ClientRowChangeEvent(((View_ClientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_ClientRowDeleted != null)) {
                    this.View_ClientRowDeleted(this, new View_ClientRowChangeEvent(((View_ClientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_ClientRowDeleting != null)) {
                    this.View_ClientRowDeleting(this, new View_ClientRowChangeEvent(((View_ClientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_ClientRow(View_ClientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_ClientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketingPartBillDataTable : global::System.Data.TypedTableBase<View_S_MarketingPartBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column客户名称;
            
            private global::System.Data.DataColumn column总金额;
            
            private global::System.Data.DataColumn column营销出库单号;
            
            private global::System.Data.DataColumn column销售人员;
            
            private global::System.Data.DataColumn column销售时间;
            
            private global::System.Data.DataColumn column财务审核人;
            
            private global::System.Data.DataColumn column审核时间;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn column打印次数;
            
            private global::System.Data.DataColumn column营销审核人;
            
            private global::System.Data.DataColumn column营销审核时间;
            
            private global::System.Data.DataColumn column价格套用的整车厂;
            
            private global::System.Data.DataColumn column价格套用的整车厂编码;
            
            private global::System.Data.DataColumn column是否套用整车厂;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillDataTable() {
                this.TableName = "View_S_MarketingPartBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPartBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketingPartBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 客户名称Column {
                get {
                    return this.column客户名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总金额Column {
                get {
                    return this.column总金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 营销出库单号Column {
                get {
                    return this.column营销出库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 销售人员Column {
                get {
                    return this.column销售人员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 销售时间Column {
                get {
                    return this.column销售时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务审核人Column {
                get {
                    return this.column财务审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核时间Column {
                get {
                    return this.column审核时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打印次数Column {
                get {
                    return this.column打印次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 营销审核人Column {
                get {
                    return this.column营销审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 营销审核时间Column {
                get {
                    return this.column营销审核时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 价格套用的整车厂Column {
                get {
                    return this.column价格套用的整车厂;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 价格套用的整车厂编码Column {
                get {
                    return this.column价格套用的整车厂编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否套用整车厂Column {
                get {
                    return this.column是否套用整车厂;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRow this[int index] {
                get {
                    return ((View_S_MarketingPartBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketingPartBillRowChangeEventHandler View_S_MarketingPartBillRowChanging;
            
            public event View_S_MarketingPartBillRowChangeEventHandler View_S_MarketingPartBillRowChanged;
            
            public event View_S_MarketingPartBillRowChangeEventHandler View_S_MarketingPartBillRowDeleting;
            
            public event View_S_MarketingPartBillRowChangeEventHandler View_S_MarketingPartBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketingPartBillRow(View_S_MarketingPartBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRow AddView_S_MarketingPartBillRow(
                        string 单据号, 
                        string 单据状态, 
                        string 客户名称, 
                        decimal 总金额, 
                        string 营销出库单号, 
                        string 销售人员, 
                        System.DateTime 销售时间, 
                        string 财务审核人, 
                        System.DateTime 审核时间, 
                        string 备注, 
                        string ClientID, 
                        int 打印次数, 
                        string 营销审核人, 
                        System.DateTime 营销审核时间, 
                        string 价格套用的整车厂, 
                        string 价格套用的整车厂编码, 
                        bool 是否套用整车厂) {
                View_S_MarketingPartBillRow rowView_S_MarketingPartBillRow = ((View_S_MarketingPartBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        客户名称,
                        总金额,
                        营销出库单号,
                        销售人员,
                        销售时间,
                        财务审核人,
                        审核时间,
                        备注,
                        ClientID,
                        打印次数,
                        营销审核人,
                        营销审核时间,
                        价格套用的整车厂,
                        价格套用的整车厂编码,
                        是否套用整车厂};
                rowView_S_MarketingPartBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketingPartBillRow);
                return rowView_S_MarketingPartBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRow FindBy单据号(string 单据号) {
                return ((View_S_MarketingPartBillRow)(this.Rows.Find(new object[] {
                            单据号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketingPartBillDataTable cln = ((View_S_MarketingPartBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketingPartBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column客户名称 = base.Columns["客户名称"];
                this.column总金额 = base.Columns["总金额"];
                this.column营销出库单号 = base.Columns["营销出库单号"];
                this.column销售人员 = base.Columns["销售人员"];
                this.column销售时间 = base.Columns["销售时间"];
                this.column财务审核人 = base.Columns["财务审核人"];
                this.column审核时间 = base.Columns["审核时间"];
                this.column备注 = base.Columns["备注"];
                this.columnClientID = base.Columns["ClientID"];
                this.column打印次数 = base.Columns["打印次数"];
                this.column营销审核人 = base.Columns["营销审核人"];
                this.column营销审核时间 = base.Columns["营销审核时间"];
                this.column价格套用的整车厂 = base.Columns["价格套用的整车厂"];
                this.column价格套用的整车厂编码 = base.Columns["价格套用的整车厂编码"];
                this.column是否套用整车厂 = base.Columns["是否套用整车厂"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column客户名称 = new global::System.Data.DataColumn("客户名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客户名称);
                this.column总金额 = new global::System.Data.DataColumn("总金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总金额);
                this.column营销出库单号 = new global::System.Data.DataColumn("营销出库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column营销出库单号);
                this.column销售人员 = new global::System.Data.DataColumn("销售人员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column销售人员);
                this.column销售时间 = new global::System.Data.DataColumn("销售时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column销售时间);
                this.column财务审核人 = new global::System.Data.DataColumn("财务审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务审核人);
                this.column审核时间 = new global::System.Data.DataColumn("审核时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核时间);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.column打印次数 = new global::System.Data.DataColumn("打印次数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打印次数);
                this.column营销审核人 = new global::System.Data.DataColumn("营销审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column营销审核人);
                this.column营销审核时间 = new global::System.Data.DataColumn("营销审核时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column营销审核时间);
                this.column价格套用的整车厂 = new global::System.Data.DataColumn("价格套用的整车厂", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column价格套用的整车厂);
                this.column价格套用的整车厂编码 = new global::System.Data.DataColumn("价格套用的整车厂编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column价格套用的整车厂编码);
                this.column是否套用整车厂 = new global::System.Data.DataColumn("是否套用整车厂", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否套用整车厂);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column单据号}, true));
                this.column单据号.AllowDBNull = false;
                this.column单据号.Unique = true;
                this.column单据号.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column客户名称.MaxLength = 50;
                this.column总金额.ReadOnly = true;
                this.column营销出库单号.MaxLength = 50;
                this.column销售人员.ReadOnly = true;
                this.column销售人员.MaxLength = 4000;
                this.column销售时间.AllowDBNull = false;
                this.column财务审核人.ReadOnly = true;
                this.column财务审核人.MaxLength = 4000;
                this.column备注.MaxLength = 2147483647;
                this.columnClientID.AllowDBNull = false;
                this.columnClientID.MaxLength = 50;
                this.column打印次数.ReadOnly = true;
                this.column营销审核人.ReadOnly = true;
                this.column营销审核人.MaxLength = 4000;
                this.column价格套用的整车厂.MaxLength = 50;
                this.column价格套用的整车厂编码.MaxLength = 50;
                this.column是否套用整车厂.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRow NewView_S_MarketingPartBillRow() {
                return ((View_S_MarketingPartBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketingPartBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketingPartBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketingPartBillRowChanged != null)) {
                    this.View_S_MarketingPartBillRowChanged(this, new View_S_MarketingPartBillRowChangeEvent(((View_S_MarketingPartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketingPartBillRowChanging != null)) {
                    this.View_S_MarketingPartBillRowChanging(this, new View_S_MarketingPartBillRowChangeEvent(((View_S_MarketingPartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketingPartBillRowDeleted != null)) {
                    this.View_S_MarketingPartBillRowDeleted(this, new View_S_MarketingPartBillRowChangeEvent(((View_S_MarketingPartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketingPartBillRowDeleting != null)) {
                    this.View_S_MarketingPartBillRowDeleting(this, new View_S_MarketingPartBillRowChangeEvent(((View_S_MarketingPartBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketingPartBillRow(View_S_MarketingPartBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketingPartBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketintPartListDataTable : global::System.Data.TypedTableBase<View_S_MarketintPartListRow> {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column销售单价;
            
            private global::System.Data.DataColumn column最低定价;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column总价;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column主机厂代码;
            
            private global::System.Data.DataColumn column主机厂物品名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListDataTable() {
                this.TableName = "View_S_MarketintPartList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketintPartListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketintPartListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 销售单价Column {
                get {
                    return this.column销售单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 最低定价Column {
                get {
                    return this.column最低定价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总价Column {
                get {
                    return this.column总价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 主机厂代码Column {
                get {
                    return this.column主机厂代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 主机厂物品名称Column {
                get {
                    return this.column主机厂物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRow this[int index] {
                get {
                    return ((View_S_MarketintPartListRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketintPartListRowChangeEventHandler View_S_MarketintPartListRowChanging;
            
            public event View_S_MarketintPartListRowChangeEventHandler View_S_MarketintPartListRowChanged;
            
            public event View_S_MarketintPartListRowChangeEventHandler View_S_MarketintPartListRowDeleting;
            
            public event View_S_MarketintPartListRowChangeEventHandler View_S_MarketintPartListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketintPartListRow(View_S_MarketintPartListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRow AddView_S_MarketintPartListRow(
                        int 序号, 
                        string 单据号, 
                        string 图号型号, 
                        string 物品名称, 
                        string 规格, 
                        decimal 销售单价, 
                        decimal 最低定价, 
                        decimal 数量, 
                        decimal 总价, 
                        string 单位, 
                        string 批次号, 
                        string 备注, 
                        string GoodsID, 
                        string 供应商, 
                        string 主机厂代码, 
                        string 主机厂物品名称) {
                View_S_MarketintPartListRow rowView_S_MarketintPartListRow = ((View_S_MarketintPartListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        单据号,
                        图号型号,
                        物品名称,
                        规格,
                        销售单价,
                        最低定价,
                        数量,
                        总价,
                        单位,
                        批次号,
                        备注,
                        GoodsID,
                        供应商,
                        主机厂代码,
                        主机厂物品名称};
                rowView_S_MarketintPartListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketintPartListRow);
                return rowView_S_MarketintPartListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRow FindBy序号(int 序号) {
                return ((View_S_MarketintPartListRow)(this.Rows.Find(new object[] {
                            序号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketintPartListDataTable cln = ((View_S_MarketintPartListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketintPartListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column单据号 = base.Columns["单据号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column销售单价 = base.Columns["销售单价"];
                this.column最低定价 = base.Columns["最低定价"];
                this.column数量 = base.Columns["数量"];
                this.column总价 = base.Columns["总价"];
                this.column单位 = base.Columns["单位"];
                this.column批次号 = base.Columns["批次号"];
                this.column备注 = base.Columns["备注"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.column供应商 = base.Columns["供应商"];
                this.column主机厂代码 = base.Columns["主机厂代码"];
                this.column主机厂物品名称 = base.Columns["主机厂物品名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column销售单价 = new global::System.Data.DataColumn("销售单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column销售单价);
                this.column最低定价 = new global::System.Data.DataColumn("最低定价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column最低定价);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column总价 = new global::System.Data.DataColumn("总价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总价);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column主机厂代码 = new global::System.Data.DataColumn("主机厂代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column主机厂代码);
                this.column主机厂物品名称 = new global::System.Data.DataColumn("主机厂物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column主机厂物品名称);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column序号}, true));
                this.column序号.AllowDBNull = false;
                this.column序号.Unique = true;
                this.column单据号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column数量.AllowDBNull = false;
                this.column总价.ReadOnly = true;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsID.MaxLength = 50;
                this.column供应商.AllowDBNull = false;
                this.column供应商.MaxLength = 50;
                this.column主机厂代码.ReadOnly = true;
                this.column主机厂代码.MaxLength = 50;
                this.column主机厂物品名称.ReadOnly = true;
                this.column主机厂物品名称.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRow NewView_S_MarketintPartListRow() {
                return ((View_S_MarketintPartListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketintPartListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketintPartListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketintPartListRowChanged != null)) {
                    this.View_S_MarketintPartListRowChanged(this, new View_S_MarketintPartListRowChangeEvent(((View_S_MarketintPartListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketintPartListRowChanging != null)) {
                    this.View_S_MarketintPartListRowChanging(this, new View_S_MarketintPartListRowChangeEvent(((View_S_MarketintPartListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketintPartListRowDeleted != null)) {
                    this.View_S_MarketintPartListRowDeleted(this, new View_S_MarketintPartListRowChangeEvent(((View_S_MarketintPartListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketintPartListRowDeleting != null)) {
                    this.View_S_MarketintPartListRowDeleting(this, new View_S_MarketintPartListRowChangeEvent(((View_S_MarketintPartListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketintPartListRow(View_S_MarketintPartListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketintPartListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_B_MinorPurchaseBillDataTable : global::System.Data.TypedTableBase<View_B_MinorPurchaseBillRow> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column采购类别;
            
            private global::System.Data.DataColumn column是否紧急;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请日期;
            
            private global::System.Data.DataColumn column申请部门;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column部门负责人;
            
            private global::System.Data.DataColumn column部门确认时间;
            
            private global::System.Data.DataColumn column分管领导;
            
            private global::System.Data.DataColumn column分管领导确认时间;
            
            private global::System.Data.DataColumn column财务领导确认;
            
            private global::System.Data.DataColumn column财务确认时间;
            
            private global::System.Data.DataColumn column常务副总经理确认;
            
            private global::System.Data.DataColumn column常务副总经理确认时间;
            
            private global::System.Data.DataColumn column采购工程师;
            
            private global::System.Data.DataColumn column完成日期;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column负责人意见;
            
            private global::System.Data.DataColumn column分管领导意见;
            
            private global::System.Data.DataColumn column财务意见;
            
            private global::System.Data.DataColumn column常务副总经理意见;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column部门月预算内;
            
            private global::System.Data.DataColumn column用途;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column调配人;
            
            private global::System.Data.DataColumn column申请部门编号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillDataTable() {
                this.TableName = "View_B_MinorPurchaseBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_B_MinorPurchaseBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购类别Column {
                get {
                    return this.column采购类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急Column {
                get {
                    return this.column是否紧急;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请日期Column {
                get {
                    return this.column申请日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门Column {
                get {
                    return this.column申请部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门负责人Column {
                get {
                    return this.column部门负责人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门确认时间Column {
                get {
                    return this.column部门确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导Column {
                get {
                    return this.column分管领导;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导确认时间Column {
                get {
                    return this.column分管领导确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务领导确认Column {
                get {
                    return this.column财务领导确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务确认时间Column {
                get {
                    return this.column财务确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理确认Column {
                get {
                    return this.column常务副总经理确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理确认时间Column {
                get {
                    return this.column常务副总经理确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购工程师Column {
                get {
                    return this.column采购工程师;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 完成日期Column {
                get {
                    return this.column完成日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 负责人意见Column {
                get {
                    return this.column负责人意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导意见Column {
                get {
                    return this.column分管领导意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务意见Column {
                get {
                    return this.column财务意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理意见Column {
                get {
                    return this.column常务副总经理意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门月预算内Column {
                get {
                    return this.column部门月预算内;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途Column {
                get {
                    return this.column用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调配人Column {
                get {
                    return this.column调配人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编号Column {
                get {
                    return this.column申请部门编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRow this[int index] {
                get {
                    return ((View_B_MinorPurchaseBillRow)(this.Rows[index]));
                }
            }
            
            public event View_B_MinorPurchaseBillRowChangeEventHandler View_B_MinorPurchaseBillRowChanging;
            
            public event View_B_MinorPurchaseBillRowChangeEventHandler View_B_MinorPurchaseBillRowChanged;
            
            public event View_B_MinorPurchaseBillRowChangeEventHandler View_B_MinorPurchaseBillRowDeleting;
            
            public event View_B_MinorPurchaseBillRowChangeEventHandler View_B_MinorPurchaseBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_B_MinorPurchaseBillRow(View_B_MinorPurchaseBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRow AddView_B_MinorPurchaseBillRow(
                        string 单据状态, 
                        string 采购类别, 
                        string 是否紧急, 
                        string 申请人, 
                        System.DateTime 申请日期, 
                        string 申请部门, 
                        string 编制人, 
                        System.DateTime 编制日期, 
                        string 部门负责人, 
                        System.DateTime 部门确认时间, 
                        string 分管领导, 
                        System.DateTime 分管领导确认时间, 
                        string 财务领导确认, 
                        System.DateTime 财务确认时间, 
                        string 常务副总经理确认, 
                        System.DateTime 常务副总经理确认时间, 
                        string 采购工程师, 
                        System.DateTime 完成日期, 
                        string 备注, 
                        string 负责人意见, 
                        string 分管领导意见, 
                        string 财务意见, 
                        string 常务副总经理意见, 
                        string 单据号, 
                        string 部门月预算内, 
                        string 用途, 
                        bool 是否已打印, 
                        string 调配人, 
                        string 申请部门编号) {
                View_B_MinorPurchaseBillRow rowView_B_MinorPurchaseBillRow = ((View_B_MinorPurchaseBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        单据状态,
                        采购类别,
                        是否紧急,
                        申请人,
                        申请日期,
                        申请部门,
                        编制人,
                        编制日期,
                        部门负责人,
                        部门确认时间,
                        分管领导,
                        分管领导确认时间,
                        财务领导确认,
                        财务确认时间,
                        常务副总经理确认,
                        常务副总经理确认时间,
                        采购工程师,
                        完成日期,
                        备注,
                        负责人意见,
                        分管领导意见,
                        财务意见,
                        常务副总经理意见,
                        单据号,
                        部门月预算内,
                        用途,
                        是否已打印,
                        调配人,
                        申请部门编号};
                rowView_B_MinorPurchaseBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_B_MinorPurchaseBillRow);
                return rowView_B_MinorPurchaseBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRow FindBy编号(int 编号) {
                return ((View_B_MinorPurchaseBillRow)(this.Rows.Find(new object[] {
                            编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_B_MinorPurchaseBillDataTable cln = ((View_B_MinorPurchaseBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_B_MinorPurchaseBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column采购类别 = base.Columns["采购类别"];
                this.column是否紧急 = base.Columns["是否紧急"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请日期 = base.Columns["申请日期"];
                this.column申请部门 = base.Columns["申请部门"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column部门负责人 = base.Columns["部门负责人"];
                this.column部门确认时间 = base.Columns["部门确认时间"];
                this.column分管领导 = base.Columns["分管领导"];
                this.column分管领导确认时间 = base.Columns["分管领导确认时间"];
                this.column财务领导确认 = base.Columns["财务领导确认"];
                this.column财务确认时间 = base.Columns["财务确认时间"];
                this.column常务副总经理确认 = base.Columns["常务副总经理确认"];
                this.column常务副总经理确认时间 = base.Columns["常务副总经理确认时间"];
                this.column采购工程师 = base.Columns["采购工程师"];
                this.column完成日期 = base.Columns["完成日期"];
                this.column备注 = base.Columns["备注"];
                this.column负责人意见 = base.Columns["负责人意见"];
                this.column分管领导意见 = base.Columns["分管领导意见"];
                this.column财务意见 = base.Columns["财务意见"];
                this.column常务副总经理意见 = base.Columns["常务副总经理意见"];
                this.column单据号 = base.Columns["单据号"];
                this.column部门月预算内 = base.Columns["部门月预算内"];
                this.column用途 = base.Columns["用途"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column调配人 = base.Columns["调配人"];
                this.column申请部门编号 = base.Columns["申请部门编号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column采购类别 = new global::System.Data.DataColumn("采购类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购类别);
                this.column是否紧急 = new global::System.Data.DataColumn("是否紧急", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请日期 = new global::System.Data.DataColumn("申请日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请日期);
                this.column申请部门 = new global::System.Data.DataColumn("申请部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column部门负责人 = new global::System.Data.DataColumn("部门负责人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门负责人);
                this.column部门确认时间 = new global::System.Data.DataColumn("部门确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门确认时间);
                this.column分管领导 = new global::System.Data.DataColumn("分管领导", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导);
                this.column分管领导确认时间 = new global::System.Data.DataColumn("分管领导确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导确认时间);
                this.column财务领导确认 = new global::System.Data.DataColumn("财务领导确认", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务领导确认);
                this.column财务确认时间 = new global::System.Data.DataColumn("财务确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务确认时间);
                this.column常务副总经理确认 = new global::System.Data.DataColumn("常务副总经理确认", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理确认);
                this.column常务副总经理确认时间 = new global::System.Data.DataColumn("常务副总经理确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理确认时间);
                this.column采购工程师 = new global::System.Data.DataColumn("采购工程师", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购工程师);
                this.column完成日期 = new global::System.Data.DataColumn("完成日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完成日期);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column负责人意见 = new global::System.Data.DataColumn("负责人意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column负责人意见);
                this.column分管领导意见 = new global::System.Data.DataColumn("分管领导意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导意见);
                this.column财务意见 = new global::System.Data.DataColumn("财务意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务意见);
                this.column常务副总经理意见 = new global::System.Data.DataColumn("常务副总经理意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理意见);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column部门月预算内 = new global::System.Data.DataColumn("部门月预算内", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门月预算内);
                this.column用途 = new global::System.Data.DataColumn("用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column调配人 = new global::System.Data.DataColumn("调配人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调配人);
                this.column申请部门编号 = new global::System.Data.DataColumn("申请部门编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编号);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column编号}, true));
                this.column编号.AutoIncrement = true;
                this.column编号.AutoIncrementSeed = -1;
                this.column编号.AutoIncrementStep = -1;
                this.column编号.AllowDBNull = false;
                this.column编号.ReadOnly = true;
                this.column编号.Unique = true;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column采购类别.AllowDBNull = false;
                this.column采购类别.MaxLength = 50;
                this.column是否紧急.ReadOnly = true;
                this.column是否紧急.MaxLength = 6;
                this.column申请人.ReadOnly = true;
                this.column申请人.MaxLength = 4000;
                this.column申请部门.AllowDBNull = false;
                this.column申请部门.MaxLength = 50;
                this.column编制人.ReadOnly = true;
                this.column编制人.MaxLength = 4000;
                this.column编制日期.AllowDBNull = false;
                this.column部门负责人.ReadOnly = true;
                this.column部门负责人.MaxLength = 4000;
                this.column分管领导.ReadOnly = true;
                this.column分管领导.MaxLength = 4000;
                this.column财务领导确认.ReadOnly = true;
                this.column财务领导确认.MaxLength = 4000;
                this.column常务副总经理确认.ReadOnly = true;
                this.column常务副总经理确认.MaxLength = 4000;
                this.column采购工程师.ReadOnly = true;
                this.column采购工程师.MaxLength = 4000;
                this.column备注.MaxLength = 2147483647;
                this.column负责人意见.MaxLength = 2147483647;
                this.column分管领导意见.MaxLength = 2147483647;
                this.column财务意见.MaxLength = 2147483647;
                this.column常务副总经理意见.MaxLength = 2147483647;
                this.column单据号.MaxLength = 50;
                this.column部门月预算内.ReadOnly = true;
                this.column部门月预算内.MaxLength = 2;
                this.column用途.MaxLength = 50;
                this.column调配人.ReadOnly = true;
                this.column调配人.MaxLength = 4000;
                this.column申请部门编号.AllowDBNull = false;
                this.column申请部门编号.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRow NewView_B_MinorPurchaseBillRow() {
                return ((View_B_MinorPurchaseBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_B_MinorPurchaseBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_B_MinorPurchaseBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_B_MinorPurchaseBillRowChanged != null)) {
                    this.View_B_MinorPurchaseBillRowChanged(this, new View_B_MinorPurchaseBillRowChangeEvent(((View_B_MinorPurchaseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_B_MinorPurchaseBillRowChanging != null)) {
                    this.View_B_MinorPurchaseBillRowChanging(this, new View_B_MinorPurchaseBillRowChangeEvent(((View_B_MinorPurchaseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_B_MinorPurchaseBillRowDeleted != null)) {
                    this.View_B_MinorPurchaseBillRowDeleted(this, new View_B_MinorPurchaseBillRowChangeEvent(((View_B_MinorPurchaseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_B_MinorPurchaseBillRowDeleting != null)) {
                    this.View_B_MinorPurchaseBillRowDeleting(this, new View_B_MinorPurchaseBillRowChangeEvent(((View_B_MinorPurchaseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_B_MinorPurchaseBillRow(View_B_MinorPurchaseBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_B_MinorPurchaseBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_B_MinorPurchaseListDataTable : global::System.Data.TypedTableBase<View_B_MinorPurchaseListRow> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column供应商;
            
            private global::System.Data.DataColumn column申请数量;
            
            private global::System.Data.DataColumn column库存数量;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column要求到货日期;
            
            private global::System.Data.DataColumn column物品状态;
            
            private global::System.Data.DataColumn column预算价格;
            
            private global::System.Data.DataColumn column最终到货日期;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListDataTable() {
                this.TableName = "View_B_MinorPurchaseList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_B_MinorPurchaseListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 供应商Column {
                get {
                    return this.column供应商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请数量Column {
                get {
                    return this.column申请数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数量Column {
                get {
                    return this.column库存数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 要求到货日期Column {
                get {
                    return this.column要求到货日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品状态Column {
                get {
                    return this.column物品状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预算价格Column {
                get {
                    return this.column预算价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 最终到货日期Column {
                get {
                    return this.column最终到货日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListRow this[int index] {
                get {
                    return ((View_B_MinorPurchaseListRow)(this.Rows[index]));
                }
            }
            
            public event View_B_MinorPurchaseListRowChangeEventHandler View_B_MinorPurchaseListRowChanging;
            
            public event View_B_MinorPurchaseListRowChangeEventHandler View_B_MinorPurchaseListRowChanged;
            
            public event View_B_MinorPurchaseListRowChangeEventHandler View_B_MinorPurchaseListRowDeleting;
            
            public event View_B_MinorPurchaseListRowChangeEventHandler View_B_MinorPurchaseListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_B_MinorPurchaseListRow(View_B_MinorPurchaseListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListRow AddView_B_MinorPurchaseListRow(int 编号, string 图号型号, string 物品名称, string 规格, string 供应商, int 申请数量, decimal 库存数量, string 单位, System.DateTime 要求到货日期, string 物品状态, decimal 预算价格, System.DateTime 最终到货日期, string 备注, int GoodsID) {
                View_B_MinorPurchaseListRow rowView_B_MinorPurchaseListRow = ((View_B_MinorPurchaseListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        编号,
                        图号型号,
                        物品名称,
                        规格,
                        供应商,
                        申请数量,
                        库存数量,
                        单位,
                        要求到货日期,
                        物品状态,
                        预算价格,
                        最终到货日期,
                        备注,
                        GoodsID};
                rowView_B_MinorPurchaseListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_B_MinorPurchaseListRow);
                return rowView_B_MinorPurchaseListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_B_MinorPurchaseListDataTable cln = ((View_B_MinorPurchaseListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_B_MinorPurchaseListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column供应商 = base.Columns["供应商"];
                this.column申请数量 = base.Columns["申请数量"];
                this.column库存数量 = base.Columns["库存数量"];
                this.column单位 = base.Columns["单位"];
                this.column要求到货日期 = base.Columns["要求到货日期"];
                this.column物品状态 = base.Columns["物品状态"];
                this.column预算价格 = base.Columns["预算价格"];
                this.column最终到货日期 = base.Columns["最终到货日期"];
                this.column备注 = base.Columns["备注"];
                this.columnGoodsID = base.Columns["GoodsID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column供应商 = new global::System.Data.DataColumn("供应商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供应商);
                this.column申请数量 = new global::System.Data.DataColumn("申请数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请数量);
                this.column库存数量 = new global::System.Data.DataColumn("库存数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数量);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column要求到货日期 = new global::System.Data.DataColumn("要求到货日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column要求到货日期);
                this.column物品状态 = new global::System.Data.DataColumn("物品状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品状态);
                this.column预算价格 = new global::System.Data.DataColumn("预算价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预算价格);
                this.column最终到货日期 = new global::System.Data.DataColumn("最终到货日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column最终到货日期);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.column编号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.MaxLength = 50;
                this.column规格.MaxLength = 50;
                this.column供应商.MaxLength = 50;
                this.column库存数量.ReadOnly = true;
                this.column单位.MaxLength = 50;
                this.column物品状态.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListRow NewView_B_MinorPurchaseListRow() {
                return ((View_B_MinorPurchaseListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_B_MinorPurchaseListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_B_MinorPurchaseListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_B_MinorPurchaseListRowChanged != null)) {
                    this.View_B_MinorPurchaseListRowChanged(this, new View_B_MinorPurchaseListRowChangeEvent(((View_B_MinorPurchaseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_B_MinorPurchaseListRowChanging != null)) {
                    this.View_B_MinorPurchaseListRowChanging(this, new View_B_MinorPurchaseListRowChangeEvent(((View_B_MinorPurchaseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_B_MinorPurchaseListRowDeleted != null)) {
                    this.View_B_MinorPurchaseListRowDeleted(this, new View_B_MinorPurchaseListRowChangeEvent(((View_B_MinorPurchaseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_B_MinorPurchaseListRowDeleting != null)) {
                    this.View_B_MinorPurchaseListRowDeleting(this, new View_B_MinorPurchaseListRowChangeEvent(((View_B_MinorPurchaseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_B_MinorPurchaseListRow(View_B_MinorPurchaseListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_B_MinorPurchaseListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MusterUseBillDataTable : global::System.Data.TypedTableBase<View_S_MusterUseBillRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column用途;
            
            private global::System.Data.DataColumn column库房名称;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请日期;
            
            private global::System.Data.DataColumn column审核人;
            
            private global::System.Data.DataColumn column审核日期;
            
            private global::System.Data.DataColumn column仓管员;
            
            private global::System.Data.DataColumn column出库日期;
            
            private global::System.Data.DataColumn column库房编码;
            
            private global::System.Data.DataColumn column用途编码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillDataTable() {
                this.TableName = "View_S_MusterUseBill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MusterUseBillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MusterUseBillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途Column {
                get {
                    return this.column用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房名称Column {
                get {
                    return this.column库房名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请日期Column {
                get {
                    return this.column申请日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核人Column {
                get {
                    return this.column审核人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 审核日期Column {
                get {
                    return this.column审核日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仓管员Column {
                get {
                    return this.column仓管员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 出库日期Column {
                get {
                    return this.column出库日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库房编码Column {
                get {
                    return this.column库房编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途编码Column {
                get {
                    return this.column用途编码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRow this[int index] {
                get {
                    return ((View_S_MusterUseBillRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MusterUseBillRowChangeEventHandler View_S_MusterUseBillRowChanging;
            
            public event View_S_MusterUseBillRowChangeEventHandler View_S_MusterUseBillRowChanged;
            
            public event View_S_MusterUseBillRowChangeEventHandler View_S_MusterUseBillRowDeleting;
            
            public event View_S_MusterUseBillRowChangeEventHandler View_S_MusterUseBillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MusterUseBillRow(View_S_MusterUseBillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRow AddView_S_MusterUseBillRow(string 单据号, string 单据状态, string 用途, string 库房名称, string 申请人, System.DateTime 申请日期, string 审核人, System.DateTime 审核日期, string 仓管员, System.DateTime 出库日期, string 库房编码, string 用途编码) {
                View_S_MusterUseBillRow rowView_S_MusterUseBillRow = ((View_S_MusterUseBillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        单据状态,
                        用途,
                        库房名称,
                        申请人,
                        申请日期,
                        审核人,
                        审核日期,
                        仓管员,
                        出库日期,
                        库房编码,
                        用途编码};
                rowView_S_MusterUseBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MusterUseBillRow);
                return rowView_S_MusterUseBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRow FindBy库房编码(string 库房编码) {
                return ((View_S_MusterUseBillRow)(this.Rows.Find(new object[] {
                            库房编码})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MusterUseBillDataTable cln = ((View_S_MusterUseBillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MusterUseBillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column用途 = base.Columns["用途"];
                this.column库房名称 = base.Columns["库房名称"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请日期 = base.Columns["申请日期"];
                this.column审核人 = base.Columns["审核人"];
                this.column审核日期 = base.Columns["审核日期"];
                this.column仓管员 = base.Columns["仓管员"];
                this.column出库日期 = base.Columns["出库日期"];
                this.column库房编码 = base.Columns["库房编码"];
                this.column用途编码 = base.Columns["用途编码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column用途 = new global::System.Data.DataColumn("用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途);
                this.column库房名称 = new global::System.Data.DataColumn("库房名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房名称);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请日期 = new global::System.Data.DataColumn("申请日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请日期);
                this.column审核人 = new global::System.Data.DataColumn("审核人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核人);
                this.column审核日期 = new global::System.Data.DataColumn("审核日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column审核日期);
                this.column仓管员 = new global::System.Data.DataColumn("仓管员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓管员);
                this.column出库日期 = new global::System.Data.DataColumn("出库日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出库日期);
                this.column库房编码 = new global::System.Data.DataColumn("库房编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库房编码);
                this.column用途编码 = new global::System.Data.DataColumn("用途编码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途编码);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column库房编码}, true));
                this.column单据号.MaxLength = 50;
                this.column单据状态.MaxLength = 50;
                this.column用途.MaxLength = 50;
                this.column库房名称.MaxLength = 50;
                this.column申请人.MaxLength = 50;
                this.column审核人.MaxLength = 50;
                this.column仓管员.MaxLength = 50;
                this.column库房编码.AllowDBNull = false;
                this.column库房编码.Unique = true;
                this.column库房编码.MaxLength = 50;
                this.column用途编码.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRow NewView_S_MusterUseBillRow() {
                return ((View_S_MusterUseBillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MusterUseBillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MusterUseBillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MusterUseBillRowChanged != null)) {
                    this.View_S_MusterUseBillRowChanged(this, new View_S_MusterUseBillRowChangeEvent(((View_S_MusterUseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MusterUseBillRowChanging != null)) {
                    this.View_S_MusterUseBillRowChanging(this, new View_S_MusterUseBillRowChangeEvent(((View_S_MusterUseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MusterUseBillRowDeleted != null)) {
                    this.View_S_MusterUseBillRowDeleted(this, new View_S_MusterUseBillRowChangeEvent(((View_S_MusterUseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MusterUseBillRowDeleting != null)) {
                    this.View_S_MusterUseBillRowDeleting(this, new View_S_MusterUseBillRowChangeEvent(((View_S_MusterUseBillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MusterUseBillRow(View_S_MusterUseBillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MusterUseBillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MusterUseListDataTable : global::System.Data.TypedTableBase<View_S_MusterUseListRow> {
            
            private global::System.Data.DataColumn column图号型号;
            
            private global::System.Data.DataColumn column物品名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column版次号;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column库存数;
            
            private global::System.Data.DataColumn column物品ID;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListDataTable() {
                this.TableName = "View_S_MusterUseList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MusterUseListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MusterUseListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 图号型号Column {
                get {
                    return this.column图号型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品名称Column {
                get {
                    return this.column物品名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 版次号Column {
                get {
                    return this.column版次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 库存数Column {
                get {
                    return this.column库存数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListRow this[int index] {
                get {
                    return ((View_S_MusterUseListRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MusterUseListRowChangeEventHandler View_S_MusterUseListRowChanging;
            
            public event View_S_MusterUseListRowChangeEventHandler View_S_MusterUseListRowChanged;
            
            public event View_S_MusterUseListRowChangeEventHandler View_S_MusterUseListRowDeleting;
            
            public event View_S_MusterUseListRowChangeEventHandler View_S_MusterUseListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MusterUseListRow(View_S_MusterUseListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListRow AddView_S_MusterUseListRow(string 图号型号, string 物品名称, string 规格, decimal 数量, string 批次号, string 版次号, string 单位, decimal 库存数, int 物品ID, string 单据号, string 备注) {
                View_S_MusterUseListRow rowView_S_MusterUseListRow = ((View_S_MusterUseListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        图号型号,
                        物品名称,
                        规格,
                        数量,
                        批次号,
                        版次号,
                        单位,
                        库存数,
                        物品ID,
                        单据号,
                        备注};
                rowView_S_MusterUseListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MusterUseListRow);
                return rowView_S_MusterUseListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MusterUseListDataTable cln = ((View_S_MusterUseListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MusterUseListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column图号型号 = base.Columns["图号型号"];
                this.column物品名称 = base.Columns["物品名称"];
                this.column规格 = base.Columns["规格"];
                this.column数量 = base.Columns["数量"];
                this.column批次号 = base.Columns["批次号"];
                this.column版次号 = base.Columns["版次号"];
                this.column单位 = base.Columns["单位"];
                this.column库存数 = base.Columns["库存数"];
                this.column物品ID = base.Columns["物品ID"];
                this.column单据号 = base.Columns["单据号"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column图号型号 = new global::System.Data.DataColumn("图号型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图号型号);
                this.column物品名称 = new global::System.Data.DataColumn("物品名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column版次号 = new global::System.Data.DataColumn("版次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column版次号);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column库存数 = new global::System.Data.DataColumn("库存数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column库存数);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column图号型号.AllowDBNull = false;
                this.column图号型号.MaxLength = 50;
                this.column物品名称.AllowDBNull = false;
                this.column物品名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column批次号.MaxLength = 50;
                this.column版次号.MaxLength = 50;
                this.column单位.AllowDBNull = false;
                this.column单位.MaxLength = 6;
                this.column单据号.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListRow NewView_S_MusterUseListRow() {
                return ((View_S_MusterUseListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MusterUseListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MusterUseListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MusterUseListRowChanged != null)) {
                    this.View_S_MusterUseListRowChanged(this, new View_S_MusterUseListRowChangeEvent(((View_S_MusterUseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MusterUseListRowChanging != null)) {
                    this.View_S_MusterUseListRowChanging(this, new View_S_MusterUseListRowChangeEvent(((View_S_MusterUseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MusterUseListRowDeleted != null)) {
                    this.View_S_MusterUseListRowDeleted(this, new View_S_MusterUseListRowChangeEvent(((View_S_MusterUseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MusterUseListRowDeleting != null)) {
                    this.View_S_MusterUseListRowDeleting(this, new View_S_MusterUseListRowChangeEvent(((View_S_MusterUseListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MusterUseListRow(View_S_MusterUseListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MusterUseListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_S_MarketingAllDataTable : global::System.Data.TypedTableBase<View_S_MarketingAllRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDJH;
            
            private global::System.Data.DataColumn columnLRRY;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnSHRY;
            
            private global::System.Data.DataColumn columnYWLX;
            
            private global::System.Data.DataColumn columnKFRY;
            
            private global::System.Data.DataColumn columnDJZT_FLAG;
            
            private global::System.Data.DataColumn columnDELETE_FLAG;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnListID;
            
            private global::System.Data.DataColumn columnDJ_ID;
            
            private global::System.Data.DataColumn columnCPID;
            
            private global::System.Data.DataColumn columnProvider;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnGoodsPrice;
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnGoodsRemark;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnYWFS;
            
            private global::System.Data.DataColumn columnStorageName;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSpec;
            
            private global::System.Data.DataColumn columnLRKS;
            
            private global::System.Data.DataColumn columnAffirmDate;
            
            private global::System.Data.DataColumn columnFSRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllDataTable() {
                this.TableName = "View_S_MarketingAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_S_MarketingAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJHColumn {
                get {
                    return this.columnDJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRRYColumn {
                get {
                    return this.columnLRRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRYColumn {
                get {
                    return this.columnSHRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YWLXColumn {
                get {
                    return this.columnYWLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KFRYColumn {
                get {
                    return this.columnKFRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJZT_FLAGColumn {
                get {
                    return this.columnDJZT_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELETE_FLAGColumn {
                get {
                    return this.columnDELETE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListIDColumn {
                get {
                    return this.columnListID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJ_IDColumn {
                get {
                    return this.columnDJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPIDColumn {
                get {
                    return this.columnCPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsPriceColumn {
                get {
                    return this.columnGoodsPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsRemarkColumn {
                get {
                    return this.columnGoodsRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YWFSColumn {
                get {
                    return this.columnYWFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageNameColumn {
                get {
                    return this.columnStorageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecColumn {
                get {
                    return this.columnSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRKSColumn {
                get {
                    return this.columnLRKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AffirmDateColumn {
                get {
                    return this.columnAffirmDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSRYColumn {
                get {
                    return this.columnFSRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow this[int index] {
                get {
                    return ((View_S_MarketingAllRow)(this.Rows[index]));
                }
            }
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowChanging;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowChanged;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowDeleting;
            
            public event View_S_MarketingAllRowChangeEventHandler View_S_MarketingAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_S_MarketingAllRow(View_S_MarketingAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow AddView_S_MarketingAllRow(
                        int ID, 
                        string DJH, 
                        string LRRY, 
                        string Dept, 
                        string SHRY, 
                        string YWLX, 
                        string KFRY, 
                        string DJZT_FLAG, 
                        int DELETE_FLAG, 
                        System.DateTime Date, 
                        decimal Price, 
                        string Remark, 
                        int ListID, 
                        int DJ_ID, 
                        string CPID, 
                        string Provider, 
                        decimal UnitPrice, 
                        decimal GoodsPrice, 
                        decimal Count, 
                        string Unit, 
                        string BatchNo, 
                        string GoodsRemark, 
                        string StorageID, 
                        string YWFS, 
                        string StorageName, 
                        string GoodsCode, 
                        string GoodsName, 
                        string Spec, 
                        string LRKS, 
                        System.DateTime AffirmDate, 
                        string FSRY) {
                View_S_MarketingAllRow rowView_S_MarketingAllRow = ((View_S_MarketingAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        DJH,
                        LRRY,
                        Dept,
                        SHRY,
                        YWLX,
                        KFRY,
                        DJZT_FLAG,
                        DELETE_FLAG,
                        Date,
                        Price,
                        Remark,
                        ListID,
                        DJ_ID,
                        CPID,
                        Provider,
                        UnitPrice,
                        GoodsPrice,
                        Count,
                        Unit,
                        BatchNo,
                        GoodsRemark,
                        StorageID,
                        YWFS,
                        StorageName,
                        GoodsCode,
                        GoodsName,
                        Spec,
                        LRKS,
                        AffirmDate,
                        FSRY};
                rowView_S_MarketingAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_S_MarketingAllRow);
                return rowView_S_MarketingAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_S_MarketingAllDataTable cln = ((View_S_MarketingAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_S_MarketingAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDJH = base.Columns["DJH"];
                this.columnLRRY = base.Columns["LRRY"];
                this.columnDept = base.Columns["Dept"];
                this.columnSHRY = base.Columns["SHRY"];
                this.columnYWLX = base.Columns["YWLX"];
                this.columnKFRY = base.Columns["KFRY"];
                this.columnDJZT_FLAG = base.Columns["DJZT_FLAG"];
                this.columnDELETE_FLAG = base.Columns["DELETE_FLAG"];
                this.columnDate = base.Columns["Date"];
                this.columnPrice = base.Columns["Price"];
                this.columnRemark = base.Columns["Remark"];
                this.columnListID = base.Columns["ListID"];
                this.columnDJ_ID = base.Columns["DJ_ID"];
                this.columnCPID = base.Columns["CPID"];
                this.columnProvider = base.Columns["Provider"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnGoodsPrice = base.Columns["GoodsPrice"];
                this.columnCount = base.Columns["Count"];
                this.columnUnit = base.Columns["Unit"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnGoodsRemark = base.Columns["GoodsRemark"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnYWFS = base.Columns["YWFS"];
                this.columnStorageName = base.Columns["StorageName"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSpec = base.Columns["Spec"];
                this.columnLRKS = base.Columns["LRKS"];
                this.columnAffirmDate = base.Columns["AffirmDate"];
                this.columnFSRY = base.Columns["FSRY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDJH = new global::System.Data.DataColumn("DJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJH);
                this.columnLRRY = new global::System.Data.DataColumn("LRRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRRY);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnSHRY = new global::System.Data.DataColumn("SHRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRY);
                this.columnYWLX = new global::System.Data.DataColumn("YWLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYWLX);
                this.columnKFRY = new global::System.Data.DataColumn("KFRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKFRY);
                this.columnDJZT_FLAG = new global::System.Data.DataColumn("DJZT_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJZT_FLAG);
                this.columnDELETE_FLAG = new global::System.Data.DataColumn("DELETE_FLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELETE_FLAG);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnListID = new global::System.Data.DataColumn("ListID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListID);
                this.columnDJ_ID = new global::System.Data.DataColumn("DJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJ_ID);
                this.columnCPID = new global::System.Data.DataColumn("CPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPID);
                this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnGoodsPrice = new global::System.Data.DataColumn("GoodsPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsPrice);
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnGoodsRemark = new global::System.Data.DataColumn("GoodsRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRemark);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnYWFS = new global::System.Data.DataColumn("YWFS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYWFS);
                this.columnStorageName = new global::System.Data.DataColumn("StorageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageName);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSpec = new global::System.Data.DataColumn("Spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpec);
                this.columnLRKS = new global::System.Data.DataColumn("LRKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRKS);
                this.columnAffirmDate = new global::System.Data.DataColumn("AffirmDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAffirmDate);
                this.columnFSRY = new global::System.Data.DataColumn("FSRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSRY);
                this.columnID.AllowDBNull = false;
                this.columnDJH.AllowDBNull = false;
                this.columnDJH.MaxLength = 50;
                this.columnLRRY.ReadOnly = true;
                this.columnLRRY.MaxLength = 50;
                this.columnDept.ReadOnly = true;
                this.columnDept.MaxLength = 4000;
                this.columnSHRY.ReadOnly = true;
                this.columnSHRY.MaxLength = 50;
                this.columnYWLX.AllowDBNull = false;
                this.columnYWLX.MaxLength = 50;
                this.columnKFRY.ReadOnly = true;
                this.columnKFRY.MaxLength = 50;
                this.columnDJZT_FLAG.AllowDBNull = false;
                this.columnDJZT_FLAG.MaxLength = 50;
                this.columnDELETE_FLAG.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnRemark.MaxLength = 2147483647;
                this.columnListID.AllowDBNull = false;
                this.columnDJ_ID.AllowDBNull = false;
                this.columnCPID.AllowDBNull = false;
                this.columnCPID.MaxLength = 50;
                this.columnProvider.AllowDBNull = false;
                this.columnProvider.MaxLength = 50;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnGoodsPrice.AllowDBNull = false;
                this.columnCount.AllowDBNull = false;
                this.columnUnit.AllowDBNull = false;
                this.columnUnit.MaxLength = 6;
                this.columnBatchNo.AllowDBNull = false;
                this.columnBatchNo.MaxLength = 50;
                this.columnGoodsRemark.AllowDBNull = false;
                this.columnGoodsRemark.MaxLength = 2147483647;
                this.columnStorageID.MaxLength = 50;
                this.columnYWFS.AllowDBNull = false;
                this.columnYWFS.MaxLength = 50;
                this.columnStorageName.AllowDBNull = false;
                this.columnStorageName.MaxLength = 50;
                this.columnGoodsCode.AllowDBNull = false;
                this.columnGoodsCode.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSpec.AllowDBNull = false;
                this.columnSpec.MaxLength = 50;
                this.columnLRKS.ReadOnly = true;
                this.columnLRKS.MaxLength = 4000;
                this.columnFSRY.ReadOnly = true;
                this.columnFSRY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow NewView_S_MarketingAllRow() {
                return ((View_S_MarketingAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_S_MarketingAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_S_MarketingAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_S_MarketingAllRowChanged != null)) {
                    this.View_S_MarketingAllRowChanged(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_S_MarketingAllRowChanging != null)) {
                    this.View_S_MarketingAllRowChanging(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_S_MarketingAllRowDeleted != null)) {
                    this.View_S_MarketingAllRowDeleted(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_S_MarketingAllRowDeleting != null)) {
                    this.View_S_MarketingAllRowDeleting(this, new View_S_MarketingAllRowChangeEvent(((View_S_MarketingAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_S_MarketingAllRow(View_S_MarketingAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_S_MarketingAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_B_MinorPurchaseBill1DataTable : global::System.Data.TypedTableBase<View_B_MinorPurchaseBill1Row> {
            
            private global::System.Data.DataColumn column编号;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column单据状态;
            
            private global::System.Data.DataColumn column采购类别;
            
            private global::System.Data.DataColumn column用途;
            
            private global::System.Data.DataColumn column是否紧急;
            
            private global::System.Data.DataColumn column是否已打印;
            
            private global::System.Data.DataColumn column部门月预算内;
            
            private global::System.Data.DataColumn column申请人;
            
            private global::System.Data.DataColumn column申请日期;
            
            private global::System.Data.DataColumn column申请部门;
            
            private global::System.Data.DataColumn column编制人;
            
            private global::System.Data.DataColumn column编制日期;
            
            private global::System.Data.DataColumn column部门负责人;
            
            private global::System.Data.DataColumn column部门确认时间;
            
            private global::System.Data.DataColumn column负责人意见;
            
            private global::System.Data.DataColumn column分管领导;
            
            private global::System.Data.DataColumn column分管领导确认时间;
            
            private global::System.Data.DataColumn column分管领导意见;
            
            private global::System.Data.DataColumn column财务领导确认;
            
            private global::System.Data.DataColumn column财务确认时间;
            
            private global::System.Data.DataColumn column财务意见;
            
            private global::System.Data.DataColumn column常务副总经理确认;
            
            private global::System.Data.DataColumn column常务副总经理确认时间;
            
            private global::System.Data.DataColumn column调配人;
            
            private global::System.Data.DataColumn column常务副总经理意见;
            
            private global::System.Data.DataColumn column采购工程师;
            
            private global::System.Data.DataColumn column完成日期;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn column申请部门编号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1DataTable() {
                this.TableName = "View_B_MinorPurchaseBill1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseBill1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_B_MinorPurchaseBill1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购类别Column {
                get {
                    return this.column采购类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 用途Column {
                get {
                    return this.column用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否紧急Column {
                get {
                    return this.column是否紧急;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 是否已打印Column {
                get {
                    return this.column是否已打印;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门月预算内Column {
                get {
                    return this.column部门月预算内;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请人Column {
                get {
                    return this.column申请人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请日期Column {
                get {
                    return this.column申请日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门Column {
                get {
                    return this.column申请部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制人Column {
                get {
                    return this.column编制人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编制日期Column {
                get {
                    return this.column编制日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门负责人Column {
                get {
                    return this.column部门负责人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门确认时间Column {
                get {
                    return this.column部门确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 负责人意见Column {
                get {
                    return this.column负责人意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导Column {
                get {
                    return this.column分管领导;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导确认时间Column {
                get {
                    return this.column分管领导确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 分管领导意见Column {
                get {
                    return this.column分管领导意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务领导确认Column {
                get {
                    return this.column财务领导确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务确认时间Column {
                get {
                    return this.column财务确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务意见Column {
                get {
                    return this.column财务意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理确认Column {
                get {
                    return this.column常务副总经理确认;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理确认时间Column {
                get {
                    return this.column常务副总经理确认时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 调配人Column {
                get {
                    return this.column调配人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 常务副总经理意见Column {
                get {
                    return this.column常务副总经理意见;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 采购工程师Column {
                get {
                    return this.column采购工程师;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 完成日期Column {
                get {
                    return this.column完成日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请部门编号Column {
                get {
                    return this.column申请部门编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1Row this[int index] {
                get {
                    return ((View_B_MinorPurchaseBill1Row)(this.Rows[index]));
                }
            }
            
            public event View_B_MinorPurchaseBill1RowChangeEventHandler View_B_MinorPurchaseBill1RowChanging;
            
            public event View_B_MinorPurchaseBill1RowChangeEventHandler View_B_MinorPurchaseBill1RowChanged;
            
            public event View_B_MinorPurchaseBill1RowChangeEventHandler View_B_MinorPurchaseBill1RowDeleting;
            
            public event View_B_MinorPurchaseBill1RowChangeEventHandler View_B_MinorPurchaseBill1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_B_MinorPurchaseBill1Row(View_B_MinorPurchaseBill1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1Row AddView_B_MinorPurchaseBill1Row(
                        int 编号, 
                        string 单据号, 
                        string 单据状态, 
                        string 采购类别, 
                        string 用途, 
                        string 是否紧急, 
                        bool 是否已打印, 
                        string 部门月预算内, 
                        string 申请人, 
                        System.DateTime 申请日期, 
                        string 申请部门, 
                        string 编制人, 
                        System.DateTime 编制日期, 
                        string 部门负责人, 
                        System.DateTime 部门确认时间, 
                        string 负责人意见, 
                        string 分管领导, 
                        System.DateTime 分管领导确认时间, 
                        string 分管领导意见, 
                        string 财务领导确认, 
                        System.DateTime 财务确认时间, 
                        string 财务意见, 
                        string 常务副总经理确认, 
                        System.DateTime 常务副总经理确认时间, 
                        string 调配人, 
                        string 常务副总经理意见, 
                        string 采购工程师, 
                        System.DateTime 完成日期, 
                        string 备注, 
                        string 申请部门编号) {
                View_B_MinorPurchaseBill1Row rowView_B_MinorPurchaseBill1Row = ((View_B_MinorPurchaseBill1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        编号,
                        单据号,
                        单据状态,
                        采购类别,
                        用途,
                        是否紧急,
                        是否已打印,
                        部门月预算内,
                        申请人,
                        申请日期,
                        申请部门,
                        编制人,
                        编制日期,
                        部门负责人,
                        部门确认时间,
                        负责人意见,
                        分管领导,
                        分管领导确认时间,
                        分管领导意见,
                        财务领导确认,
                        财务确认时间,
                        财务意见,
                        常务副总经理确认,
                        常务副总经理确认时间,
                        调配人,
                        常务副总经理意见,
                        采购工程师,
                        完成日期,
                        备注,
                        申请部门编号};
                rowView_B_MinorPurchaseBill1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_B_MinorPurchaseBill1Row);
                return rowView_B_MinorPurchaseBill1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1Row FindBy编号(int 编号) {
                return ((View_B_MinorPurchaseBill1Row)(this.Rows.Find(new object[] {
                            编号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_B_MinorPurchaseBill1DataTable cln = ((View_B_MinorPurchaseBill1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_B_MinorPurchaseBill1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column编号 = base.Columns["编号"];
                this.column单据号 = base.Columns["单据号"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column采购类别 = base.Columns["采购类别"];
                this.column用途 = base.Columns["用途"];
                this.column是否紧急 = base.Columns["是否紧急"];
                this.column是否已打印 = base.Columns["是否已打印"];
                this.column部门月预算内 = base.Columns["部门月预算内"];
                this.column申请人 = base.Columns["申请人"];
                this.column申请日期 = base.Columns["申请日期"];
                this.column申请部门 = base.Columns["申请部门"];
                this.column编制人 = base.Columns["编制人"];
                this.column编制日期 = base.Columns["编制日期"];
                this.column部门负责人 = base.Columns["部门负责人"];
                this.column部门确认时间 = base.Columns["部门确认时间"];
                this.column负责人意见 = base.Columns["负责人意见"];
                this.column分管领导 = base.Columns["分管领导"];
                this.column分管领导确认时间 = base.Columns["分管领导确认时间"];
                this.column分管领导意见 = base.Columns["分管领导意见"];
                this.column财务领导确认 = base.Columns["财务领导确认"];
                this.column财务确认时间 = base.Columns["财务确认时间"];
                this.column财务意见 = base.Columns["财务意见"];
                this.column常务副总经理确认 = base.Columns["常务副总经理确认"];
                this.column常务副总经理确认时间 = base.Columns["常务副总经理确认时间"];
                this.column调配人 = base.Columns["调配人"];
                this.column常务副总经理意见 = base.Columns["常务副总经理意见"];
                this.column采购工程师 = base.Columns["采购工程师"];
                this.column完成日期 = base.Columns["完成日期"];
                this.column备注 = base.Columns["备注"];
                this.column申请部门编号 = base.Columns["申请部门编号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column单据状态 = new global::System.Data.DataColumn("单据状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column采购类别 = new global::System.Data.DataColumn("采购类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购类别);
                this.column用途 = new global::System.Data.DataColumn("用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用途);
                this.column是否紧急 = new global::System.Data.DataColumn("是否紧急", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否紧急);
                this.column是否已打印 = new global::System.Data.DataColumn("是否已打印", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否已打印);
                this.column部门月预算内 = new global::System.Data.DataColumn("部门月预算内", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门月预算内);
                this.column申请人 = new global::System.Data.DataColumn("申请人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请人);
                this.column申请日期 = new global::System.Data.DataColumn("申请日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请日期);
                this.column申请部门 = new global::System.Data.DataColumn("申请部门", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门);
                this.column编制人 = new global::System.Data.DataColumn("编制人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制人);
                this.column编制日期 = new global::System.Data.DataColumn("编制日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编制日期);
                this.column部门负责人 = new global::System.Data.DataColumn("部门负责人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门负责人);
                this.column部门确认时间 = new global::System.Data.DataColumn("部门确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门确认时间);
                this.column负责人意见 = new global::System.Data.DataColumn("负责人意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column负责人意见);
                this.column分管领导 = new global::System.Data.DataColumn("分管领导", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导);
                this.column分管领导确认时间 = new global::System.Data.DataColumn("分管领导确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导确认时间);
                this.column分管领导意见 = new global::System.Data.DataColumn("分管领导意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分管领导意见);
                this.column财务领导确认 = new global::System.Data.DataColumn("财务领导确认", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务领导确认);
                this.column财务确认时间 = new global::System.Data.DataColumn("财务确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务确认时间);
                this.column财务意见 = new global::System.Data.DataColumn("财务意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务意见);
                this.column常务副总经理确认 = new global::System.Data.DataColumn("常务副总经理确认", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理确认);
                this.column常务副总经理确认时间 = new global::System.Data.DataColumn("常务副总经理确认时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理确认时间);
                this.column调配人 = new global::System.Data.DataColumn("调配人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column调配人);
                this.column常务副总经理意见 = new global::System.Data.DataColumn("常务副总经理意见", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column常务副总经理意见);
                this.column采购工程师 = new global::System.Data.DataColumn("采购工程师", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column采购工程师);
                this.column完成日期 = new global::System.Data.DataColumn("完成日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完成日期);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column申请部门编号 = new global::System.Data.DataColumn("申请部门编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请部门编号);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column编号}, true));
                this.column编号.AllowDBNull = false;
                this.column编号.Unique = true;
                this.column单据号.MaxLength = 50;
                this.column单据状态.AllowDBNull = false;
                this.column单据状态.MaxLength = 50;
                this.column采购类别.AllowDBNull = false;
                this.column采购类别.MaxLength = 50;
                this.column用途.MaxLength = 50;
                this.column是否紧急.ReadOnly = true;
                this.column是否紧急.MaxLength = 6;
                this.column部门月预算内.ReadOnly = true;
                this.column部门月预算内.MaxLength = 2;
                this.column申请人.ReadOnly = true;
                this.column申请人.MaxLength = 50;
                this.column申请部门.MaxLength = 50;
                this.column编制人.ReadOnly = true;
                this.column编制人.MaxLength = 50;
                this.column编制日期.AllowDBNull = false;
                this.column部门负责人.ReadOnly = true;
                this.column部门负责人.MaxLength = 101;
                this.column负责人意见.MaxLength = 2147483647;
                this.column分管领导.ReadOnly = true;
                this.column分管领导.MaxLength = 50;
                this.column分管领导意见.MaxLength = 2147483647;
                this.column财务领导确认.ReadOnly = true;
                this.column财务领导确认.MaxLength = 50;
                this.column财务意见.MaxLength = 2147483647;
                this.column常务副总经理确认.ReadOnly = true;
                this.column常务副总经理确认.MaxLength = 50;
                this.column调配人.ReadOnly = true;
                this.column调配人.MaxLength = 50;
                this.column常务副总经理意见.MaxLength = 2147483647;
                this.column采购工程师.ReadOnly = true;
                this.column采购工程师.MaxLength = 50;
                this.column备注.MaxLength = 2147483647;
                this.column申请部门编号.AllowDBNull = false;
                this.column申请部门编号.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1Row NewView_B_MinorPurchaseBill1Row() {
                return ((View_B_MinorPurchaseBill1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_B_MinorPurchaseBill1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_B_MinorPurchaseBill1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_B_MinorPurchaseBill1RowChanged != null)) {
                    this.View_B_MinorPurchaseBill1RowChanged(this, new View_B_MinorPurchaseBill1RowChangeEvent(((View_B_MinorPurchaseBill1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_B_MinorPurchaseBill1RowChanging != null)) {
                    this.View_B_MinorPurchaseBill1RowChanging(this, new View_B_MinorPurchaseBill1RowChangeEvent(((View_B_MinorPurchaseBill1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_B_MinorPurchaseBill1RowDeleted != null)) {
                    this.View_B_MinorPurchaseBill1RowDeleted(this, new View_B_MinorPurchaseBill1RowChangeEvent(((View_B_MinorPurchaseBill1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_B_MinorPurchaseBill1RowDeleting != null)) {
                    this.View_B_MinorPurchaseBill1RowDeleting(this, new View_B_MinorPurchaseBill1RowChangeEvent(((View_B_MinorPurchaseBill1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_B_MinorPurchaseBill1Row(View_B_MinorPurchaseBill1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DepotManagementDataSet1 ds = new DepotManagementDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_B_MinorPurchaseBill1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_ClientRow : global::System.Data.DataRow {
            
            private View_ClientDataTable tableView_Client;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_ClientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Client = ((View_ClientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客户编码 {
                get {
                    return ((string)(this[this.tableView_Client.客户编码Column]));
                }
                set {
                    this[this.tableView_Client.客户编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客户名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.客户名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“客户名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.客户名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客户全称 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.客户全称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“客户全称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.客户全称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系电话 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.联系电话Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“联系电话”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.联系电话Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 详细地址 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.详细地址Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“详细地址”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.详细地址Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.联系人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“联系人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.联系人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 省份 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.省份Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“省份”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.省份Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 服务区域 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.服务区域Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“服务区域”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.服务区域Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 负责人 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.负责人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“负责人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.负责人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool _是否为服务站点_4S店_二级库房 {
                get {
                    return ((bool)(this[this.tableView_Client._是否为服务站点_4S店_二级库房Column]));
                }
                set {
                    this[this.tableView_Client._是否为服务站点_4S店_二级库房Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_Client.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Client”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Client.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客户名称Null() {
                return this.IsNull(this.tableView_Client.客户名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客户名称Null() {
                this[this.tableView_Client.客户名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客户全称Null() {
                return this.IsNull(this.tableView_Client.客户全称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客户全称Null() {
                this[this.tableView_Client.客户全称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is联系电话Null() {
                return this.IsNull(this.tableView_Client.联系电话Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set联系电话Null() {
                this[this.tableView_Client.联系电话Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is详细地址Null() {
                return this.IsNull(this.tableView_Client.详细地址Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set详细地址Null() {
                this[this.tableView_Client.详细地址Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is联系人Null() {
                return this.IsNull(this.tableView_Client.联系人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set联系人Null() {
                this[this.tableView_Client.联系人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is省份Null() {
                return this.IsNull(this.tableView_Client.省份Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set省份Null() {
                this[this.tableView_Client.省份Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is服务区域Null() {
                return this.IsNull(this.tableView_Client.服务区域Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set服务区域Null() {
                this[this.tableView_Client.服务区域Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is负责人Null() {
                return this.IsNull(this.tableView_Client.负责人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set负责人Null() {
                this[this.tableView_Client.负责人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_Client.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_Client.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketingPartBillRow : global::System.Data.DataRow {
            
            private View_S_MarketingPartBillDataTable tableView_S_MarketingPartBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingPartBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketingPartBill = ((View_S_MarketingPartBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPartBill.单据号Column]));
                }
                set {
                    this[this.tableView_S_MarketingPartBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_S_MarketingPartBill.单据状态Column]));
                }
                set {
                    this[this.tableView_S_MarketingPartBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客户名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.客户名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“客户名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.客户名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 总金额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketingPartBill.总金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“总金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.总金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 营销出库单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.营销出库单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“营销出库单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.营销出库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 销售人员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.销售人员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“销售人员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.销售人员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 销售时间 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MarketingPartBill.销售时间Column]));
                }
                set {
                    this[this.tableView_S_MarketingPartBill.销售时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.财务审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“财务审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.财务审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingPartBill.审核时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“审核时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.审核时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    return ((string)(this[this.tableView_S_MarketingPartBill.ClientIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingPartBill.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 打印次数 {
                get {
                    try {
                        return ((int)(this[this.tableView_S_MarketingPartBill.打印次数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“打印次数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.打印次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 营销审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.营销审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“营销审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.营销审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 营销审核时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingPartBill.营销审核时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“营销审核时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.营销审核时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 价格套用的整车厂 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.价格套用的整车厂Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“价格套用的整车厂”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.价格套用的整车厂Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 价格套用的整车厂编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingPartBill.价格套用的整车厂编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“价格套用的整车厂编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.价格套用的整车厂编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否套用整车厂 {
                get {
                    try {
                        return ((bool)(this[this.tableView_S_MarketingPartBill.是否套用整车厂Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingPartBill”中列“是否套用整车厂”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingPartBill.是否套用整车厂Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客户名称Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.客户名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客户名称Null() {
                this[this.tableView_S_MarketingPartBill.客户名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总金额Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.总金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总金额Null() {
                this[this.tableView_S_MarketingPartBill.总金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is营销出库单号Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.营销出库单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set营销出库单号Null() {
                this[this.tableView_S_MarketingPartBill.营销出库单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is销售人员Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.销售人员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set销售人员Null() {
                this[this.tableView_S_MarketingPartBill.销售人员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务审核人Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.财务审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务审核人Null() {
                this[this.tableView_S_MarketingPartBill.财务审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核时间Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.审核时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核时间Null() {
                this[this.tableView_S_MarketingPartBill.审核时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MarketingPartBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打印次数Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.打印次数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打印次数Null() {
                this[this.tableView_S_MarketingPartBill.打印次数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is营销审核人Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.营销审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set营销审核人Null() {
                this[this.tableView_S_MarketingPartBill.营销审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is营销审核时间Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.营销审核时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set营销审核时间Null() {
                this[this.tableView_S_MarketingPartBill.营销审核时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is价格套用的整车厂Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.价格套用的整车厂Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set价格套用的整车厂Null() {
                this[this.tableView_S_MarketingPartBill.价格套用的整车厂Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is价格套用的整车厂编码Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.价格套用的整车厂编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set价格套用的整车厂编码Null() {
                this[this.tableView_S_MarketingPartBill.价格套用的整车厂编码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否套用整车厂Null() {
                return this.IsNull(this.tableView_S_MarketingPartBill.是否套用整车厂Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否套用整车厂Null() {
                this[this.tableView_S_MarketingPartBill.是否套用整车厂Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketintPartListRow : global::System.Data.DataRow {
            
            private View_S_MarketintPartListDataTable tableView_S_MarketintPartList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketintPartListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketintPartList = ((View_S_MarketintPartListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 序号 {
                get {
                    return ((int)(this[this.tableView_S_MarketintPartList.序号Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.单据号Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.规格Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 销售单价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketintPartList.销售单价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“销售单价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.销售单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 最低定价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketintPartList.最低定价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“最低定价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.最低定价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 数量 {
                get {
                    return ((decimal)(this[this.tableView_S_MarketintPartList.数量Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 总价 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MarketintPartList.总价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“总价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.总价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.单位Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.批次号Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketintPartList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsID {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.GoodsIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    return ((string)(this[this.tableView_S_MarketintPartList.供应商Column]));
                }
                set {
                    this[this.tableView_S_MarketintPartList.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 主机厂代码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketintPartList.主机厂代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“主机厂代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.主机厂代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 主机厂物品名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketintPartList.主机厂物品名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketintPartList”中列“主机厂物品名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketintPartList.主机厂物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is销售单价Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.销售单价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set销售单价Null() {
                this[this.tableView_S_MarketintPartList.销售单价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is最低定价Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.最低定价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set最低定价Null() {
                this[this.tableView_S_MarketintPartList.最低定价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总价Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.总价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总价Null() {
                this[this.tableView_S_MarketintPartList.总价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MarketintPartList.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is主机厂代码Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.主机厂代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set主机厂代码Null() {
                this[this.tableView_S_MarketintPartList.主机厂代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is主机厂物品名称Null() {
                return this.IsNull(this.tableView_S_MarketintPartList.主机厂物品名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set主机厂物品名称Null() {
                this[this.tableView_S_MarketintPartList.主机厂物品名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_B_MinorPurchaseBillRow : global::System.Data.DataRow {
            
            private View_B_MinorPurchaseBillDataTable tableView_B_MinorPurchaseBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_B_MinorPurchaseBill = ((View_B_MinorPurchaseBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_B_MinorPurchaseBill.编号Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill.单据状态Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购类别 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill.采购类别Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.采购类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否紧急 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.是否紧急Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“是否紧急”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.是否紧急Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.申请人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“申请人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.申请日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“申请日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.申请日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill.申请部门Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.申请部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.编制日期Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门负责人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.部门负责人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“部门负责人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.部门负责人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 部门确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.部门确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“部门确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.部门确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.分管领导Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“分管领导”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.分管领导Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 分管领导确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.分管领导确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“分管领导确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.分管领导确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务领导确认 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.财务领导确认Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“财务领导确认”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.财务领导确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 财务确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.财务确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“财务确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.财务确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 常务副总经理确认 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.常务副总经理确认Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“常务副总经理确认”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.常务副总经理确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 常务副总经理确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.常务副总经理确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“常务副总经理确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.常务副总经理确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购工程师 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.采购工程师Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“采购工程师”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.采购工程师Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 完成日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill.完成日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“完成日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.完成日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 负责人意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.负责人意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“负责人意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.负责人意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.分管领导意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“分管领导意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.分管领导意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.财务意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“财务意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.财务意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 常务副总经理意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.常务副总经理意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“常务副总经理意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.常务副总经理意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门月预算内 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.部门月预算内Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“部门月预算内”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.部门月预算内Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.用途Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“用途”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_B_MinorPurchaseBill.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 调配人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill.调配人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill”中列“调配人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.调配人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编号 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill.申请部门编号Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill.申请部门编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否紧急Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.是否紧急Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否紧急Null() {
                this[this.tableView_B_MinorPurchaseBill.是否紧急Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.申请人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人Null() {
                this[this.tableView_B_MinorPurchaseBill.申请人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.申请日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请日期Null() {
                this[this.tableView_B_MinorPurchaseBill.申请日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_B_MinorPurchaseBill.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门负责人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.部门负责人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门负责人Null() {
                this[this.tableView_B_MinorPurchaseBill.部门负责人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.部门确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill.部门确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.分管领导Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导Null() {
                this[this.tableView_B_MinorPurchaseBill.分管领导Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.分管领导确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill.分管领导确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务领导确认Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.财务领导确认Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务领导确认Null() {
                this[this.tableView_B_MinorPurchaseBill.财务领导确认Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.财务确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill.财务确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理确认Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.常务副总经理确认Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理确认Null() {
                this[this.tableView_B_MinorPurchaseBill.常务副总经理确认Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.常务副总经理确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill.常务副总经理确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is采购工程师Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.采购工程师Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set采购工程师Null() {
                this[this.tableView_B_MinorPurchaseBill.采购工程师Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is完成日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.完成日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set完成日期Null() {
                this[this.tableView_B_MinorPurchaseBill.完成日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_B_MinorPurchaseBill.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is负责人意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.负责人意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set负责人意见Null() {
                this[this.tableView_B_MinorPurchaseBill.负责人意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.分管领导意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导意见Null() {
                this[this.tableView_B_MinorPurchaseBill.分管领导意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.财务意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务意见Null() {
                this[this.tableView_B_MinorPurchaseBill.财务意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.常务副总经理意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理意见Null() {
                this[this.tableView_B_MinorPurchaseBill.常务副总经理意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_B_MinorPurchaseBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门月预算内Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.部门月预算内Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门月预算内Null() {
                this[this.tableView_B_MinorPurchaseBill.部门月预算内Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is用途Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.用途Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set用途Null() {
                this[this.tableView_B_MinorPurchaseBill.用途Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_B_MinorPurchaseBill.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调配人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill.调配人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调配人Null() {
                this[this.tableView_B_MinorPurchaseBill.调配人Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_B_MinorPurchaseListRow : global::System.Data.DataRow {
            
            private View_B_MinorPurchaseListDataTable tableView_B_MinorPurchaseList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_B_MinorPurchaseList = ((View_B_MinorPurchaseListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_B_MinorPurchaseList.编号Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.图号型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“图号型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.物品名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“物品名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 供应商 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.供应商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“供应商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.供应商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 申请数量 {
                get {
                    try {
                        return ((int)(this[this.tableView_B_MinorPurchaseList.申请数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“申请数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.申请数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 库存数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_B_MinorPurchaseList.库存数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“库存数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.库存数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 要求到货日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseList.要求到货日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“要求到货日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.要求到货日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.物品状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“物品状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.物品状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预算价格 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_B_MinorPurchaseList.预算价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“预算价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.预算价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 最终到货日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseList.最终到货日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“最终到货日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.最终到货日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsID {
                get {
                    try {
                        return ((int)(this[this.tableView_B_MinorPurchaseList.GoodsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseList”中列“GoodsID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseList.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is图号型号Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.图号型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set图号型号Null() {
                this[this.tableView_B_MinorPurchaseList.图号型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品名称Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.物品名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品名称Null() {
                this[this.tableView_B_MinorPurchaseList.物品名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is规格Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set规格Null() {
                this[this.tableView_B_MinorPurchaseList.规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is供应商Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.供应商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set供应商Null() {
                this[this.tableView_B_MinorPurchaseList.供应商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请数量Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.申请数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请数量Null() {
                this[this.tableView_B_MinorPurchaseList.申请数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库存数量Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.库存数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库存数量Null() {
                this[this.tableView_B_MinorPurchaseList.库存数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.tableView_B_MinorPurchaseList.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is要求到货日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.要求到货日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set要求到货日期Null() {
                this[this.tableView_B_MinorPurchaseList.要求到货日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品状态Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.物品状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品状态Null() {
                this[this.tableView_B_MinorPurchaseList.物品状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预算价格Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.预算价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预算价格Null() {
                this[this.tableView_B_MinorPurchaseList.预算价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is最终到货日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.最终到货日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set最终到货日期Null() {
                this[this.tableView_B_MinorPurchaseList.最终到货日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_B_MinorPurchaseList.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsIDNull() {
                return this.IsNull(this.tableView_B_MinorPurchaseList.GoodsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsIDNull() {
                this[this.tableView_B_MinorPurchaseList.GoodsIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MusterUseBillRow : global::System.Data.DataRow {
            
            private View_S_MusterUseBillDataTable tableView_S_MusterUseBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MusterUseBillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MusterUseBill = ((View_S_MusterUseBillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.单据状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.用途Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“用途”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房名称 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.库房名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“库房名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.库房名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.申请人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“申请人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MusterUseBill.申请日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“申请日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.申请日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 审核人 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.审核人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“审核人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.审核人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 审核日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MusterUseBill.审核日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“审核日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.审核日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仓管员 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.仓管员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“仓管员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.仓管员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 出库日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MusterUseBill.出库日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“出库日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.出库日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 库房编码 {
                get {
                    return ((string)(this[this.tableView_S_MusterUseBill.库房编码Column]));
                }
                set {
                    this[this.tableView_S_MusterUseBill.库房编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途编码 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseBill.用途编码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseBill”中列“用途编码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseBill.用途编码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_MusterUseBill.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.单据状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.tableView_S_MusterUseBill.单据状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is用途Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.用途Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set用途Null() {
                this[this.tableView_S_MusterUseBill.用途Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库房名称Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.库房名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库房名称Null() {
                this[this.tableView_S_MusterUseBill.库房名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.申请人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人Null() {
                this[this.tableView_S_MusterUseBill.申请人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请日期Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.申请日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请日期Null() {
                this[this.tableView_S_MusterUseBill.申请日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核人Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.审核人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核人Null() {
                this[this.tableView_S_MusterUseBill.审核人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is审核日期Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.审核日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set审核日期Null() {
                this[this.tableView_S_MusterUseBill.审核日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仓管员Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.仓管员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仓管员Null() {
                this[this.tableView_S_MusterUseBill.仓管员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is出库日期Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.出库日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set出库日期Null() {
                this[this.tableView_S_MusterUseBill.出库日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is用途编码Null() {
                return this.IsNull(this.tableView_S_MusterUseBill.用途编码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set用途编码Null() {
                this[this.tableView_S_MusterUseBill.用途编码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MusterUseListRow : global::System.Data.DataRow {
            
            private View_S_MusterUseListDataTable tableView_S_MusterUseList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MusterUseListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MusterUseList = ((View_S_MusterUseListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 图号型号 {
                get {
                    return ((string)(this[this.tableView_S_MusterUseList.图号型号Column]));
                }
                set {
                    this[this.tableView_S_MusterUseList.图号型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 物品名称 {
                get {
                    return ((string)(this[this.tableView_S_MusterUseList.物品名称Column]));
                }
                set {
                    this[this.tableView_S_MusterUseList.物品名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_S_MusterUseList.规格Column]));
                }
                set {
                    this[this.tableView_S_MusterUseList.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MusterUseList.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseList.批次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“批次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 版次号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseList.版次号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“版次号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.版次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    return ((string)(this[this.tableView_S_MusterUseList.单位Column]));
                }
                set {
                    this[this.tableView_S_MusterUseList.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 库存数 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_S_MusterUseList.库存数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“库存数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.库存数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    try {
                        return ((int)(this[this.tableView_S_MusterUseList.物品IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“物品ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseList.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MusterUseList.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MusterUseList”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MusterUseList.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is数量Null() {
                return this.IsNull(this.tableView_S_MusterUseList.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set数量Null() {
                this[this.tableView_S_MusterUseList.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is批次号Null() {
                return this.IsNull(this.tableView_S_MusterUseList.批次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set批次号Null() {
                this[this.tableView_S_MusterUseList.批次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is版次号Null() {
                return this.IsNull(this.tableView_S_MusterUseList.版次号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set版次号Null() {
                this[this.tableView_S_MusterUseList.版次号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is库存数Null() {
                return this.IsNull(this.tableView_S_MusterUseList.库存数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set库存数Null() {
                this[this.tableView_S_MusterUseList.库存数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is物品IDNull() {
                return this.IsNull(this.tableView_S_MusterUseList.物品IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set物品IDNull() {
                this[this.tableView_S_MusterUseList.物品IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_S_MusterUseList.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_S_MusterUseList.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_S_MusterUseList.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_S_MusterUseList.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_S_MarketingAllRow : global::System.Data.DataRow {
            
            private View_S_MarketingAllDataTable tableView_S_MarketingAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_S_MarketingAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_S_MarketingAll = ((View_S_MarketingAllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.IDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJH {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.DJHColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.LRRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“LRRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.LRRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“Dept”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.SHRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“SHRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.SHRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YWLX {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.YWLXColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.YWLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KFRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.KFRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“KFRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.KFRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJZT_FLAG {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.DJZT_FLAGColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJZT_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DELETE_FLAG {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.DELETE_FLAGColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DELETE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableView_S_MarketingAll.DateColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.PriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ListID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.ListIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.ListIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DJ_ID {
                get {
                    return ((int)(this[this.tableView_S_MarketingAll.DJ_IDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.DJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPID {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.CPIDColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.CPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.ProviderColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.ProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.UnitPriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoodsPrice {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.GoodsPriceColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Count {
                get {
                    return ((decimal)(this[this.tableView_S_MarketingAll.CountColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.UnitColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.BatchNoColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsRemark {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsRemarkColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageID {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YWFS {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.YWFSColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.YWFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageName {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.StorageNameColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.StorageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsCodeColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.GoodsNameColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spec {
                get {
                    return ((string)(this[this.tableView_S_MarketingAll.SpecColumn]));
                }
                set {
                    this[this.tableView_S_MarketingAll.SpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRKS {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.LRKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“LRKS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.LRKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AffirmDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_S_MarketingAll.AffirmDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“AffirmDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.AffirmDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSRY {
                get {
                    try {
                        return ((string)(this[this.tableView_S_MarketingAll.FSRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_S_MarketingAll”中列“FSRY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_S_MarketingAll.FSRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.LRRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRRYNull() {
                this[this.tableView_S_MarketingAll.LRRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNull() {
                return this.IsNull(this.tableView_S_MarketingAll.DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNull() {
                this[this.tableView_S_MarketingAll.DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.SHRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRYNull() {
                this[this.tableView_S_MarketingAll.SHRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKFRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.KFRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKFRYNull() {
                this[this.tableView_S_MarketingAll.KFRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableView_S_MarketingAll.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableView_S_MarketingAll.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableView_S_MarketingAll.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageIDNull() {
                this[this.tableView_S_MarketingAll.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRKSNull() {
                return this.IsNull(this.tableView_S_MarketingAll.LRKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRKSNull() {
                this[this.tableView_S_MarketingAll.LRKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAffirmDateNull() {
                return this.IsNull(this.tableView_S_MarketingAll.AffirmDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAffirmDateNull() {
                this[this.tableView_S_MarketingAll.AffirmDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSRYNull() {
                return this.IsNull(this.tableView_S_MarketingAll.FSRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSRYNull() {
                this[this.tableView_S_MarketingAll.FSRYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_B_MinorPurchaseBill1Row : global::System.Data.DataRow {
            
            private View_B_MinorPurchaseBill1DataTable tableView_B_MinorPurchaseBill1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_B_MinorPurchaseBill1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_B_MinorPurchaseBill1 = ((View_B_MinorPurchaseBill1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 编号 {
                get {
                    return ((int)(this[this.tableView_B_MinorPurchaseBill1.编号Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill1.单据状态Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.单据状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购类别 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill1.采购类别Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.采购类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 用途 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.用途Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“用途”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 是否紧急 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.是否紧急Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“是否紧急”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.是否紧急Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否已打印 {
                get {
                    try {
                        return ((bool)(this[this.tableView_B_MinorPurchaseBill1.是否已打印Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“是否已打印”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.是否已打印Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门月预算内 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.部门月预算内Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“部门月预算内”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.部门月预算内Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.申请人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“申请人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.申请人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.申请日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“申请日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.申请日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.申请部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“申请部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.申请部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编制人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.编制人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“编制人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.编制人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 编制日期 {
                get {
                    return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.编制日期Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.编制日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门负责人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.部门负责人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“部门负责人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.部门负责人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 部门确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.部门确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“部门确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.部门确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 负责人意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.负责人意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“负责人意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.负责人意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.分管领导Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“分管领导”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.分管领导Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 分管领导确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.分管领导确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“分管领导确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.分管领导确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 分管领导意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.分管领导意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“分管领导意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.分管领导意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务领导确认 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.财务领导确认Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“财务领导确认”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.财务领导确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 财务确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.财务确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“财务确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.财务确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.财务意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“财务意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.财务意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 常务副总经理确认 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“常务副总经理确认”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 常务副总经理确认时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“常务副总经理确认时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 调配人 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.调配人Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“调配人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.调配人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 常务副总经理意见 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.常务副总经理意见Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“常务副总经理意见”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.常务副总经理意见Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 采购工程师 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.采购工程师Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“采购工程师”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.采购工程师Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 完成日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_B_MinorPurchaseBill1.完成日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“完成日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.完成日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableView_B_MinorPurchaseBill1.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_B_MinorPurchaseBill1”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请部门编号 {
                get {
                    return ((string)(this[this.tableView_B_MinorPurchaseBill1.申请部门编号Column]));
                }
                set {
                    this[this.tableView_B_MinorPurchaseBill1.申请部门编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.tableView_B_MinorPurchaseBill1.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is用途Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.用途Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set用途Null() {
                this[this.tableView_B_MinorPurchaseBill1.用途Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否紧急Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.是否紧急Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否紧急Null() {
                this[this.tableView_B_MinorPurchaseBill1.是否紧急Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否已打印Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.是否已打印Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否已打印Null() {
                this[this.tableView_B_MinorPurchaseBill1.是否已打印Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门月预算内Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.部门月预算内Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门月预算内Null() {
                this[this.tableView_B_MinorPurchaseBill1.部门月预算内Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.申请人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请人Null() {
                this[this.tableView_B_MinorPurchaseBill1.申请人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.申请日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请日期Null() {
                this[this.tableView_B_MinorPurchaseBill1.申请日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请部门Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.申请部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请部门Null() {
                this[this.tableView_B_MinorPurchaseBill1.申请部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编制人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.编制人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编制人Null() {
                this[this.tableView_B_MinorPurchaseBill1.编制人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门负责人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.部门负责人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门负责人Null() {
                this[this.tableView_B_MinorPurchaseBill1.部门负责人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.部门确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill1.部门确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is负责人意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.负责人意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set负责人意见Null() {
                this[this.tableView_B_MinorPurchaseBill1.负责人意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.分管领导Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导Null() {
                this[this.tableView_B_MinorPurchaseBill1.分管领导Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.分管领导确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill1.分管领导确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is分管领导意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.分管领导意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set分管领导意见Null() {
                this[this.tableView_B_MinorPurchaseBill1.分管领导意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务领导确认Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.财务领导确认Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务领导确认Null() {
                this[this.tableView_B_MinorPurchaseBill1.财务领导确认Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.财务确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill1.财务确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.财务意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务意见Null() {
                this[this.tableView_B_MinorPurchaseBill1.财务意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理确认Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.常务副总经理确认Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理确认Null() {
                this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理确认时间Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.常务副总经理确认时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理确认时间Null() {
                this[this.tableView_B_MinorPurchaseBill1.常务副总经理确认时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is调配人Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.调配人Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set调配人Null() {
                this[this.tableView_B_MinorPurchaseBill1.调配人Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is常务副总经理意见Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.常务副总经理意见Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set常务副总经理意见Null() {
                this[this.tableView_B_MinorPurchaseBill1.常务副总经理意见Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is采购工程师Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.采购工程师Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set采购工程师Null() {
                this[this.tableView_B_MinorPurchaseBill1.采购工程师Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is完成日期Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.完成日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set完成日期Null() {
                this[this.tableView_B_MinorPurchaseBill1.完成日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.tableView_B_MinorPurchaseBill1.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.tableView_B_MinorPurchaseBill1.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_ClientRowChangeEvent : global::System.EventArgs {
            
            private View_ClientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRowChangeEvent(View_ClientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_ClientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketingPartBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketingPartBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRowChangeEvent(View_S_MarketingPartBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingPartBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketintPartListRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketintPartListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRowChangeEvent(View_S_MarketintPartListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketintPartListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_B_MinorPurchaseBillRowChangeEvent : global::System.EventArgs {
            
            private View_B_MinorPurchaseBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRowChangeEvent(View_B_MinorPurchaseBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_B_MinorPurchaseListRowChangeEvent : global::System.EventArgs {
            
            private View_B_MinorPurchaseListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListRowChangeEvent(View_B_MinorPurchaseListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MusterUseBillRowChangeEvent : global::System.EventArgs {
            
            private View_S_MusterUseBillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRowChangeEvent(View_S_MusterUseBillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseBillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MusterUseListRowChangeEvent : global::System.EventArgs {
            
            private View_S_MusterUseListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListRowChangeEvent(View_S_MusterUseListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MusterUseListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_S_MarketingAllRowChangeEvent : global::System.EventArgs {
            
            private View_S_MarketingAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRowChangeEvent(View_S_MarketingAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_S_MarketingAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_B_MinorPurchaseBill1RowChangeEvent : global::System.EventArgs {
            
            private View_B_MinorPurchaseBill1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1RowChangeEvent(View_B_MinorPurchaseBill1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_B_MinorPurchaseBill1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Expression.DepotManagementDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_ClientTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_ClientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Client";
            tableMapping.ColumnMappings.Add("客户编码", "客户编码");
            tableMapping.ColumnMappings.Add("客户名称", "客户名称");
            tableMapping.ColumnMappings.Add("客户全称", "客户全称");
            tableMapping.ColumnMappings.Add("联系电话", "联系电话");
            tableMapping.ColumnMappings.Add("详细地址", "详细地址");
            tableMapping.ColumnMappings.Add("联系人", "联系人");
            tableMapping.ColumnMappings.Add("省份", "省份");
            tableMapping.ColumnMappings.Add("服务区域", "服务区域");
            tableMapping.ColumnMappings.Add("负责人", "负责人");
            tableMapping.ColumnMappings.Add("是否为服务站点/4S店/二级库房", "是否为服务站点/4S店/二级库房");
            tableMapping.ColumnMappings.Add("备注", "备注");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 客户编码, 客户名称, 客户全称, 联系电话, 详细地址, 联系人, 省份, 服务区域, 负责人, [是否为服务站点/4S店/二级库房], 备注 F" +
                "ROM dbo.View_Client";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_ClientDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_ClientDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_ClientDataTable dataTable = new DepotManagementDataSet1.View_ClientDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketingPartBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketingPartBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketingPartBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("客户名称", "客户名称");
            tableMapping.ColumnMappings.Add("总金额", "总金额");
            tableMapping.ColumnMappings.Add("营销出库单号", "营销出库单号");
            tableMapping.ColumnMappings.Add("销售人员", "销售人员");
            tableMapping.ColumnMappings.Add("销售时间", "销售时间");
            tableMapping.ColumnMappings.Add("财务审核人", "财务审核人");
            tableMapping.ColumnMappings.Add("审核时间", "审核时间");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("ClientID", "ClientID");
            tableMapping.ColumnMappings.Add("打印次数", "打印次数");
            tableMapping.ColumnMappings.Add("营销审核人", "营销审核人");
            tableMapping.ColumnMappings.Add("营销审核时间", "营销审核时间");
            tableMapping.ColumnMappings.Add("价格套用的整车厂", "价格套用的整车厂");
            tableMapping.ColumnMappings.Add("价格套用的整车厂编码", "价格套用的整车厂编码");
            tableMapping.ColumnMappings.Add("是否套用整车厂", "是否套用整车厂");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据状态, 客户名称, 总金额, 营销出库单号, 销售人员, 销售时间, 财务审核人, 审核时间, 备注, ClientID, 价格套用的" +
                "整车厂, 价格套用的整车厂编码, 打印次数, 是否套用整车厂, 营销审核人, 营销审核时间 FROM View_S_MarketingPartBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_S_MarketingPartBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_S_MarketingPartBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_S_MarketingPartBillDataTable dataTable = new DepotManagementDataSet1.View_S_MarketingPartBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketintPartListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketintPartListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketintPartList";
            tableMapping.ColumnMappings.Add("序号", "序号");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("销售单价", "销售单价");
            tableMapping.ColumnMappings.Add("最低定价", "最低定价");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("总价", "总价");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("主机厂代码", "主机厂代码");
            tableMapping.ColumnMappings.Add("主机厂物品名称", "主机厂物品名称");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 序号, 单据号, 图号型号, 物品名称, 规格, 销售单价, 最低定价, 数量, 总价, 单位, 批次号, 备注, GoodsID, 供应商, 主机" +
                "厂代码, 主机厂物品名称 FROM View_S_MarketintPartList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_S_MarketintPartListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_S_MarketintPartListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_S_MarketintPartListDataTable dataTable = new DepotManagementDataSet1.View_S_MarketintPartListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_B_MinorPurchaseBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_B_MinorPurchaseBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_B_MinorPurchaseBill";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("采购类别", "采购类别");
            tableMapping.ColumnMappings.Add("是否紧急", "是否紧急");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请日期", "申请日期");
            tableMapping.ColumnMappings.Add("申请部门", "申请部门");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("部门负责人", "部门负责人");
            tableMapping.ColumnMappings.Add("部门确认时间", "部门确认时间");
            tableMapping.ColumnMappings.Add("分管领导", "分管领导");
            tableMapping.ColumnMappings.Add("分管领导确认时间", "分管领导确认时间");
            tableMapping.ColumnMappings.Add("财务领导确认", "财务领导确认");
            tableMapping.ColumnMappings.Add("财务确认时间", "财务确认时间");
            tableMapping.ColumnMappings.Add("常务副总经理确认", "常务副总经理确认");
            tableMapping.ColumnMappings.Add("常务副总经理确认时间", "常务副总经理确认时间");
            tableMapping.ColumnMappings.Add("采购工程师", "采购工程师");
            tableMapping.ColumnMappings.Add("完成日期", "完成日期");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("负责人意见", "负责人意见");
            tableMapping.ColumnMappings.Add("分管领导意见", "分管领导意见");
            tableMapping.ColumnMappings.Add("财务意见", "财务意见");
            tableMapping.ColumnMappings.Add("常务副总经理意见", "常务副总经理意见");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("部门月预算内", "部门月预算内");
            tableMapping.ColumnMappings.Add("用途", "用途");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("调配人", "调配人");
            tableMapping.ColumnMappings.Add("申请部门编号", "申请部门编号");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 编号, 单据状态, 采购类别, 是否紧急, 申请人, 申请日期, 申请部门, 编制人, 编制日期, 部门负责人, 部门确认时间, 分管领导, 分管领" +
                "导确认时间, 财务领导确认, 财务确认时间, 总经理确认, 总经理确认时间, 采购工程师, 完成日期, 备注, 分管领导意见, 总经理意见, 负责人意见, 财务" +
                "意见, 单据号, 部门月预算内, 是否已打印, 用途, 申请部门编号, 调配人 FROM View_B_MinorPurchaseBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_B_MinorPurchaseBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_B_MinorPurchaseBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_B_MinorPurchaseBillDataTable dataTable = new DepotManagementDataSet1.View_B_MinorPurchaseBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_B_MinorPurchaseListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_B_MinorPurchaseListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_B_MinorPurchaseList";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("供应商", "供应商");
            tableMapping.ColumnMappings.Add("申请数量", "申请数量");
            tableMapping.ColumnMappings.Add("库存数量", "库存数量");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("要求到货日期", "要求到货日期");
            tableMapping.ColumnMappings.Add("物品状态", "物品状态");
            tableMapping.ColumnMappings.Add("预算价格", "预算价格");
            tableMapping.ColumnMappings.Add("最终到货日期", "最终到货日期");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 编号, 图号型号, 物品名称, 规格, 供应商, 申请数量, 库存数量, 单位, 要求到货日期, 物品状态, 预算价格, 最终到货日期, 备注, G" +
                "oodsID FROM dbo.View_B_MinorPurchaseList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_B_MinorPurchaseListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_B_MinorPurchaseListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_B_MinorPurchaseListDataTable dataTable = new DepotManagementDataSet1.View_B_MinorPurchaseListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MusterUseBillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MusterUseBillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MusterUseBill";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("用途", "用途");
            tableMapping.ColumnMappings.Add("库房名称", "库房名称");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请日期", "申请日期");
            tableMapping.ColumnMappings.Add("审核人", "审核人");
            tableMapping.ColumnMappings.Add("审核日期", "审核日期");
            tableMapping.ColumnMappings.Add("仓管员", "仓管员");
            tableMapping.ColumnMappings.Add("出库日期", "出库日期");
            tableMapping.ColumnMappings.Add("库房编码", "库房编码");
            tableMapping.ColumnMappings.Add("用途编码", "用途编码");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 单据状态, 用途, 库房名称, 申请人, 申请日期, 审核人, 审核日期, 仓管员, 出库日期, 库房编码, 用途编码 FROM dbo." +
                "View_S_MusterUseBill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_S_MusterUseBillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_S_MusterUseBillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_S_MusterUseBillDataTable dataTable = new DepotManagementDataSet1.View_S_MusterUseBillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MusterUseListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MusterUseListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MusterUseList";
            tableMapping.ColumnMappings.Add("图号型号", "图号型号");
            tableMapping.ColumnMappings.Add("物品名称", "物品名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("版次号", "版次号");
            tableMapping.ColumnMappings.Add("单位", "单位");
            tableMapping.ColumnMappings.Add("库存数", "库存数");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("备注", "备注");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 图号型号, 物品名称, 规格, 数量, 批次号, 版次号, 单位, 库存数, 物品ID, 单据号, 备注 FROM dbo.View_S_Muste" +
                "rUseList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_S_MusterUseListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_S_MusterUseListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_S_MusterUseListDataTable dataTable = new DepotManagementDataSet1.View_S_MusterUseListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_S_MarketingAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_S_MarketingAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_S_MarketingAll";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DJH", "DJH");
            tableMapping.ColumnMappings.Add("LRRY", "LRRY");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("SHRY", "SHRY");
            tableMapping.ColumnMappings.Add("YWLX", "YWLX");
            tableMapping.ColumnMappings.Add("KFRY", "KFRY");
            tableMapping.ColumnMappings.Add("DJZT_FLAG", "DJZT_FLAG");
            tableMapping.ColumnMappings.Add("DELETE_FLAG", "DELETE_FLAG");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("ListID", "ListID");
            tableMapping.ColumnMappings.Add("DJ_ID", "DJ_ID");
            tableMapping.ColumnMappings.Add("CPID", "CPID");
            tableMapping.ColumnMappings.Add("Provider", "Provider");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("GoodsPrice", "GoodsPrice");
            tableMapping.ColumnMappings.Add("Count", "Count");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("GoodsRemark", "GoodsRemark");
            tableMapping.ColumnMappings.Add("StorageID", "StorageID");
            tableMapping.ColumnMappings.Add("YWFS", "YWFS");
            tableMapping.ColumnMappings.Add("StorageName", "StorageName");
            tableMapping.ColumnMappings.Add("GoodsCode", "GoodsCode");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("Spec", "Spec");
            tableMapping.ColumnMappings.Add("LRKS", "LRKS");
            tableMapping.ColumnMappings.Add("AffirmDate", "AffirmDate");
            tableMapping.ColumnMappings.Add("FSRY", "FSRY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, DJH, LRRY, Dept, SHRY, YWLX, KFRY, DJZT_FLAG, DELETE_FLAG, Date, Price, Remark, ListID, DJ_ID, CPID, Provider, UnitPrice, GoodsPrice, Count, Unit, BatchNo, GoodsRemark, StorageID, YWFS, StorageName, GoodsCode, GoodsName, Spec, LRKS, AffirmDate, FSRY FROM dbo.View_S_MarketingAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_S_MarketingAllDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_S_MarketingAllDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_S_MarketingAllDataTable dataTable = new DepotManagementDataSet1.View_S_MarketingAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_B_MinorPurchaseBill1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_B_MinorPurchaseBill1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_B_MinorPurchaseBill1";
            tableMapping.ColumnMappings.Add("编号", "编号");
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("单据状态", "单据状态");
            tableMapping.ColumnMappings.Add("采购类别", "采购类别");
            tableMapping.ColumnMappings.Add("用途", "用途");
            tableMapping.ColumnMappings.Add("是否紧急", "是否紧急");
            tableMapping.ColumnMappings.Add("是否已打印", "是否已打印");
            tableMapping.ColumnMappings.Add("部门月预算内", "部门月预算内");
            tableMapping.ColumnMappings.Add("申请人", "申请人");
            tableMapping.ColumnMappings.Add("申请日期", "申请日期");
            tableMapping.ColumnMappings.Add("申请部门", "申请部门");
            tableMapping.ColumnMappings.Add("编制人", "编制人");
            tableMapping.ColumnMappings.Add("编制日期", "编制日期");
            tableMapping.ColumnMappings.Add("部门负责人", "部门负责人");
            tableMapping.ColumnMappings.Add("部门确认时间", "部门确认时间");
            tableMapping.ColumnMappings.Add("负责人意见", "负责人意见");
            tableMapping.ColumnMappings.Add("分管领导", "分管领导");
            tableMapping.ColumnMappings.Add("分管领导确认时间", "分管领导确认时间");
            tableMapping.ColumnMappings.Add("分管领导意见", "分管领导意见");
            tableMapping.ColumnMappings.Add("财务领导确认", "财务领导确认");
            tableMapping.ColumnMappings.Add("财务确认时间", "财务确认时间");
            tableMapping.ColumnMappings.Add("财务意见", "财务意见");
            tableMapping.ColumnMappings.Add("常务副总经理确认", "常务副总经理确认");
            tableMapping.ColumnMappings.Add("常务副总经理确认时间", "常务副总经理确认时间");
            tableMapping.ColumnMappings.Add("调配人", "调配人");
            tableMapping.ColumnMappings.Add("常务副总经理意见", "常务副总经理意见");
            tableMapping.ColumnMappings.Add("采购工程师", "采购工程师");
            tableMapping.ColumnMappings.Add("完成日期", "完成日期");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("申请部门编号", "申请部门编号");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Expression.Properties.Settings.Default.DepotManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 编号, 单据号, 单据状态, 采购类别, 用途, 是否紧急, 是否已打印, 部门月预算内, 申请人, 申请日期, 申请部门, 编制人, 编制日期, " +
                "部门负责人, 部门确认时间, 负责人意见, 分管领导, 分管领导确认时间, 分管领导意见, 财务领导确认, 财务确认时间, 财务意见, 常务副总经理确认, 常务" +
                "副总经理确认时间, 调配人, 常务副总经理意见, 采购工程师, 完成日期, 备注, 申请部门编号 FROM dbo.View_B_MinorPurchaseBi" +
                "ll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DepotManagementDataSet1.View_B_MinorPurchaseBill1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DepotManagementDataSet1.View_B_MinorPurchaseBill1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DepotManagementDataSet1.View_B_MinorPurchaseBill1DataTable dataTable = new DepotManagementDataSet1.View_B_MinorPurchaseBill1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DepotManagementDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DepotManagementDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DepotManagementDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DepotManagementDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591