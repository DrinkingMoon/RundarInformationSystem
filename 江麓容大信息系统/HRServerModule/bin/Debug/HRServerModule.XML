<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Service_Peripheral_HR</name>
    </assembly>
    <members>
        <member name="T:Service_Peripheral_HR.IAttendanceAnalysis">
            <summary>
            人力分析服务组件
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceAnalysis.DataTimeIsRepeat``1(ServerModule.DepotManagementDataContext,``0,System.String)">
            <summary>
            检测业务日期是否重复
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctx"></param>
            <param name="obj"></param>
            <param name="workID"></param>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceAnalysis.GetLastDateTime">
            <summary>
            获得最后一次分析时间段的结束时间
            </summary>
            <returns>返回DateTime</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceAnalysis.Operation_Exception(GlobalObject.CE_HR_AttendanceExceptionType,GlobalObject.CE_OperatorMode,System.Collections.Generic.List{System.Object},System.Collections.Generic.List{GlobalObject.PersonnelBasicInfo})">
            <summary>
            异常单据操作
            </summary>
            <param name="billType">单据类型</param>
            <param name="operationMode">操作类型</param>
            <param name="lstInfo">操作数据</param>
            <param name="lstPersonnel">人员列表</param>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceAnalysis.GetBusinessInfo_Exception(GlobalObject.CE_HR_AttendanceExceptionType,GlobalObject.CE_OperatorMode)">
            <summary>
            获得需要操作的单据信息
            </summary>
            <param name="billType">单据类型</param>
            <param name="operationMode">操作类型</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceAnalysis.Analysis_Main(System.DateTime,System.DateTime,System.String)">
            <summary>
            分析主流程
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">截止时间</param>
            <param name="workID">工号</param>
        </member>
        <member name="T:Service_Peripheral_HR.IHolidayServer">
            <summary>
            节假日管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHolidayType(System.Int32)">
            <summary>
            获得所有节假日类型
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHolidayType(System.String)">
            <summary>
            通过节假日名称获得编号
            </summary>
            <param name="typeName">节假日名城</param>
            <returns>返回编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHolidayType">
            <summary>
            获得节假日名称
            </summary>
            <returns>返回节假日名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.AddHolidayType(ServerModule.HR_HolidayType,System.String@)">
            <summary>
            新增节假日类别
            </summary>
            <param name="holidayType">节假日类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.UpdateHolidayType(ServerModule.HR_HolidayType,System.String@)">
            <summary>
            修改节假日类别
            </summary>
            <param name="holidayType">节假日类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.DeleteHolidayType(System.Int32,System.String@)">
            <summary>
            删除节假日类别
            </summary>
            <param name="typeID">节假日编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHoliday(System.DateTime,System.String)">
            <summary>
            获得节假日信息
            </summary>
            <param name="date">节假日时间</param>
            <param name="flag">是否是法定节假日0：不是，1：是</param>
            <returns>返回节假日数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHoliday">
            <summary>
            获得节假日信息
            </summary>
            <returns>返回节假日数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.AddHoliday(ServerModule.HR_Holiday,System.String@)">
            <summary>
            新增节假日信息
            </summary>
            <param name="holiday">节假日数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.UpdateHoliday(ServerModule.HR_Holiday,System.String@)">
            <summary>
            修改节假日信息
            </summary>
            <param name="holiday">节假日数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.DeleteHoliday(System.Int32,System.String@)">
            <summary>
            删除节假日信息
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IHolidayServer.GetHolidayDays(System.DateTime,System.DateTime)">
            <summary>
            获得节假日放假天数
            </summary>
            <param name="starTime">开始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回节假日数据集</returns>
        </member>
        <member name="T:Service_Peripheral_HR.DeptTypeServer">
            <summary>
            部门类型管理类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IDeptTypeServer">
            <summary>
            部门类型管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IDeptTypeServer.AddDeptType(ServerModule.HR_DeptType,System.String@)">
            <summary>
            添加部门类别信息
            </summary>
            <param name="deptType">部门类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDeptTypeServer.DeleteDeptType(System.Int32,System.String@)">
            <summary>
            通过部门类别编号删除
            </summary>
            <param name="typeID">类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDeptTypeServer.GetAllDeptType">
            <summary>
            获得所有部门类别
            </summary>
            <returns>返回部门类别数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDeptTypeServer.UpdateDeptType(ServerModule.HR_DeptType,System.String@)">
            <summary>
            修改部门类别信息
            </summary>
            <param name="deptType">部门类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DeptTypeServer.GetAllDeptType">
            <summary>
            获得所有部门类别
            </summary>
            <returns>返回部门类别数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DeptTypeServer.AddDeptType(ServerModule.HR_DeptType,System.String@)">
            <summary>
            添加部门类别信息
            </summary>
            <param name="deptType">部门类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DeptTypeServer.UpdateDeptType(ServerModule.HR_DeptType,System.String@)">
            <summary>
            修改部门类别信息
            </summary>
            <param name="deptType">部门类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DeptTypeServer.DeleteDeptType(System.Int32,System.String@)">
            <summary>
            通过部门类别编号删除
            </summary>
            <param name="typeID">类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:Service_Peripheral_HR.IWorkSchedulingServer">
            <summary>
            排班信息操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.AddDefinition(ServerModule.HR_WorkSchedulingDefinition,System.String@)">
            <summary>
            新增修改排班定义信息
            </summary>
            <param name="definition">排班定义数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.DeleteDefinition(System.String,System.String@)">
            <summary>
            通过编号删除排班定义
            </summary>
            <param name="code">排班编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetWorkSchedulingDefinition">
            <summary>
            获取所有排班定义
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetWorkSchedulingByWorkIDAndDate(System.String,System.DateTime)">
            <summary>
            获得员工的排班信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="time">日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.DeleteWorkScheduling(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.UpdateWorkScheduling(ServerModule.HR_WorkScheduling,System.Collections.Generic.List{ServerModule.HR_WorkSchedulingDetail},System.Int32,System.String@)">
            <summary>
            修改排班信息
            </summary>
            <param name="schedule">排班信息</param>
            <param name="personnel">排班人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.AddWorkScheduling(ServerModule.HR_WorkScheduling,System.Collections.Generic.List{ServerModule.HR_WorkSchedulingDetail},System.String@)">
            <summary>
            新增排班信息
            </summary>
            <param name="schedule">排班信息主信息</param>
            <param name="personnel">排班人员</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetWorkScheduling">
            <summary>
            获取所有排班信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetAllWorkScheduling(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有排班信息
            </summary>
            <param name="returnInfo">排班信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetWorkSchedulingByBillNo(System.Int32)">
            <summary>
            获取指定单据号的排班信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的排班对象，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.IsExise(System.String,System.Int32)">
            <summary>
            判断申请人在该月是否已经申请了排班信息
            </summary>
            <param name="workID">申请人编号</param>
            <param name="month">月份</param>
            <returns>存在返回true，不存在返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.UpdateAuditingWorkScheduling(ServerModule.HR_WorkScheduling,System.String,System.String@)">
            <summary>
            领导审核修改排班信息
            </summary>
            <param name="schedule">排班信息</param>
            <param name="role">角色（主管或负责人）</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetWorkSchedulingDetail(System.Int32,System.Int32@)">
            <summary>
            通过单据号获得排班人员的排班信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="numberOfPeople">成功则返回此排班单据中包含的排班人数，失败返回-1</param>
            <returns>成功返回数据集，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IWorkSchedulingServer.GetDefinitionStatistics(System.Int32)">
            <summary>
            根据单号统计班次
            </summary>
            <param name="billNo">单号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:Service_Peripheral_HR.IWorkSchedulingServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainBasicInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetSingleCourseTableInfo(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetBankInfo(System.Guid)">
            <summary>
            
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.UpdateCourseExamInfo(ServerModule.HR_Train_Course)">
            <summary>
            
            </summary>
            <param name="courseInfo"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetListQuestionBank(System.Guid)">
            <summary>
            
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.DeleteQuestion(System.String)">
            <summary>
            
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.InputQuestionsBank(System.Int32,System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <param name="questionsTable"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetListQuestionBank(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetCourse_User(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_Comm_Rel(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            
            </summary>
            <param name="commCourseID"></param>
            <param name="lstDeptCourse"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetCourseInfo_Comm_Dept(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetCourseInfo_Comm">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetTable_Ware(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetTable_QuestionBank(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetTable``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_AssessType(ServerModule.HR_Train_AssessType)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_Course(ServerModule.HR_Train_Course)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_CourseType(ServerModule.HR_Train_CourseType)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_Courseware(ServerModule.HR_Train_Courseware)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_QuestionBank(ServerModule.HR_Train_QuestionBank)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetSingleInfo_AssessType(ServerModule.HR_Train_AssessType)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetSingleInfo_Course(ServerModule.HR_Train_Course)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetSingleInfo_CourseType(ServerModule.HR_Train_CourseType)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetPostInfo(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="CourseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetCourseInfo(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="postID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_PostRelation_PostToCourse(System.Data.DataTable,System.Int32)">
            <summary>
            
            </summary>
            <param name="sourceTable"></param>
            <param name="postID"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.Operation_PostRelation_CourseToPost(System.Data.DataTable,System.Int32)">
            <summary>
            
            </summary>
            <param name="sourceTable"></param>
            <param name="courseID"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainBasicInfo.GetSingleCourseInfo(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="T:Service_Peripheral_HR.IExpertEmployeServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IExpertEmployeServer.AddExpertEmploye(ServerModule.HR_ExpertEmploye,System.String@)">
            <summary>
            添加专家专业人才信息
            </summary>
            <param name="expertEmploye">专家专业人才数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IExpertEmployeServer.DeleteTrainEmploye(System.Int32,System.String@)">
            <summary>
            通过id删除专家专业人才信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IExpertEmployeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取专家专业人才库的信息
            </summary>
            <param name="returnInfo">专家专业人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IExpertEmployeServer.GetInfoByID(System.Int32,System.String@)">
            <summary>
            通过ID获取单个专家专业人才库的信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回获取到的信息，否则返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IExpertEmployeServer.UpdateExpertEmploye(ServerModule.HR_ExpertEmploye,System.Int32,System.String@)">
            <summary>
            修改专家专业人才信息
            </summary>
            <param name="expertEmploye">专家专业人才数据集</param>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.IExpertEmployeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ITimeExceptionServer">
            <summary>
            考勤异常登记操作接口
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITimeExceptionServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取考勤异常登记表
            </summary>
            <param name="returnInfo">考勤异常登记表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITimeExceptionServer.UpdateTimeException(ServerModule.HR_TimeException,System.String,System.String@)">
            <summary>
            修改考勤异常登记信息
            </summary>
            <param name="timeException">考勤异常登记信息数据集</param>
            <param name="role">角色（部门审核、人力资源审核）</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITimeExceptionServer.OperationTimeException_Replenishments(System.String,GlobalObject.CE_HR_AttendanceExceptionType)">
            <summary>
            操作补单情况下的考勤流水与异常信息
            </summary>
            <param name="billNo">关联单号</param>
            <param name="exceptionType">异常类型</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITimeExceptionServer.UpdateTimeException(ServerModule.HR_TimeException,System.String@)">
            <summary>
            修改考勤异常登记信息（强制处理）
            </summary>
            <param name="timeException">考勤异常登记信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainEmployeServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.AddTrainEmploye(ServerModule.HR_TrainEmploye,System.Collections.Generic.List{ServerModule.HR_WorkHistory},System.Collections.Generic.List{ServerModule.HR_EducatedHistory},System.Collections.Generic.List{ServerModule.HR_FamilyMember},System.String@)">
            <summary>
            添加储备人才信息
            </summary>
            <param name="trainEmploye">储备人才数据集</param>
            <param name="edeucate">教育经历</param>
            <param name="family">家庭成员</param>
            <param name="workHistory">工作经验</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.DeleteTrainEmploye(System.Int32,System.String@)">
            <summary>
            通过id删除储备人才信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有储备人才的信息
            </summary>
            <param name="returnInfo">储备人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.GetEducatedHistory(System.Int32)">
            <summary>
            通过人才编号获得教育经验信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.GetFamilyMember(System.Int32)">
            <summary>
            通过人才编号获得家庭成员信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.GetInfoByID(System.Int32,System.String@)">
            <summary>
            通过ID获取单个储备人才的信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回获取到的信息，否则返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.GetWorkHistory(System.Int32)">
            <summary>
            通过人才编号获得工作经验信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainEmployeServer.UpdateTrainEmploye(ServerModule.HR_TrainEmploye,System.Collections.Generic.List{ServerModule.HR_WorkHistory},System.Collections.Generic.List{ServerModule.HR_EducatedHistory},System.Collections.Generic.List{ServerModule.HR_FamilyMember},System.Int32,System.String@)">
            <summary>
            修改储备人才信息
            </summary>
            <param name="trainEmploye">储备人才数据集</param>
            <param name="workHistory">工作经验</param>
            <param name="edeucate">教育经历</param>
            <param name="family">家庭成员</param>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.ITrainEmployeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IBatchExceptionServer">
            <summary>
            集体考勤异常信息操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.GetDetailPersonnel(System.Int32)">
            <summary>
            
            </summary>
            <param name="billID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.AddBatchException(ServerModule.HR_BatchException,System.Collections.Generic.List{GlobalObject.PersonnelBasicInfo})">
            <summary>
            新增集体考勤异常信息
            </summary>
            <param name="batchException">集体考勤异常信息</param>
            <param name="lstPersonnel">人员信息集合</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.AuditingBatchException(ServerModule.HR_BatchException)">
            <summary>
            主管审核修改集体考勤异常信息
            </summary>
            <param name="batchException">集体考勤异常信息</param>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.GetAllInfo(System.String)">
            <summary>
            获取所有集体考勤异常
            </summary>
            <param name="date">异常日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.GetBatchByDate(System.String)">
            <summary>
            判断某一天中是否存在集体考勤异常
            </summary>
            <param name="date">异常日期</param>
            <returns>存在返回true，不存在返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IBatchExceptionServer.DeleteBatchException(System.Int32)">
            <summary>
            删除集体考勤异常信息
            </summary>
            <param name="billID">单据号</param>
        </member>
        <member name="T:Service_Peripheral_HR.ServerModuleFactory">
            <summary>
            管理类厂
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ServerModuleFactory.m_hashTable">
            <summary>
            用于保证服务组件实例的唯一性
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ServerModuleFactory.GetServerModule``1">
            <summary>
            获取服务组件
            </summary>
            <returns>返回组件接口</returns>
        </member>
        <member name="T:Service_Peripheral_HR.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:Service_Peripheral_HR.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Service_Peripheral_HR.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.OverTimeBillStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.等待部门负责人审核">
            <summary>
            等待部门负责人
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.等待分管领导审批">
            <summary>
            等待分管领导审批
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.确认加班完成情况">
            <summary>
            确认加班完成情况
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.等待人力资源复核">
            <summary>
            等待人力资源复审
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IOverTimeBillServer">
            <summary>
            加班申请操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.AutoCreateOverTime_BatchOperation(System.Data.DataTable,System.Boolean)">
            <summary>
            处理自动生成的加班单的人员信息
            </summary>
            <param name="infoTable">人员信息列表</param>
            <param name="saveFlag">保存标志</param>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.AutoCreateOverTime_ShowPersonnel">
            <summary>
            获取自动生成的加班单的人员信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.AddOverTimeBill(ServerModule.HR_OvertimeBill,System.Collections.Generic.List{ServerModule.HR_OvertimePersonnel},System.String@)">
            <summary>
            新增加班申请
            </summary>
            <param name="overTime">加班申请主信息</param>
            <param name="personnel">加班人员</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.DeleteOverTimeBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetAllOverTimeBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有加班申请表信息
            </summary>
            <param name="returnInfo">加班申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetAllOverTimeBillByWorkID(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有加班申请表信息
            </summary>
            <param name="returnInfo">加班申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetOverTimePersonnelByID(System.String)">
            <summary>
            通过单据号获得加班人员
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetOverTimeBillByID(System.String)">
            <summary>
            通过单据号获得加班信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.UpdateOverTimeBill(ServerModule.HR_OvertimeBill,System.String,System.String@)">
            <summary>
            领导审核修改加班单据
            </summary>
            <param name="overTime">出差单据数据集</param>
            <param name="roleType">角色类型</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.UpdateOverTimeBill(ServerModule.HR_OvertimeBill,System.Collections.Generic.List{ServerModule.HR_OvertimePersonnel},System.Int32,System.String@)">
            <summary>
            修改加班申请
            </summary>
            <param name="overTime">加班申请主信息</param>
            <param name="personnel">加班人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetOverTimeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.IsExistOverTimeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.IsChooseDoubleRest(System.String,System.String,System.String)">
            <summary>
            判断员工加班的补偿方式是否可以选择
            </summary>
            <param name="workPost">岗位名称</param>
            <param name="workID">员工编号</param>
            <param name="dept">科室</param>
            <returns>可以返回True，不可以返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetMonthRealHour(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取员工当月的加班小时数
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始日期</param>
            <param name="endDate">截止日期</param>
            <returns>当有加班时间时返回加班小时数，没有加班时间时，返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.UpdateOverTimeBillByHours(System.String,System.Double)">
            <summary>
            通过单据号修改加班单的实际加班小时数
            </summary>
            <param name="billNo">单据号</param>
            <param name="hours">实际小时数</param>
            <returns>修改成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOverTimeBillServer.GetOverTimeByWorkIDAndDate(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:Service_Peripheral_HR.IOverTimeBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IOrganizationServer">
            <summary>
            组织机构管理接口类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.AddDeptInfo(ServerModule.HR_Dept,System.String@)">
            <summary>
            添加部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.DeleteDeptInfo(ServerModule.View_HR_Dept,System.String@)">
            <summary>
            通过部门编码删除某一部门
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一部门</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.GetAllDeptInfo(System.Linq.IQueryable{ServerModule.View_HR_Dept}@,System.String@)">
            <summary>
            获取部门信息表
            </summary>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.GetAllDeptType">
            <summary>
            获取所有的部门类别
            </summary>
            <returns>返回获取到的部门类别</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.GetDeptByDeptCode(System.String)">
            <summary>
            获取部门编号对应的部门信息
            </summary>
            <param name="deptCode">部门编号</param>
            <returns>成功返回获取到的部门，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.GetDeptName(System.String)">
            <summary>
            通过部门编码获得部门名称
            </summary>
            <param name="departCode">部门编码</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.UpdataDeptInfo(ServerModule.HR_Dept,System.String@)">
            <summary>
            修改部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOrganizationServer.GetDeptCode(System.String)">
            <summary>
            通过部门名称获得部门编码
            </summary>
            <param name="departName">部门名称</param>
            <returns>部门编码</returns>
        </member>
        <member name="T:Service_Peripheral_HR.IOperatingPostServer">
            <summary>
            岗位管理接口类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.AddPost(ServerModule.HR_OperatingPost,System.String@)">
            <summary>
            添加岗位
            </summary>
            <param name="operatPost">岗位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.AddPostType(ServerModule.HR_PostType,System.String@)">
            <summary>
            添加岗位类别
            </summary>
            <param name="postType">岗位类别信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetPostTypeByTypeName(System.String)">
            <summary>
            通过类别名称获取岗位类别编号
            </summary>
            <param name="typeName">岗位类别名称</param>
            <returns>返回岗位类别编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetOperatingPostByPostName(System.String)">
            <summary>
            通过岗位名称获取岗位信息
            </summary>
            <param name="name">岗位名称</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetDeptCount(System.String)">
            <summary>
            获得部门的总人数
            </summary>
            <param name="deptName">岗位名称</param>
            <returns>成功返回数据集，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetOperatingPostByPostCode(System.Int32)">
            <summary>
            通过岗位编号获取岗位信息
            </summary>
            <param name="postCode">岗位编号</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.DeletePostType(System.Int32,System.String@)">
            <summary>
            通过岗位编号删除岗位类别
            </summary>
            <param name="typeID">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetOperatingPost(System.String)">
            <summary>
            获取岗位信息
            </summary>
            <param name="dept">所属部门</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.DeletePost(System.Int32,System.String@)">
            <summary>
            通过岗位编号删除岗位
            </summary>
            <param name="postID">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetPostType">
            <summary>
            获取岗位类别信息
            </summary>
            <returns>返回岗位类别信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.UpdatePost(ServerModule.HR_OperatingPost,System.String@)">
            <summary>
            修改岗位
            </summary>
            <param name="operatPost">岗位信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True ，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.UpdatePostType(ServerModule.HR_PostType,System.String@)">
            <summary>
            修改岗位类别
            </summary>
            <param name="postType">岗位类别信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True ，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetDeptPost(System.String)">
            <summary>
            获得岗位编制的信息
            </summary>
            <param name="postName">岗位名称</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.AddDeptPost(ServerModule.HR_DeptPost,System.String@)">
            <summary>
            添加/更新部门工作岗位
            </summary>
            <param name="deptPost">工作岗位信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.AddDeptPost(System.Data.DataTable,System.String@)">
            <summary>
            批量添加/更新部门工作岗位
            </summary>
            <param name="deptPost">工作岗位信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.DeleteDeptPost(ServerModule.HR_DeptPost,System.String@)">
            <summary>
            删除岗位编制信息
            </summary>
            <param name="deptPost">岗位编制信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetDeptPostByDeptCode(System.String)">
            <summary>
            通过部门和岗位ID获得编制信息
            </summary>
            <param name="deptName">部门编号</param>
            <returns>返回岗位编制信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOperatingPostServer.GetOperatingPost(System.Int32)">
            <summary>
            获取岗位信息
            </summary>
            <returns>返回岗位信息</returns>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainPlanCollect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GetCourseInfo(System.Int32)">
            <summary>
            
            </summary>
            <param name="yearValue"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GetUserInfo(System.String)">
            <summary>
            
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GenerateCollectPlan_Temp(System.String)">
            <summary>
            
            </summary>
            <param name="billNo"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GenerateCollectPlan_Year(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            
            </summary>
            <param name="lstBillNo"></param>
            <param name="yearValue"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GetCourseInfo(GlobalObject.CE_HR_Train_PlanType,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="planType"></param>
            <param name="yearValue"></param>
            <param name="planBillNo"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GetUserInfoAll(System.Guid,System.Int32)">
            <summary>
            
            </summary>
            <param name="planCourseID"></param>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.GetUserInfo(System.Collections.Generic.List{System.Guid})">
            <summary>
            
            </summary>
            <param name="lstGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.SaveCollect(System.Collections.Generic.List{ServerModule.View_HR_Train_PlanCollect})">
            <summary>
            
            </summary>
            <param name="lstPlan"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainPlanCollect.SaveUser(System.Collections.Generic.List{System.String},System.Guid)">
            <summary>
            
            </summary>
            <param name="lstWork"></param>
            <param name="guid"></param>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainSurvey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.OperationBusiness(System.String)">
            <summary>
            
            </summary>
            <param name="billNo"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetBillInfo_Year(System.Int32)">
            <summary>
            
            </summary>
            <param name="yearValue"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetBillNoList_Temp(System.Int32)">
            <summary>
            
            </summary>
            <param name="yearValue"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.SaveInfo(ServerModule.HR_Train_Plan,System.Collections.Generic.List{ServerModule.View_HR_Train_PlanCourse},System.Collections.Generic.List{ServerModule.View_HR_Train_PlanUser})">
            <summary>
            
            </summary>
            <param name="planInfo"></param>
            <param name="lstPlanCourse"></param>
            <param name="lstUser"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetSingleInfo(System.String)">
            <summary>
            
            </summary>
            <param name="billNo"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetPlanCourseInfo(System.String)">
            <summary>
            
            </summary>
            <param name="billNo"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetPlanUserInfo(System.String)">
            <summary>
            
            </summary>
            <param name="billNo"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainSurvey.GetPlanUserInfoAll(System.Guid,System.Int32)">
            <summary>
            
            </summary>
            <param name="planCourseID"></param>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="T:Service_Peripheral_HR.IResumeServer">
            <summary>
            人员简历管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResumelInfo(System.Int32)">
            <summary>
            获取人员简历信息
            </summary>
            <param name="id">编号</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有储备人才的信息
            </summary>
            <param name="returnInfo">储备人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.AddResume(ServerModule.HR_Resume,System.Int32,System.String@)">
            <summary>
            添加/更新人员简历
            </summary>
            <param name="resume">人员简历数据集</param>
            <param name="status">状态(1为修改，0为新增)</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.DeleteResume(System.String,System.Int32,System.String@)">
            <summary>
            删除人员简历信息
            </summary>
            <param name="card">人员身份证号</param>
            <param name="resumeID">简历编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResume(System.String)">
            <summary>
            通过编号获得人员简历信息
            </summary>
            <param name="id">编号</param>
            <returns>返回人员简历数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResumelInfo(System.String)">
            <summary>
            获取人员简历信息
            </summary>
            <param name="card">身份证</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResume(System.String,System.String)">
            <summary>
            获得人员简历信息
            </summary>
            <param name="starTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回人员简历数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResumeStatus">
            <summary>
            获得简历状态
            </summary>
            <returns>简历状态数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResumeStatusByID(System.Int32)">
            <summary>
            通过ID获得简历状态
            </summary>
            <param name="statusCode">状态ID</param>
            <returns>返回对应的简历状态</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IResumeServer.GetResumeStatusByStatus(System.String)">
            <summary>
            通过状态获得状态ID 
             </summary>
             <param name="status">简历状态</param>
             <returns>返回对应的ID</returns>
        </member>
        <member name="T:Service_Peripheral_HR.IPersonnelArchiveServer">
            <summary>
            人员档案管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.AddPersonnelArchive(ServerModule.HR_PersonnelArchive,ServerModule.HR_PersonnelArchiveList,System.String@)">
            <summary>
            添加人员档案
            </summary>
            <param name="personnel">人员档案数据集</param>
            <param name="list">人员档案奖罚等信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelArchiveByNameAndCode(System.String,System.String)">
            <summary>
            获取指定员工编号和姓名的人员岗位
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>岗位</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelArchiveViewByCardID(System.String)">
            <summary>
            通过身份证号码获取员工档案信息
            </summary>
            <param name="cardID">身份证号码</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelArchiveByCardID(System.String)">
            <summary>
            通过身份证号码获取员工档案信息
            </summary>
            <param name="cardID">身份证号码</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员档案管理
            </summary>
            <param name="returnInfo">自制件工装报检单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelViewInfoByName(System.String)">
            <summary>
            通过员工姓名获取职员编号
            </summary>
            <param name="name">姓名</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.UpdatePersonnelArchive(ServerModule.HR_PersonnelArchiveChange,ServerModule.HR_PersonnelArchive,ServerModule.HR_PersonnelArchiveList,System.String@)">
            <summary>
            修改人员档案，把原始信息记录到变更表中
            </summary>
            <param name="personnelOld">原始的人员档案</param>
            <param name="personnelNew">修改后的人员档案</param>
            <param name="list">人员档案奖罚等信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelStatus">
            <summary>
            获得人员状态表
            </summary>
            <returns>返回人员状态数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetStatusByName(System.String)">
            <summary>
            通过状态名获得状态编号
            </summary>
            <param name="status">状态名</param>
            <returns>返回状态编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetStatusByID(System.Int32)">
            <summary>
            通过状态编号获得状态名
            </summary>
            <param name="statusCode">状态编号</param>
            <returns>返回状态名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.InsertPersonnelArchiveInfo(System.Data.DataTable,System.String@)">
            <summary>
            批量插入人员档案
            </summary>
            <param name="personnelArchive">人员档案列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetAllInfo">
            <summary>
            获取所有职员视图信息
            </summary>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelViewInfo(Service_Peripheral_HR.PersonnelDefiniens.ParameterType,System.String)">
            <summary>
            获取职员信息
            </summary>
            <param name="paramType">查询类型</param>
            <param name="parameter">查询信息</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetDeptDirector(System.String,System.String)">
            <summary>
            获取直系负责人信息
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <returns>返回获取的负责人信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetDirector(System.String,System.String)">
            <summary>
            获取直系负责人信息
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <returns>返回获取的负责人信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetAllInfo(System.String)">
            <summary>
            获取某部门所有职员视图信息
            </summary>
            <param name="dept">部门</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonByDept(System.String)">
            <summary>
            获取多个部门所有职员视图信息
            </summary>
            <param name="sql">拼接好的sql语句</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetAllInfoByDept(System.String)">
            <summary>
            获取某部门所有职员视图信息
            </summary>
            <param name="dept">部门</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetAllChangeBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员档案变更历史管理
            </summary>
            <param name="returnInfo">人员档案变更历史</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelInfo(System.String,System.String)">
            <summary>
            获取指定员工编号和姓名的人员档案
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.AddDeptDirector(System.String,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String,System.Boolean,System.String@)">
            <summary>
            添加某部门负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="lstPersonnel">负责人信息</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <param name="isPermission">是否有审批权限</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.IsDeptDirector(System.String,System.String)">
            <summary>
            判断用户是否是指定部门的负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="userCode">用户编码</param>
            <returns>是返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.IsUserDirector(System.String,System.String)">
            <summary>
            判断用户是否是指定人员的负责人
            </summary>
            <param name="underlingWorkID">下属工号</param>
            <param name="workID">需要判别负责人用户工号</param>
            <returns>是返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.DeleteDeptDirector(System.String,System.String)">
            <summary>
            删除某部门所有负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别0：主管；1：负责人；2：分管领导</param>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetHighestDept(System.String)">
            <summary>
            获得员工的最高部门
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回部门名称和部门编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelArchiveByPostName(System.String)">
            <summary>
            获取某一岗位的所有人员
            </summary>
            <param name="postName">岗位名称</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelArchiveRemark(System.String,System.String)">
            <summary>
            指定员工编号和姓名的人员是否含有备注
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>是返回大于等于0的整形，否返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelChangeInfo(System.String)">
            <summary>
            获取指定员工编号和姓名的人员历史档案
            </summary>
            <param name="code">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelInfo(System.String)">
            <summary>
            获取职员信息
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelViewInfo(System.String)">
            <summary>
            通过员工编号获取职员信息
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelAttendance(System.DateTime,System.DateTime)">
            <summary>
            通过起始时间判断在职员工的考勤（已剔除不考勤员工）
            </summary>
            <param name="beginDate">起始时间</param>
            <param name="endDate">截止时间</param>
            <returns>返回数据集（员工编号，员工姓名，考勤方案）</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetPersonnelStatus(System.String)">
            <summary>
            获取人员状态下的人员档案
            </summary>
            <param name="status">员工状态</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.AddCardIDWorkIDMapping(ServerModule.HR_CardID_WorkID_Mapping,System.String@)">
            <summary>
            添加打卡号与工号映射表
            </summary>
            <param name="cardWork">打卡号与工号映射表数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.DeleteCardIDWorkIDMapping(System.String,System.String,System.String@)">
            <summary>
            通过打卡号和员工工号删除打卡号与工号映射表的记录
            </summary>
            <param name="cardID">打卡号</param>
            <param name="workID">员工工号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetCardIDWorkIDMapping">
            <summary>
            获得打卡号与工号映射表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.UpdateBatchDept(System.String,System.String,System.String@)">
            <summary>
            批量修改部门/科室
            </summary>
            <param name="oldDept">原部门/科室编码</param>
            <param name="newDept">现部门/科室编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetArchiveList(System.String)">
            <summary>
            通过员工编号获得奖罚等信息
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.GetSelectPersonnel(System.String)">
            <summary>
            通过员工编号获取职员信息(简化视图)
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.ExcelPersonAge(System.Data.DataTable@,System.String@)">
            <summary>
            导出员工的平均年龄及各年龄段的人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.ExcelIncompanyYears(System.Data.DataTable@,System.String@)">
            <summary>
            导出员工的平均司龄及司龄段的人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.ExcelDimission(System.DateTime,System.DateTime,System.Data.DataTable@,System.String@)">
            <summary>
            导出时间范围类的离职分析
            </summary>
            <param name="startDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.ExcelOnjob(System.Data.DataTable@,System.String@)">
            <summary>
            导出各部门的在职人员
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPersonnelArchiveServer.ExcelEducation(System.Data.DataTable@,System.String@)">
            <summary>
            导出各学历人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainFeedback">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainFeedback.GetListInfo_Feedback(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainFeedback.GetListInfo_FeedbackUser(System.Guid)">
            <summary>
            
            </summary>
            <param name="feedbackID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainFeedback.InsertInfo(ServerModule.HR_Train_Feedback,System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="feedback"></param>
            <param name="lstWorkID"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainFeedback.DeleteInfo(System.String)">
            <summary>
            
            </summary>
            <param name="guid"></param>
        </member>
        <member name="T:Service_Peripheral_HR.ResumeServer">
            <summary>
            人员简历管理类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ResumeServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResumeStatus">
            <summary>
            获得简历状态
            </summary>
            <returns>简历状态数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResumeStatusByID(System.Int32)">
            <summary>
            通过ID获得简历状态
            </summary>
            <param name="statusCode">状态ID</param>
            <returns>返回对应的简历状态</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResumeStatusByStatus(System.String)">
             <summary>
            通过状态获得状态ID 
             </summary>
             <param name="status">简历状态</param>
             <returns>返回对应的ID</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResume(System.String,System.String)">
            <summary>
            获得人员简历信息
            </summary>
            <param name="starTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回人员简历数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResume(System.String)">
            <summary>
            通过编号获得人员简历信息
            </summary>
            <param name="id">编号</param>
            <returns>返回人员简历数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResumelInfo(System.Int32)">
            <summary>
            获取人员简历信息
            </summary>
            <param name="id">编号</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetResumelInfo(System.String)">
            <summary>
            获取人员简历信息
            </summary>
            <param name="card">身份证</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.AddResume(ServerModule.HR_Resume,System.Int32,System.String@)">
            <summary>
            添加/更新人员简历
            </summary>
            <param name="resume">人员简历数据集</param>
            <param name="status">状态(1为修改，0为新增)</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.DeleteResume(System.String,System.Int32,System.String@)">
            <summary>
            删除人员简历信息
            </summary>
            <param name="card">人员身份证号</param>
            <param name="resumeID">简历编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ResumeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有储备人才的信息
            </summary>
            <param name="returnInfo">储备人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="P:Service_Peripheral_HR.ResumeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.PostChangeServer">
            <summary>
            岗位调动服务类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IPostChangeServer">
            <summary>
            岗位调动服务类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.GetPostChangeByBillNo(System.Int32,System.String@)">
            <summary>
            通过编号获得岗位调动信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.GetPostChangeByWorkID(System.String,System.String@)">
            <summary>
            通过员工编号获得员工的调岗记录
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.GetAllPostChange(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有岗位调动信息
            </summary>
            <param name="returnInfo">岗位调动信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.AddPostChange(ServerModule.HR_PostChange,System.String@)">
            <summary>
            新增岗位调动申请单
            </summary>
            <param name="postChange">岗位调动申请信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdatePostChange(ServerModule.HR_PostChange,System.String@)">
            <summary>
            修改岗位调动申请单
            </summary>
            <param name="postChange">岗位调动申请信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回大于0的整数，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.DeletePostChange(System.Int32,System.String@)">
            <summary>
            删除岗位调动申请单
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateGMAuthor(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            总经理审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="gmOpinion">总经理意见</param>
            <param name="authorize">总经理是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateHRAuthor(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            公司办审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="hrOpinion">公司办意见</param>
            <param name="hrAuthorize">公司办是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateNewDept(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调入部门主管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="newDeptOpinion">调入部门主管意见</param>
            <param name="newDeptAuthorize">调入部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateOldDept(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调出部门主管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="oldDeptOpinion">调出部门主管意见</param>
            <param name="oldDeptAuthorize">调出部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateOldLearder(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调出部门分管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="oldLearderOpinion">调出部门分管意见</param>
            <param name="oldLearderAuthorize">调出部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateNewLearder(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调入部门分管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="newLearderOpinion">调入部门分管意见</param>
            <param name="newLearderAuthorize">调入部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IPostChangeServer.UpdateWorkTurnOver(System.Int32,System.Boolean,System.String,System.String,ServerModule.HR_PersonnelArchiveChange,System.String,System.Int32,System.String@)">
            <summary>
            移交确认修改
            </summary>
            <param name="id">申请编号</param>
            <param name="flag">工作是否移交</param>
            <param name="name">员工姓名</param>
            <param name="workID">员工编号</param>
            <param name="personnelChange">档案历史数据集</param>
            <param name="dept">调入部门</param>
            <param name="postID">调入岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.GetPostChangeByBillNo(System.Int32,System.String@)">
            <summary>
            通过编号获得岗位调动信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.GetPostChangeByWorkID(System.String,System.String@)">
            <summary>
            通过员工编号获得员工的调岗记录
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.GetAllPostChange(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有岗位调动信息
            </summary>
            <param name="returnInfo">岗位调动信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.AddPostChange(ServerModule.HR_PostChange,System.String@)">
            <summary>
            新增岗位调动申请单
            </summary>
            <param name="postChange">岗位调动申请信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回大于0的整数，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdatePostChange(ServerModule.HR_PostChange,System.String@)">
            <summary>
            修改岗位调动申请单
            </summary>
            <param name="postChange">岗位调动申请信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回大于0的整数，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateOldDept(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调出部门主管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="oldDeptOpinion">调出部门主管意见</param>
            <param name="oldDeptAuthorize">调出部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateOldLearder(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调出部门分管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="oldLearderOpinion">调出部门分管意见</param>
            <param name="oldLearderAuthorize">调出部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateNewDept(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调入部门主管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="newDeptOpinion">调入部门主管意见</param>
            <param name="newDeptAuthorize">调入部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateNewLearder(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            调入部门分管审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="newLearderOpinion">调入部门分管意见</param>
            <param name="newLearderAuthorize">调入部门是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateHRAuthor(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            公司办审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="hrOpinion">公司办意见</param>
            <param name="hrAuthorize">公司办是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateGMAuthor(System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            总经理审批修改岗位调动表
            </summary>
            <param name="id">申请编号</param>
            <param name="gmOpinion">总经理意见</param>
            <param name="authorize">总经理是否批准</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.UpdateWorkTurnOver(System.Int32,System.Boolean,System.String,System.String,ServerModule.HR_PersonnelArchiveChange,System.String,System.Int32,System.String@)">
            <summary>
            移交确认修改
            </summary>
            <param name="id">申请编号</param>
            <param name="flag">工作是否移交</param>
            <param name="name">员工姓名</param>
            <param name="workID">员工编号</param>
            <param name="personnelChange">档案历史数据集</param>
            <param name="dept">调入部门</param>
            <param name="postID">调入岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PostChangeServer.DeletePostChange(System.Int32,System.String@)">
            <summary>
            删除岗位调动申请单
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.PostChangeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.PersonnelDefiniens.ParameterType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PersonnelDefiniens.ParameterType.工号">
            <summary>
            工号
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PersonnelDefiniens.ParameterType.姓名">
            <summary>
            姓名
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PersonnelDefiniens.ParameterType.部门">
            <summary>
            部门编码或部门名称
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.PersonnelArchiveServer">
            <summary>
            人员档案管理类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PersonnelArchiveServer.m_personnelInfo">
            <summary>
            ServerModule人员服务组件
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PersonnelArchiveServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelArchiveByNameAndCode(System.String,System.String)">
            <summary>
            获取指定员工编号和姓名的人员岗位
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>岗位</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelArchiveViewByCardID(System.String)">
            <summary>
            通过身份证号码获取员工档案信息视图
            </summary>
            <param name="cardID">身份证号码</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelArchiveByCardID(System.String)">
            <summary>
            通过身份证号码获取员工档案信息
            </summary>
            <param name="cardID">身份证号码</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelArchiveByPostName(System.String)">
            <summary>
            获取某一岗位的所有人员
            </summary>
            <param name="postName">岗位名称</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelArchiveRemark(System.String,System.String)">
            <summary>
            指定员工编号和姓名的人员是否含有备注
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>是返回大于等于0的整形，否返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelInfo(System.String,System.String)">
            <summary>
            获取指定员工编号和姓名的人员档案
            </summary>
            <param name="name">员工姓名</param>
            <param name="code">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelStatus(System.String)">
            <summary>
            获取人员状态下的人员档案
            </summary>
            <param name="status">员工状态</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelChangeInfo(System.String)">
            <summary>
            获取指定员工编号和姓名的人员历史档案
            </summary>
            <param name="code">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelInfo(System.String)">
            <summary>
            获取职员信息
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelViewInfo(System.String)">
            <summary>
            通过员工编号获取职员信息
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelViewInfoByName(System.String)">
            <summary>
            通过员工姓名获取职员编号
            </summary>
            <param name="name">姓名</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetAllInfo">
            <summary>
            获取所有职员视图信息
            </summary>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetSelectPersonnel(System.String)">
            <summary>
            通过员工编号获取职员信息(简化视图)
            </summary>
            <param name="workID">工号</param>
            <returns>返回获取到的职员信息视图, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetDirector(System.String,System.String)">
            <summary>
            获取直系负责人信息
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <returns>返回获取的负责人信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetDeptDirector(System.String,System.String)">
            <summary>
            获取直系负责人信息
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <returns>返回获取的负责人信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.AddDeptDirector(System.String,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String,System.Boolean,System.String@)">
            <summary>
            添加某部门负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="lstPersonnel">负责人信息</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
            <param name="isPermission">是否有审批权限</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetFuzzyDeptDirector(System.String)">
            <summary>
            获取部门负责人信息
            某部门链式负责人, 如某班组的负责人有班组级、车间级、部门级三级的所有包容式负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <returns>返回获取的部门负责人信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.DeleteDeptDirector(System.String,System.String)">
            <summary>
            删除某部门所有负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="managerType">权限类别 0：主管；1：负责人；2：分管领导</param>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.IsDeptDirector(System.String,System.String)">
            <summary>
            判断用户是否是指定部门的负责人
            </summary>
            <param name="deptCode">部门编码</param>
            <param name="userCode">用户编码</param>
            <returns>是返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.IsUserDirector(System.String,System.String)">
            <summary>
            判断用户是否是指定人员的负责人
            </summary>
            <param name="underlingWorkID">下属工号</param>
            <param name="workID">需要判别负责人用户工号</param>
            <returns>是返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetAllInfo(System.String)">
            <summary>
            获取某部门所有职员视图信息
            </summary>
            <param name="dept">部门</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonByDept(System.String)">
            <summary>
            获取多个部门所有职员视图信息
            </summary>
            <param name="sql">拼接好的sql语句</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetAllInfoByDept(System.String)">
            <summary>
            获取某部门所有职员视图信息
            </summary>
            <param name="dept">部门</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelViewInfo(Service_Peripheral_HR.PersonnelDefiniens.ParameterType,System.String)">
            <summary>
            获取职员信息
            </summary>
            <param name="paramType">查询类型</param>
            <param name="parameter">查询信息</param>
            <returns>返回获取到的职员信息, 获取不到返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员档案管理
            </summary>
            <param name="returnInfo">人员档案信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetAllChangeBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员档案变更历史管理
            </summary>
            <param name="returnInfo">人员档案变更历史</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelStatus">
            <summary>
            获得人员状态表
            </summary>
            <returns>返回人员状态数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetStatusByName(System.String)">
            <summary>
            通过状态名获得状态编号
            </summary>
            <param name="status">状态名</param>
            <returns>返回状态编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetStatusByID(System.Int32)">
            <summary>
            通过状态编号获得状态名
            </summary>
            <param name="statusCode">状态编号</param>
            <returns>返回状态名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.AddPersonnelArchive(ServerModule.HR_PersonnelArchive,ServerModule.HR_PersonnelArchiveList,System.String@)">
            <summary>
            添加人员档案
            </summary>
            <param name="personnel">人员档案数据集</param>
            <param name="list">人员档案奖罚等信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.UpdatePersonnelArchive(ServerModule.HR_PersonnelArchiveChange,ServerModule.HR_PersonnelArchive,ServerModule.HR_PersonnelArchiveList,System.String@)">
            <summary>
            修改人员档案，把原始信息记录到变更表中
            </summary>
            <param name="personnelOld">原始的人员档案</param>
            <param name="personnelNew">修改后的人员档案</param>
            <param name="list">人员档案奖罚等信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.UpdatePersonnelArchiveByChangPost(ServerModule.HR_PersonnelArchiveChange,ServerModule.HR_PersonnelArchive,System.String@)">
            <summary>
            修改人员档案，把原始信息记录到变更表中
            </summary>
            <param name="personnelOld">原始的人员档案</param>
            <param name="personnelNew">修改后的人员档案</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.InsertPersonnelArchiveInfo(System.Data.DataTable,System.String@)">
            <summary>
            批量插入人员档案
            </summary>
            <param name="personnelArchive">人员档案列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetPersonnelAttendance(System.DateTime,System.DateTime)">
            <summary>
            通过起始时间判断在职员工的考勤（已剔除不考勤）
            </summary>
            <param name="beginDate">起始时间</param>
            <param name="endDate">截止时间</param>
            <returns>返回数据集（员工编号，员工姓名，考勤方案）</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetHighestDept(System.String)">
            <summary>
            获得员工的最高部门
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回部门名称和部门编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.AddCardIDWorkIDMapping(ServerModule.HR_CardID_WorkID_Mapping,System.String@)">
            <summary>
            添加打卡号与工号映射表
            </summary>
            <param name="cardWork">打卡号与工号映射表数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.DeleteCardIDWorkIDMapping(System.String,System.String,System.String@)">
            <summary>
            通过打卡号和员工工号删除打卡号与工号映射表的记录
            </summary>
            <param name="cardID">打卡号</param>
            <param name="workID">员工工号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetCardIDWorkIDMapping">
            <summary>
            获得打卡号与工号映射表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.UpdateBatchDept(System.String,System.String,System.String@)">
            <summary>
            批量修改部门/科室
            </summary>
            <param name="oldDept">原部门/科室编码</param>
            <param name="newDept">现部门/科室编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.GetArchiveList(System.String)">
            <summary>
            通过员工编号获得奖罚等信息
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.ExcelPersonAge(System.Data.DataTable@,System.String@)">
            <summary>
            导出员工的平均年龄及各年龄段的人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.ExcelIncompanyYears(System.Data.DataTable@,System.String@)">
            <summary>
            导出员工的平均司龄及司龄段的人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.ExcelDimission(System.DateTime,System.DateTime,System.Data.DataTable@,System.String@)">
            <summary>
            导出时间范围类的离职分析
            </summary>
            <param name="startDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.ExcelOnjob(System.Data.DataTable@,System.String@)">
            <summary>
            导出各部门的在职人员
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.PersonnelArchiveServer.ExcelEducation(System.Data.DataTable@,System.String@)">
            <summary>
            导出各学历人数
            </summary>
            <param name="showTable">返回的数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true</returns>
        </member>
        <member name="P:Service_Peripheral_HR.PersonnelArchiveServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ITrainLearn">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainLearn.GetTree_Course">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainLearn.GetRandomQuestion(System.Int32)">
            <summary>
            
            </summary>
            <param name="courseID"></param>
            <returns></returns>
        </member>
        <member name="M:Service_Peripheral_HR.ITrainLearn.RecordExamHistory(ServerModule.HR_Train_ExamHistory@)">
            <summary>
            
            </summary>
            <param name="history"></param>
        </member>
        <member name="T:Service_Peripheral_HR.IAttendanceSchemeServer">
            <summary>
            考勤方案操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.AddAttendanceScheme(ServerModule.HR_AttendanceScheme,System.String@)">
            <summary>
            新增修改考勤方案
            </summary>
            <param name="attendance">考勤方案数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.DeleteAttendanceScheme(System.String,System.String@)">
            <summary>
            通过考勤编码删除考勤方案
            </summary>
            <param name="schemeCode">考勤编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetAllAttendanceScheme">
            <summary>
            获取所有的考勤方案
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetLinqResult">
            <summary>
            获取考勤方案Linq数据集(得到第一条数据)
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetAttendanceScheme">
            <summary>
            获取考勤方案(编码+名称)
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetAttendanceSchemeByCode(System.String)">
            <summary>
            通过编号获取考勤方案信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.DeleteAttendanceSetting(System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            通过员工编号删除
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.UpdateAttendanceSettingByDept(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            批量修改考勤方案
            </summary>
            <param name="dept">部门编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.UpdateAttendanceSetting(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            单个员工修改考勤
            </summary>
            <param name="workID">员工编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.AddAttendanceSetting(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            单个员工设置考勤
            </summary>
            <param name="workID">员工编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.AddAttendanceSettingByDept(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            批量设置考勤方案
            </summary>
            <param name="dept">部门编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="flag">是否替换（true替换，false不替换）</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetAttendanceSetting">
            <summary>
            获取员工考勤方案
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetAttendanceSettingByWorkID(System.String)">
            <summary>
            通过员工编号获取员工的考勤方案
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回结果集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSchemeServer.GetIsSetting">
            <summary>
            判断是否所有人员都设置了考勤方案
            </summary>
            <returns>全部设置返回true，否则返回false</returns>
        </member>
        <member name="T:Service_Peripheral_HR.OnBusinessBillStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待部门负责人审核">
            <summary>
            等待部门负责人审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待随行人员部门确认">
            <summary>
            等待随行人员部门确认
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待分管领导审批">
            <summary>
            等待分管领导审批
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待销差人确认">
            <summary>
            等待销差人确认
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待总经理批准">
            <summary>
            等待总经理批准
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.等待出差结果说明">
            <summary>
            等待出差结果说明
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.审批未通过">
            <summary>
            审批未通过
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IOnBusinessBillServer">
            <summary>
            出差申请表操作接口
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetSingleInfo(System.Int32)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billID">单据ID</param>
            <returns>返回单条记录信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetAllOnBusinessBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有出差申请表信息
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetAllOnBusinessBillByWorkID(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有出差申请表信息
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetAllOnBusinessBillByDeptCode(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            出差随行人员部门负责人查看
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetOnBusinessBillByTime(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得出差申请表信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="status">单据状态</param>
            <returns>返回出差申请表数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetOnBusinessBillByID(System.Int32)">
            <summary>
            通过单据编号获得单据信息
            </summary>
            <param name="billID">单据编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.AddOnBusinessBill(ServerModule.HR_OnBusinessBill,System.Collections.Generic.List{ServerModule.HR_OnBusinessPersonnel},System.Collections.Generic.List{ServerModule.HR_OnBusinessSchedule},System.String@)">
            <summary>
            新增出差申请
            </summary>
            <param name="onBusiness">出差申请主信息</param>
            <param name="personnel">出差人员</param>
            <param name="schedule">出差行程安排</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetOnBusinessPersonnel(System.String)">
            <summary>
            通过单据号获得出差人员
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetOnBusinessSchedule(System.String)">
            <summary>
            通过单据号获得出差行程
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.UpdateOnBusinessBill(ServerModule.HR_OnBusinessBill,System.Collections.Generic.List{ServerModule.HR_OnBusinessPersonnel},System.Collections.Generic.List{ServerModule.HR_OnBusinessSchedule},System.Int32,System.String@)">
            <summary>
            修改出差申请
            </summary>
            <param name="onBusiness">出差申请主信息</param>
            <param name="personnel">出差人员</param>
            <param name="schedule">出差行程安排</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.UpdateOnBusinessBill(ServerModule.HR_OnBusinessBill,System.String,System.String@)">
            <summary>
            领导审核修改出差单据
            </summary>
            <param name="onBusiness">出差单据数据集</param>
            <param name="roleType">角色类型</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.UpdateOnBusinessPersonnel(ServerModule.HR_OnBusinessPersonnel,System.Int32,System.String@)">
            <summary>
            随行人员部门确认修改出差单据
            </summary>
            <param name="personnel">出差人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.DeleteOnBusinessBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.GetOnBusinessBillByWorkIDAndTime(System.String,System.DateTime)">
            <summary>
            通过日期判断人员在当天是否出差
            </summary>
            <param name="workID">员工编号</param>
            <param name="recordDate">打卡日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.IsExistOnBusinessBillByWorkIDAndTime(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过日期判断人员在当天是否出差
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IOnBusinessBillServer.ReturnBill(System.String,System.String,System.String,System.String@)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="strRebackReason">回退状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.IOnBusinessBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.AttendanceSummaryServer">
            <summary>
            考勤分析汇总操作类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IAttendanceSummaryServer">
            <summary>
            考勤分析汇总操作接口类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.AddAttendanceSummary(System.String,System.DateTime,System.DateTime,System.String@)">
            <summary>
            添加考勤分析汇总
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.AddAttendanceSummaryByAllowOverTime(System.String@)">
            <summary>
            重置允许加班调休的时间
            </summary>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.GetAllSummary(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获得考勤统计
            </summary>
            <param name="returnInfo">结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.GetAllowMobileHours(System.String)">
            <summary>
            获得允许调休小时数
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回允许调休小时数</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.GetLeaveYearTimes(System.String,System.Int32)">
            <summary>
            获得请年假的次数
            </summary>
            <param name="workID">员工编号</param>
            <param name="year">年份</param>
            <returns>返回请年假的次数</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceSummaryServer.GetAllowMobileVacationHour(System.String,System.Int32,System.Int32)">
            <summary>
            判断调休时间是否不小于0
            </summary>
            <param name="workid">员工工号</param>
            <param name="year">年</param>
            <param name="month">月</param>
            <returns>调休时间小于0返回false，否则返回true</returns>
        </member>
        <member name="F:Service_Peripheral_HR.AttendanceSummaryServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.AddAttendanceSummary(System.String,System.DateTime,System.DateTime,System.String@)">
            <summary>
            添加考勤分析汇总
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.AddAttendanceSummaryByAllowOverTime(System.String@)">
            <summary>
            重置允许加班调休的时间
            </summary>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.GetAllSummary(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获得考勤统计
            </summary>
            <param name="returnInfo">结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.GetAllowMobileHours(System.String)">
            <summary>
            获得允许调休小时数
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回允许调休小时数</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.GetLeaveYearTimes(System.String,System.Int32)">
            <summary>
            获得请年假的次数
            </summary>
            <param name="workID">员工编号</param>
            <param name="year">年份</param>
            <returns>返回请年假的次数</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSummaryServer.GetAllowMobileVacationHour(System.String,System.Int32,System.Int32)">
            <summary>
            判断调休时间是否不小于0
            </summary>
            <param name="workid">员工工号</param>
            <param name="year">年</param>
            <param name="month">月</param>
            <returns>调休时间小于0返回false，否则返回true</returns>
        </member>
        <member name="P:Service_Peripheral_HR.AttendanceSummaryServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.LeaveBillStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.等待部门负责人审核">
            <summary>
            等待部门负责人
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.等待分管领导审批">
            <summary>
            等待分管领导审批
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.等待总经理审批">
            <summary>
            等待总经理审批
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.等待人力资源复核">
            <summary>
            等待人力资源复核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ILeaveServer">
            <summary>
            请假操作接口
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeByCode_Show(System.String)">
            <summary>
            获取请假类别(拼接编号和名称)
            </summary>
            <param name="typeName">请假类别名称</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.Check_LeaveType(System.String,System.Decimal,System.Nullable{System.Int32})">
            <summary>
            检查类别
            </summary>
            <param name="typeCode"></param>
            <param name="hours"></param>
            <param name="billID"></param>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveType(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获得请假类别
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="info">查询条件信息</param>
            <returns>返回请假单类型对象</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.AddLeaveType(ServerModule.HR_LeaveType,System.String@)">
            <summary>
            新增请假类别
            </summary>
            <param name="leaveType">请假类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.DeleteLeaveType(System.String,System.String@)">
            <summary>
            删除请假类别
            </summary>
            <param name="typeCode">请假类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetAllLeaveType">
            <summary>
            获取请假类别
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveType(System.String)">
            <summary>
            通过类别编号获得请假类别信息
            </summary>
            <param name="typeCode">类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeByCode(System.String)">
            <summary>
            获取请假类别(拼接编号和名称)
            </summary>
            <param name="typeName">请假类别名称</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeByName(System.String)">
            <summary>
            通过类别编号获得类别名称
            </summary>
            <param name="typeCode">请假类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.UpdateLeaveType(ServerModule.HR_LeaveType,System.String@)">
            <summary>
            修改请假类别
            </summary>
            <param name="leaveType">请假类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetAllLeaveBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有请假申请表信息
            </summary>
            <param name="returnInfo">请假申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeByTypeID(System.String)">
            <summary>
            通过请假类别编号获取请假类别信息
            </summary>
            <param name="TypeCode">请假类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.DeleteLeaveBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.UpdateLeave(ServerModule.HR_LeaveBill,System.String,System.String@)">
            <summary>
            修改请假信息
            </summary>
            <param name="leave">请假申请数据集</param>
            <param name="roleType">角色类型（部门主管审批，部门负责人审批
            分管领导审批，总经理审批，提交医院证明附件，人力资源部复审）</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.AddLeaveBill(ServerModule.HR_LeaveBill,System.String@)">
            <summary>
            新增/修改请假申请
            </summary>
            <param name="leave">请假数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetMaxBillNo">
            <summary>
            获得最大的ID号
            </summary>
            <returns>返回最大的ID号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和时间获得请假信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="leaveTime">时间</param>
            <param name="endDate">截止时间</param>
            <returns>返回请假信息数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetCountLeaveBill(System.String,System.String,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            查询某一个员工当月不同类别的请假次数和累计的小时数
            </summary>
            <param name="leaveTypeID">请假类别编号</param>
            <param name="workID">员工编号</param>
            <param name="starDate">当月的起始日期</param>
            <param name="endDate">当月的结束日期</param>
            <param name="billNo">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeParentCode(System.String)">
            <summary>
            通过类别编号获得请假类别父级编号
            </summary>
            <param name="typeCode">类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveBillHalfway(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和时间获得请假信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="leaveTime">时间</param>
            <param name="endDate">截止时间</param>
            /// <returns>返回请假信息数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveTypeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            查询员工在某一天是否有请假
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回请假类别</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.GetLeaveBillByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得员工在时间范围内的请假单是否已经全部走完
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>没有全部走完返回False，走完返回True</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILeaveServer.UpdateAttendanceDaybook(System.String,System.String,System.String@)">
            <summary>
            修改请假类别后同时修改流水明细
            </summary>
            <param name="billNo">请假单号</param>
            <param name="type">请假类别</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="P:Service_Peripheral_HR.ILeaveServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceAnalysis.Analysis_Main(System.DateTime,System.DateTime,System.String)">
            <summary>
            考勤分析主方法
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="workID">工号</param>
        </member>
        <member name="T:Service_Peripheral_HR.WorkSchedulingServer">
            <summary>
            排班信息操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.WorkSchedulingServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetWorkSchedulingDefinition">
            <summary>
            获取所有排班定义
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetDefinitionStatistics(System.Int32)">
            <summary>
            根据单号统计班次
            </summary>
            <param name="billNo">单号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.AddDefinition(ServerModule.HR_WorkSchedulingDefinition,System.String@)">
            <summary>
            新增修改排班定义信息
            </summary>
            <param name="definition">排班定义数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.DeleteDefinition(System.String,System.String@)">
            <summary>
            通过编号删除排班定义
            </summary>
            <param name="code">排班编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetWorkScheduling">
            <summary>
            获取所有排班信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetAllWorkScheduling(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有排班信息
            </summary>
            <param name="returnInfo">排班信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetWorkSchedulingByWorkIDAndDate(System.String,System.DateTime)">
            <summary>
            获得员工的排班信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="time">日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetWorkSchedulingByBillNo(System.Int32)">
            <summary>
            获取指定单据号的排班信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的排班对象，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.IsExise(System.String,System.Int32)">
            <summary>
            判断申请人在该月是否已经申请了排班信息
            </summary>
            <param name="workID">申请人编号</param>
            <param name="month">月份</param>
            <returns>存在返回true，不存在返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.AddWorkScheduling(ServerModule.HR_WorkScheduling,System.Collections.Generic.List{ServerModule.HR_WorkSchedulingDetail},System.String@)">
            <summary>
            新增排班信息
            </summary>
            <param name="schedule">排班信息主信息</param>
            <param name="personnel">排班人员</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.UpdateWorkScheduling(ServerModule.HR_WorkScheduling,System.Collections.Generic.List{ServerModule.HR_WorkSchedulingDetail},System.Int32,System.String@)">
            <summary>
            编制人修改排班信息
            </summary>
            <param name="schedule">排班信息</param>
            <param name="personnel">排班人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.DeleteWorkScheduling(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.UpdateAuditingWorkScheduling(ServerModule.HR_WorkScheduling,System.String,System.String@)">
            <summary>
            领导审核修改排班信息
            </summary>
            <param name="schedule">排班信息</param>
            <param name="role">角色（主管或负责人）</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.WorkSchedulingServer.GetWorkSchedulingDetail(System.Int32,System.Int32@)">
            <summary>
            通过单据号获得排班人员的排班信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="numberOfPeople">成功则返回此排班单据中包含的排班人数，失败返回-1</param>
            <returns>成功返回数据集，失败返回null</returns>
        </member>
        <member name="P:Service_Peripheral_HR.WorkSchedulingServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.LaborContractServer">
            <summary>
            合同管理服务类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ILaborContractServer">
            <summary>
            合同管理接口类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.AddLaborType(ServerModule.HR_LaborContractType,System.String@)">
            <summary>
            新增合同类别
            </summary>
            <param name="laborType">合同类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.DeleteLaborTypeByTypeCode(System.String,System.String@)">
            <summary>
            通过合同类别的编号删除此合同类别
            </summary>
            <param name="typeCode">合同类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetLaborContracType">
            <summary>
            获得所有合同类别
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetLaborTypeByTypeCode(System.String,System.String@)">
            <summary>
            通过合同类别的编号获得合同类别的名称
            </summary>
            <param name="typeCode">类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetLaborTypeByTypeName(System.String,System.String@)">
            <summary>
            通过合同类别的名称获得合同类别的编号
            </summary>
            <param name="typeName">合同类别名称</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetLaborContractTemplet">
            <summary>
            获得所有合同模版
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetCategory(System.String,System.String@)">
            <summary>
            通过合同类别的名称获得合同类别
            </summary>
            <param name="typeName">合同类别名称</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.AddContractTemplet(ServerModule.HR_LaborContractTemplet,System.String@)">
            <summary>
            新增合同模板
            </summary>
            <param name="templet">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.DeleteContractTemplet(System.Int32,System.String@)">
            <summary>
            删除合同模板信息
            </summary>
            <param name="templetID">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetContractStatus">
            <summary>
            获得合同状态
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.DeleteContractStatus(System.Int32,System.String@)">
            <summary>
            通过状态编号删除合同状态
            </summary>
            <param name="statusID">状态编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.AddContractStatus(ServerModule.HR_LaborContractStatus,System.String@)">
            <summary>
            新增合同状态
            </summary>
            <param name="conStatus">合同状态数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败但会False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.AddPersonnelContract(ServerModule.HR_PersonnelLaborContract,System.String@)">
            <summary>
            新增员工合同信息
            </summary>
            <param name="personnelContract">员工合同数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetAllPersonnelContarct(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="returnInfo">员工合同信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetPersonnelContarctByWorkID(System.String)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetContractStatusByID(System.Int32)">
            <summary>
            通过状态编号获得合同状态名
            </summary>
            <param name="statusID">状态编号</param>
            <returns>返回合同状态名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetContractStatusByName(System.String)">
            <summary>
            通过状态名获得合同状态编号
            </summary>
            <param name="statusName">状态名</param>
            <returns>返回合同状态编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetContractStatusByType(System.String)">
            <summary>
            通过合同类别获得合同状态
            </summary>
            <param name="type">合同类型</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetContractStatusFlagByID(System.String)">
            <summary>
            通过状态编号获得合同状态标志
            </summary>
            <param name="statusID">状态编号</param>
            <returns>返回合同状态标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetLaborContractTempletByTypeAndVersion(System.String,System.String)">
            <summary>
            通过版本和类别获得合同模版编号
            </summary>
            <param name="type">类别</param>
            <param name="version">版本</param>
            <returns>合同模版编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.UpdatePersonnelContract(ServerModule.HR_PersonnelLaborContractHistory,ServerModule.HR_PersonnelLaborContract,System.Boolean,System.Int32,System.String@)">
            <summary>
            修改员工合同信息
            </summary>
            <param name="personnelContractOld">员工原始合同数据集</param>
            <param name="personnelContractNew">员工新合同数据集</param>
            <param name="flag">状态标志</param>
            <param name="billNo">合同编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetAllContarctHistory(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工合同历史信息
            </summary>
            <param name="returnInfo">员工合同历史信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.UpdateContractTemplet(ServerModule.HR_LaborContractTemplet,System.String@)">
            <summary>
            修改合同模板
            </summary>
            <param name="templet">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ILaborContractServer.GetPersonnelContarctByWorkID(System.String,System.String@)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="F:Service_Peripheral_HR.LaborContractServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetLaborContracType">
            <summary>
            获得所有合同类别
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetLaborTypeByTypeCode(System.String,System.String@)">
            <summary>
            通过合同类别的编号获得合同类别的名称
            </summary>
            <param name="typeCode">类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetLaborTypeByTypeName(System.String,System.String@)">
            <summary>
            通过合同类别的名称获得合同类别的编号
            </summary>
            <param name="typeName">合同类别名称</param>
            <param name="error">错误信息</param>
            <returns>成功返回编号，失败返回空</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetCategory(System.String,System.String@)">
            <summary>
            通过合同类别的名称获得合同类别
            </summary>
            <param name="typeName">合同类别名称</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.AddLaborType(ServerModule.HR_LaborContractType,System.String@)">
            <summary>
            新增合同类别
            </summary>
            <param name="laborType">合同类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.DeleteLaborTypeByTypeCode(System.String,System.String@)">
            <summary>
            通过合同类别的编号删除此合同类别
            </summary>
            <param name="typeCode">合同类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetLaborContractTemplet">
            <summary>
            获得所有合同模版
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetLaborContractTempletByTypeAndVersion(System.String,System.String)">
            <summary>
            通过版本和类别获得合同模版编号
            </summary>
            <param name="type">类别</param>
            <param name="version">版本</param>
            <returns>合同模版编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.AddContractTemplet(ServerModule.HR_LaborContractTemplet,System.String@)">
            <summary>
            新增合同模板
            </summary>
            <param name="templet">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.UpdateContractTemplet(ServerModule.HR_LaborContractTemplet,System.String@)">
            <summary>
            修改合同模板
            </summary>
            <param name="templet">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.DeleteContractTemplet(System.Int32,System.String@)">
            <summary>
            删除合同模板信息
            </summary>
            <param name="templetID">合同模板数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetContractStatus">
            <summary>
            获得合同状态
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetContractStatusByType(System.String)">
            <summary>
            通过合同类别获得合同状态
            </summary>
            <param name="type">合同类型</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetContractStatusByName(System.String)">
            <summary>
            通过状态名获得合同状态编号
            </summary>
            <param name="statusName">状态名</param>
            <returns>返回合同状态编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetContractStatusFlagByID(System.String)">
            <summary>
            通过状态编号获得合同状态标志
            </summary>
            <param name="statusID">状态编号</param>
            <returns>返回合同状态标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetContractStatusByID(System.Int32)">
            <summary>
            通过状态编号获得合同状态名
            </summary>
            <param name="statusID">状态编号</param>
            <returns>返回合同状态名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.AddContractStatus(ServerModule.HR_LaborContractStatus,System.String@)">
            <summary>
            新增合同状态
            </summary>
            <param name="conStatus">合同状态数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败但会False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.DeleteContractStatus(System.Int32,System.String@)">
            <summary>
            通过状态编号删除合同状态
            </summary>
            <param name="statusID">状态编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetPersonnelContarctByWorkID(System.String,System.String@)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetPersonnelContarctByWorkID(System.String)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetAllPersonnelContarct(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工合同信息
            </summary>
            <param name="returnInfo">员工合同信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.GetAllContarctHistory(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工合同历史信息
            </summary>
            <param name="returnInfo">员工合同历史信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.AddPersonnelContract(ServerModule.HR_PersonnelLaborContract,System.String@)">
            <summary>
            新增员工合同信息
            </summary>
            <param name="personnelContract">员工合同数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LaborContractServer.UpdatePersonnelContract(ServerModule.HR_PersonnelLaborContractHistory,ServerModule.HR_PersonnelLaborContract,System.Boolean,System.Int32,System.String@)">
            <summary>
            修改员工合同信息
            </summary>
            <param name="personnelContractOld">员工原始合同数据集</param>
            <param name="personnelContractNew">员工新合同数据集</param>
            <param name="flag">状态标志</param>
            <param name="billNo">合同编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回false</returns>
        </member>
        <member name="P:Service_Peripheral_HR.LaborContractServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.AttendanceSchemeServer">
            <summary>
            考勤方案操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetAllAttendanceScheme">
            <summary>
            获取所有的考勤方案
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetLinqResult">
            <summary>
            获取所有的考勤方案(得到第一条数据)
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetAttendanceSchemeByCode(System.String)">
            <summary>
            通过编号获取考勤方案信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetAttendanceScheme">
            <summary>
            获取考勤方案(编码+名称)
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.AddAttendanceScheme(ServerModule.HR_AttendanceScheme,System.String@)">
            <summary>
            新增修改考勤方案
            </summary>
            <param name="attendance">考勤方案数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.DeleteAttendanceScheme(System.String,System.String@)">
            <summary>
            通过考勤编码删除考勤方案
            </summary>
            <param name="schemeCode">考勤编码</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetAttendanceSetting">
            <summary>
            获取员工考勤方案
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetIsSetting">
            <summary>
            判断是否所有人员都设置了考勤方案
            </summary>
            <returns>全部设置返回true，否则返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.GetAttendanceSettingByWorkID(System.String)">
            <summary>
            通过员工编号获取员工的考勤方案
            </summary>
            <param name="workID">员工编号</param>
            <returns>返回结果集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.AddAttendanceSettingByDept(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            批量设置考勤方案
            </summary>
            <param name="dept">部门编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="flag">是否替换（true替换，false不替换）</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.AddAttendanceSetting(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            单个员工设置考勤
            </summary>
            <param name="workID">员工编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.UpdateAttendanceSetting(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            单个员工修改考勤
            </summary>
            <param name="workID">员工编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.UpdateAttendanceSettingByDept(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            批量修改考勤方案
            </summary>
            <param name="dept">部门编号</param>
            <param name="schemeCode">考勤编码</param>
            <param name="isSubsidize">是否有餐补</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceSchemeServer.DeleteAttendanceSetting(System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            通过员工编号删除
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="T:Service_Peripheral_HR.TrainEmployeServer">
            <summary>
            储备人才库服务类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.TrainEmployeServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有储备人才的信息
            </summary>
            <param name="returnInfo">储备人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.GetInfoByID(System.Int32,System.String@)">
            <summary>
            通过ID获取单个储备人才的信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回获取到的信息，否则返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.GetWorkHistory(System.Int32)">
            <summary>
            通过人才编号获得工作经验信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.GetEducatedHistory(System.Int32)">
            <summary>
            通过人才编号获得教育经验信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.GetFamilyMember(System.Int32)">
            <summary>
            通过人才编号获得家庭成员信息
            </summary>
            <param name="id">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.AddTrainEmploye(ServerModule.HR_TrainEmploye,System.Collections.Generic.List{ServerModule.HR_WorkHistory},System.Collections.Generic.List{ServerModule.HR_EducatedHistory},System.Collections.Generic.List{ServerModule.HR_FamilyMember},System.String@)">
            <summary>
            添加储备人才信息
            </summary>
            <param name="trainEmploye">储备人才数据集</param>
            <param name="edeucate">教育经历</param>
            <param name="family">家庭成员</param>
            <param name="workHistory">工作经验</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.UpdateTrainEmploye(ServerModule.HR_TrainEmploye,System.Collections.Generic.List{ServerModule.HR_WorkHistory},System.Collections.Generic.List{ServerModule.HR_EducatedHistory},System.Collections.Generic.List{ServerModule.HR_FamilyMember},System.Int32,System.String@)">
            <summary>
            修改储备人才信息
            </summary>
            <param name="trainEmploye">储备人才数据集</param>
            <param name="workHistory">工作经验</param>
            <param name="edeucate">教育经历</param>
            <param name="family">家庭成员</param>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainEmployeServer.DeleteTrainEmploye(System.Int32,System.String@)">
            <summary>
            通过id删除储备人才信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.TrainEmployeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.DimissionBillStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.等待部门负责人审核">
            <summary>
            等待部门负责人审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.等待人力资源审阅">
            <summary>
            等待人力资源审阅
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.等待分管领导审核">
            <summary>
            等待分管领导审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.等待总经理批准">
            <summary>
            等待总经理批准
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IDimissionServer">
            <summary>
            员工离职操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IDimissionServer.GetAllDimission(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工离职所有信息
            </summary>
            <param name="returnInfo">员工离职信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDimissionServer.AddAndUpdateDimission(ServerModule.HR_DimissionBill,System.String,System.String@)">
            <summary>
            新增或修改员工离职申请信息
            </summary>
            <param name="dimission">员工离职数据集</param>
            <param name="type">进行步骤(提交申请/部门负责人审批/提交附加信息/人力资源部审批/分管领导审批/总经理批准)</param>
            <param name="error">错误信息</param>
            <returns>返回单据编号，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDimissionServer.GetAllDimission(System.Int32)">
            <summary>
            获取员工离职所有信息
            </summary>
            <param name="billID">单据编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDimissionServer.DeleteDimission(System.String,System.DateTime,System.String@)">
            <summary>
            删除离职申请表
            </summary>
            <param name="userCode">用户编号</param>
            <param name="allowDate">申请时间</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IDimissionServer.GetDimissionBillByWorkID(System.String,System.String@)">
            <summary>
            获得某个员工的岗位调动信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="T:Service_Peripheral_HR.BatchExceptionServer">
            <summary>
            集体考勤异常信息操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.BatchExceptionServer.GetAllInfo(System.String)">
            <summary>
            获取所有集体考勤异常
            </summary>
            <param name="date">异常日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.BatchExceptionServer.GetBatchByDate(System.String)">
            <summary>
            判断某一天中是否存在集体考勤异常
            </summary>
            <param name="date">异常日期</param>
            <returns>存在返回true，不存在返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.BatchExceptionServer.AddBatchException(ServerModule.HR_BatchException,System.Collections.Generic.List{GlobalObject.PersonnelBasicInfo})">
            <summary>
            新增集体考勤异常信息
            </summary>
            <param name="batchException">集体考勤异常信息</param>
            <param name="lstPersonnel">人员信息集合</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.BatchExceptionServer.DeleteBatchException(System.Int32)">
            <summary>
            删除集体考勤异常信息
            </summary>
            <param name="billID">单据号</param>
        </member>
        <member name="M:Service_Peripheral_HR.BatchExceptionServer.AuditingBatchException(ServerModule.HR_BatchException)">
            <summary>
            主管审核修改集体考勤异常信息
            </summary>
            <param name="batchException">集体考勤异常信息</param>
        </member>
        <member name="T:Service_Peripheral_HR.OverTimeBillServer">
            <summary>
            加班申请操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OverTimeBillServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetAllOverTimeBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有加班申请表信息
            </summary>
            <param name="returnInfo">加班申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetAllOverTimeBillByWorkID(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有加班申请表信息
            </summary>
            <param name="returnInfo">加班申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetOverTimeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.IsExistOverTimeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetOverTimeByWorkIDAndDate(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和申请时间获得加班申请单
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始时间</param>
            <param name="endDate">终止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.UpdateOverTimeBillByHours(System.String,System.Double)">
            <summary>
            通过单据号修改加班单的实际加班小时数
            </summary>
            <param name="billNo">单据号</param>
            <param name="hours">实际小时数</param>
            <returns>修改成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetOverTimePersonnelByID(System.String)">
            <summary>
            通过单据号获得加班人员
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetOverTimeBillByID(System.String)">
            <summary>
            通过单据号获得加班信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.AddOverTimeBill(ServerModule.HR_OvertimeBill,System.Collections.Generic.List{ServerModule.HR_OvertimePersonnel},System.String@)">
            <summary>
            新增加班申请
            </summary>
            <param name="overTime">加班申请主信息</param>
            <param name="personnel">加班人员</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.UpdateOverTimeBill(ServerModule.HR_OvertimeBill,System.Collections.Generic.List{ServerModule.HR_OvertimePersonnel},System.Int32,System.String@)">
            <summary>
            修改加班申请
            </summary>
            <param name="overTime">加班申请主信息</param>
            <param name="personnel">加班人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.DeleteOverTimeBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.UpdateOverTimeBill(ServerModule.HR_OvertimeBill,System.String,System.String@)">
            <summary>
            领导审核修改加班单据
            </summary>
            <param name="overTime">出差单据数据集</param>
            <param name="roleType">角色类型</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.IsChooseDoubleRest(System.String,System.String,System.String)">
            <summary>
            判断员工加班的补偿方式是否可以选择
            </summary>
            <param name="workPost">岗位名称</param>
            <param name="dept">部门</param>
            <param name="workID">员工编号</param>
            <returns>可以返回True，不可以返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.GetMonthRealHour(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取员工当月的加班小时数
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始日期</param>
            <param name="endDate">截止日期</param>
            <returns>当有加班时间时返回加班小时数，没有加班时间时，返回-1</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.AutoCreateOverTime_ShowPersonnel">
            <summary>
            获取自动生成的加班单的人员信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OverTimeBillServer.AutoCreateOverTime_BatchOperation(System.Data.DataTable,System.Boolean)">
            <summary>
            处理自动生成的加班单的人员信息
            </summary>
            <param name="infoTable">人员信息列表</param>
            <param name="saveFlag">保存标志</param>
        </member>
        <member name="P:Service_Peripheral_HR.OverTimeBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.DimissionServer">
            <summary>
            员工离职申请操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.DimissionServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.DimissionServer.GetAllDimission(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取员工离职所有信息
            </summary>
            <param name="returnInfo">员工离职信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DimissionServer.GetAllDimission(System.Int32)">
            <summary>
            获取员工离职所有信息
            </summary>
            <param name="billID">单据编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DimissionServer.AddAndUpdateDimission(ServerModule.HR_DimissionBill,System.String,System.String@)">
            <summary>
            新增或修改员工离职申请信息
            </summary>
            <param name="dimission">员工离职数据集</param>
            <param name="type">进行步骤(提交申请/部门负责人审批/人力资源部审批/分管领导审批/总经理批准)</param>
            <param name="error">错误信息</param>
            <returns>返回单据编号，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DimissionServer.DeleteDimission(System.String,System.DateTime,System.String@)">
            <summary>
            删除离职申请表
            </summary>
            <param name="userCode">用户编号</param>
            <param name="allowDate">申请时间</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.DimissionServer.GetDimissionBillByWorkID(System.String,System.String@)">
            <summary>
            获得某个员工的岗位调动信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:Service_Peripheral_HR.DimissionServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.TimeExceptionServer">
            <summary>
            考勤异常登记操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.TimeExceptionServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.TimeExceptionServer.m_personnerServer">
            <summary>
            人员档案服务组件
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.TimeExceptionServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取考勤异常登记表
            </summary>
            <param name="returnInfo">考勤异常登记表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TimeExceptionServer.UpdateTimeException(ServerModule.HR_TimeException,System.String@)">
            <summary>
            修改考勤异常登记信息（强制处理）
            </summary>
            <param name="timeException">考勤异常登记信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TimeExceptionServer.UpdateTimeException(ServerModule.HR_TimeException,System.String,System.String@)">
            <summary>
            修改考勤异常登记信息
            </summary>
            <param name="timeException">考勤异常登记信息数据集</param>
            <param name="role">角色（部门审核、人力资源审核）</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TimeExceptionServer.IsTimeExceptionCount(System.String,System.DateTime,System.DateTime,System.String,System.String@)">
            <summary>
            判断员工在一段时间内漏打卡异常类别的次数是否小于3
            </summary>
            <param name="workID">员工编号</param>
            <param name="starDate">起始日期</param>
            <param name="endDate">截止日期</param>
            <param name="resultType">考勤类型</param>
            <param name="error">错误信息</param>
            <returns>大于返回false小于返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TimeExceptionServer.OperationTimeException_Replenishments(System.String,GlobalObject.CE_HR_AttendanceExceptionType)">
            <summary>
            操作补单情况下的考勤流水与异常信息
            </summary>
            <param name="billNo">关联单号</param>
            <param name="exceptionType">异常类型</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.TimeExceptionServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.OrganizationServer">
            <summary>
            组织机构管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.GetDeptName(System.String)">
            <summary>
            通过部门编码获得部门名称
            </summary>
            <param name="departCode">部门编码</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.GetDeptCode(System.String)">
            <summary>
            通过部门名称获得部门编码
            </summary>
            <param name="departName">部门名称</param>
            <returns>部门编码</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.GetAllDeptType">
            <summary>
            获取所有的部门类别
            </summary>
            <returns>返回获取到的部门类别</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.GetAllDeptInfo(System.Linq.IQueryable{ServerModule.View_HR_Dept}@,System.String@)">
            <summary>
            获取部门信息表
            </summary>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.GetDeptByDeptCode(System.String)">
            <summary>
            获取部门编号对应的部门信息
            </summary>
            <param name="deptCode">部门编号</param>
            <returns>成功返回获取到的部门，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.AddDeptInfo(ServerModule.HR_Dept,System.String@)">
            <summary>
            添加部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.UpdataDeptInfo(ServerModule.HR_Dept,System.String@)">
            <summary>
            修改部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OrganizationServer.DeleteDeptInfo(ServerModule.View_HR_Dept,System.String@)">
            <summary>
            通过部门编码删除某一部门
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一部门</returns>
        </member>
        <member name="T:Service_Peripheral_HR.ICultivateServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除培训统计的一条记录
            </summary>
            <param name="id">需要删除的序号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取全部单据信息
            </summary>
            <param name="returnInfo">培训统计数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.GetBillByDate(System.DateTime,System.DateTime)">
            <summary>
            获取时间段的单据信息
            </summary>
            <returns>返回培训统计数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.InsertBill(ServerModule.HR_CultivateStatistics,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String@)">
            <summary>
            新增一条培训统计的信息
            </summary>
            <param name="cultivate">培训统计数据集</param>
            <param name="list">人员列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.UpdatetBill(System.Int32,ServerModule.HR_CultivateStatistics,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String@)">
            <summary>
            修改培训统计的信息
            </summary>
            <param name="id">需要修改的序号</param>
            <param name="cultivate">更新后的培训统计数据集</param>
            <param name="list">人员列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ICultivateServer.GetPersonByID(System.Int32)">
            <summary>
            通过id获得参与的人员
            </summary>
            <param name="id">id</param>
            <returns>成功返回人员列表</returns>
        </member>
        <member name="P:Service_Peripheral_HR.ICultivateServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.ExceptionType">
            <summary>
            异常类别
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.迟到">
            <summary>
            迟到
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.早退">
            <summary>
            早退
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.旷工">
            <summary>
            旷工
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.请假">
            <summary>
            请假
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.加班">
            <summary>
            加班
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.出差">
            <summary>
            出差
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.未打卡">
            <summary>
            未打卡
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExceptionType.正常">
            <summary>
            正常
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IAttendanceMachineServer">
            <summary>
            考勤机导入的人员考勤明细表接口
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.DeleteAttendanceMachineByID(System.String,System.String@)">
            <summary>
            通过单据号删除考勤机导入的人员考勤明细
            </summary>
            <param name="billID">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetAllInfo">
            <summary>
            获取考勤机导入的人员考勤明细表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetHistoryAllInfo">
            <summary>
            获取考勤机导入的人员考勤历史明细表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.InsertAttendanceMachine(ServerModule.HR_AttendanceMachineDataList,System.String@)">
            <summary>
            导入数据
            </summary>
            <param name="machineDataList">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetExceptionType">
            <summary>
            获取考勤异常类型
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetExceptionTypeID(System.String)">
            <summary>
            通过异常类型名获取对应的ID
            </summary>
            <param name="typeName">异常名</param>
            <returns>返回对应的ID</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetExceptionTypeName(System.Int32)">
            <summary>
            通过异常类别ID获取异常类型名
            </summary>
            <param name="typeCode">ID</param>
            <returns>返回对应的异常类型名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetAttendanceMachineData(System.String,System.DateTime)">
            <summary>
            通过员工编号和时间获取考勤机导入的人员考勤明细表
            </summary>
            <param name="workID">员工编号</param>
            <param name="exDate">打卡日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.DeleteAttendanceMachineByWorkIDAndDate(System.String,System.DateTime,System.String@)">
            <summary>
            通过员工编号和打卡日期删除考勤机导入的人员考勤明细
            </summary>
            <param name="workID">员工编号</param>
            <param name="date">打卡日期</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetAttendanceMachineDateListByBefor(System.DateTime,System.String)">
            <summary>
            通过时间和员工编号获得打卡时间
            </summary>
            <param name="date">日期</param>
            <param name="workID">员工编号</param>
            <returns>返回打卡时间</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetWorkIDIsExist(System.String,System.DateTime)">
            <summary>
            获取人员是否有考勤信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="date">日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetCardIDWorkIDMapping(System.String)">
            <summary>
            通过打卡号获得员工编号
            </summary>
            <param name="card">打卡号</param>
            <returns>返回满足条件的员工编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceMachineServer.GetIsAllPersonnelPunchRecord(System.String@)">
            <summary>
            判断是否需要考勤的人员都有记录
            </summary>
            <param name="error">错误信息</param>
            <returns>没有返回false，有返回True</returns>
        </member>
        <member name="F:Service_Peripheral_HR.CultivateServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取全部单据信息
            </summary>
            <param name="returnInfo">培训统计数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.GetBillByDate(System.DateTime,System.DateTime)">
            <summary>
            获取时间段的单据信息
            </summary>
            <returns>返回培训统计数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.GetPersonByID(System.Int32)">
            <summary>
            通过id获得参与的人员
            </summary>
            <param name="id">id</param>
            <returns>成功返回人员列表</returns>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.InsertBill(ServerModule.HR_CultivateStatistics,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String@)">
            <summary>
            新增一条培训统计的信息
            </summary>
            <param name="cultivate">培训统计数据集</param>
            <param name="list">人员列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.UpdatetBill(System.Int32,ServerModule.HR_CultivateStatistics,System.Collections.Generic.List{ServerModule.View_SelectPersonnel},System.String@)">
            <summary>
            修改培训统计的信息
            </summary>
            <param name="id">需要修改的序号</param>
            <param name="cultivate">更新后的培训统计数据集</param>
            <param name="list">人员列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.CultivateServer.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除培训统计的一条记录
            </summary>
            <param name="id">需要删除的序号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="P:Service_Peripheral_HR.CultivateServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.AttendanceMachineServer">
            <summary>
            考勤机导入的人员考勤明细表操作类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetAllInfo">
            <summary>
            获取考勤机导入的人员考勤明细表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetAttendanceMachineData(System.String,System.DateTime)">
            <summary>
            通过员工编号和时间获取考勤机导入的人员考勤明细表
            </summary>
            <param name="workID">员工编号</param>
            <param name="exDate">打卡日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetCardIDWorkIDMapping(System.String)">
            <summary>
            通过打卡号获得员工编号
            </summary>
            <param name="card">打卡号</param>
            <returns>返回满足条件的员工编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetAttendanceMachineDateListByBefor(System.DateTime,System.String)">
            <summary>
            通过时间和员工编号获得打卡时间
            </summary>
            <param name="date">日期</param>
            <param name="workID">员工编号</param>
            <returns>返回打卡时间</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.InsertAttendanceMachine(ServerModule.HR_AttendanceMachineDataList,System.String@)">
            <summary>
            导入数据
            </summary>
            <param name="machineDataList">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.DeleteAttendanceMachineByID(System.String,System.String@)">
            <summary>
            通过单据号删除考勤机导入的人员考勤明细
            </summary>
            <param name="billID">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.DeleteAttendanceMachineByWorkIDAndDate(System.String,System.DateTime,System.String@)">
            <summary>
            通过员工编号和打卡日期删除考勤机导入的人员考勤明细
            </summary>
            <param name="workID">员工编号</param>
            <param name="date">打卡日期</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetHistoryAllInfo">
            <summary>
            获取考勤机导入的人员考勤历史明细表
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetWorkIDIsExist(System.String,System.DateTime)">
            <summary>
            获取人员是否有考勤信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="date">日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetExceptionType">
            <summary>
            获取考勤异常类型
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetExceptionTypeID(System.String)">
            <summary>
            通过异常类型名获取对应的ID
            </summary>
            <param name="typeName">异常名</param>
            <returns>返回对应的ID</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetExceptionTypeName(System.Int32)">
            <summary>
            通过异常类别ID获取异常类型名
            </summary>
            <param name="typeCode">ID</param>
            <returns>返回对应的异常类型名</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceMachineServer.GetIsAllPersonnelPunchRecord(System.String@)">
            <summary>
            判断是否需要考勤的人员都有记录
            </summary>  
            <param name="error">错误信息</param>
            <returns>没有返回false，有返回True</returns>
        </member>
        <member name="T:Service_Peripheral_HR.AttendanceDaybookServer">
            <summary>
            人员考勤流水账操作类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IAttendanceDaybookServer">
            <summary>
            人员考勤流水账操作类接口
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceDaybookServer.GetAllDayBook(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员考勤流水账
            </summary>
            <param name="returnInfo">人员考勤流水账</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceDaybookServer.GetDayBookView(System.String,System.String)">
            <summary>
            获得考勤流水主表信息
            </summary>
            <param name="beginDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IAttendanceDaybookServer.GetDayBookViewByDate(System.String,System.String)">
            <summary>
            获得考勤流水中有记录的人员编号（去除重复编号）
            </summary>
            <param name="beginDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:Service_Peripheral_HR.IAttendanceDaybookServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.AttendanceDaybookServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceDaybookServer.GetAllDayBook(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取人员考勤流水账
            </summary>
            <param name="returnInfo">人员考勤流水账</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceDaybookServer.GetDayBookView(System.String,System.String)">
            <summary>
            获得考勤流水主表信息
            </summary>
            <param name="beginDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.AttendanceDaybookServer.GetDayBookViewByDate(System.String,System.String)">
            <summary>
            获得考勤流水中有记录的人员编号（去除重复编号）
            </summary>
            <param name="beginDate">考勤起始日期</param>
            <param name="endDate">考勤截止日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:Service_Peripheral_HR.AttendanceDaybookServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.TrainSurvey.DeleteInfo(System.String)">
            <summary>
            删除业务
            </summary>
            <param name="billNo">业务号</param>
        </member>
        <member name="M:Service_Peripheral_HR.TrainSurvey.IsExist(System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:Service_Peripheral_HR.TrainSurvey.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="T:Service_Peripheral_HR.JobTitleServer">
            <summary>
            职称信息管理类
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.IJobTitleServer">
            <summary>
            职称信息管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.AddAndUpdateJobTitle(ServerModule.HR_JobTitle,System.String@)">
            <summary>
            修改或新增职称信息
            </summary>
            <param name="jobTitle">职称信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.DeleteJobTitle(ServerModule.HR_JobTitle,System.String@)">
            <summary>
            删除职称信息
            </summary>
            <param name="jobTitle">职称信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.GetJobTitle">
            <summary>
            获得所有职称信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.GetJobTitleByJobName(System.String)">
            <summary>
            通过职称名称获得职称编号
            </summary>
            <param name="jobTitleName">职称名称</param>
            <returns>返回职称编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.GetJobTitleByJobID(System.Int32)">
            <summary>
            通过职称编号获得职称名称
            </summary>
            <param name="jobTitleID">职称编号</param>
            <returns>返回职称名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.GetJobTitleOut">
            <summary>
            获得所有外部职称信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.IJobTitleServer.GetJobTitleLevel">
            <summary>
            获得所有内部级别信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.GetJobTitle">
            <summary>
            获得所有职称信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.GetJobTitleOut">
            <summary>
            获得所有外部职称信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.GetJobTitleLevel">
            <summary>
            获得所有内部级别信息
            </summary>
            <returns>返回职称数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.GetJobTitleByJobName(System.String)">
            <summary>
            通过职称名称获得职称编号
            </summary>
            <param name="jobTitleName">职称名称</param>
            <returns>返回职称编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.GetJobTitleByJobID(System.Int32)">
            <summary>
            通过职称编号获得职称名称
            </summary>
            <param name="jobTitleID">职称编号</param>
            <returns>返回职称名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.AddAndUpdateJobTitle(ServerModule.HR_JobTitle,System.String@)">
            <summary>
            新增职称信息
            </summary>
            <param name="jobTitle">职称信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.JobTitleServer.DeleteJobTitle(ServerModule.HR_JobTitle,System.String@)">
            <summary>
            删除职称信息
            </summary>
            <param name="jobTitle">职称信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:Service_Peripheral_HR.ExpertEmployeServer">
            <summary>
            专家人才服务类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.ExpertEmployeServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.ExpertEmployeServer.GetAllInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取专家专业人才库的信息
            </summary>
            <param name="returnInfo">专家专业人才信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ExpertEmployeServer.GetInfoByID(System.Int32,System.String@)">
            <summary>
            通过ID获取单个专家专业人才库的信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回获取到的信息，否则返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ExpertEmployeServer.AddExpertEmploye(ServerModule.HR_ExpertEmploye,System.String@)">
            <summary>
            添加专家专业人才信息
            </summary>
            <param name="expertEmploye">专家专业人才数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ExpertEmployeServer.UpdateExpertEmploye(ServerModule.HR_ExpertEmploye,System.Int32,System.String@)">
            <summary>
            修改专家专业人才信息
            </summary>
            <param name="expertEmploye">专家专业人才数据集</param>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.ExpertEmployeServer.DeleteTrainEmploye(System.Int32,System.String@)">
            <summary>
            通过id删除专家专业人才信息
            </summary>
            <param name="id">id</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.ExpertEmployeServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.OperatingPostServer">
            <summary>
            岗位管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetOperatingPost(System.String)">
            <summary>
            获取岗位信息
            </summary>
            <param name="dept">所属部门</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetOperatingPost(System.Int32)">
            <summary>
            获取岗位信息
            </summary>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetOperatingPostByPostName(System.String)">
            <summary>
            通过岗位名称获取岗位信息
            </summary>
            <param name="name">岗位名称</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetOperatingPostByPostCode(System.Int32)">
            <summary>
            通过岗位编号获取岗位信息
            </summary>
            <param name="postCode">岗位编号</param>
            <returns>返回岗位信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.AddPost(ServerModule.HR_OperatingPost,System.String@)">
            <summary>
            添加岗位
            </summary>
            <param name="operatPost">岗位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.UpdatePost(ServerModule.HR_OperatingPost,System.String@)">
            <summary>
            修改岗位
            </summary>
            <param name="operatPost">岗位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.DeletePost(System.Int32,System.String@)">
            <summary>
            通过岗位编号删除岗位
            </summary>
            <param name="postID">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetPostType">
            <summary>
            获取岗位类别信息
            </summary>
            <returns>返回岗位类别信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetPostTypeByTypeName(System.String)">
            <summary>
            通过类别名称获取岗位类别编号
            </summary>
            <param name="typeName">岗位类别名称</param>
            <returns>返回岗位类别编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.AddPostType(ServerModule.HR_PostType,System.String@)">
            <summary>
            添加岗位类别
            </summary>
            <param name="postType">岗位类别信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.UpdatePostType(ServerModule.HR_PostType,System.String@)">
            <summary>
            修改岗位类别
            </summary>
            <param name="postType">岗位类别信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True ，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.DeletePostType(System.Int32,System.String@)">
            <summary>
            通过岗位编号删除岗位类别
            </summary>
            <param name="typeID">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetDeptCount(System.String)">
            <summary>
            获得部门的总人数
            </summary>
            <param name="deptName">岗位名称</param>
            <returns>成功返回数据集，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetDeptPost(System.String)">
            <summary>
            获得岗位编制的信息
            </summary>
            <param name="postName">岗位名称</param>
            <returns>成功返回数据集，失败返回null</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.GetDeptPostByDeptCode(System.String)">
            <summary>
            通过部门ID获得编制信息
            </summary>
            <param name="deptName">部门编号</param>
            <returns>返回岗位编制信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.AddDeptPost(ServerModule.HR_DeptPost,System.String@)">
            <summary>
            添加/更新部门工作岗位
            </summary>
            <param name="deptPost">工作岗位信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.AddDeptPost(System.Data.DataTable,System.String@)">
            <summary>
            批量添加/更新部门工作岗位
            </summary>
            <param name="deptPost">工作岗位信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.UpdateDeptPost(System.String,System.Int32,System.String@)">
            <summary>
            修改添加部门岗位的在职人员数
            </summary>
            <param name="deptCode">部门编号</param>
            <param name="postCode">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.UpdateLessDeptPost(System.String,System.Int32,System.String@)">
            <summary>
            修改减少部门岗位的在职人员数
            </summary>
            <param name="deptCode">部门编号</param>
            <param name="postCode">岗位编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OperatingPostServer.DeleteDeptPost(ServerModule.HR_DeptPost,System.String@)">
            <summary>
            删除岗位编制信息
            </summary>
            <param name="deptPost">岗位编制信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回False</returns>
        </member>
        <member name="T:Service_Peripheral_HR.OnBusinessBillServer">
            <summary>
            出差申请表操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillServer.m_highDept">
            <summary>
            最高部门
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.OnBusinessBillServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetSingleInfo(System.Int32)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billID">单据ID</param>
            <returns>返回单条记录信息</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetAllOnBusinessBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有出差申请表信息
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetAllOnBusinessBillByWorkID(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有出差申请表信息
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetAllOnBusinessBillByDeptCode(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            出差随行人员部门负责人查看
            </summary>
            <param name="returnInfo">出差申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessBillByID(System.Int32)">
            <summary>
            通过单据编号获得单据信息
            </summary>
            <param name="billID">单据编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessInfo_TimeExceptionJudge(ServerModule.HR_TimeException)">
            <summary>
            考勤异常处理_判断是否出差
            </summary>
            <param name="timeException">考勤异常对象</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessBillByWorkIDAndTime(System.String,System.DateTime)">
            <summary>
            通过日期判断人员在当天是否出差
            </summary>
            <param name="workID">员工编号</param>
            <param name="recordDate">打卡日期</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.IsExistOnBusinessBillByWorkIDAndTime(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过日期判断人员在当天是否出差
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessBillByTime(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得出差申请表信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="status">单据状态</param>
            <returns>返回出差申请表数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.AddOnBusinessBill(ServerModule.HR_OnBusinessBill,System.Collections.Generic.List{ServerModule.HR_OnBusinessPersonnel},System.Collections.Generic.List{ServerModule.HR_OnBusinessSchedule},System.String@)">
            <summary>
            新增出差申请
            </summary>
            <param name="onBusiness">出差申请主信息</param>
            <param name="personnel">出差人员</param>
            <param name="schedule">出差行程安排</param>
            <param name="error">错误信息</param>
            <returns>成功返回新增的单据编号，失败返回0</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.UpdateOnBusinessBill(ServerModule.HR_OnBusinessBill,System.Collections.Generic.List{ServerModule.HR_OnBusinessPersonnel},System.Collections.Generic.List{ServerModule.HR_OnBusinessSchedule},System.Int32,System.String@)">
            <summary>
            修改出差申请
            </summary>
            <param name="onBusiness">出差申请主信息</param>
            <param name="personnel">出差人员</param>
            <param name="schedule">出差行程安排</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessPersonnel(System.String)">
            <summary>
            通过单据号获得出差人员
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.GetOnBusinessSchedule(System.String)">
            <summary>
            通过单据号获得出差行程
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.UpdateOnBusinessBill(ServerModule.HR_OnBusinessBill,System.String,System.String@)">
            <summary>
            领导审核修改出差单据
            </summary>
            <param name="onBusiness">出差单据数据集</param>
            <param name="roleType">角色类型</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.UpdateOnBusinessPersonnel(ServerModule.HR_OnBusinessPersonnel,System.Int32,System.String@)">
            <summary>
            随行人员部门确认修改出差单据
            </summary>
            <param name="personnel">出差人员</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.DeleteOnBusinessBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.OnBusinessBillServer.ReturnBill(System.String,System.String,System.String,System.String@)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="strRebackReason">回退状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="P:Service_Peripheral_HR.OnBusinessBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.PostChangeStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待调出部门负责人审核">
            <summary>
            等待调出部门负责人审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待调出分管领导审核">
            <summary>
            等待调出分管领导审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待调入部门负责人审核">
            <summary>
            等待调入部门负责人审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待调入分管领导审核">
            <summary>
            等待调入分管领导审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待公司办负责人审核">
            <summary>
            等待公司办负责人审核
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待总经理批准">
            <summary>
            等待总经理批准
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待原工作移交">
            <summary>
            等待原工作移交
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待人事档案调动">
            <summary>
            等待人事档案调动
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待信息化人员确认">
            <summary>
            等待信息化人员确认
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.等待固定资产人员确认">
            <summary>
            等待固定资产人员确认
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.未批准">
            <summary>
            未批准
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.PostChangeStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.LeaveServer">
            <summary>
            请假操作类
            </summary>
        </member>
        <member name="F:Service_Peripheral_HR.LeaveServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetAllLeaveType">
            <summary>
            获取请假类别
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeByTypeID(System.String)">
            <summary>
            通过请假类别编号获取请假类别信息
            </summary>
            <param name="TypeCode">请假类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeByCode_Show(System.String)">
            <summary>
            获取请假类别(拼接编号和名称)
            </summary>
            <param name="typeName">请假类别名称</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeByCode(System.String)">
            <summary>
            获取请假类别(拼接编号和名称)
            </summary>
            <param name="typeName">请假类别名称</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeByName(System.String)">
            <summary>
            通过类别编号获得类别名称
            </summary>
            <param name="typeCode">请假类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveType(System.String)">
            <summary>
            通过类别编号获得请假类别信息
            </summary>
            <param name="typeCode">类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeParentCode(System.String)">
            <summary>
            通过类别编号获得请假类别父级编号
            </summary>
            <param name="typeCode">类别编号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.AddLeaveType(ServerModule.HR_LeaveType,System.String@)">
            <summary>
            新增请假类别
            </summary>
            <param name="leaveType">请假类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.UpdateLeaveType(ServerModule.HR_LeaveType,System.String@)">
            <summary>
            修改请假类别
            </summary>
            <param name="leaveType">请假类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true,失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.DeleteLeaveType(System.String,System.String@)">
            <summary>
            删除请假类别
            </summary>
            <param name="typeCode">请假类别编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetAllLeaveBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有请假申请表信息
            </summary>
            <param name="returnInfo">请假申请信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和时间获得请假信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="leaveTime">时间</param>
            <param name="endDate">截止时间</param>
            /// <returns>返回请假信息数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveBillHalfway(System.String,System.DateTime,System.DateTime)">
            <summary>
            通过员工编号和时间获得请假信息
            </summary>
            <param name="workID">员工编号</param>
            <param name="leaveTime">时间</param>
            <param name="endDate">截止时间</param>
            /// <returns>返回请假信息数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetCountLeaveBill(System.String,System.String,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            查询某一个员工当月不同类别的请假次数和累计的小时数
            </summary>
            <param name="leaveTypeID">请假类别编号</param>
            <param name="workID">员工编号</param>
            <param name="starDate">当月的起始日期</param>
            <param name="endDate">当月的结束日期</param>
            <param name="billNo">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.AddLeaveBill(ServerModule.HR_LeaveBill,System.String@)">
            <summary>
            新增/修改请假申请
            </summary>
            <param name="leave">请假数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.UpdateLeave(ServerModule.HR_LeaveBill,System.String,System.String@)">
            <summary>
            修改请假信息
            </summary>
            <param name="leave">请假申请数据集</param>
            <param name="roleType">角色类型（部门主管审批，部门负责人审批
            分管领导审批，总经理审批，人力资源部复审）</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.DeleteLeaveBill(System.Int32,System.String@)">
            <summary>
            通过单据号删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回false</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetMaxBillNo">
            <summary>
            获得最大的ID号
            </summary>
            <returns>返回最大的ID号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveTypeByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            查询员工在某一天是否有请假
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回请假类别</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.GetLeaveBillByWorkID(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得员工在时间范围内的请假单是否已经全部走完
            </summary>
            <param name="workID">员工编号</param>
            <param name="starTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <returns>没有全部走完返回False，走完返回True</returns>
        </member>
        <member name="M:Service_Peripheral_HR.LeaveServer.UpdateAttendanceDaybook(System.String,System.String,System.String@)">
            <summary>
            修改请假类别后同时修改流水明细
            </summary>
            <param name="billNo">请假单号</param>
            <param name="type">请假类别</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="P:Service_Peripheral_HR.LeaveServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:Service_Peripheral_HR.HolidayServer">
            <summary>
            节假日管理类
            </summary>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHolidayType">
            <summary>
            获得所有节假日类型
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHolidayType(System.String)">
            <summary>
            通过节假日名称获得编号
            </summary>
            <param name="typeName">节假日名城</param>
            <returns>返回编号</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHolidayType(System.Int32)">
            <summary>
            通过编号获得节假日名称
            </summary>
            <param name="typeID">编号</param>
            <returns>返回节假日名称</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHoliday(System.DateTime,System.String)">
            <summary>
            获得节假日信息
            </summary>
            <param name="date">节假日时间</param>
            <param name="flag">是否是法定节假日0：不是，1：是</param>
            <returns>返回节假日数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHoliday">
            <summary>
            获得节假日信息
            </summary>
            <returns>返回节假日数据集</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.AddHolidayType(ServerModule.HR_HolidayType,System.String@)">
            <summary>
            新增节假日类别
            </summary>
            <param name="holidayType">节假日类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.UpdateHolidayType(ServerModule.HR_HolidayType,System.String@)">
            <summary>
            修改节假日类别
            </summary>
            <param name="holidayType">节假日类别数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.DeleteHolidayType(System.Int32,System.String@)">
            <summary>
            删除节假日类别
            </summary>
            <param name="typeID">节假日编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.AddHoliday(ServerModule.HR_Holiday,System.String@)">
            <summary>
            新增节假日信息
            </summary>
            <param name="holiday">节假日数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.UpdateHoliday(ServerModule.HR_Holiday,System.String@)">
            <summary>
            修改节假日信息
            </summary>
            <param name="holiday">节假日数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.DeleteHoliday(System.Int32,System.String@)">
            <summary>
            删除节假日信息
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True 失败返回False</returns>
        </member>
        <member name="M:Service_Peripheral_HR.HolidayServer.GetHolidayDays(System.DateTime,System.DateTime)">
            <summary>
            获得节假日放假天数
            </summary>
            <param name="starTime">开始时间</param>
            <param name="endTime">截止时间</param>
            <returns>返回节假日数据集</returns>
        </member>
    </members>
</doc>
