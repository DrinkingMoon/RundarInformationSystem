#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3649
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServerModule2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="RundarWebServer")]
	public partial class WebSiteDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOF_BillID_Status(OF_BillID_Status instance);
    partial void UpdateOF_BillID_Status(OF_BillID_Status instance);
    partial void DeleteOF_BillID_Status(OF_BillID_Status instance);
    partial void InsertOF_BugCode(OF_BugCode instance);
    partial void UpdateOF_BugCode(OF_BugCode instance);
    partial void DeleteOF_BugCode(OF_BugCode instance);
    partial void InsertOF_CarBugStatus(OF_CarBugStatus instance);
    partial void UpdateOF_CarBugStatus(OF_CarBugStatus instance);
    partial void DeleteOF_CarBugStatus(OF_CarBugStatus instance);
    partial void InsertOF_NewsFile(OF_NewsFile instance);
    partial void UpdateOF_NewsFile(OF_NewsFile instance);
    partial void DeleteOF_NewsFile(OF_NewsFile instance);
    partial void InsertS_Commtion(S_Commtion instance);
    partial void UpdateS_Commtion(S_Commtion instance);
    partial void DeleteS_Commtion(S_Commtion instance);
    partial void InsertS_MessageSource(S_MessageSource instance);
    partial void UpdateS_MessageSource(S_MessageSource instance);
    partial void DeleteS_MessageSource(S_MessageSource instance);
    partial void InsertS_ServiceFileDown(S_ServiceFileDown instance);
    partial void UpdateS_ServiceFileDown(S_ServiceFileDown instance);
    partial void DeleteS_ServiceFileDown(S_ServiceFileDown instance);
    partial void InsertOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void UpdateOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void DeleteOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void InsertS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void UpdateS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void DeleteS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void InsertS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void UpdateS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void DeleteS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void InsertS_AfterService(S_AfterService instance);
    partial void UpdateS_AfterService(S_AfterService instance);
    partial void DeleteS_AfterService(S_AfterService instance);
    #endregion
		
		public WebSiteDataClassesDataContext() : 
				base(global::WebServerModule2.Properties.Settings.Default.RundarWebServerConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public WebSiteDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSiteDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSiteDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSiteDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OF_BillID_Status> OF_BillID_Status
		{
			get
			{
				return this.GetTable<OF_BillID_Status>();
			}
		}
		
		public System.Data.Linq.Table<OF_BugCode> OF_BugCode
		{
			get
			{
				return this.GetTable<OF_BugCode>();
			}
		}
		
		public System.Data.Linq.Table<OF_CarBugStatus> OF_CarBugStatus
		{
			get
			{
				return this.GetTable<OF_CarBugStatus>();
			}
		}
		
		public System.Data.Linq.Table<OF_NewsFile> OF_NewsFile
		{
			get
			{
				return this.GetTable<OF_NewsFile>();
			}
		}
		
		public System.Data.Linq.Table<S_Commtion> S_Commtion
		{
			get
			{
				return this.GetTable<S_Commtion>();
			}
		}
		
		public System.Data.Linq.Table<S_MessageSource> S_MessageSource
		{
			get
			{
				return this.GetTable<S_MessageSource>();
			}
		}
		
		public System.Data.Linq.Table<S_ServiceFileDown> S_ServiceFileDown
		{
			get
			{
				return this.GetTable<S_ServiceFileDown>();
			}
		}
		
		public System.Data.Linq.Table<OF_BugMessageInfo> OF_BugMessageInfo
		{
			get
			{
				return this.GetTable<OF_BugMessageInfo>();
			}
		}
		
		public System.Data.Linq.Table<S_ReplaceAccessory> S_ReplaceAccessory
		{
			get
			{
				return this.GetTable<S_ReplaceAccessory>();
			}
		}
		
		public System.Data.Linq.Table<S_ServiceFeedBack> S_ServiceFeedBack
		{
			get
			{
				return this.GetTable<S_ServiceFeedBack>();
			}
		}
		
		public System.Data.Linq.Table<S_AfterService> S_AfterService
		{
			get
			{
				return this.GetTable<S_AfterService>();
			}
		}
	}
	
	[Table(Name="dbo.OF_BillID_Status")]
	public partial class OF_BillID_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Bill_ID;
		
		private bool _UseStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBill_IDChanging(string value);
    partial void OnBill_IDChanged();
    partial void OnUseStatusChanging(bool value);
    partial void OnUseStatusChanged();
    #endregion
		
		public OF_BillID_Status()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Bill_ID", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UseStatus", DbType="Bit NOT NULL")]
		public bool UseStatus
		{
			get
			{
				return this._UseStatus;
			}
			set
			{
				if ((this._UseStatus != value))
				{
					this.OnUseStatusChanging(value);
					this.SendPropertyChanging();
					this._UseStatus = value;
					this.SendPropertyChanged("UseStatus");
					this.OnUseStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_BugCode")]
	public partial class OF_BugCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BugName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBugNameChanging(string value);
    partial void OnBugNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_BugCode()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugName
		{
			get
			{
				return this._BugName;
			}
			set
			{
				if ((this._BugName != value))
				{
					this.OnBugNameChanging(value);
					this.SendPropertyChanging();
					this._BugName = value;
					this.SendPropertyChanged("BugName");
					this.OnBugNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_CarBugStatus")]
	public partial class OF_CarBugStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BugCode;
		
		private string _BugName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnBugNameChanging(string value);
    partial void OnBugNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_CarBugStatus()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BugName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugName
		{
			get
			{
				return this._BugName;
			}
			set
			{
				if ((this._BugName != value))
				{
					this.OnBugNameChanging(value);
					this.SendPropertyChanging();
					this._BugName = value;
					this.SendPropertyChanged("BugName");
					this.OnBugNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_NewsFile")]
	public partial class OF_NewsFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sender;
		
		private string _title;
		
		private string _contents;
		
		private string _fileNames;
		
		private string _filePath;
		
		private string _receiver;
		
		private System.Nullable<System.DateTime> _releaseTime;
		
		private string _newsType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentsChanging(string value);
    partial void OncontentsChanged();
    partial void OnfileNamesChanging(string value);
    partial void OnfileNamesChanged();
    partial void OnfilePathChanging(string value);
    partial void OnfilePathChanged();
    partial void OnreceiverChanging(string value);
    partial void OnreceiverChanged();
    partial void OnreleaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnreleaseTimeChanged();
    partial void OnnewsTypeChanging(string value);
    partial void OnnewsTypeChanged();
    #endregion
		
		public OF_NewsFile()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_sender", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_contents", DbType="NVarChar(3000)")]
		public string contents
		{
			get
			{
				return this._contents;
			}
			set
			{
				if ((this._contents != value))
				{
					this.OncontentsChanging(value);
					this.SendPropertyChanging();
					this._contents = value;
					this.SendPropertyChanged("contents");
					this.OncontentsChanged();
				}
			}
		}
		
		[Column(Storage="_fileNames", DbType="VarChar(100)")]
		public string fileNames
		{
			get
			{
				return this._fileNames;
			}
			set
			{
				if ((this._fileNames != value))
				{
					this.OnfileNamesChanging(value);
					this.SendPropertyChanging();
					this._fileNames = value;
					this.SendPropertyChanged("fileNames");
					this.OnfileNamesChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="VarChar(200)")]
		public string filePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnfilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("filePath");
					this.OnfilePathChanged();
				}
			}
		}
		
		[Column(Storage="_receiver", DbType="VarChar(30)")]
		public string receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[Column(Storage="_releaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> releaseTime
		{
			get
			{
				return this._releaseTime;
			}
			set
			{
				if ((this._releaseTime != value))
				{
					this.OnreleaseTimeChanging(value);
					this.SendPropertyChanging();
					this._releaseTime = value;
					this.SendPropertyChanged("releaseTime");
					this.OnreleaseTimeChanged();
				}
			}
		}
		
		[Column(Storage="_newsType", DbType="VarChar(50)")]
		public string newsType
		{
			get
			{
				return this._newsType;
			}
			set
			{
				if ((this._newsType != value))
				{
					this.OnnewsTypeChanging(value);
					this.SendPropertyChanging();
					this._newsType = value;
					this.SendPropertyChanged("newsType");
					this.OnnewsTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_Commtion")]
	public partial class S_Commtion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private string _Remarl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRemarlChanging(string value);
    partial void OnRemarlChanged();
    #endregion
		
		public S_Commtion()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Remarl", DbType="VarChar(50)")]
		public string Remarl
		{
			get
			{
				return this._Remarl;
			}
			set
			{
				if ((this._Remarl != value))
				{
					this.OnRemarlChanging(value);
					this.SendPropertyChanging();
					this._Remarl = value;
					this.SendPropertyChanged("Remarl");
					this.OnRemarlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_MessageSource")]
	public partial class S_MessageSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MessageCode;
		
		private string _MessageName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMessageCodeChanging(string value);
    partial void OnMessageCodeChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public S_MessageSource()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageCode
		{
			get
			{
				return this._MessageCode;
			}
			set
			{
				if ((this._MessageCode != value))
				{
					this.OnMessageCodeChanging(value);
					this.SendPropertyChanging();
					this._MessageCode = value;
					this.SendPropertyChanged("MessageCode");
					this.OnMessageCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MessageName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ServiceFileDown")]
	public partial class S_ServiceFileDown : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _FileNames;
		
		private string _FileAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnFileNamesChanging(string value);
    partial void OnFileNamesChanged();
    partial void OnFileAddressChanging(string value);
    partial void OnFileAddressChanged();
    #endregion
		
		public S_ServiceFileDown()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileNames", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileNames
		{
			get
			{
				return this._FileNames;
			}
			set
			{
				if ((this._FileNames != value))
				{
					this.OnFileNamesChanging(value);
					this.SendPropertyChanging();
					this._FileNames = value;
					this.SendPropertyChanged("FileNames");
					this.OnFileNamesChanged();
				}
			}
		}
		
		[Column(Storage="_FileAddress", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string FileAddress
		{
			get
			{
				return this._FileAddress;
			}
			set
			{
				if ((this._FileAddress != value))
				{
					this.OnFileAddressChanging(value);
					this.SendPropertyChanging();
					this._FileAddress = value;
					this.SendPropertyChanged("FileAddress");
					this.OnFileAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_BugMessageInfo")]
	public partial class OF_BugMessageInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _BugCode;
		
		private string _CarMainBug;
		
		private string _CarSecendBug;
		
		private string _Frequency;
		
		private string _Condition;
		
		private string _BugDeclare;
		
		private string _CVTOilDetection;
		
		private string _PressureSensor;
		
		private string _ActiveSensor;
		
		private string _PassivitySensor;
		
		private string _ShiftKnob;
		
		private string _OverLinkStatus;
		
		private string _OilSump;
		
		private string _PKey;
		
		private string _RKey;
		
		private string _NKey;
		
		private string _DKey;
		
		private string _SKey;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnCarMainBugChanging(string value);
    partial void OnCarMainBugChanged();
    partial void OnCarSecendBugChanging(string value);
    partial void OnCarSecendBugChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnBugDeclareChanging(string value);
    partial void OnBugDeclareChanged();
    partial void OnCVTOilDetectionChanging(string value);
    partial void OnCVTOilDetectionChanged();
    partial void OnPressureSensorChanging(string value);
    partial void OnPressureSensorChanged();
    partial void OnActiveSensorChanging(string value);
    partial void OnActiveSensorChanged();
    partial void OnPassivitySensorChanging(string value);
    partial void OnPassivitySensorChanged();
    partial void OnShiftKnobChanging(string value);
    partial void OnShiftKnobChanged();
    partial void OnOverLinkStatusChanging(string value);
    partial void OnOverLinkStatusChanged();
    partial void OnOilSumpChanging(string value);
    partial void OnOilSumpChanged();
    partial void OnPKeyChanging(string value);
    partial void OnPKeyChanged();
    partial void OnRKeyChanging(string value);
    partial void OnRKeyChanged();
    partial void OnNKeyChanging(string value);
    partial void OnNKeyChanged();
    partial void OnDKeyChanging(string value);
    partial void OnDKeyChanged();
    partial void OnSKeyChanging(string value);
    partial void OnSKeyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_BugMessageInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(MAX)")]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(MAX)")]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CarMainBug", DbType="VarChar(MAX)")]
		public string CarMainBug
		{
			get
			{
				return this._CarMainBug;
			}
			set
			{
				if ((this._CarMainBug != value))
				{
					this.OnCarMainBugChanging(value);
					this.SendPropertyChanging();
					this._CarMainBug = value;
					this.SendPropertyChanged("CarMainBug");
					this.OnCarMainBugChanged();
				}
			}
		}
		
		[Column(Storage="_CarSecendBug", DbType="VarChar(MAX)")]
		public string CarSecendBug
		{
			get
			{
				return this._CarSecendBug;
			}
			set
			{
				if ((this._CarSecendBug != value))
				{
					this.OnCarSecendBugChanging(value);
					this.SendPropertyChanging();
					this._CarSecendBug = value;
					this.SendPropertyChanged("CarSecendBug");
					this.OnCarSecendBugChanged();
				}
			}
		}
		
		[Column(Storage="_Frequency", DbType="VarChar(MAX)")]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="VarChar(MAX)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[Column(Storage="_BugDeclare", DbType="VarChar(MAX)")]
		public string BugDeclare
		{
			get
			{
				return this._BugDeclare;
			}
			set
			{
				if ((this._BugDeclare != value))
				{
					this.OnBugDeclareChanging(value);
					this.SendPropertyChanging();
					this._BugDeclare = value;
					this.SendPropertyChanged("BugDeclare");
					this.OnBugDeclareChanged();
				}
			}
		}
		
		[Column(Storage="_CVTOilDetection", DbType="VarChar(MAX)")]
		public string CVTOilDetection
		{
			get
			{
				return this._CVTOilDetection;
			}
			set
			{
				if ((this._CVTOilDetection != value))
				{
					this.OnCVTOilDetectionChanging(value);
					this.SendPropertyChanging();
					this._CVTOilDetection = value;
					this.SendPropertyChanged("CVTOilDetection");
					this.OnCVTOilDetectionChanged();
				}
			}
		}
		
		[Column(Storage="_PressureSensor", DbType="VarChar(MAX)")]
		public string PressureSensor
		{
			get
			{
				return this._PressureSensor;
			}
			set
			{
				if ((this._PressureSensor != value))
				{
					this.OnPressureSensorChanging(value);
					this.SendPropertyChanging();
					this._PressureSensor = value;
					this.SendPropertyChanged("PressureSensor");
					this.OnPressureSensorChanged();
				}
			}
		}
		
		[Column(Storage="_ActiveSensor", DbType="VarChar(MAX)")]
		public string ActiveSensor
		{
			get
			{
				return this._ActiveSensor;
			}
			set
			{
				if ((this._ActiveSensor != value))
				{
					this.OnActiveSensorChanging(value);
					this.SendPropertyChanging();
					this._ActiveSensor = value;
					this.SendPropertyChanged("ActiveSensor");
					this.OnActiveSensorChanged();
				}
			}
		}
		
		[Column(Storage="_PassivitySensor", DbType="VarChar(MAX)")]
		public string PassivitySensor
		{
			get
			{
				return this._PassivitySensor;
			}
			set
			{
				if ((this._PassivitySensor != value))
				{
					this.OnPassivitySensorChanging(value);
					this.SendPropertyChanging();
					this._PassivitySensor = value;
					this.SendPropertyChanged("PassivitySensor");
					this.OnPassivitySensorChanged();
				}
			}
		}
		
		[Column(Storage="_ShiftKnob", DbType="VarChar(MAX)")]
		public string ShiftKnob
		{
			get
			{
				return this._ShiftKnob;
			}
			set
			{
				if ((this._ShiftKnob != value))
				{
					this.OnShiftKnobChanging(value);
					this.SendPropertyChanging();
					this._ShiftKnob = value;
					this.SendPropertyChanged("ShiftKnob");
					this.OnShiftKnobChanged();
				}
			}
		}
		
		[Column(Storage="_OverLinkStatus", DbType="VarChar(MAX)")]
		public string OverLinkStatus
		{
			get
			{
				return this._OverLinkStatus;
			}
			set
			{
				if ((this._OverLinkStatus != value))
				{
					this.OnOverLinkStatusChanging(value);
					this.SendPropertyChanging();
					this._OverLinkStatus = value;
					this.SendPropertyChanged("OverLinkStatus");
					this.OnOverLinkStatusChanged();
				}
			}
		}
		
		[Column(Storage="_OilSump", DbType="VarChar(MAX)")]
		public string OilSump
		{
			get
			{
				return this._OilSump;
			}
			set
			{
				if ((this._OilSump != value))
				{
					this.OnOilSumpChanging(value);
					this.SendPropertyChanging();
					this._OilSump = value;
					this.SendPropertyChanged("OilSump");
					this.OnOilSumpChanged();
				}
			}
		}
		
		[Column(Storage="_PKey", DbType="VarChar(MAX)")]
		public string PKey
		{
			get
			{
				return this._PKey;
			}
			set
			{
				if ((this._PKey != value))
				{
					this.OnPKeyChanging(value);
					this.SendPropertyChanging();
					this._PKey = value;
					this.SendPropertyChanged("PKey");
					this.OnPKeyChanged();
				}
			}
		}
		
		[Column(Storage="_RKey", DbType="VarChar(MAX)")]
		public string RKey
		{
			get
			{
				return this._RKey;
			}
			set
			{
				if ((this._RKey != value))
				{
					this.OnRKeyChanging(value);
					this.SendPropertyChanging();
					this._RKey = value;
					this.SendPropertyChanged("RKey");
					this.OnRKeyChanged();
				}
			}
		}
		
		[Column(Storage="_NKey", DbType="VarChar(MAX)")]
		public string NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_DKey", DbType="VarChar(MAX)")]
		public string DKey
		{
			get
			{
				return this._DKey;
			}
			set
			{
				if ((this._DKey != value))
				{
					this.OnDKeyChanging(value);
					this.SendPropertyChanging();
					this._DKey = value;
					this.SendPropertyChanged("DKey");
					this.OnDKeyChanged();
				}
			}
		}
		
		[Column(Storage="_SKey", DbType="VarChar(MAX)")]
		public string SKey
		{
			get
			{
				return this._SKey;
			}
			set
			{
				if ((this._SKey != value))
				{
					this.OnSKeyChanging(value);
					this.SendPropertyChanging();
					this._SKey = value;
					this.SendPropertyChanged("SKey");
					this.OnSKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ReplaceAccessory")]
	public partial class S_ReplaceAccessory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _OldGoodsName;
		
		private string _OldGoodsCode;
		
		private string _OldSpec;
		
		private string _OldGoodsID;
		
		private string _OldCvtID;
		
		private System.Nullable<System.DateTime> _GiveOutDate;
		
		private System.Nullable<System.DateTime> _BackTime;
		
		private string _NewGoodsName;
		
		private string _NewGoodsCode;
		
		private string _NewSpec;
		
		private string _NewGoodsID;
		
		private string _NewCvtID;
		
		private System.Nullable<int> _Count;
		
		private string _Unit;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnOldGoodsNameChanging(string value);
    partial void OnOldGoodsNameChanged();
    partial void OnOldGoodsCodeChanging(string value);
    partial void OnOldGoodsCodeChanged();
    partial void OnOldSpecChanging(string value);
    partial void OnOldSpecChanged();
    partial void OnOldGoodsIDChanging(string value);
    partial void OnOldGoodsIDChanged();
    partial void OnOldCvtIDChanging(string value);
    partial void OnOldCvtIDChanged();
    partial void OnGiveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGiveOutDateChanged();
    partial void OnBackTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBackTimeChanged();
    partial void OnNewGoodsNameChanging(string value);
    partial void OnNewGoodsNameChanged();
    partial void OnNewGoodsCodeChanging(string value);
    partial void OnNewGoodsCodeChanged();
    partial void OnNewSpecChanging(string value);
    partial void OnNewSpecChanged();
    partial void OnNewGoodsIDChanging(string value);
    partial void OnNewGoodsIDChanged();
    partial void OnNewCvtIDChanging(string value);
    partial void OnNewCvtIDChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public S_ReplaceAccessory()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldGoodsName
		{
			get
			{
				return this._OldGoodsName;
			}
			set
			{
				if ((this._OldGoodsName != value))
				{
					this.OnOldGoodsNameChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsName = value;
					this.SendPropertyChanged("OldGoodsName");
					this.OnOldGoodsNameChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldGoodsCode
		{
			get
			{
				return this._OldGoodsCode;
			}
			set
			{
				if ((this._OldGoodsCode != value))
				{
					this.OnOldGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsCode = value;
					this.SendPropertyChanged("OldGoodsCode");
					this.OnOldGoodsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OldSpec", DbType="VarChar(50)")]
		public string OldSpec
		{
			get
			{
				return this._OldSpec;
			}
			set
			{
				if ((this._OldSpec != value))
				{
					this.OnOldSpecChanging(value);
					this.SendPropertyChanging();
					this._OldSpec = value;
					this.SendPropertyChanged("OldSpec");
					this.OnOldSpecChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsID", DbType="VarChar(50)")]
		public string OldGoodsID
		{
			get
			{
				return this._OldGoodsID;
			}
			set
			{
				if ((this._OldGoodsID != value))
				{
					this.OnOldGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsID = value;
					this.SendPropertyChanged("OldGoodsID");
					this.OnOldGoodsIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldCvtID", DbType="VarChar(50)")]
		public string OldCvtID
		{
			get
			{
				return this._OldCvtID;
			}
			set
			{
				if ((this._OldCvtID != value))
				{
					this.OnOldCvtIDChanging(value);
					this.SendPropertyChanging();
					this._OldCvtID = value;
					this.SendPropertyChanged("OldCvtID");
					this.OnOldCvtIDChanged();
				}
			}
		}
		
		[Column(Storage="_GiveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GiveOutDate
		{
			get
			{
				return this._GiveOutDate;
			}
			set
			{
				if ((this._GiveOutDate != value))
				{
					this.OnGiveOutDateChanging(value);
					this.SendPropertyChanging();
					this._GiveOutDate = value;
					this.SendPropertyChanged("GiveOutDate");
					this.OnGiveOutDateChanged();
				}
			}
		}
		
		[Column(Storage="_BackTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BackTime
		{
			get
			{
				return this._BackTime;
			}
			set
			{
				if ((this._BackTime != value))
				{
					this.OnBackTimeChanging(value);
					this.SendPropertyChanging();
					this._BackTime = value;
					this.SendPropertyChanged("BackTime");
					this.OnBackTimeChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsName", DbType="VarChar(50)")]
		public string NewGoodsName
		{
			get
			{
				return this._NewGoodsName;
			}
			set
			{
				if ((this._NewGoodsName != value))
				{
					this.OnNewGoodsNameChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsName = value;
					this.SendPropertyChanged("NewGoodsName");
					this.OnNewGoodsNameChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsCode", DbType="VarChar(50)")]
		public string NewGoodsCode
		{
			get
			{
				return this._NewGoodsCode;
			}
			set
			{
				if ((this._NewGoodsCode != value))
				{
					this.OnNewGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsCode = value;
					this.SendPropertyChanged("NewGoodsCode");
					this.OnNewGoodsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSpec", DbType="VarChar(50)")]
		public string NewSpec
		{
			get
			{
				return this._NewSpec;
			}
			set
			{
				if ((this._NewSpec != value))
				{
					this.OnNewSpecChanging(value);
					this.SendPropertyChanging();
					this._NewSpec = value;
					this.SendPropertyChanged("NewSpec");
					this.OnNewSpecChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsID", DbType="VarChar(50)")]
		public string NewGoodsID
		{
			get
			{
				return this._NewGoodsID;
			}
			set
			{
				if ((this._NewGoodsID != value))
				{
					this.OnNewGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsID = value;
					this.SendPropertyChanged("NewGoodsID");
					this.OnNewGoodsIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewCvtID", DbType="VarChar(50)")]
		public string NewCvtID
		{
			get
			{
				return this._NewCvtID;
			}
			set
			{
				if ((this._NewCvtID != value))
				{
					this.OnNewCvtIDChanging(value);
					this.SendPropertyChanging();
					this._NewCvtID = value;
					this.SendPropertyChanged("NewCvtID");
					this.OnNewCvtIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ServiceFeedBack")]
	public partial class S_ServiceFeedBack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FK_Bill_ID;
		
		private string _ServiceID;
		
		private string _MessageSource;
		
		private string _SiteName;
		
		private string _CarModel;
		
		private string _CVTCode;
		
		private string _CVTID;
		
		private string _ChassisNum;
		
		private string _TCUCode;
		
		private string _NewSoftware;
		
		private string _BugCode;
		
		private string _CVTCondition;
		
		private string _UserName;
		
		private string _Linkman;
		
		private string _LinkTel;
		
		private string _BugNumber;
		
		private string _BatchNumber;
		
		private System.Nullable<System.DateTime> _BuyCarTime;
		
		private string _RunMileage;
		
		private string _ProcessName;
		
		private System.Nullable<System.DateTime> _ProcessTime;
		
		private string _ProcessMode;
		
		private string _DiagnoseSituation;
		
		private string _Solution;
		
		private string _IsBack;
		
		private string _YXChargeSuggestion;
		
		private string _ZGChargeSuggestion;
		
		private string _DutyDept;
		
		private System.Nullable<System.DateTime> _ReplyTime;
		
		private System.Nullable<int> _AppearCount;
		
		private string _DutyDeptCharge;
		
		private string _DutyPerson;
		
		private string _FinishClaim;
		
		private string _StockSuggestion;
		
		private string _Temporary;
		
		private string _Analyse;
		
		private string _foreverImplement;
		
		private string _IsFMEAfile;
		
		private string _IsOpen;
		
		private string _ZGCheckName;
		
		private string _IsClose;
		
		private string _Practicable;
		
		private string _Status;
		
		private string _YXSignature;
		
		private System.Nullable<System.DateTime> _YXSignatureDate;
		
		private string _Signature;
		
		private System.Nullable<System.DateTime> _SignatureDate;
		
		private System.Nullable<System.DateTime> _DutyDeptChargeDate;
		
		private System.Nullable<System.DateTime> _DutyPersonDate;
		
		private System.Nullable<System.DateTime> _ZGCheckDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_Bill_IDChanging(string value);
    partial void OnFK_Bill_IDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnMessageSourceChanging(string value);
    partial void OnMessageSourceChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnCarModelChanging(string value);
    partial void OnCarModelChanged();
    partial void OnCVTCodeChanging(string value);
    partial void OnCVTCodeChanged();
    partial void OnCVTIDChanging(string value);
    partial void OnCVTIDChanged();
    partial void OnChassisNumChanging(string value);
    partial void OnChassisNumChanged();
    partial void OnTCUCodeChanging(string value);
    partial void OnTCUCodeChanged();
    partial void OnNewSoftwareChanging(string value);
    partial void OnNewSoftwareChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnCVTConditionChanging(string value);
    partial void OnCVTConditionChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLinkmanChanging(string value);
    partial void OnLinkmanChanged();
    partial void OnLinkTelChanging(string value);
    partial void OnLinkTelChanged();
    partial void OnBugNumberChanging(string value);
    partial void OnBugNumberChanged();
    partial void OnBatchNumberChanging(string value);
    partial void OnBatchNumberChanged();
    partial void OnBuyCarTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBuyCarTimeChanged();
    partial void OnRunMileageChanging(string value);
    partial void OnRunMileageChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessTimeChanged();
    partial void OnProcessModeChanging(string value);
    partial void OnProcessModeChanged();
    partial void OnDiagnoseSituationChanging(string value);
    partial void OnDiagnoseSituationChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnIsBackChanging(string value);
    partial void OnIsBackChanged();
    partial void OnYXChargeSuggestionChanging(string value);
    partial void OnYXChargeSuggestionChanged();
    partial void OnZGChargeSuggestionChanging(string value);
    partial void OnZGChargeSuggestionChanged();
    partial void OnDutyDeptChanging(string value);
    partial void OnDutyDeptChanged();
    partial void OnReplyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyTimeChanged();
    partial void OnAppearCountChanging(System.Nullable<int> value);
    partial void OnAppearCountChanged();
    partial void OnDutyDeptChargeChanging(string value);
    partial void OnDutyDeptChargeChanged();
    partial void OnDutyPersonChanging(string value);
    partial void OnDutyPersonChanged();
    partial void OnFinishClaimChanging(string value);
    partial void OnFinishClaimChanged();
    partial void OnStockSuggestionChanging(string value);
    partial void OnStockSuggestionChanged();
    partial void OnTemporaryChanging(string value);
    partial void OnTemporaryChanged();
    partial void OnAnalyseChanging(string value);
    partial void OnAnalyseChanged();
    partial void OnforeverImplementChanging(string value);
    partial void OnforeverImplementChanged();
    partial void OnIsFMEAfileChanging(string value);
    partial void OnIsFMEAfileChanged();
    partial void OnIsOpenChanging(string value);
    partial void OnIsOpenChanged();
    partial void OnZGCheckNameChanging(string value);
    partial void OnZGCheckNameChanged();
    partial void OnIsCloseChanging(string value);
    partial void OnIsCloseChanged();
    partial void OnPracticableChanging(string value);
    partial void OnPracticableChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnYXSignatureChanging(string value);
    partial void OnYXSignatureChanged();
    partial void OnYXSignatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnYXSignatureDateChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnSignatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignatureDateChanged();
    partial void OnDutyDeptChargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDutyDeptChargeDateChanged();
    partial void OnDutyPersonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDutyPersonDateChanged();
    partial void OnZGCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnZGCheckDateChanged();
    #endregion
		
		public S_ServiceFeedBack()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FK_Bill_ID", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FK_Bill_ID
		{
			get
			{
				return this._FK_Bill_ID;
			}
			set
			{
				if ((this._FK_Bill_ID != value))
				{
					this.OnFK_Bill_IDChanging(value);
					this.SendPropertyChanging();
					this._FK_Bill_ID = value;
					this.SendPropertyChanged("FK_Bill_ID");
					this.OnFK_Bill_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(MAX)")]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageSource", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageSource
		{
			get
			{
				return this._MessageSource;
			}
			set
			{
				if ((this._MessageSource != value))
				{
					this.OnMessageSourceChanging(value);
					this.SendPropertyChanging();
					this._MessageSource = value;
					this.SendPropertyChanged("MessageSource");
					this.OnMessageSourceChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_CarModel", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CarModel
		{
			get
			{
				return this._CarModel;
			}
			set
			{
				if ((this._CarModel != value))
				{
					this.OnCarModelChanging(value);
					this.SendPropertyChanging();
					this._CarModel = value;
					this.SendPropertyChanged("CarModel");
					this.OnCarModelChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCode", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CVTCode
		{
			get
			{
				return this._CVTCode;
			}
			set
			{
				if ((this._CVTCode != value))
				{
					this.OnCVTCodeChanging(value);
					this.SendPropertyChanging();
					this._CVTCode = value;
					this.SendPropertyChanged("CVTCode");
					this.OnCVTCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTID", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CVTID
		{
			get
			{
				return this._CVTID;
			}
			set
			{
				if ((this._CVTID != value))
				{
					this.OnCVTIDChanging(value);
					this.SendPropertyChanging();
					this._CVTID = value;
					this.SendPropertyChanged("CVTID");
					this.OnCVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChassisNum", DbType="VarChar(MAX)")]
		public string ChassisNum
		{
			get
			{
				return this._ChassisNum;
			}
			set
			{
				if ((this._ChassisNum != value))
				{
					this.OnChassisNumChanging(value);
					this.SendPropertyChanging();
					this._ChassisNum = value;
					this.SendPropertyChanged("ChassisNum");
					this.OnChassisNumChanged();
				}
			}
		}
		
		[Column(Storage="_TCUCode", DbType="VarChar(MAX)")]
		public string TCUCode
		{
			get
			{
				return this._TCUCode;
			}
			set
			{
				if ((this._TCUCode != value))
				{
					this.OnTCUCodeChanging(value);
					this.SendPropertyChanging();
					this._TCUCode = value;
					this.SendPropertyChanged("TCUCode");
					this.OnTCUCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSoftware", DbType="VarChar(MAX)")]
		public string NewSoftware
		{
			get
			{
				return this._NewSoftware;
			}
			set
			{
				if ((this._NewSoftware != value))
				{
					this.OnNewSoftwareChanging(value);
					this.SendPropertyChanging();
					this._NewSoftware = value;
					this.SendPropertyChanged("NewSoftware");
					this.OnNewSoftwareChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(MAX)")]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCondition", DbType="VarChar(MAX)")]
		public string CVTCondition
		{
			get
			{
				return this._CVTCondition;
			}
			set
			{
				if ((this._CVTCondition != value))
				{
					this.OnCVTConditionChanging(value);
					this.SendPropertyChanging();
					this._CVTCondition = value;
					this.SendPropertyChanged("CVTCondition");
					this.OnCVTConditionChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Linkman", DbType="VarChar(MAX)")]
		public string Linkman
		{
			get
			{
				return this._Linkman;
			}
			set
			{
				if ((this._Linkman != value))
				{
					this.OnLinkmanChanging(value);
					this.SendPropertyChanging();
					this._Linkman = value;
					this.SendPropertyChanged("Linkman");
					this.OnLinkmanChanged();
				}
			}
		}
		
		[Column(Storage="_LinkTel", DbType="VarChar(MAX)")]
		public string LinkTel
		{
			get
			{
				return this._LinkTel;
			}
			set
			{
				if ((this._LinkTel != value))
				{
					this.OnLinkTelChanging(value);
					this.SendPropertyChanging();
					this._LinkTel = value;
					this.SendPropertyChanged("LinkTel");
					this.OnLinkTelChanged();
				}
			}
		}
		
		[Column(Storage="_BugNumber", DbType="VarChar(MAX)")]
		public string BugNumber
		{
			get
			{
				return this._BugNumber;
			}
			set
			{
				if ((this._BugNumber != value))
				{
					this.OnBugNumberChanging(value);
					this.SendPropertyChanging();
					this._BugNumber = value;
					this.SendPropertyChanged("BugNumber");
					this.OnBugNumberChanged();
				}
			}
		}
		
		[Column(Storage="_BatchNumber", DbType="VarChar(MAX)")]
		public string BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[Column(Storage="_BuyCarTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyCarTime
		{
			get
			{
				return this._BuyCarTime;
			}
			set
			{
				if ((this._BuyCarTime != value))
				{
					this.OnBuyCarTimeChanging(value);
					this.SendPropertyChanging();
					this._BuyCarTime = value;
					this.SendPropertyChanged("BuyCarTime");
					this.OnBuyCarTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RunMileage", DbType="VarChar(MAX)")]
		public string RunMileage
		{
			get
			{
				return this._RunMileage;
			}
			set
			{
				if ((this._RunMileage != value))
				{
					this.OnRunMileageChanging(value);
					this.SendPropertyChanging();
					this._RunMileage = value;
					this.SendPropertyChanged("RunMileage");
					this.OnRunMileageChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessName", DbType="VarChar(MAX)")]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessTime
		{
			get
			{
				return this._ProcessTime;
			}
			set
			{
				if ((this._ProcessTime != value))
				{
					this.OnProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessTime = value;
					this.SendPropertyChanged("ProcessTime");
					this.OnProcessTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessMode", DbType="VarChar(50)")]
		public string ProcessMode
		{
			get
			{
				return this._ProcessMode;
			}
			set
			{
				if ((this._ProcessMode != value))
				{
					this.OnProcessModeChanging(value);
					this.SendPropertyChanging();
					this._ProcessMode = value;
					this.SendPropertyChanged("ProcessMode");
					this.OnProcessModeChanged();
				}
			}
		}
		
		[Column(Storage="_DiagnoseSituation", DbType="VarChar(1000)")]
		public string DiagnoseSituation
		{
			get
			{
				return this._DiagnoseSituation;
			}
			set
			{
				if ((this._DiagnoseSituation != value))
				{
					this.OnDiagnoseSituationChanging(value);
					this.SendPropertyChanging();
					this._DiagnoseSituation = value;
					this.SendPropertyChanged("DiagnoseSituation");
					this.OnDiagnoseSituationChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="VarChar(1000)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_IsBack", DbType="Char(2)")]
		public string IsBack
		{
			get
			{
				return this._IsBack;
			}
			set
			{
				if ((this._IsBack != value))
				{
					this.OnIsBackChanging(value);
					this.SendPropertyChanging();
					this._IsBack = value;
					this.SendPropertyChanged("IsBack");
					this.OnIsBackChanged();
				}
			}
		}
		
		[Column(Storage="_YXChargeSuggestion", DbType="VarChar(MAX)")]
		public string YXChargeSuggestion
		{
			get
			{
				return this._YXChargeSuggestion;
			}
			set
			{
				if ((this._YXChargeSuggestion != value))
				{
					this.OnYXChargeSuggestionChanging(value);
					this.SendPropertyChanging();
					this._YXChargeSuggestion = value;
					this.SendPropertyChanged("YXChargeSuggestion");
					this.OnYXChargeSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_ZGChargeSuggestion", DbType="VarChar(MAX)")]
		public string ZGChargeSuggestion
		{
			get
			{
				return this._ZGChargeSuggestion;
			}
			set
			{
				if ((this._ZGChargeSuggestion != value))
				{
					this.OnZGChargeSuggestionChanging(value);
					this.SendPropertyChanging();
					this._ZGChargeSuggestion = value;
					this.SendPropertyChanged("ZGChargeSuggestion");
					this.OnZGChargeSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDept", DbType="VarChar(MAX)")]
		public string DutyDept
		{
			get
			{
				return this._DutyDept;
			}
			set
			{
				if ((this._DutyDept != value))
				{
					this.OnDutyDeptChanging(value);
					this.SendPropertyChanging();
					this._DutyDept = value;
					this.SendPropertyChanged("DutyDept");
					this.OnDutyDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ReplyTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_AppearCount", DbType="Int")]
		public System.Nullable<int> AppearCount
		{
			get
			{
				return this._AppearCount;
			}
			set
			{
				if ((this._AppearCount != value))
				{
					this.OnAppearCountChanging(value);
					this.SendPropertyChanging();
					this._AppearCount = value;
					this.SendPropertyChanged("AppearCount");
					this.OnAppearCountChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDeptCharge", DbType="VarChar(MAX)")]
		public string DutyDeptCharge
		{
			get
			{
				return this._DutyDeptCharge;
			}
			set
			{
				if ((this._DutyDeptCharge != value))
				{
					this.OnDutyDeptChargeChanging(value);
					this.SendPropertyChanging();
					this._DutyDeptCharge = value;
					this.SendPropertyChanged("DutyDeptCharge");
					this.OnDutyDeptChargeChanged();
				}
			}
		}
		
		[Column(Storage="_DutyPerson", DbType="VarChar(MAX)")]
		public string DutyPerson
		{
			get
			{
				return this._DutyPerson;
			}
			set
			{
				if ((this._DutyPerson != value))
				{
					this.OnDutyPersonChanging(value);
					this.SendPropertyChanging();
					this._DutyPerson = value;
					this.SendPropertyChanged("DutyPerson");
					this.OnDutyPersonChanged();
				}
			}
		}
		
		[Column(Storage="_FinishClaim", DbType="VarChar(MAX)")]
		public string FinishClaim
		{
			get
			{
				return this._FinishClaim;
			}
			set
			{
				if ((this._FinishClaim != value))
				{
					this.OnFinishClaimChanging(value);
					this.SendPropertyChanging();
					this._FinishClaim = value;
					this.SendPropertyChanged("FinishClaim");
					this.OnFinishClaimChanged();
				}
			}
		}
		
		[Column(Storage="_StockSuggestion", DbType="VarChar(MAX)")]
		public string StockSuggestion
		{
			get
			{
				return this._StockSuggestion;
			}
			set
			{
				if ((this._StockSuggestion != value))
				{
					this.OnStockSuggestionChanging(value);
					this.SendPropertyChanging();
					this._StockSuggestion = value;
					this.SendPropertyChanged("StockSuggestion");
					this.OnStockSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_Temporary", DbType="VarChar(MAX)")]
		public string Temporary
		{
			get
			{
				return this._Temporary;
			}
			set
			{
				if ((this._Temporary != value))
				{
					this.OnTemporaryChanging(value);
					this.SendPropertyChanging();
					this._Temporary = value;
					this.SendPropertyChanged("Temporary");
					this.OnTemporaryChanged();
				}
			}
		}
		
		[Column(Storage="_Analyse", DbType="VarChar(MAX)")]
		public string Analyse
		{
			get
			{
				return this._Analyse;
			}
			set
			{
				if ((this._Analyse != value))
				{
					this.OnAnalyseChanging(value);
					this.SendPropertyChanging();
					this._Analyse = value;
					this.SendPropertyChanged("Analyse");
					this.OnAnalyseChanged();
				}
			}
		}
		
		[Column(Storage="_foreverImplement", DbType="VarChar(MAX)")]
		public string foreverImplement
		{
			get
			{
				return this._foreverImplement;
			}
			set
			{
				if ((this._foreverImplement != value))
				{
					this.OnforeverImplementChanging(value);
					this.SendPropertyChanging();
					this._foreverImplement = value;
					this.SendPropertyChanged("foreverImplement");
					this.OnforeverImplementChanged();
				}
			}
		}
		
		[Column(Storage="_IsFMEAfile", DbType="Char(2)")]
		public string IsFMEAfile
		{
			get
			{
				return this._IsFMEAfile;
			}
			set
			{
				if ((this._IsFMEAfile != value))
				{
					this.OnIsFMEAfileChanging(value);
					this.SendPropertyChanging();
					this._IsFMEAfile = value;
					this.SendPropertyChanged("IsFMEAfile");
					this.OnIsFMEAfileChanged();
				}
			}
		}
		
		[Column(Storage="_IsOpen", DbType="Char(2)")]
		public string IsOpen
		{
			get
			{
				return this._IsOpen;
			}
			set
			{
				if ((this._IsOpen != value))
				{
					this.OnIsOpenChanging(value);
					this.SendPropertyChanging();
					this._IsOpen = value;
					this.SendPropertyChanged("IsOpen");
					this.OnIsOpenChanged();
				}
			}
		}
		
		[Column(Storage="_ZGCheckName", DbType="VarChar(MAX)")]
		public string ZGCheckName
		{
			get
			{
				return this._ZGCheckName;
			}
			set
			{
				if ((this._ZGCheckName != value))
				{
					this.OnZGCheckNameChanging(value);
					this.SendPropertyChanging();
					this._ZGCheckName = value;
					this.SendPropertyChanged("ZGCheckName");
					this.OnZGCheckNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsClose", DbType="Char(2)")]
		public string IsClose
		{
			get
			{
				return this._IsClose;
			}
			set
			{
				if ((this._IsClose != value))
				{
					this.OnIsCloseChanging(value);
					this.SendPropertyChanging();
					this._IsClose = value;
					this.SendPropertyChanged("IsClose");
					this.OnIsCloseChanged();
				}
			}
		}
		
		[Column(Storage="_Practicable", DbType="VarChar(MAX)")]
		public string Practicable
		{
			get
			{
				return this._Practicable;
			}
			set
			{
				if ((this._Practicable != value))
				{
					this.OnPracticableChanging(value);
					this.SendPropertyChanging();
					this._Practicable = value;
					this.SendPropertyChanged("Practicable");
					this.OnPracticableChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_YXSignature", DbType="VarChar(50)")]
		public string YXSignature
		{
			get
			{
				return this._YXSignature;
			}
			set
			{
				if ((this._YXSignature != value))
				{
					this.OnYXSignatureChanging(value);
					this.SendPropertyChanging();
					this._YXSignature = value;
					this.SendPropertyChanged("YXSignature");
					this.OnYXSignatureChanged();
				}
			}
		}
		
		[Column(Storage="_YXSignatureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> YXSignatureDate
		{
			get
			{
				return this._YXSignatureDate;
			}
			set
			{
				if ((this._YXSignatureDate != value))
				{
					this.OnYXSignatureDateChanging(value);
					this.SendPropertyChanging();
					this._YXSignatureDate = value;
					this.SendPropertyChanged("YXSignatureDate");
					this.OnYXSignatureDateChanged();
				}
			}
		}
		
		[Column(Storage="_Signature", DbType="VarChar(50)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[Column(Storage="_SignatureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignatureDate
		{
			get
			{
				return this._SignatureDate;
			}
			set
			{
				if ((this._SignatureDate != value))
				{
					this.OnSignatureDateChanging(value);
					this.SendPropertyChanging();
					this._SignatureDate = value;
					this.SendPropertyChanged("SignatureDate");
					this.OnSignatureDateChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDeptChargeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DutyDeptChargeDate
		{
			get
			{
				return this._DutyDeptChargeDate;
			}
			set
			{
				if ((this._DutyDeptChargeDate != value))
				{
					this.OnDutyDeptChargeDateChanging(value);
					this.SendPropertyChanging();
					this._DutyDeptChargeDate = value;
					this.SendPropertyChanged("DutyDeptChargeDate");
					this.OnDutyDeptChargeDateChanged();
				}
			}
		}
		
		[Column(Storage="_DutyPersonDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DutyPersonDate
		{
			get
			{
				return this._DutyPersonDate;
			}
			set
			{
				if ((this._DutyPersonDate != value))
				{
					this.OnDutyPersonDateChanging(value);
					this.SendPropertyChanging();
					this._DutyPersonDate = value;
					this.SendPropertyChanged("DutyPersonDate");
					this.OnDutyPersonDateChanged();
				}
			}
		}
		
		[Column(Storage="_ZGCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ZGCheckDate
		{
			get
			{
				return this._ZGCheckDate;
			}
			set
			{
				if ((this._ZGCheckDate != value))
				{
					this.OnZGCheckDateChanging(value);
					this.SendPropertyChanging();
					this._ZGCheckDate = value;
					this.SendPropertyChanged("ZGCheckDate");
					this.OnZGCheckDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_AfterService")]
	public partial class S_AfterService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _MessageSource;
		
		private string _ServerType;
		
		private string _ContentType;
		
		private string _AcceptName;
		
		private System.Nullable<System.DateTime> _AcceptTime;
		
		private string _SiteName;
		
		private string _LinkTel;
		
		private string _UserName;
		
		private string _UserTel;
		
		private string _UserAddress;
		
		private string _CarModel;
		
		private string _CVTCode;
		
		private string _CVTID;
		
		private string _ChassisNum;
		
		private string _BugAddress;
		
		private string _BuyCarTime;
		
		private string _RunMileage;
		
		private string _UseProperty;
		
		private string _UserAttitude;
		
		private string _BugDescribe;
		
		private string _ServiceIdea;
		
		private string _HelpMoney;
		
		private string _ProcessMode;
		
		private string _ProcessName;
		
		private System.Nullable<System.DateTime> _ProcessTime;
		
		private string _DiagnoseSituation;
		
		private string _LocaleProcess;
		
		private string _Solution;
		
		private string _ProcessResult;
		
		private string _CheckName;
		
		private System.Nullable<System.DateTime> _CheckTime;
		
		private string _RepairQuality;
		
		private string _ServiceAttitude;
		
		private string _IsCharge;
		
		private string _CVTStatus;
		
		private System.Nullable<decimal> _Amount;
		
		private string _FailureResults;
		
		private string _ReturnName;
		
		private System.Nullable<System.DateTime> _ReturnTime;
		
		private string _FKBillID;
		
		private string _Status;
		
		private string _PY;
		
		private string _WB;
		
		private System.Nullable<System.DateTime> _CustomerDate;
		
		private System.Nullable<System.DateTime> _NoticeDate;
		
		private System.Nullable<System.DateTime> _StrategyDate;
		
		private System.Nullable<System.DateTime> _ApplicantDate;
		
		private string _Applicant;
		
		private string _TCUCode;
		
		private string _NewSoftware;
		
		private string _IsThreeGuarantees;
		
		private string _NewSanB;
		
		private System.Nullable<bool> _IsServiceStock;
		
		private System.Nullable<bool> _IsCVTBug;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnMessageSourceChanging(string value);
    partial void OnMessageSourceChanged();
    partial void OnServerTypeChanging(string value);
    partial void OnServerTypeChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnAcceptNameChanging(string value);
    partial void OnAcceptNameChanged();
    partial void OnAcceptTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptTimeChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnLinkTelChanging(string value);
    partial void OnLinkTelChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTelChanging(string value);
    partial void OnUserTelChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnCarModelChanging(string value);
    partial void OnCarModelChanged();
    partial void OnCVTCodeChanging(string value);
    partial void OnCVTCodeChanged();
    partial void OnCVTIDChanging(string value);
    partial void OnCVTIDChanged();
    partial void OnChassisNumChanging(string value);
    partial void OnChassisNumChanged();
    partial void OnBugAddressChanging(string value);
    partial void OnBugAddressChanged();
    partial void OnBuyCarTimeChanging(string value);
    partial void OnBuyCarTimeChanged();
    partial void OnRunMileageChanging(string value);
    partial void OnRunMileageChanged();
    partial void OnUsePropertyChanging(string value);
    partial void OnUsePropertyChanged();
    partial void OnUserAttitudeChanging(string value);
    partial void OnUserAttitudeChanged();
    partial void OnBugDescribeChanging(string value);
    partial void OnBugDescribeChanged();
    partial void OnServiceIdeaChanging(string value);
    partial void OnServiceIdeaChanged();
    partial void OnHelpMoneyChanging(string value);
    partial void OnHelpMoneyChanged();
    partial void OnProcessModeChanging(string value);
    partial void OnProcessModeChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessTimeChanged();
    partial void OnDiagnoseSituationChanging(string value);
    partial void OnDiagnoseSituationChanged();
    partial void OnLocaleProcessChanging(string value);
    partial void OnLocaleProcessChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnProcessResultChanging(string value);
    partial void OnProcessResultChanged();
    partial void OnCheckNameChanging(string value);
    partial void OnCheckNameChanged();
    partial void OnCheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckTimeChanged();
    partial void OnRepairQualityChanging(string value);
    partial void OnRepairQualityChanged();
    partial void OnServiceAttitudeChanging(string value);
    partial void OnServiceAttitudeChanged();
    partial void OnIsChargeChanging(string value);
    partial void OnIsChargeChanged();
    partial void OnCVTStatusChanging(string value);
    partial void OnCVTStatusChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnFailureResultsChanging(string value);
    partial void OnFailureResultsChanged();
    partial void OnReturnNameChanging(string value);
    partial void OnReturnNameChanged();
    partial void OnReturnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnTimeChanged();
    partial void OnFKBillIDChanging(string value);
    partial void OnFKBillIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPYChanging(string value);
    partial void OnPYChanged();
    partial void OnWBChanging(string value);
    partial void OnWBChanged();
    partial void OnCustomerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerDateChanged();
    partial void OnNoticeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNoticeDateChanged();
    partial void OnStrategyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStrategyDateChanged();
    partial void OnApplicantDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicantDateChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnTCUCodeChanging(string value);
    partial void OnTCUCodeChanged();
    partial void OnNewSoftwareChanging(string value);
    partial void OnNewSoftwareChanged();
    partial void OnIsThreeGuaranteesChanging(string value);
    partial void OnIsThreeGuaranteesChanged();
    partial void OnNewSanBChanging(string value);
    partial void OnNewSanBChanged();
    partial void OnIsServiceStockChanging(System.Nullable<bool> value);
    partial void OnIsServiceStockChanged();
    partial void OnIsCVTBugChanging(System.Nullable<bool> value);
    partial void OnIsCVTBugChanged();
    #endregion
		
		public S_AfterService()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageSource", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageSource
		{
			get
			{
				return this._MessageSource;
			}
			set
			{
				if ((this._MessageSource != value))
				{
					this.OnMessageSourceChanging(value);
					this.SendPropertyChanging();
					this._MessageSource = value;
					this.SendPropertyChanged("MessageSource");
					this.OnMessageSourceChanged();
				}
			}
		}
		
		[Column(Storage="_ServerType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ServerType
		{
			get
			{
				return this._ServerType;
			}
			set
			{
				if ((this._ServerType != value))
				{
					this.OnServerTypeChanging(value);
					this.SendPropertyChanging();
					this._ServerType = value;
					this.SendPropertyChanged("ServerType");
					this.OnServerTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptName", DbType="VarChar(MAX)")]
		public string AcceptName
		{
			get
			{
				return this._AcceptName;
			}
			set
			{
				if ((this._AcceptName != value))
				{
					this.OnAcceptNameChanging(value);
					this.SendPropertyChanging();
					this._AcceptName = value;
					this.SendPropertyChanged("AcceptName");
					this.OnAcceptNameChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptTime
		{
			get
			{
				return this._AcceptTime;
			}
			set
			{
				if ((this._AcceptTime != value))
				{
					this.OnAcceptTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptTime = value;
					this.SendPropertyChanged("AcceptTime");
					this.OnAcceptTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="VarChar(MAX)")]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_LinkTel", DbType="VarChar(MAX)")]
		public string LinkTel
		{
			get
			{
				return this._LinkTel;
			}
			set
			{
				if ((this._LinkTel != value))
				{
					this.OnLinkTelChanging(value);
					this.SendPropertyChanging();
					this._LinkTel = value;
					this.SendPropertyChanged("LinkTel");
					this.OnLinkTelChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserTel", DbType="VarChar(MAX)")]
		public string UserTel
		{
			get
			{
				return this._UserTel;
			}
			set
			{
				if ((this._UserTel != value))
				{
					this.OnUserTelChanging(value);
					this.SendPropertyChanging();
					this._UserTel = value;
					this.SendPropertyChanged("UserTel");
					this.OnUserTelChanged();
				}
			}
		}
		
		[Column(Storage="_UserAddress", DbType="VarChar(MAX)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[Column(Storage="_CarModel", DbType="VarChar(MAX)")]
		public string CarModel
		{
			get
			{
				return this._CarModel;
			}
			set
			{
				if ((this._CarModel != value))
				{
					this.OnCarModelChanging(value);
					this.SendPropertyChanging();
					this._CarModel = value;
					this.SendPropertyChanged("CarModel");
					this.OnCarModelChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCode", DbType="VarChar(MAX)")]
		public string CVTCode
		{
			get
			{
				return this._CVTCode;
			}
			set
			{
				if ((this._CVTCode != value))
				{
					this.OnCVTCodeChanging(value);
					this.SendPropertyChanging();
					this._CVTCode = value;
					this.SendPropertyChanged("CVTCode");
					this.OnCVTCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTID", DbType="VarChar(MAX)")]
		public string CVTID
		{
			get
			{
				return this._CVTID;
			}
			set
			{
				if ((this._CVTID != value))
				{
					this.OnCVTIDChanging(value);
					this.SendPropertyChanging();
					this._CVTID = value;
					this.SendPropertyChanged("CVTID");
					this.OnCVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChassisNum", DbType="VarChar(MAX)")]
		public string ChassisNum
		{
			get
			{
				return this._ChassisNum;
			}
			set
			{
				if ((this._ChassisNum != value))
				{
					this.OnChassisNumChanging(value);
					this.SendPropertyChanging();
					this._ChassisNum = value;
					this.SendPropertyChanged("ChassisNum");
					this.OnChassisNumChanged();
				}
			}
		}
		
		[Column(Storage="_BugAddress", DbType="VarChar(MAX)")]
		public string BugAddress
		{
			get
			{
				return this._BugAddress;
			}
			set
			{
				if ((this._BugAddress != value))
				{
					this.OnBugAddressChanging(value);
					this.SendPropertyChanging();
					this._BugAddress = value;
					this.SendPropertyChanged("BugAddress");
					this.OnBugAddressChanged();
				}
			}
		}
		
		[Column(Storage="_BuyCarTime", DbType="VarChar(MAX)")]
		public string BuyCarTime
		{
			get
			{
				return this._BuyCarTime;
			}
			set
			{
				if ((this._BuyCarTime != value))
				{
					this.OnBuyCarTimeChanging(value);
					this.SendPropertyChanging();
					this._BuyCarTime = value;
					this.SendPropertyChanged("BuyCarTime");
					this.OnBuyCarTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RunMileage", DbType="VarChar(MAX)")]
		public string RunMileage
		{
			get
			{
				return this._RunMileage;
			}
			set
			{
				if ((this._RunMileage != value))
				{
					this.OnRunMileageChanging(value);
					this.SendPropertyChanging();
					this._RunMileage = value;
					this.SendPropertyChanged("RunMileage");
					this.OnRunMileageChanged();
				}
			}
		}
		
		[Column(Storage="_UseProperty", DbType="VarChar(MAX)")]
		public string UseProperty
		{
			get
			{
				return this._UseProperty;
			}
			set
			{
				if ((this._UseProperty != value))
				{
					this.OnUsePropertyChanging(value);
					this.SendPropertyChanging();
					this._UseProperty = value;
					this.SendPropertyChanged("UseProperty");
					this.OnUsePropertyChanged();
				}
			}
		}
		
		[Column(Storage="_UserAttitude", DbType="VarChar(MAX)")]
		public string UserAttitude
		{
			get
			{
				return this._UserAttitude;
			}
			set
			{
				if ((this._UserAttitude != value))
				{
					this.OnUserAttitudeChanging(value);
					this.SendPropertyChanging();
					this._UserAttitude = value;
					this.SendPropertyChanged("UserAttitude");
					this.OnUserAttitudeChanged();
				}
			}
		}
		
		[Column(Storage="_BugDescribe", DbType="VarChar(MAX)")]
		public string BugDescribe
		{
			get
			{
				return this._BugDescribe;
			}
			set
			{
				if ((this._BugDescribe != value))
				{
					this.OnBugDescribeChanging(value);
					this.SendPropertyChanging();
					this._BugDescribe = value;
					this.SendPropertyChanged("BugDescribe");
					this.OnBugDescribeChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceIdea", DbType="VarChar(MAX)")]
		public string ServiceIdea
		{
			get
			{
				return this._ServiceIdea;
			}
			set
			{
				if ((this._ServiceIdea != value))
				{
					this.OnServiceIdeaChanging(value);
					this.SendPropertyChanging();
					this._ServiceIdea = value;
					this.SendPropertyChanged("ServiceIdea");
					this.OnServiceIdeaChanged();
				}
			}
		}
		
		[Column(Storage="_HelpMoney", DbType="VarChar(MAX)")]
		public string HelpMoney
		{
			get
			{
				return this._HelpMoney;
			}
			set
			{
				if ((this._HelpMoney != value))
				{
					this.OnHelpMoneyChanging(value);
					this.SendPropertyChanging();
					this._HelpMoney = value;
					this.SendPropertyChanged("HelpMoney");
					this.OnHelpMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessMode", DbType="VarChar(MAX)")]
		public string ProcessMode
		{
			get
			{
				return this._ProcessMode;
			}
			set
			{
				if ((this._ProcessMode != value))
				{
					this.OnProcessModeChanging(value);
					this.SendPropertyChanging();
					this._ProcessMode = value;
					this.SendPropertyChanged("ProcessMode");
					this.OnProcessModeChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessName", DbType="VarChar(MAX)")]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessTime
		{
			get
			{
				return this._ProcessTime;
			}
			set
			{
				if ((this._ProcessTime != value))
				{
					this.OnProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessTime = value;
					this.SendPropertyChanged("ProcessTime");
					this.OnProcessTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DiagnoseSituation", DbType="VarChar(MAX)")]
		public string DiagnoseSituation
		{
			get
			{
				return this._DiagnoseSituation;
			}
			set
			{
				if ((this._DiagnoseSituation != value))
				{
					this.OnDiagnoseSituationChanging(value);
					this.SendPropertyChanging();
					this._DiagnoseSituation = value;
					this.SendPropertyChanged("DiagnoseSituation");
					this.OnDiagnoseSituationChanged();
				}
			}
		}
		
		[Column(Storage="_LocaleProcess", DbType="VarChar(MAX)")]
		public string LocaleProcess
		{
			get
			{
				return this._LocaleProcess;
			}
			set
			{
				if ((this._LocaleProcess != value))
				{
					this.OnLocaleProcessChanging(value);
					this.SendPropertyChanging();
					this._LocaleProcess = value;
					this.SendPropertyChanged("LocaleProcess");
					this.OnLocaleProcessChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="VarChar(MAX)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessResult", DbType="VarChar(MAX)")]
		public string ProcessResult
		{
			get
			{
				return this._ProcessResult;
			}
			set
			{
				if ((this._ProcessResult != value))
				{
					this.OnProcessResultChanging(value);
					this.SendPropertyChanging();
					this._ProcessResult = value;
					this.SendPropertyChanged("ProcessResult");
					this.OnProcessResultChanged();
				}
			}
		}
		
		[Column(Storage="_CheckName", DbType="VarChar(MAX)")]
		public string CheckName
		{
			get
			{
				return this._CheckName;
			}
			set
			{
				if ((this._CheckName != value))
				{
					this.OnCheckNameChanging(value);
					this.SendPropertyChanging();
					this._CheckName = value;
					this.SendPropertyChanged("CheckName");
					this.OnCheckNameChanged();
				}
			}
		}
		
		[Column(Storage="_CheckTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckTime
		{
			get
			{
				return this._CheckTime;
			}
			set
			{
				if ((this._CheckTime != value))
				{
					this.OnCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckTime = value;
					this.SendPropertyChanged("CheckTime");
					this.OnCheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RepairQuality", DbType="VarChar(MAX)")]
		public string RepairQuality
		{
			get
			{
				return this._RepairQuality;
			}
			set
			{
				if ((this._RepairQuality != value))
				{
					this.OnRepairQualityChanging(value);
					this.SendPropertyChanging();
					this._RepairQuality = value;
					this.SendPropertyChanged("RepairQuality");
					this.OnRepairQualityChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceAttitude", DbType="VarChar(MAX)")]
		public string ServiceAttitude
		{
			get
			{
				return this._ServiceAttitude;
			}
			set
			{
				if ((this._ServiceAttitude != value))
				{
					this.OnServiceAttitudeChanging(value);
					this.SendPropertyChanging();
					this._ServiceAttitude = value;
					this.SendPropertyChanged("ServiceAttitude");
					this.OnServiceAttitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsCharge", DbType="Char(2)")]
		public string IsCharge
		{
			get
			{
				return this._IsCharge;
			}
			set
			{
				if ((this._IsCharge != value))
				{
					this.OnIsChargeChanging(value);
					this.SendPropertyChanging();
					this._IsCharge = value;
					this.SendPropertyChanged("IsCharge");
					this.OnIsChargeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTStatus", DbType="VarChar(50)")]
		public string CVTStatus
		{
			get
			{
				return this._CVTStatus;
			}
			set
			{
				if ((this._CVTStatus != value))
				{
					this.OnCVTStatusChanging(value);
					this.SendPropertyChanging();
					this._CVTStatus = value;
					this.SendPropertyChanged("CVTStatus");
					this.OnCVTStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_FailureResults", DbType="VarChar(200)")]
		public string FailureResults
		{
			get
			{
				return this._FailureResults;
			}
			set
			{
				if ((this._FailureResults != value))
				{
					this.OnFailureResultsChanging(value);
					this.SendPropertyChanging();
					this._FailureResults = value;
					this.SendPropertyChanged("FailureResults");
					this.OnFailureResultsChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnName", DbType="VarChar(50)")]
		public string ReturnName
		{
			get
			{
				return this._ReturnName;
			}
			set
			{
				if ((this._ReturnName != value))
				{
					this.OnReturnNameChanging(value);
					this.SendPropertyChanging();
					this._ReturnName = value;
					this.SendPropertyChanged("ReturnName");
					this.OnReturnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnTime
		{
			get
			{
				return this._ReturnTime;
			}
			set
			{
				if ((this._ReturnTime != value))
				{
					this.OnReturnTimeChanging(value);
					this.SendPropertyChanging();
					this._ReturnTime = value;
					this.SendPropertyChanged("ReturnTime");
					this.OnReturnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FKBillID", DbType="VarChar(50)")]
		public string FKBillID
		{
			get
			{
				return this._FKBillID;
			}
			set
			{
				if ((this._FKBillID != value))
				{
					this.OnFKBillIDChanging(value);
					this.SendPropertyChanging();
					this._FKBillID = value;
					this.SendPropertyChanged("FKBillID");
					this.OnFKBillIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_PY", DbType="VarChar(50)")]
		public string PY
		{
			get
			{
				return this._PY;
			}
			set
			{
				if ((this._PY != value))
				{
					this.OnPYChanging(value);
					this.SendPropertyChanging();
					this._PY = value;
					this.SendPropertyChanged("PY");
					this.OnPYChanged();
				}
			}
		}
		
		[Column(Storage="_WB", DbType="VarChar(50)")]
		public string WB
		{
			get
			{
				return this._WB;
			}
			set
			{
				if ((this._WB != value))
				{
					this.OnWBChanging(value);
					this.SendPropertyChanging();
					this._WB = value;
					this.SendPropertyChanged("WB");
					this.OnWBChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomerDate
		{
			get
			{
				return this._CustomerDate;
			}
			set
			{
				if ((this._CustomerDate != value))
				{
					this.OnCustomerDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerDate = value;
					this.SendPropertyChanged("CustomerDate");
					this.OnCustomerDateChanged();
				}
			}
		}
		
		[Column(Storage="_NoticeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoticeDate
		{
			get
			{
				return this._NoticeDate;
			}
			set
			{
				if ((this._NoticeDate != value))
				{
					this.OnNoticeDateChanging(value);
					this.SendPropertyChanging();
					this._NoticeDate = value;
					this.SendPropertyChanged("NoticeDate");
					this.OnNoticeDateChanged();
				}
			}
		}
		
		[Column(Storage="_StrategyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StrategyDate
		{
			get
			{
				return this._StrategyDate;
			}
			set
			{
				if ((this._StrategyDate != value))
				{
					this.OnStrategyDateChanging(value);
					this.SendPropertyChanging();
					this._StrategyDate = value;
					this.SendPropertyChanged("StrategyDate");
					this.OnStrategyDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicantDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicantDate
		{
			get
			{
				return this._ApplicantDate;
			}
			set
			{
				if ((this._ApplicantDate != value))
				{
					this.OnApplicantDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicantDate = value;
					this.SendPropertyChanged("ApplicantDate");
					this.OnApplicantDateChanged();
				}
			}
		}
		
		[Column(Storage="_Applicant", DbType="VarChar(50)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[Column(Storage="_TCUCode", DbType="VarChar(50)")]
		public string TCUCode
		{
			get
			{
				return this._TCUCode;
			}
			set
			{
				if ((this._TCUCode != value))
				{
					this.OnTCUCodeChanging(value);
					this.SendPropertyChanging();
					this._TCUCode = value;
					this.SendPropertyChanged("TCUCode");
					this.OnTCUCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSoftware", DbType="VarChar(50)")]
		public string NewSoftware
		{
			get
			{
				return this._NewSoftware;
			}
			set
			{
				if ((this._NewSoftware != value))
				{
					this.OnNewSoftwareChanging(value);
					this.SendPropertyChanging();
					this._NewSoftware = value;
					this.SendPropertyChanged("NewSoftware");
					this.OnNewSoftwareChanged();
				}
			}
		}
		
		[Column(Storage="_IsThreeGuarantees", DbType="VarChar(50)")]
		public string IsThreeGuarantees
		{
			get
			{
				return this._IsThreeGuarantees;
			}
			set
			{
				if ((this._IsThreeGuarantees != value))
				{
					this.OnIsThreeGuaranteesChanging(value);
					this.SendPropertyChanging();
					this._IsThreeGuarantees = value;
					this.SendPropertyChanged("IsThreeGuarantees");
					this.OnIsThreeGuaranteesChanged();
				}
			}
		}
		
		[Column(Storage="_NewSanB", DbType="VarChar(50)")]
		public string NewSanB
		{
			get
			{
				return this._NewSanB;
			}
			set
			{
				if ((this._NewSanB != value))
				{
					this.OnNewSanBChanging(value);
					this.SendPropertyChanging();
					this._NewSanB = value;
					this.SendPropertyChanged("NewSanB");
					this.OnNewSanBChanged();
				}
			}
		}
		
		[Column(Storage="_IsServiceStock", DbType="Bit")]
		public System.Nullable<bool> IsServiceStock
		{
			get
			{
				return this._IsServiceStock;
			}
			set
			{
				if ((this._IsServiceStock != value))
				{
					this.OnIsServiceStockChanging(value);
					this.SendPropertyChanging();
					this._IsServiceStock = value;
					this.SendPropertyChanged("IsServiceStock");
					this.OnIsServiceStockChanged();
				}
			}
		}
		
		[Column(Storage="_IsCVTBug", DbType="Bit")]
		public System.Nullable<bool> IsCVTBug
		{
			get
			{
				return this._IsCVTBug;
			}
			set
			{
				if ((this._IsCVTBug != value))
				{
					this.OnIsCVTBugChanging(value);
					this.SendPropertyChanging();
					this._IsCVTBug = value;
					this.SendPropertyChanged("IsCVTBug");
					this.OnIsCVTBugChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
