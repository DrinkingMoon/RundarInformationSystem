//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8745
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Form_Economic_Purchase {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SettlementDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SettlementDataSet : global::System.Data.DataSet {
        
        private View_Business_Settlement_ProcurementStatementDetailDataTable tableView_Business_Settlement_ProcurementStatementDetail;
        
        private View_Business_Settlement_ProcurementStatementDataTable tableView_Business_Settlement_ProcurementStatement;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SettlementDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SettlementDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View_Business_Settlement_ProcurementStatementDetail"] != null)) {
                    base.Tables.Add(new View_Business_Settlement_ProcurementStatementDetailDataTable(ds.Tables["View_Business_Settlement_ProcurementStatementDetail"]));
                }
                if ((ds.Tables["View_Business_Settlement_ProcurementStatement"] != null)) {
                    base.Tables.Add(new View_Business_Settlement_ProcurementStatementDataTable(ds.Tables["View_Business_Settlement_ProcurementStatement"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Business_Settlement_ProcurementStatementDetailDataTable View_Business_Settlement_ProcurementStatementDetail {
            get {
                return this.tableView_Business_Settlement_ProcurementStatementDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Business_Settlement_ProcurementStatementDataTable View_Business_Settlement_ProcurementStatement {
            get {
                return this.tableView_Business_Settlement_ProcurementStatement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SettlementDataSet cln = ((SettlementDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View_Business_Settlement_ProcurementStatementDetail"] != null)) {
                    base.Tables.Add(new View_Business_Settlement_ProcurementStatementDetailDataTable(ds.Tables["View_Business_Settlement_ProcurementStatementDetail"]));
                }
                if ((ds.Tables["View_Business_Settlement_ProcurementStatement"] != null)) {
                    base.Tables.Add(new View_Business_Settlement_ProcurementStatementDataTable(ds.Tables["View_Business_Settlement_ProcurementStatement"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableView_Business_Settlement_ProcurementStatementDetail = ((View_Business_Settlement_ProcurementStatementDetailDataTable)(base.Tables["View_Business_Settlement_ProcurementStatementDetail"]));
            if ((initTable == true)) {
                if ((this.tableView_Business_Settlement_ProcurementStatementDetail != null)) {
                    this.tableView_Business_Settlement_ProcurementStatementDetail.InitVars();
                }
            }
            this.tableView_Business_Settlement_ProcurementStatement = ((View_Business_Settlement_ProcurementStatementDataTable)(base.Tables["View_Business_Settlement_ProcurementStatement"]));
            if ((initTable == true)) {
                if ((this.tableView_Business_Settlement_ProcurementStatement != null)) {
                    this.tableView_Business_Settlement_ProcurementStatement.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SettlementDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SettlementDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView_Business_Settlement_ProcurementStatementDetail = new View_Business_Settlement_ProcurementStatementDetailDataTable();
            base.Tables.Add(this.tableView_Business_Settlement_ProcurementStatementDetail);
            this.tableView_Business_Settlement_ProcurementStatement = new View_Business_Settlement_ProcurementStatementDataTable();
            base.Tables.Add(this.tableView_Business_Settlement_ProcurementStatement);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Business_Settlement_ProcurementStatementDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Business_Settlement_ProcurementStatement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SettlementDataSet ds = new SettlementDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void View_Business_Settlement_ProcurementStatementDetailRowChangeEventHandler(object sender, View_Business_Settlement_ProcurementStatementDetailRowChangeEvent e);
        
        public delegate void View_Business_Settlement_ProcurementStatementRowChangeEventHandler(object sender, View_Business_Settlement_ProcurementStatementRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Business_Settlement_ProcurementStatementDetailDataTable : global::System.Data.TypedTableBase<View_Business_Settlement_ProcurementStatementDetailRow> {
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column入库单号;
            
            private global::System.Data.DataColumn column零件图号;
            
            private global::System.Data.DataColumn column零件名称;
            
            private global::System.Data.DataColumn column规格;
            
            private global::System.Data.DataColumn column批次号;
            
            private global::System.Data.DataColumn column入库数量;
            
            private global::System.Data.DataColumn column入库单价;
            
            private global::System.Data.DataColumn column单件委托材料;
            
            private global::System.Data.DataColumn column单件加工费;
            
            private global::System.Data.DataColumn column入库金额;
            
            private global::System.Data.DataColumn column委托加工材料;
            
            private global::System.Data.DataColumn column发票单价;
            
            private global::System.Data.DataColumn column税额;
            
            private global::System.Data.DataColumn column价税合计;
            
            private global::System.Data.DataColumn column发票金额;
            
            private global::System.Data.DataColumn column合同申请单号;
            
            private global::System.Data.DataColumn column差异说明;
            
            private global::System.Data.DataColumn column物品ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailDataTable() {
                this.TableName = "View_Business_Settlement_ProcurementStatementDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Business_Settlement_ProcurementStatementDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Business_Settlement_ProcurementStatementDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单号Column {
                get {
                    return this.column入库单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 零件图号Column {
                get {
                    return this.column零件图号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 零件名称Column {
                get {
                    return this.column零件名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 批次号Column {
                get {
                    return this.column批次号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库数量Column {
                get {
                    return this.column入库数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库单价Column {
                get {
                    return this.column入库单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单件委托材料Column {
                get {
                    return this.column单件委托材料;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单件加工费Column {
                get {
                    return this.column单件加工费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入库金额Column {
                get {
                    return this.column入库金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 委托加工材料Column {
                get {
                    return this.column委托加工材料;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票单价Column {
                get {
                    return this.column发票单价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 税额Column {
                get {
                    return this.column税额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 价税合计Column {
                get {
                    return this.column价税合计;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票金额Column {
                get {
                    return this.column发票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同申请单号Column {
                get {
                    return this.column合同申请单号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 差异说明Column {
                get {
                    return this.column差异说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 物品IDColumn {
                get {
                    return this.column物品ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailRow this[int index] {
                get {
                    return ((View_Business_Settlement_ProcurementStatementDetailRow)(this.Rows[index]));
                }
            }
            
            public event View_Business_Settlement_ProcurementStatementDetailRowChangeEventHandler View_Business_Settlement_ProcurementStatementDetailRowChanging;
            
            public event View_Business_Settlement_ProcurementStatementDetailRowChangeEventHandler View_Business_Settlement_ProcurementStatementDetailRowChanged;
            
            public event View_Business_Settlement_ProcurementStatementDetailRowChangeEventHandler View_Business_Settlement_ProcurementStatementDetailRowDeleting;
            
            public event View_Business_Settlement_ProcurementStatementDetailRowChangeEventHandler View_Business_Settlement_ProcurementStatementDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Business_Settlement_ProcurementStatementDetailRow(View_Business_Settlement_ProcurementStatementDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailRow AddView_Business_Settlement_ProcurementStatementDetailRow(
                        string 单据号, 
                        string 入库单号, 
                        string 零件图号, 
                        string 零件名称, 
                        string 规格, 
                        string 批次号, 
                        decimal 入库数量, 
                        decimal 入库单价, 
                        decimal 单件委托材料, 
                        decimal 单件加工费, 
                        decimal 入库金额, 
                        decimal 委托加工材料, 
                        decimal 发票单价, 
                        decimal 税额, 
                        decimal 价税合计, 
                        decimal 发票金额, 
                        string 合同申请单号, 
                        string 差异说明, 
                        int 物品ID) {
                View_Business_Settlement_ProcurementStatementDetailRow rowView_Business_Settlement_ProcurementStatementDetailRow = ((View_Business_Settlement_ProcurementStatementDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单据号,
                        入库单号,
                        零件图号,
                        零件名称,
                        规格,
                        批次号,
                        入库数量,
                        入库单价,
                        单件委托材料,
                        单件加工费,
                        入库金额,
                        委托加工材料,
                        发票单价,
                        税额,
                        价税合计,
                        发票金额,
                        合同申请单号,
                        差异说明,
                        物品ID};
                rowView_Business_Settlement_ProcurementStatementDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Business_Settlement_ProcurementStatementDetailRow);
                return rowView_Business_Settlement_ProcurementStatementDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Business_Settlement_ProcurementStatementDetailDataTable cln = ((View_Business_Settlement_ProcurementStatementDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Business_Settlement_ProcurementStatementDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单据号 = base.Columns["单据号"];
                this.column入库单号 = base.Columns["入库单号"];
                this.column零件图号 = base.Columns["零件图号"];
                this.column零件名称 = base.Columns["零件名称"];
                this.column规格 = base.Columns["规格"];
                this.column批次号 = base.Columns["批次号"];
                this.column入库数量 = base.Columns["入库数量"];
                this.column入库单价 = base.Columns["入库单价"];
                this.column单件委托材料 = base.Columns["单件委托材料"];
                this.column单件加工费 = base.Columns["单件加工费"];
                this.column入库金额 = base.Columns["入库金额"];
                this.column委托加工材料 = base.Columns["委托加工材料"];
                this.column发票单价 = base.Columns["发票单价"];
                this.column税额 = base.Columns["税额"];
                this.column价税合计 = base.Columns["价税合计"];
                this.column发票金额 = base.Columns["发票金额"];
                this.column合同申请单号 = base.Columns["合同申请单号"];
                this.column差异说明 = base.Columns["差异说明"];
                this.column物品ID = base.Columns["物品ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column入库单号 = new global::System.Data.DataColumn("入库单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单号);
                this.column零件图号 = new global::System.Data.DataColumn("零件图号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column零件图号);
                this.column零件名称 = new global::System.Data.DataColumn("零件名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column零件名称);
                this.column规格 = new global::System.Data.DataColumn("规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规格);
                this.column批次号 = new global::System.Data.DataColumn("批次号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column批次号);
                this.column入库数量 = new global::System.Data.DataColumn("入库数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库数量);
                this.column入库单价 = new global::System.Data.DataColumn("入库单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库单价);
                this.column单件委托材料 = new global::System.Data.DataColumn("单件委托材料", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单件委托材料);
                this.column单件加工费 = new global::System.Data.DataColumn("单件加工费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单件加工费);
                this.column入库金额 = new global::System.Data.DataColumn("入库金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入库金额);
                this.column委托加工材料 = new global::System.Data.DataColumn("委托加工材料", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托加工材料);
                this.column发票单价 = new global::System.Data.DataColumn("发票单价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票单价);
                this.column税额 = new global::System.Data.DataColumn("税额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税额);
                this.column价税合计 = new global::System.Data.DataColumn("价税合计", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column价税合计);
                this.column发票金额 = new global::System.Data.DataColumn("发票金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票金额);
                this.column合同申请单号 = new global::System.Data.DataColumn("合同申请单号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同申请单号);
                this.column差异说明 = new global::System.Data.DataColumn("差异说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column差异说明);
                this.column物品ID = new global::System.Data.DataColumn("物品ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物品ID);
                this.column单据号.AllowDBNull = false;
                this.column单据号.MaxLength = 50;
                this.column入库单号.AllowDBNull = false;
                this.column入库单号.MaxLength = 50;
                this.column零件图号.AllowDBNull = false;
                this.column零件图号.MaxLength = 50;
                this.column零件名称.AllowDBNull = false;
                this.column零件名称.MaxLength = 50;
                this.column规格.AllowDBNull = false;
                this.column规格.MaxLength = 50;
                this.column批次号.AllowDBNull = false;
                this.column批次号.MaxLength = 50;
                this.column入库数量.AllowDBNull = false;
                this.column入库单价.AllowDBNull = false;
                this.column入库金额.AllowDBNull = false;
                this.column发票单价.AllowDBNull = false;
                this.column发票金额.AllowDBNull = false;
                this.column合同申请单号.MaxLength = 2147483647;
                this.column差异说明.MaxLength = 2147483647;
                this.column物品ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailRow NewView_Business_Settlement_ProcurementStatementDetailRow() {
                return ((View_Business_Settlement_ProcurementStatementDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Business_Settlement_ProcurementStatementDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Business_Settlement_ProcurementStatementDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Business_Settlement_ProcurementStatementDetailRowChanged != null)) {
                    this.View_Business_Settlement_ProcurementStatementDetailRowChanged(this, new View_Business_Settlement_ProcurementStatementDetailRowChangeEvent(((View_Business_Settlement_ProcurementStatementDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Business_Settlement_ProcurementStatementDetailRowChanging != null)) {
                    this.View_Business_Settlement_ProcurementStatementDetailRowChanging(this, new View_Business_Settlement_ProcurementStatementDetailRowChangeEvent(((View_Business_Settlement_ProcurementStatementDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Business_Settlement_ProcurementStatementDetailRowDeleted != null)) {
                    this.View_Business_Settlement_ProcurementStatementDetailRowDeleted(this, new View_Business_Settlement_ProcurementStatementDetailRowChangeEvent(((View_Business_Settlement_ProcurementStatementDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Business_Settlement_ProcurementStatementDetailRowDeleting != null)) {
                    this.View_Business_Settlement_ProcurementStatementDetailRowDeleting(this, new View_Business_Settlement_ProcurementStatementDetailRowChangeEvent(((View_Business_Settlement_ProcurementStatementDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Business_Settlement_ProcurementStatementDetailRow(View_Business_Settlement_ProcurementStatementDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SettlementDataSet ds = new SettlementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Business_Settlement_ProcurementStatementDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Business_Settlement_ProcurementStatementDataTable : global::System.Data.TypedTableBase<View_Business_Settlement_ProcurementStatementRow> {
            
            private global::System.Data.DataColumn columnBillNo;
            
            private global::System.Data.DataColumn columnBillType;
            
            private global::System.Data.DataColumn columnSettlementCompany;
            
            private global::System.Data.DataColumn columnInvoiceType;
            
            private global::System.Data.DataColumn columnTaxRate;
            
            private global::System.Data.DataColumn columnProviderName;
            
            private global::System.Data.DataColumn columnOperationPersonnel;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDataTable() {
                this.TableName = "View_Business_Settlement_ProcurementStatement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Business_Settlement_ProcurementStatementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Business_Settlement_ProcurementStatementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillNoColumn {
                get {
                    return this.columnBillNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillTypeColumn {
                get {
                    return this.columnBillType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SettlementCompanyColumn {
                get {
                    return this.columnSettlementCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceTypeColumn {
                get {
                    return this.columnInvoiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxRateColumn {
                get {
                    return this.columnTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderNameColumn {
                get {
                    return this.columnProviderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationPersonnelColumn {
                get {
                    return this.columnOperationPersonnel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRow this[int index] {
                get {
                    return ((View_Business_Settlement_ProcurementStatementRow)(this.Rows[index]));
                }
            }
            
            public event View_Business_Settlement_ProcurementStatementRowChangeEventHandler View_Business_Settlement_ProcurementStatementRowChanging;
            
            public event View_Business_Settlement_ProcurementStatementRowChangeEventHandler View_Business_Settlement_ProcurementStatementRowChanged;
            
            public event View_Business_Settlement_ProcurementStatementRowChangeEventHandler View_Business_Settlement_ProcurementStatementRowDeleting;
            
            public event View_Business_Settlement_ProcurementStatementRowChangeEventHandler View_Business_Settlement_ProcurementStatementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Business_Settlement_ProcurementStatementRow(View_Business_Settlement_ProcurementStatementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRow AddView_Business_Settlement_ProcurementStatementRow(string BillNo, string BillType, string SettlementCompany, string InvoiceType, decimal TaxRate, string ProviderName, string OperationPersonnel, string InvoiceNo, string InvoiceDate) {
                View_Business_Settlement_ProcurementStatementRow rowView_Business_Settlement_ProcurementStatementRow = ((View_Business_Settlement_ProcurementStatementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BillNo,
                        BillType,
                        SettlementCompany,
                        InvoiceType,
                        TaxRate,
                        ProviderName,
                        OperationPersonnel,
                        InvoiceNo,
                        InvoiceDate};
                rowView_Business_Settlement_ProcurementStatementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Business_Settlement_ProcurementStatementRow);
                return rowView_Business_Settlement_ProcurementStatementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRow FindByBillNo(string BillNo) {
                return ((View_Business_Settlement_ProcurementStatementRow)(this.Rows.Find(new object[] {
                            BillNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Business_Settlement_ProcurementStatementDataTable cln = ((View_Business_Settlement_ProcurementStatementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Business_Settlement_ProcurementStatementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBillNo = base.Columns["BillNo"];
                this.columnBillType = base.Columns["BillType"];
                this.columnSettlementCompany = base.Columns["SettlementCompany"];
                this.columnInvoiceType = base.Columns["InvoiceType"];
                this.columnTaxRate = base.Columns["TaxRate"];
                this.columnProviderName = base.Columns["ProviderName"];
                this.columnOperationPersonnel = base.Columns["OperationPersonnel"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBillNo = new global::System.Data.DataColumn("BillNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillNo);
                this.columnBillType = new global::System.Data.DataColumn("BillType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillType);
                this.columnSettlementCompany = new global::System.Data.DataColumn("SettlementCompany", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementCompany);
                this.columnInvoiceType = new global::System.Data.DataColumn("InvoiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceType);
                this.columnTaxRate = new global::System.Data.DataColumn("TaxRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxRate);
                this.columnProviderName = new global::System.Data.DataColumn("ProviderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderName);
                this.columnOperationPersonnel = new global::System.Data.DataColumn("OperationPersonnel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationPersonnel);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBillNo}, true));
                this.columnBillNo.AllowDBNull = false;
                this.columnBillNo.Unique = true;
                this.columnBillNo.MaxLength = 50;
                this.columnBillType.AllowDBNull = false;
                this.columnBillType.MaxLength = 50;
                this.columnSettlementCompany.AllowDBNull = false;
                this.columnSettlementCompany.MaxLength = 50;
                this.columnInvoiceType.AllowDBNull = false;
                this.columnInvoiceType.MaxLength = 50;
                this.columnTaxRate.AllowDBNull = false;
                this.columnProviderName.MaxLength = 100;
                this.columnOperationPersonnel.ReadOnly = true;
                this.columnOperationPersonnel.MaxLength = 50;
                this.columnInvoiceNo.ReadOnly = true;
                this.columnInvoiceNo.MaxLength = 5000;
                this.columnInvoiceDate.ReadOnly = true;
                this.columnInvoiceDate.MaxLength = 5000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRow NewView_Business_Settlement_ProcurementStatementRow() {
                return ((View_Business_Settlement_ProcurementStatementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Business_Settlement_ProcurementStatementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Business_Settlement_ProcurementStatementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Business_Settlement_ProcurementStatementRowChanged != null)) {
                    this.View_Business_Settlement_ProcurementStatementRowChanged(this, new View_Business_Settlement_ProcurementStatementRowChangeEvent(((View_Business_Settlement_ProcurementStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Business_Settlement_ProcurementStatementRowChanging != null)) {
                    this.View_Business_Settlement_ProcurementStatementRowChanging(this, new View_Business_Settlement_ProcurementStatementRowChangeEvent(((View_Business_Settlement_ProcurementStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Business_Settlement_ProcurementStatementRowDeleted != null)) {
                    this.View_Business_Settlement_ProcurementStatementRowDeleted(this, new View_Business_Settlement_ProcurementStatementRowChangeEvent(((View_Business_Settlement_ProcurementStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Business_Settlement_ProcurementStatementRowDeleting != null)) {
                    this.View_Business_Settlement_ProcurementStatementRowDeleting(this, new View_Business_Settlement_ProcurementStatementRowChangeEvent(((View_Business_Settlement_ProcurementStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Business_Settlement_ProcurementStatementRow(View_Business_Settlement_ProcurementStatementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SettlementDataSet ds = new SettlementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Business_Settlement_ProcurementStatementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Business_Settlement_ProcurementStatementDetailRow : global::System.Data.DataRow {
            
            private View_Business_Settlement_ProcurementStatementDetailDataTable tableView_Business_Settlement_ProcurementStatementDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Business_Settlement_ProcurementStatementDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Business_Settlement_ProcurementStatementDetail = ((View_Business_Settlement_ProcurementStatementDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.单据号Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入库单号 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库单号Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 零件图号 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.零件图号Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.零件图号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 零件名称 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.零件名称Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.零件名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 规格 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.规格Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 批次号 {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.批次号Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.批次号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入库数量 {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库数量Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入库单价 {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库单价Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单件委托材料 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件委托材料Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“单件委托材料”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件委托材料Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 单件加工费 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件加工费Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“单件加工费”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件加工费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入库金额 {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库金额Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.入库金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 委托加工材料 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.委托加工材料Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“委托加工材料”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.委托加工材料Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票单价 {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.发票单价Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.发票单价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 税额 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.税额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“税额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.税额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 价税合计 {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.价税合计Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“价税合计”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.价税合计Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票金额 {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.发票金额Column]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.发票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同申请单号 {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.合同申请单号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“合同申请单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.合同申请单号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 差异说明 {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.差异说明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatementDetail”中列“差异说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.差异说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 物品ID {
                get {
                    return ((int)(this[this.tableView_Business_Settlement_ProcurementStatementDetail.物品IDColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatementDetail.物品IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单件委托材料Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.单件委托材料Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单件委托材料Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件委托材料Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单件加工费Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.单件加工费Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单件加工费Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.单件加工费Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is委托加工材料Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.委托加工材料Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set委托加工材料Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.委托加工材料Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is税额Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.税额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set税额Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.税额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is价税合计Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.价税合计Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set价税合计Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.价税合计Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is合同申请单号Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.合同申请单号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set合同申请单号Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.合同申请单号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is差异说明Null() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatementDetail.差异说明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set差异说明Null() {
                this[this.tableView_Business_Settlement_ProcurementStatementDetail.差异说明Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Business_Settlement_ProcurementStatementRow : global::System.Data.DataRow {
            
            private View_Business_Settlement_ProcurementStatementDataTable tableView_Business_Settlement_ProcurementStatement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Business_Settlement_ProcurementStatementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Business_Settlement_ProcurementStatement = ((View_Business_Settlement_ProcurementStatementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillNo {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.BillNoColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.BillNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillType {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.BillTypeColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.BillTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SettlementCompany {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.SettlementCompanyColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.SettlementCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceType {
                get {
                    return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceTypeColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxRate {
                get {
                    return ((decimal)(this[this.tableView_Business_Settlement_ProcurementStatement.TaxRateColumn]));
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.TaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProviderName {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.ProviderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatement”中列“ProviderName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.ProviderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperationPersonnel {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.OperationPersonnelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatement”中列“OperationPersonnel”的值为 DBNull。" +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.OperationPersonnelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatement”中列“InvoiceNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceDate {
                get {
                    try {
                        return ((string)(this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“View_Business_Settlement_ProcurementStatement”中列“InvoiceDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNameNull() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatement.ProviderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNameNull() {
                this[this.tableView_Business_Settlement_ProcurementStatement.ProviderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationPersonnelNull() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatement.OperationPersonnelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationPersonnelNull() {
                this[this.tableView_Business_Settlement_ProcurementStatement.OperationPersonnelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatement.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableView_Business_Settlement_ProcurementStatement.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tableView_Business_Settlement_ProcurementStatement.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Business_Settlement_ProcurementStatementDetailRowChangeEvent : global::System.EventArgs {
            
            private View_Business_Settlement_ProcurementStatementDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailRowChangeEvent(View_Business_Settlement_ProcurementStatementDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Business_Settlement_ProcurementStatementRowChangeEvent : global::System.EventArgs {
            
            private View_Business_Settlement_ProcurementStatementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRowChangeEvent(View_Business_Settlement_ProcurementStatementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Business_Settlement_ProcurementStatementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Form_Economic_Purchase.SettlementDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Business_Settlement_ProcurementStatementDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Business_Settlement_ProcurementStatementDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Business_Settlement_ProcurementStatementDetail";
            tableMapping.ColumnMappings.Add("单据号", "单据号");
            tableMapping.ColumnMappings.Add("入库单号", "入库单号");
            tableMapping.ColumnMappings.Add("零件图号", "零件图号");
            tableMapping.ColumnMappings.Add("零件名称", "零件名称");
            tableMapping.ColumnMappings.Add("规格", "规格");
            tableMapping.ColumnMappings.Add("批次号", "批次号");
            tableMapping.ColumnMappings.Add("入库数量", "入库数量");
            tableMapping.ColumnMappings.Add("入库单价", "入库单价");
            tableMapping.ColumnMappings.Add("单件委托材料", "单件委托材料");
            tableMapping.ColumnMappings.Add("单件加工费", "单件加工费");
            tableMapping.ColumnMappings.Add("入库金额", "入库金额");
            tableMapping.ColumnMappings.Add("委托加工材料", "委托加工材料");
            tableMapping.ColumnMappings.Add("发票单价", "发票单价");
            tableMapping.ColumnMappings.Add("税额", "税额");
            tableMapping.ColumnMappings.Add("价税合计", "价税合计");
            tableMapping.ColumnMappings.Add("发票金额", "发票金额");
            tableMapping.ColumnMappings.Add("合同申请单号", "合同申请单号");
            tableMapping.ColumnMappings.Add("差异说明", "差异说明");
            tableMapping.ColumnMappings.Add("物品ID", "物品ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Economic_Purchase.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 单据号, 入库单号, 零件图号, 零件名称, 规格, 批次号, 入库数量, 入库单价, 单件委托材料, 单件加工费, 入库金额, 委托加工材料, 发" +
                "票单价, 税额, 价税合计, 发票金额, 合同申请单号, 差异说明, 物品ID FROM View_Business_Settlement_Procuremen" +
                "tStatementDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SettlementDataSet.View_Business_Settlement_ProcurementStatementDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SettlementDataSet.View_Business_Settlement_ProcurementStatementDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SettlementDataSet.View_Business_Settlement_ProcurementStatementDetailDataTable dataTable = new SettlementDataSet.View_Business_Settlement_ProcurementStatementDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Business_Settlement_ProcurementStatementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Business_Settlement_ProcurementStatementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Business_Settlement_ProcurementStatement";
            tableMapping.ColumnMappings.Add("BillNo", "BillNo");
            tableMapping.ColumnMappings.Add("BillType", "BillType");
            tableMapping.ColumnMappings.Add("SettlementCompany", "SettlementCompany");
            tableMapping.ColumnMappings.Add("InvoiceType", "InvoiceType");
            tableMapping.ColumnMappings.Add("TaxRate", "TaxRate");
            tableMapping.ColumnMappings.Add("ProviderName", "ProviderName");
            tableMapping.ColumnMappings.Add("OperationPersonnel", "OperationPersonnel");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Form_Economic_Purchase.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BillNo, BillType, SettlementCompany, InvoiceType, TaxRate, ProviderName, O" +
                "perationPersonnel, InvoiceDate, InvoiceNo FROM View_Business_Settlement_Procurem" +
                "entStatement";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SettlementDataSet.View_Business_Settlement_ProcurementStatementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SettlementDataSet.View_Business_Settlement_ProcurementStatementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SettlementDataSet.View_Business_Settlement_ProcurementStatementDataTable dataTable = new SettlementDataSet.View_Business_Settlement_ProcurementStatementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SettlementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SettlementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SettlementDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SettlementDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591