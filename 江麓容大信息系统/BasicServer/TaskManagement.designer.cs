#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8745
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskServerModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class TaskManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBASE_AssignBillNo(BASE_AssignBillNo instance);
    partial void UpdateBASE_AssignBillNo(BASE_AssignBillNo instance);
    partial void DeleteBASE_AssignBillNo(BASE_AssignBillNo instance);
    partial void InsertDOC_File(DOC_File instance);
    partial void UpdateDOC_File(DOC_File instance);
    partial void DeleteDOC_File(DOC_File instance);
    partial void InsertDOC_FileExtendedInfo(DOC_FileExtendedInfo instance);
    partial void UpdateDOC_FileExtendedInfo(DOC_FileExtendedInfo instance);
    partial void DeleteDOC_FileExtendedInfo(DOC_FileExtendedInfo instance);
    partial void InsertPRJ_AssociatedTask(PRJ_AssociatedTask instance);
    partial void UpdatePRJ_AssociatedTask(PRJ_AssociatedTask instance);
    partial void DeletePRJ_AssociatedTask(PRJ_AssociatedTask instance);
    partial void InsertPRJ_DailyWork(PRJ_DailyWork instance);
    partial void UpdatePRJ_DailyWork(PRJ_DailyWork instance);
    partial void DeletePRJ_DailyWork(PRJ_DailyWork instance);
    partial void InsertPRJ_DailyWorkNotifyPeople(PRJ_DailyWorkNotifyPeople instance);
    partial void UpdatePRJ_DailyWorkNotifyPeople(PRJ_DailyWorkNotifyPeople instance);
    partial void DeletePRJ_DailyWorkNotifyPeople(PRJ_DailyWorkNotifyPeople instance);
    partial void InsertPRJ_DailyWorkReplyMsg(PRJ_DailyWorkReplyMsg instance);
    partial void UpdatePRJ_DailyWorkReplyMsg(PRJ_DailyWorkReplyMsg instance);
    partial void DeletePRJ_DailyWorkReplyMsg(PRJ_DailyWorkReplyMsg instance);
    partial void InsertPRJ_DailyWorkType(PRJ_DailyWorkType instance);
    partial void UpdatePRJ_DailyWorkType(PRJ_DailyWorkType instance);
    partial void DeletePRJ_DailyWorkType(PRJ_DailyWorkType instance);
    partial void InsertPRJ_MeetingExpandedInfo(PRJ_MeetingExpandedInfo instance);
    partial void UpdatePRJ_MeetingExpandedInfo(PRJ_MeetingExpandedInfo instance);
    partial void DeletePRJ_MeetingExpandedInfo(PRJ_MeetingExpandedInfo instance);
    partial void InsertPRJ_PreposeTask(PRJ_PreposeTask instance);
    partial void UpdatePRJ_PreposeTask(PRJ_PreposeTask instance);
    partial void DeletePRJ_PreposeTask(PRJ_PreposeTask instance);
    partial void InsertPRJ_Resource(PRJ_Resource instance);
    partial void UpdatePRJ_Resource(PRJ_Resource instance);
    partial void DeletePRJ_Resource(PRJ_Resource instance);
    partial void InsertPRJ_ResourceType(PRJ_ResourceType instance);
    partial void UpdatePRJ_ResourceType(PRJ_ResourceType instance);
    partial void DeletePRJ_ResourceType(PRJ_ResourceType instance);
    partial void InsertPRJ_ResourceUsageList(PRJ_ResourceUsageList instance);
    partial void UpdatePRJ_ResourceUsageList(PRJ_ResourceUsageList instance);
    partial void DeletePRJ_ResourceUsageList(PRJ_ResourceUsageList instance);
    partial void InsertPRJ_SystemLog(PRJ_SystemLog instance);
    partial void UpdatePRJ_SystemLog(PRJ_SystemLog instance);
    partial void DeletePRJ_SystemLog(PRJ_SystemLog instance);
    partial void InsertPRJ_Task(PRJ_Task instance);
    partial void UpdatePRJ_Task(PRJ_Task instance);
    partial void DeletePRJ_Task(PRJ_Task instance);
    partial void InsertPRJ_TaskAlarmMode(PRJ_TaskAlarmMode instance);
    partial void UpdatePRJ_TaskAlarmMode(PRJ_TaskAlarmMode instance);
    partial void DeletePRJ_TaskAlarmMode(PRJ_TaskAlarmMode instance);
    partial void InsertPRJ_TaskAlarmSetting(PRJ_TaskAlarmSetting instance);
    partial void UpdatePRJ_TaskAlarmSetting(PRJ_TaskAlarmSetting instance);
    partial void DeletePRJ_TaskAlarmSetting(PRJ_TaskAlarmSetting instance);
    partial void InsertPRJ_TaskCooperativePeople(PRJ_TaskCooperativePeople instance);
    partial void UpdatePRJ_TaskCooperativePeople(PRJ_TaskCooperativePeople instance);
    partial void DeletePRJ_TaskCooperativePeople(PRJ_TaskCooperativePeople instance);
    partial void InsertPRJ_TaskFile(PRJ_TaskFile instance);
    partial void UpdatePRJ_TaskFile(PRJ_TaskFile instance);
    partial void DeletePRJ_TaskFile(PRJ_TaskFile instance);
    partial void InsertPRJ_TaskImportance(PRJ_TaskImportance instance);
    partial void UpdatePRJ_TaskImportance(PRJ_TaskImportance instance);
    partial void DeletePRJ_TaskImportance(PRJ_TaskImportance instance);
    partial void InsertPRJ_TaskLevel(PRJ_TaskLevel instance);
    partial void UpdatePRJ_TaskLevel(PRJ_TaskLevel instance);
    partial void DeletePRJ_TaskLevel(PRJ_TaskLevel instance);
    partial void InsertPRJ_TaskLog(PRJ_TaskLog instance);
    partial void UpdatePRJ_TaskLog(PRJ_TaskLog instance);
    partial void DeletePRJ_TaskLog(PRJ_TaskLog instance);
    partial void InsertPRJ_TaskNegotiatingMessage(PRJ_TaskNegotiatingMessage instance);
    partial void UpdatePRJ_TaskNegotiatingMessage(PRJ_TaskNegotiatingMessage instance);
    partial void DeletePRJ_TaskNegotiatingMessage(PRJ_TaskNegotiatingMessage instance);
    partial void InsertPRJ_TaskNotifyPeople(PRJ_TaskNotifyPeople instance);
    partial void UpdatePRJ_TaskNotifyPeople(PRJ_TaskNotifyPeople instance);
    partial void DeletePRJ_TaskNotifyPeople(PRJ_TaskNotifyPeople instance);
    partial void InsertPRJ_TaskObserver(PRJ_TaskObserver instance);
    partial void UpdatePRJ_TaskObserver(PRJ_TaskObserver instance);
    partial void DeletePRJ_TaskObserver(PRJ_TaskObserver instance);
    partial void InsertPRJ_TaskProgressLog(PRJ_TaskProgressLog instance);
    partial void UpdatePRJ_TaskProgressLog(PRJ_TaskProgressLog instance);
    partial void DeletePRJ_TaskProgressLog(PRJ_TaskProgressLog instance);
    partial void InsertPRJ_TaskSource(PRJ_TaskSource instance);
    partial void UpdatePRJ_TaskSource(PRJ_TaskSource instance);
    partial void DeletePRJ_TaskSource(PRJ_TaskSource instance);
    partial void InsertPRJ_TaskType(PRJ_TaskType instance);
    partial void UpdatePRJ_TaskType(PRJ_TaskType instance);
    partial void DeletePRJ_TaskType(PRJ_TaskType instance);
    partial void InsertPRJ_TaskValuation(PRJ_TaskValuation instance);
    partial void UpdatePRJ_TaskValuation(PRJ_TaskValuation instance);
    partial void DeletePRJ_TaskValuation(PRJ_TaskValuation instance);
    partial void InsertPRJ_WorkRepeatCycle(PRJ_WorkRepeatCycle instance);
    partial void UpdatePRJ_WorkRepeatCycle(PRJ_WorkRepeatCycle instance);
    partial void DeletePRJ_WorkRepeatCycle(PRJ_WorkRepeatCycle instance);
    partial void InsertTask_ShortMessage(Task_ShortMessage instance);
    partial void UpdateTask_ShortMessage(Task_ShortMessage instance);
    partial void DeleteTask_ShortMessage(Task_ShortMessage instance);
    partial void InsertTask_ShortMessageType(Task_ShortMessageType instance);
    partial void UpdateTask_ShortMessageType(Task_ShortMessageType instance);
    partial void DeleteTask_ShortMessageType(Task_ShortMessageType instance);
    #endregion
		
		public TaskManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaskManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaskManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaskManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BASE_AssignBillNo> BASE_AssignBillNo
		{
			get
			{
				return this.GetTable<BASE_AssignBillNo>();
			}
		}
		
		public System.Data.Linq.Table<DOC_File> DOC_File
		{
			get
			{
				return this.GetTable<DOC_File>();
			}
		}
		
		public System.Data.Linq.Table<DOC_FileExtendedInfo> DOC_FileExtendedInfo
		{
			get
			{
				return this.GetTable<DOC_FileExtendedInfo>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_AssociatedTask> PRJ_AssociatedTask
		{
			get
			{
				return this.GetTable<PRJ_AssociatedTask>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_DailyWork> PRJ_DailyWork
		{
			get
			{
				return this.GetTable<PRJ_DailyWork>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_DailyWorkNotifyPeople> PRJ_DailyWorkNotifyPeople
		{
			get
			{
				return this.GetTable<PRJ_DailyWorkNotifyPeople>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_DailyWorkReplyMsg> PRJ_DailyWorkReplyMsg
		{
			get
			{
				return this.GetTable<PRJ_DailyWorkReplyMsg>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_DailyWorkType> PRJ_DailyWorkType
		{
			get
			{
				return this.GetTable<PRJ_DailyWorkType>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_MeetingExpandedInfo> PRJ_MeetingExpandedInfo
		{
			get
			{
				return this.GetTable<PRJ_MeetingExpandedInfo>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_PreposeTask> PRJ_PreposeTask
		{
			get
			{
				return this.GetTable<PRJ_PreposeTask>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_Resource> PRJ_Resource
		{
			get
			{
				return this.GetTable<PRJ_Resource>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_ResourceType> PRJ_ResourceType
		{
			get
			{
				return this.GetTable<PRJ_ResourceType>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_ResourceUsageList> PRJ_ResourceUsageList
		{
			get
			{
				return this.GetTable<PRJ_ResourceUsageList>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_SystemLog> PRJ_SystemLog
		{
			get
			{
				return this.GetTable<PRJ_SystemLog>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_Task> PRJ_Task
		{
			get
			{
				return this.GetTable<PRJ_Task>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskAlarmMode> PRJ_TaskAlarmMode
		{
			get
			{
				return this.GetTable<PRJ_TaskAlarmMode>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskAlarmSetting> PRJ_TaskAlarmSetting
		{
			get
			{
				return this.GetTable<PRJ_TaskAlarmSetting>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskCooperativePeople> PRJ_TaskCooperativePeople
		{
			get
			{
				return this.GetTable<PRJ_TaskCooperativePeople>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskFile> PRJ_TaskFile
		{
			get
			{
				return this.GetTable<PRJ_TaskFile>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskImportance> PRJ_TaskImportance
		{
			get
			{
				return this.GetTable<PRJ_TaskImportance>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskLevel> PRJ_TaskLevel
		{
			get
			{
				return this.GetTable<PRJ_TaskLevel>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskLog> PRJ_TaskLog
		{
			get
			{
				return this.GetTable<PRJ_TaskLog>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskNegotiatingMessage> PRJ_TaskNegotiatingMessage
		{
			get
			{
				return this.GetTable<PRJ_TaskNegotiatingMessage>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskNotifyPeople> PRJ_TaskNotifyPeople
		{
			get
			{
				return this.GetTable<PRJ_TaskNotifyPeople>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskObserver> PRJ_TaskObserver
		{
			get
			{
				return this.GetTable<PRJ_TaskObserver>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskProgressLog> PRJ_TaskProgressLog
		{
			get
			{
				return this.GetTable<PRJ_TaskProgressLog>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskSource> PRJ_TaskSource
		{
			get
			{
				return this.GetTable<PRJ_TaskSource>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskType> PRJ_TaskType
		{
			get
			{
				return this.GetTable<PRJ_TaskType>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_TaskValuation> PRJ_TaskValuation
		{
			get
			{
				return this.GetTable<PRJ_TaskValuation>();
			}
		}
		
		public System.Data.Linq.Table<PRJ_WorkRepeatCycle> PRJ_WorkRepeatCycle
		{
			get
			{
				return this.GetTable<PRJ_WorkRepeatCycle>();
			}
		}
		
		public System.Data.Linq.Table<Task_ShortMessage> Task_ShortMessage
		{
			get
			{
				return this.GetTable<Task_ShortMessage>();
			}
		}
		
		public System.Data.Linq.Table<Task_ShortMessageType> Task_ShortMessageType
		{
			get
			{
				return this.GetTable<Task_ShortMessageType>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_Meeting> View_PRJ_Meeting
		{
			get
			{
				return this.GetTable<View_PRJ_Meeting>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_Resource> View_PRJ_Resource
		{
			get
			{
				return this.GetTable<View_PRJ_Resource>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_ResourceSimpleInfo> View_PRJ_ResourceSimpleInfo
		{
			get
			{
				return this.GetTable<View_PRJ_ResourceSimpleInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_ResourceUsageList> View_PRJ_ResourceUsageList
		{
			get
			{
				return this.GetTable<View_PRJ_ResourceUsageList>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_Task> View_PRJ_Task
		{
			get
			{
				return this.GetTable<View_PRJ_Task>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_TaskLog> View_PRJ_TaskLog
		{
			get
			{
				return this.GetTable<View_PRJ_TaskLog>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_TaskNegotiatingMessage> View_PRJ_TaskNegotiatingMessage
		{
			get
			{
				return this.GetTable<View_PRJ_TaskNegotiatingMessage>();
			}
		}
		
		public System.Data.Linq.Table<View_PRJ_TaskProgressLog> View_PRJ_TaskProgressLog
		{
			get
			{
				return this.GetTable<View_PRJ_TaskProgressLog>();
			}
		}
		
		public System.Data.Linq.Table<View_Task_ShortMessage> View_Task_ShortMessage
		{
			get
			{
				return this.GetTable<View_Task_ShortMessage>();
			}
		}
		
		[Function(Name="dbo.fun_get_PersonnelDepartment", IsComposable=true)]
		[return: Parameter(DbType="NVarChar(4000)")]
		public string Fun_get_PersonnelDepartment([Parameter(DbType="NVarChar(4000)")] string str, [Parameter(Name="Flag", DbType="Bit")] System.Nullable<bool> flag)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str, flag).ReturnValue));
		}
		
		[Function(Name="dbo.fun_get_PersonnelName", IsComposable=true)]
		[return: Parameter(DbType="NVarChar(4000)")]
		public string Fun_get_PersonnelName([Parameter(DbType="NVarChar(4000)")] string str)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str).ReturnValue));
		}
		
		[Function(Name="dbo.fun_get_RecuresiveDept", IsComposable=true)]
		public IQueryable<Fun_get_RecuresiveDeptResult> Fun_get_RecuresiveDept([Parameter(Name="Dept", DbType="VarChar(50)")] string dept)
		{
			return this.CreateMethodCallQuery<Fun_get_RecuresiveDeptResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dept);
		}
		
		[Function(Name="dbo.fun_get_WorkDay", IsComposable=true)]
		[return: Parameter(DbType="Int")]
		public System.Nullable<int> Fun_get_WorkDay([Parameter(DbType="DateTime")] System.Nullable<System.DateTime> startTime, [Parameter(DbType="DateTime")] System.Nullable<System.DateTime> endTime)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startTime, endTime).ReturnValue));
		}
		
		[Function(Name="dbo.fun_GetMeetingPersonnel", IsComposable=true)]
		[return: Parameter(DbType="VarChar(1000)")]
		public string Fun_GetMeetingPersonnel([Parameter(Name="MeetingCode", DbType="VarChar(50)")] string meetingCode)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), meetingCode).ReturnValue));
		}
		
		[Function(Name="dbo.fun_GetMeetingResource", IsComposable=true)]
		[return: Parameter(DbType="VarChar(1000)")]
		public string Fun_GetMeetingResource([Parameter(Name="MeetingCode", DbType="VarChar(50)")] string meetingCode)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), meetingCode).ReturnValue));
		}
		
		[Function(Name="dbo.fun_GetResourceStatus", IsComposable=true)]
		[return: Parameter(DbType="Bit")]
		public System.Nullable<bool> Fun_GetResourceStatus([Parameter(Name="ResourceID", DbType="Int")] System.Nullable<int> resourceID, [Parameter(Name="BeginTime", DbType="DateTime")] System.Nullable<System.DateTime> beginTime, [Parameter(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resourceID, beginTime, endTime).ReturnValue));
		}
		
		[Function(Name="dbo.fun_GetResourceView", IsComposable=true)]
		public IQueryable<Fun_GetResourceViewResult> Fun_GetResourceView()
		{
			return this.CreateMethodCallQuery<Fun_GetResourceViewResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[Function(Name="dbo.fun_GetResourceView_1", IsComposable=true)]
		public IQueryable<Fun_GetResourceView_1Result> Fun_GetResourceView_1([Parameter(Name="BeginTime", DbType="DateTime")] System.Nullable<System.DateTime> beginTime, [Parameter(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime)
		{
			return this.CreateMethodCallQuery<Fun_GetResourceView_1Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beginTime, endTime);
		}
		
		[Function(Name="dbo.fun_InTheBusinessTrip", IsComposable=true)]
		[return: Parameter(DbType="Bit")]
		public System.Nullable<bool> Fun_InTheBusinessTrip([Parameter(Name="UserID", DbType="VarChar(50)")] string userID, [Parameter(Name="BeginTime", DbType="DateTime")] System.Nullable<System.DateTime> beginTime, [Parameter(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, beginTime, endTime).ReturnValue));
		}
	}
	
	[Table(Name="dbo.BASE_AssignBillNo")]
	public partial class BASE_AssignBillNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillNo;
		
		private System.DateTime _AssignedDate;
		
		private bool _AlreadyUse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnAssignedDateChanging(System.DateTime value);
    partial void OnAssignedDateChanged();
    partial void OnAlreadyUseChanging(bool value);
    partial void OnAlreadyUseChanged();
    #endregion
		
		public BASE_AssignBillNo()
		{
			OnCreated();
		}
		
		[Column(Storage="_BillNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignedDate
		{
			get
			{
				return this._AssignedDate;
			}
			set
			{
				if ((this._AssignedDate != value))
				{
					this.OnAssignedDateChanging(value);
					this.SendPropertyChanging();
					this._AssignedDate = value;
					this.SendPropertyChanged("AssignedDate");
					this.OnAssignedDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlreadyUse", DbType="Bit NOT NULL")]
		public bool AlreadyUse
		{
			get
			{
				return this._AlreadyUse;
			}
			set
			{
				if ((this._AlreadyUse != value))
				{
					this.OnAlreadyUseChanging(value);
					this.SendPropertyChanging();
					this._AlreadyUse = value;
					this.SendPropertyChanged("AlreadyUse");
					this.OnAlreadyUseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DOC_File")]
	public partial class DOC_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FileID;
		
		private string _Title;
		
		private string _SavePath;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntityRef<DOC_FileExtendedInfo> _DOC_FileExtendedInfo;
		
		private EntitySet<PRJ_TaskFile> _PRJ_TaskFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSavePathChanging(string value);
    partial void OnSavePathChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public DOC_File()
		{
			this._DOC_FileExtendedInfo = default(EntityRef<DOC_FileExtendedInfo>);
			this._PRJ_TaskFile = new EntitySet<PRJ_TaskFile>(new Action<PRJ_TaskFile>(this.attach_PRJ_TaskFile), new Action<PRJ_TaskFile>(this.detach_PRJ_TaskFile));
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_SavePath", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SavePath
		{
			get
			{
				return this._SavePath;
			}
			set
			{
				if ((this._SavePath != value))
				{
					this.OnSavePathChanging(value);
					this.SendPropertyChanging();
					this._SavePath = value;
					this.SendPropertyChanged("SavePath");
					this.OnSavePathChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_DOC_FILE_REFERENCE_DOC_FILE", Storage="_DOC_FileExtendedInfo", ThisKey="FileID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public DOC_FileExtendedInfo DOC_FileExtendedInfo
		{
			get
			{
				return this._DOC_FileExtendedInfo.Entity;
			}
			set
			{
				DOC_FileExtendedInfo previousValue = this._DOC_FileExtendedInfo.Entity;
				if (((previousValue != value) 
							|| (this._DOC_FileExtendedInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOC_FileExtendedInfo.Entity = null;
						previousValue.DOC_File = null;
					}
					this._DOC_FileExtendedInfo.Entity = value;
					if ((value != null))
					{
						value.DOC_File = this;
					}
					this.SendPropertyChanged("DOC_FileExtendedInfo");
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_DOC_FILE_1", Storage="_PRJ_TaskFile", OtherKey="FileID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_TaskFile> PRJ_TaskFile
		{
			get
			{
				return this._PRJ_TaskFile;
			}
			set
			{
				this._PRJ_TaskFile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_TaskFile(PRJ_TaskFile entity)
		{
			this.SendPropertyChanging();
			entity.DOC_File = this;
		}
		
		private void detach_PRJ_TaskFile(PRJ_TaskFile entity)
		{
			this.SendPropertyChanging();
			entity.DOC_File = null;
		}
	}
	
	[Table(Name="dbo.DOC_FileExtendedInfo")]
	public partial class DOC_FileExtendedInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FileID;
		
		private string _Keywords;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntityRef<DOC_File> _DOC_File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public DOC_FileExtendedInfo()
		{
			this._DOC_File = default(EntityRef<DOC_File>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._DOC_File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Keywords", DbType="VarChar(500)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_DOC_FILE_REFERENCE_DOC_FILE", Storage="_DOC_File", ThisKey="FileID", IsForeignKey=true, DeleteOnNull=true)]
		public DOC_File DOC_File
		{
			get
			{
				return this._DOC_File.Entity;
			}
			set
			{
				DOC_File previousValue = this._DOC_File.Entity;
				if (((previousValue != value) 
							|| (this._DOC_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOC_File.Entity = null;
						previousValue.DOC_FileExtendedInfo = null;
					}
					this._DOC_File.Entity = value;
					if ((value != null))
					{
						value.DOC_FileExtendedInfo = this;
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(System.Guid);
					}
					this.SendPropertyChanged("DOC_File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_AssociatedTask")]
	public partial class PRJ_AssociatedTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _AssociatedTaskID;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnAssociatedTaskIDChanging(string value);
    partial void OnAssociatedTaskIDChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_AssociatedTask()
		{
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_AssociatedTaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AssociatedTaskID
		{
			get
			{
				return this._AssociatedTaskID;
			}
			set
			{
				if ((this._AssociatedTaskID != value))
				{
					this.OnAssociatedTaskIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedTaskID = value;
					this.SendPropertyChanged("AssociatedTaskID");
					this.OnAssociatedTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_DailyWork")]
	public partial class PRJ_DailyWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Title;
		
		private string _WorkID;
		
		private System.DateTime _Date;
		
		private int _TypeID;
		
		private int _ImportanceID;
		
		private string _Status;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private string _Content;
		
		private bool _NeedToReply;
		
		private EntityRef<PRJ_DailyWorkType> _PRJ_DailyWorkType;
		
		private EntitySet<PRJ_DailyWorkNotifyPeople> _PRJ_DailyWorkNotifyPeople;
		
		private EntitySet<PRJ_DailyWorkReplyMsg> _PRJ_DailyWorkReplyMsg;
		
		private EntityRef<PRJ_TaskImportance> _PRJ_TaskImportance;
		
		private EntityRef<PRJ_MeetingExpandedInfo> _PRJ_MeetingExpandedInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnImportanceIDChanging(int value);
    partial void OnImportanceIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnNeedToReplyChanging(bool value);
    partial void OnNeedToReplyChanged();
    #endregion
		
		public PRJ_DailyWork()
		{
			this._PRJ_DailyWorkType = default(EntityRef<PRJ_DailyWorkType>);
			this._PRJ_DailyWorkNotifyPeople = new EntitySet<PRJ_DailyWorkNotifyPeople>(new Action<PRJ_DailyWorkNotifyPeople>(this.attach_PRJ_DailyWorkNotifyPeople), new Action<PRJ_DailyWorkNotifyPeople>(this.detach_PRJ_DailyWorkNotifyPeople));
			this._PRJ_DailyWorkReplyMsg = new EntitySet<PRJ_DailyWorkReplyMsg>(new Action<PRJ_DailyWorkReplyMsg>(this.attach_PRJ_DailyWorkReplyMsg), new Action<PRJ_DailyWorkReplyMsg>(this.detach_PRJ_DailyWorkReplyMsg));
			this._PRJ_TaskImportance = default(EntityRef<PRJ_TaskImportance>);
			this._PRJ_MeetingExpandedInfo = default(EntityRef<PRJ_MeetingExpandedInfo>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._PRJ_DailyWorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImportanceID", DbType="Int NOT NULL")]
		public int ImportanceID
		{
			get
			{
				return this._ImportanceID;
			}
			set
			{
				if ((this._ImportanceID != value))
				{
					if (this._PRJ_TaskImportance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportanceIDChanging(value);
					this.SendPropertyChanging();
					this._ImportanceID = value;
					this.SendPropertyChanged("ImportanceID");
					this.OnImportanceIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_NeedToReply", DbType="Bit NOT NULL")]
		public bool NeedToReply
		{
			get
			{
				return this._NeedToReply;
			}
			set
			{
				if ((this._NeedToReply != value))
				{
					this.OnNeedToReplyChanging(value);
					this.SendPropertyChanging();
					this._NeedToReply = value;
					this.SendPropertyChanged("NeedToReply");
					this.OnNeedToReplyChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL", Storage="_PRJ_DailyWorkType", ThisKey="TypeID", IsForeignKey=true)]
		public PRJ_DailyWorkType PRJ_DailyWorkType
		{
			get
			{
				return this._PRJ_DailyWorkType.Entity;
			}
			set
			{
				PRJ_DailyWorkType previousValue = this._PRJ_DailyWorkType.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_DailyWorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_DailyWorkType.Entity = null;
						previousValue.PRJ_DailyWork.Remove(this);
					}
					this._PRJ_DailyWorkType.Entity = value;
					if ((value != null))
					{
						value.PRJ_DailyWork.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("PRJ_DailyWorkType");
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL_20", Storage="_PRJ_DailyWorkNotifyPeople", OtherKey="DailyWorkID", DeleteRule="CASCADE")]
		public EntitySet<PRJ_DailyWorkNotifyPeople> PRJ_DailyWorkNotifyPeople
		{
			get
			{
				return this._PRJ_DailyWorkNotifyPeople;
			}
			set
			{
				this._PRJ_DailyWorkNotifyPeople.Assign(value);
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL_21", Storage="_PRJ_DailyWorkReplyMsg", OtherKey="DailyWorkID", DeleteRule="CASCADE")]
		public EntitySet<PRJ_DailyWorkReplyMsg> PRJ_DailyWorkReplyMsg
		{
			get
			{
				return this._PRJ_DailyWorkReplyMsg;
			}
			set
			{
				this._PRJ_DailyWorkReplyMsg.Assign(value);
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_TASK", Storage="_PRJ_TaskImportance", ThisKey="ImportanceID", IsForeignKey=true)]
		public PRJ_TaskImportance PRJ_TaskImportance
		{
			get
			{
				return this._PRJ_TaskImportance.Entity;
			}
			set
			{
				PRJ_TaskImportance previousValue = this._PRJ_TaskImportance.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskImportance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskImportance.Entity = null;
						previousValue.PRJ_DailyWork.Remove(this);
					}
					this._PRJ_TaskImportance.Entity = value;
					if ((value != null))
					{
						value.PRJ_DailyWork.Add(this);
						this._ImportanceID = value.ImportanceID;
					}
					else
					{
						this._ImportanceID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskImportance");
				}
			}
		}
		
		[Association(Name="FK_PRJ_MEET_REFERENCE_PRJ_DAIL", Storage="_PRJ_MeetingExpandedInfo", ThisKey="ID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public PRJ_MeetingExpandedInfo PRJ_MeetingExpandedInfo
		{
			get
			{
				return this._PRJ_MeetingExpandedInfo.Entity;
			}
			set
			{
				PRJ_MeetingExpandedInfo previousValue = this._PRJ_MeetingExpandedInfo.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_MeetingExpandedInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_MeetingExpandedInfo.Entity = null;
						previousValue.PRJ_DailyWork = null;
					}
					this._PRJ_MeetingExpandedInfo.Entity = value;
					if ((value != null))
					{
						value.PRJ_DailyWork = this;
					}
					this.SendPropertyChanged("PRJ_MeetingExpandedInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_DailyWorkNotifyPeople(PRJ_DailyWorkNotifyPeople entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWork = this;
		}
		
		private void detach_PRJ_DailyWorkNotifyPeople(PRJ_DailyWorkNotifyPeople entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWork = null;
		}
		
		private void attach_PRJ_DailyWorkReplyMsg(PRJ_DailyWorkReplyMsg entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWork = this;
		}
		
		private void detach_PRJ_DailyWorkReplyMsg(PRJ_DailyWorkReplyMsg entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWork = null;
		}
	}
	
	[Table(Name="dbo.PRJ_DailyWorkNotifyPeople")]
	public partial class PRJ_DailyWorkNotifyPeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DailyWorkID;
		
		private string _WorkID;
		
		private EntityRef<PRJ_DailyWork> _PRJ_DailyWork;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyWorkIDChanging(string value);
    partial void OnDailyWorkIDChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    #endregion
		
		public PRJ_DailyWorkNotifyPeople()
		{
			this._PRJ_DailyWork = default(EntityRef<PRJ_DailyWork>);
			OnCreated();
		}
		
		[Column(Storage="_DailyWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DailyWorkID
		{
			get
			{
				return this._DailyWorkID;
			}
			set
			{
				if ((this._DailyWorkID != value))
				{
					if (this._PRJ_DailyWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDailyWorkIDChanging(value);
					this.SendPropertyChanging();
					this._DailyWorkID = value;
					this.SendPropertyChanged("DailyWorkID");
					this.OnDailyWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL_20", Storage="_PRJ_DailyWork", ThisKey="DailyWorkID", IsForeignKey=true, DeleteOnNull=true)]
		public PRJ_DailyWork PRJ_DailyWork
		{
			get
			{
				return this._PRJ_DailyWork.Entity;
			}
			set
			{
				PRJ_DailyWork previousValue = this._PRJ_DailyWork.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_DailyWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_DailyWork.Entity = null;
						previousValue.PRJ_DailyWorkNotifyPeople.Remove(this);
					}
					this._PRJ_DailyWork.Entity = value;
					if ((value != null))
					{
						value.PRJ_DailyWorkNotifyPeople.Add(this);
						this._DailyWorkID = value.ID;
					}
					else
					{
						this._DailyWorkID = default(string);
					}
					this.SendPropertyChanged("PRJ_DailyWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_DailyWorkReplyMsg")]
	public partial class PRJ_DailyWorkReplyMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _DailyWorkID;
		
		private string _WorkID;
		
		private string _Content;
		
		private System.DateTime _Time;
		
		private EntityRef<PRJ_DailyWork> _PRJ_DailyWork;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDailyWorkIDChanging(string value);
    partial void OnDailyWorkIDChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public PRJ_DailyWorkReplyMsg()
		{
			this._PRJ_DailyWork = default(EntityRef<PRJ_DailyWork>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DailyWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DailyWorkID
		{
			get
			{
				return this._DailyWorkID;
			}
			set
			{
				if ((this._DailyWorkID != value))
				{
					if (this._PRJ_DailyWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDailyWorkIDChanging(value);
					this.SendPropertyChanging();
					this._DailyWorkID = value;
					this.SendPropertyChanged("DailyWorkID");
					this.OnDailyWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL_21", Storage="_PRJ_DailyWork", ThisKey="DailyWorkID", IsForeignKey=true, DeleteOnNull=true)]
		public PRJ_DailyWork PRJ_DailyWork
		{
			get
			{
				return this._PRJ_DailyWork.Entity;
			}
			set
			{
				PRJ_DailyWork previousValue = this._PRJ_DailyWork.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_DailyWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_DailyWork.Entity = null;
						previousValue.PRJ_DailyWorkReplyMsg.Remove(this);
					}
					this._PRJ_DailyWork.Entity = value;
					if ((value != null))
					{
						value.PRJ_DailyWorkReplyMsg.Add(this);
						this._DailyWorkID = value.ID;
					}
					else
					{
						this._DailyWorkID = default(string);
					}
					this.SendPropertyChanged("PRJ_DailyWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_DailyWorkType")]
	public partial class PRJ_DailyWorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_DailyWork> _PRJ_DailyWork;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_DailyWorkType()
		{
			this._PRJ_DailyWork = new EntitySet<PRJ_DailyWork>(new Action<PRJ_DailyWork>(this.attach_PRJ_DailyWork), new Action<PRJ_DailyWork>(this.detach_PRJ_DailyWork));
			OnCreated();
		}
		
		[Column(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_DAIL", Storage="_PRJ_DailyWork", OtherKey="TypeID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_DailyWork> PRJ_DailyWork
		{
			get
			{
				return this._PRJ_DailyWork;
			}
			set
			{
				this._PRJ_DailyWork.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_DailyWork(PRJ_DailyWork entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWorkType = this;
		}
		
		private void detach_PRJ_DailyWork(PRJ_DailyWork entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_DailyWorkType = null;
		}
	}
	
	[Table(Name="dbo.PRJ_MeetingExpandedInfo")]
	public partial class PRJ_MeetingExpandedInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DailyWorkID;
		
		private string _HostCode;
		
		private string _Recorder;
		
		private string _AlarmMode;
		
		private int _AlarmValue;
		
		private string _Approver;
		
		private System.Nullable<System.DateTime> _ApprovedTime;
		
		private EntityRef<PRJ_DailyWork> _PRJ_DailyWork;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyWorkIDChanging(string value);
    partial void OnDailyWorkIDChanged();
    partial void OnHostCodeChanging(string value);
    partial void OnHostCodeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnAlarmModeChanging(string value);
    partial void OnAlarmModeChanged();
    partial void OnAlarmValueChanging(int value);
    partial void OnAlarmValueChanged();
    partial void OnApproverChanging(string value);
    partial void OnApproverChanged();
    partial void OnApprovedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedTimeChanged();
    #endregion
		
		public PRJ_MeetingExpandedInfo()
		{
			this._PRJ_DailyWork = default(EntityRef<PRJ_DailyWork>);
			OnCreated();
		}
		
		[Column(Storage="_DailyWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DailyWorkID
		{
			get
			{
				return this._DailyWorkID;
			}
			set
			{
				if ((this._DailyWorkID != value))
				{
					if (this._PRJ_DailyWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDailyWorkIDChanging(value);
					this.SendPropertyChanging();
					this._DailyWorkID = value;
					this.SendPropertyChanged("DailyWorkID");
					this.OnDailyWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_HostCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HostCode
		{
			get
			{
				return this._HostCode;
			}
			set
			{
				if ((this._HostCode != value))
				{
					this.OnHostCodeChanging(value);
					this.SendPropertyChanging();
					this._HostCode = value;
					this.SendPropertyChanged("HostCode");
					this.OnHostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AlarmMode
		{
			get
			{
				return this._AlarmMode;
			}
			set
			{
				if ((this._AlarmMode != value))
				{
					this.OnAlarmModeChanging(value);
					this.SendPropertyChanging();
					this._AlarmMode = value;
					this.SendPropertyChanged("AlarmMode");
					this.OnAlarmModeChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmValue", DbType="Int NOT NULL")]
		public int AlarmValue
		{
			get
			{
				return this._AlarmValue;
			}
			set
			{
				if ((this._AlarmValue != value))
				{
					this.OnAlarmValueChanging(value);
					this.SendPropertyChanging();
					this._AlarmValue = value;
					this.SendPropertyChanged("AlarmValue");
					this.OnAlarmValueChanged();
				}
			}
		}
		
		[Column(Storage="_Approver", DbType="VarChar(50)")]
		public string Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				if ((this._Approver != value))
				{
					this.OnApproverChanging(value);
					this.SendPropertyChanging();
					this._Approver = value;
					this.SendPropertyChanged("Approver");
					this.OnApproverChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedTime
		{
			get
			{
				return this._ApprovedTime;
			}
			set
			{
				if ((this._ApprovedTime != value))
				{
					this.OnApprovedTimeChanging(value);
					this.SendPropertyChanging();
					this._ApprovedTime = value;
					this.SendPropertyChanged("ApprovedTime");
					this.OnApprovedTimeChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_MEET_REFERENCE_PRJ_DAIL", Storage="_PRJ_DailyWork", ThisKey="DailyWorkID", IsForeignKey=true, DeleteOnNull=true)]
		public PRJ_DailyWork PRJ_DailyWork
		{
			get
			{
				return this._PRJ_DailyWork.Entity;
			}
			set
			{
				PRJ_DailyWork previousValue = this._PRJ_DailyWork.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_DailyWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_DailyWork.Entity = null;
						previousValue.PRJ_MeetingExpandedInfo = null;
					}
					this._PRJ_DailyWork.Entity = value;
					if ((value != null))
					{
						value.PRJ_MeetingExpandedInfo = this;
						this._DailyWorkID = value.ID;
					}
					else
					{
						this._DailyWorkID = default(string);
					}
					this.SendPropertyChanged("PRJ_DailyWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_PreposeTask")]
	public partial class PRJ_PreposeTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _PreposeTaskID;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnPreposeTaskIDChanging(string value);
    partial void OnPreposeTaskIDChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_PreposeTask()
		{
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_PreposeTaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PreposeTaskID
		{
			get
			{
				return this._PreposeTaskID;
			}
			set
			{
				if ((this._PreposeTaskID != value))
				{
					this.OnPreposeTaskIDChanging(value);
					this.SendPropertyChanging();
					this._PreposeTaskID = value;
					this.SendPropertyChanged("PreposeTaskID");
					this.OnPreposeTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_Resource")]
	public partial class PRJ_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResourceType;
		
		private string _ResourceName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_ResourceUsageList> _PRJ_ResourceUsageList;
		
		private EntityRef<PRJ_ResourceType> _PRJ_ResourceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResourceTypeChanging(int value);
    partial void OnResourceTypeChanged();
    partial void OnResourceNameChanging(string value);
    partial void OnResourceNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_Resource()
		{
			this._PRJ_ResourceUsageList = new EntitySet<PRJ_ResourceUsageList>(new Action<PRJ_ResourceUsageList>(this.attach_PRJ_ResourceUsageList), new Action<PRJ_ResourceUsageList>(this.detach_PRJ_ResourceUsageList));
			this._PRJ_ResourceType = default(EntityRef<PRJ_ResourceType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceType", DbType="Int NOT NULL")]
		public int ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					if (this._PRJ_ResourceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ResourceName
		{
			get
			{
				return this._ResourceName;
			}
			set
			{
				if ((this._ResourceName != value))
				{
					this.OnResourceNameChanging(value);
					this.SendPropertyChanging();
					this._ResourceName = value;
					this.SendPropertyChanged("ResourceName");
					this.OnResourceNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_ALLO_REFERENCE_PRJ_WORK", Storage="_PRJ_ResourceUsageList", OtherKey="ResourceID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_ResourceUsageList> PRJ_ResourceUsageList
		{
			get
			{
				return this._PRJ_ResourceUsageList;
			}
			set
			{
				this._PRJ_ResourceUsageList.Assign(value);
			}
		}
		
		[Association(Name="FK_PRJ_WORK_REFERENCE_PRJ_WORK", Storage="_PRJ_ResourceType", ThisKey="ResourceType", IsForeignKey=true)]
		public PRJ_ResourceType PRJ_ResourceType
		{
			get
			{
				return this._PRJ_ResourceType.Entity;
			}
			set
			{
				PRJ_ResourceType previousValue = this._PRJ_ResourceType.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_ResourceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_ResourceType.Entity = null;
						previousValue.PRJ_Resource.Remove(this);
					}
					this._PRJ_ResourceType.Entity = value;
					if ((value != null))
					{
						value.PRJ_Resource.Add(this);
						this._ResourceType = value.TypeCode;
					}
					else
					{
						this._ResourceType = default(int);
					}
					this.SendPropertyChanged("PRJ_ResourceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_ResourceUsageList(PRJ_ResourceUsageList entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_Resource = this;
		}
		
		private void detach_PRJ_ResourceUsageList(PRJ_ResourceUsageList entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_Resource = null;
		}
	}
	
	[Table(Name="dbo.PRJ_ResourceType")]
	public partial class PRJ_ResourceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeCode;
		
		private string _TypeName;
		
		private bool _SharedFlag;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_Resource> _PRJ_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeCodeChanging(int value);
    partial void OnTypeCodeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnSharedFlagChanging(bool value);
    partial void OnSharedFlagChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_ResourceType()
		{
			this._PRJ_Resource = new EntitySet<PRJ_Resource>(new Action<PRJ_Resource>(this.attach_PRJ_Resource), new Action<PRJ_Resource>(this.detach_PRJ_Resource));
			OnCreated();
		}
		
		[Column(Storage="_TypeCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_SharedFlag", DbType="Bit NOT NULL")]
		public bool SharedFlag
		{
			get
			{
				return this._SharedFlag;
			}
			set
			{
				if ((this._SharedFlag != value))
				{
					this.OnSharedFlagChanging(value);
					this.SendPropertyChanging();
					this._SharedFlag = value;
					this.SendPropertyChanged("SharedFlag");
					this.OnSharedFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_WORK_REFERENCE_PRJ_WORK", Storage="_PRJ_Resource", OtherKey="ResourceType", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_Resource> PRJ_Resource
		{
			get
			{
				return this._PRJ_Resource;
			}
			set
			{
				this._PRJ_Resource.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_Resource(PRJ_Resource entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_ResourceType = this;
		}
		
		private void detach_PRJ_Resource(PRJ_Resource entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_ResourceType = null;
		}
	}
	
	[Table(Name="dbo.PRJ_ResourceUsageList")]
	public partial class PRJ_ResourceUsageList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _TaskID;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private string _Remark;
		
		private EntityRef<PRJ_Resource> _PRJ_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_ResourceUsageList()
		{
			this._PRJ_Resource = default(EntityRef<PRJ_Resource>);
			OnCreated();
		}
		
		[Column(Storage="_ResourceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._PRJ_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_ALLO_REFERENCE_PRJ_WORK", Storage="_PRJ_Resource", ThisKey="ResourceID", IsForeignKey=true)]
		public PRJ_Resource PRJ_Resource
		{
			get
			{
				return this._PRJ_Resource.Entity;
			}
			set
			{
				PRJ_Resource previousValue = this._PRJ_Resource.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_Resource.Entity = null;
						previousValue.PRJ_ResourceUsageList.Remove(this);
					}
					this._PRJ_Resource.Entity = value;
					if ((value != null))
					{
						value.PRJ_ResourceUsageList.Add(this);
						this._ResourceID = value.ID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("PRJ_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_SystemLog")]
	public partial class PRJ_SystemLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Content;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    #endregion
		
		public PRJ_SystemLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_Task")]
	public partial class PRJ_Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _TaskName;
		
		private string _TaskStatus;
		
		private string _ParentTaskID;
		
		private int _TaskLevelID;
		
		private int _TaskImportanceID;
		
		private int _SourceID;
		
		private int _TaskTypeID;
		
		private string _TaskContent;
		
		private string _TaskKeyPoints;
		
		private System.DateTime _BeginDate;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<System.DateTime> _RealBeginDate;
		
		private System.Nullable<System.DateTime> _RealEndDate;
		
		private string _PublisherWorkID;
		
		private System.DateTime _PublishDate;
		
		private string _GuardianWorkID;
		
		private string _InChargeWorkID;
		
		private double _Progress;
		
		private bool _IsMilestone;
		
		private int _DelayTimes;
		
		private bool _HasChild;
		
		private EntityRef<PRJ_TaskLevel> _PRJ_TaskLevel;
		
		private EntityRef<PRJ_TaskType> _PRJ_TaskType;
		
		private EntitySet<PRJ_TaskNegotiatingMessage> _PRJ_TaskNegotiatingMessage;
		
		private EntityRef<PRJ_TaskValuation> _PRJ_TaskValuation;
		
		private EntityRef<PRJ_TaskImportance> _PRJ_TaskImportance;
		
		private EntityRef<PRJ_TaskSource> _PRJ_TaskSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskStatusChanging(string value);
    partial void OnTaskStatusChanged();
    partial void OnParentTaskIDChanging(string value);
    partial void OnParentTaskIDChanged();
    partial void OnTaskLevelIDChanging(int value);
    partial void OnTaskLevelIDChanged();
    partial void OnTaskImportanceIDChanging(int value);
    partial void OnTaskImportanceIDChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnTaskTypeIDChanging(int value);
    partial void OnTaskTypeIDChanged();
    partial void OnTaskContentChanging(string value);
    partial void OnTaskContentChanged();
    partial void OnTaskKeyPointsChanging(string value);
    partial void OnTaskKeyPointsChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnRealBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRealBeginDateChanged();
    partial void OnRealEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRealEndDateChanged();
    partial void OnPublisherWorkIDChanging(string value);
    partial void OnPublisherWorkIDChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    partial void OnGuardianWorkIDChanging(string value);
    partial void OnGuardianWorkIDChanged();
    partial void OnInChargeWorkIDChanging(string value);
    partial void OnInChargeWorkIDChanged();
    partial void OnProgressChanging(double value);
    partial void OnProgressChanged();
    partial void OnIsMilestoneChanging(bool value);
    partial void OnIsMilestoneChanged();
    partial void OnDelayTimesChanging(int value);
    partial void OnDelayTimesChanged();
    partial void OnHasChildChanging(bool value);
    partial void OnHasChildChanged();
    #endregion
		
		public PRJ_Task()
		{
			this._PRJ_TaskLevel = default(EntityRef<PRJ_TaskLevel>);
			this._PRJ_TaskType = default(EntityRef<PRJ_TaskType>);
			this._PRJ_TaskNegotiatingMessage = new EntitySet<PRJ_TaskNegotiatingMessage>(new Action<PRJ_TaskNegotiatingMessage>(this.attach_PRJ_TaskNegotiatingMessage), new Action<PRJ_TaskNegotiatingMessage>(this.detach_PRJ_TaskNegotiatingMessage));
			this._PRJ_TaskValuation = default(EntityRef<PRJ_TaskValuation>);
			this._PRJ_TaskImportance = default(EntityRef<PRJ_TaskImportance>);
			this._PRJ_TaskSource = default(EntityRef<PRJ_TaskSource>);
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[Column(Storage="_TaskStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskStatus
		{
			get
			{
				return this._TaskStatus;
			}
			set
			{
				if ((this._TaskStatus != value))
				{
					this.OnTaskStatusChanging(value);
					this.SendPropertyChanging();
					this._TaskStatus = value;
					this.SendPropertyChanged("TaskStatus");
					this.OnTaskStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ParentTaskID", DbType="VarChar(50)")]
		public string ParentTaskID
		{
			get
			{
				return this._ParentTaskID;
			}
			set
			{
				if ((this._ParentTaskID != value))
				{
					this.OnParentTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTaskID = value;
					this.SendPropertyChanged("ParentTaskID");
					this.OnParentTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskLevelID", DbType="Int NOT NULL")]
		public int TaskLevelID
		{
			get
			{
				return this._TaskLevelID;
			}
			set
			{
				if ((this._TaskLevelID != value))
				{
					if (this._PRJ_TaskLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskLevelIDChanging(value);
					this.SendPropertyChanging();
					this._TaskLevelID = value;
					this.SendPropertyChanged("TaskLevelID");
					this.OnTaskLevelIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskImportanceID", DbType="Int NOT NULL")]
		public int TaskImportanceID
		{
			get
			{
				return this._TaskImportanceID;
			}
			set
			{
				if ((this._TaskImportanceID != value))
				{
					if (this._PRJ_TaskImportance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskImportanceIDChanging(value);
					this.SendPropertyChanging();
					this._TaskImportanceID = value;
					this.SendPropertyChanged("TaskImportanceID");
					this.OnTaskImportanceIDChanged();
				}
			}
		}
		
		[Column(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					if (this._PRJ_TaskSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskTypeID", DbType="Int NOT NULL")]
		public int TaskTypeID
		{
			get
			{
				return this._TaskTypeID;
			}
			set
			{
				if ((this._TaskTypeID != value))
				{
					if (this._PRJ_TaskType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TaskTypeID = value;
					this.SendPropertyChanged("TaskTypeID");
					this.OnTaskTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TaskContent
		{
			get
			{
				return this._TaskContent;
			}
			set
			{
				if ((this._TaskContent != value))
				{
					this.OnTaskContentChanging(value);
					this.SendPropertyChanging();
					this._TaskContent = value;
					this.SendPropertyChanged("TaskContent");
					this.OnTaskContentChanged();
				}
			}
		}
		
		[Column(Storage="_TaskKeyPoints", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TaskKeyPoints
		{
			get
			{
				return this._TaskKeyPoints;
			}
			set
			{
				if ((this._TaskKeyPoints != value))
				{
					this.OnTaskKeyPointsChanging(value);
					this.SendPropertyChanging();
					this._TaskKeyPoints = value;
					this.SendPropertyChanged("TaskKeyPoints");
					this.OnTaskKeyPointsChanged();
				}
			}
		}
		
		[Column(Storage="_BeginDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_RealBeginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RealBeginDate
		{
			get
			{
				return this._RealBeginDate;
			}
			set
			{
				if ((this._RealBeginDate != value))
				{
					this.OnRealBeginDateChanging(value);
					this.SendPropertyChanging();
					this._RealBeginDate = value;
					this.SendPropertyChanged("RealBeginDate");
					this.OnRealBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_RealEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RealEndDate
		{
			get
			{
				return this._RealEndDate;
			}
			set
			{
				if ((this._RealEndDate != value))
				{
					this.OnRealEndDateChanging(value);
					this.SendPropertyChanging();
					this._RealEndDate = value;
					this.SendPropertyChanged("RealEndDate");
					this.OnRealEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_PublisherWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PublisherWorkID
		{
			get
			{
				return this._PublisherWorkID;
			}
			set
			{
				if ((this._PublisherWorkID != value))
				{
					this.OnPublisherWorkIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherWorkID = value;
					this.SendPropertyChanged("PublisherWorkID");
					this.OnPublisherWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_PublishDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[Column(Storage="_GuardianWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GuardianWorkID
		{
			get
			{
				return this._GuardianWorkID;
			}
			set
			{
				if ((this._GuardianWorkID != value))
				{
					this.OnGuardianWorkIDChanging(value);
					this.SendPropertyChanging();
					this._GuardianWorkID = value;
					this.SendPropertyChanged("GuardianWorkID");
					this.OnGuardianWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_InChargeWorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InChargeWorkID
		{
			get
			{
				return this._InChargeWorkID;
			}
			set
			{
				if ((this._InChargeWorkID != value))
				{
					this.OnInChargeWorkIDChanging(value);
					this.SendPropertyChanging();
					this._InChargeWorkID = value;
					this.SendPropertyChanged("InChargeWorkID");
					this.OnInChargeWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Progress", DbType="Float NOT NULL")]
		public double Progress
		{
			get
			{
				return this._Progress;
			}
			set
			{
				if ((this._Progress != value))
				{
					this.OnProgressChanging(value);
					this.SendPropertyChanging();
					this._Progress = value;
					this.SendPropertyChanged("Progress");
					this.OnProgressChanged();
				}
			}
		}
		
		[Column(Storage="_IsMilestone", DbType="Bit NOT NULL")]
		public bool IsMilestone
		{
			get
			{
				return this._IsMilestone;
			}
			set
			{
				if ((this._IsMilestone != value))
				{
					this.OnIsMilestoneChanging(value);
					this.SendPropertyChanging();
					this._IsMilestone = value;
					this.SendPropertyChanged("IsMilestone");
					this.OnIsMilestoneChanged();
				}
			}
		}
		
		[Column(Storage="_DelayTimes", DbType="Int NOT NULL")]
		public int DelayTimes
		{
			get
			{
				return this._DelayTimes;
			}
			set
			{
				if ((this._DelayTimes != value))
				{
					this.OnDelayTimesChanging(value);
					this.SendPropertyChanging();
					this._DelayTimes = value;
					this.SendPropertyChanged("DelayTimes");
					this.OnDelayTimesChanged();
				}
			}
		}
		
		[Column(Storage="_HasChild", DbType="Bit NOT NULL")]
		public bool HasChild
		{
			get
			{
				return this._HasChild;
			}
			set
			{
				if ((this._HasChild != value))
				{
					this.OnHasChildChanging(value);
					this.SendPropertyChanging();
					this._HasChild = value;
					this.SendPropertyChanged("HasChild");
					this.OnHasChildChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK", Storage="_PRJ_TaskLevel", ThisKey="TaskLevelID", IsForeignKey=true)]
		public PRJ_TaskLevel PRJ_TaskLevel
		{
			get
			{
				return this._PRJ_TaskLevel.Entity;
			}
			set
			{
				PRJ_TaskLevel previousValue = this._PRJ_TaskLevel.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskLevel.Entity = null;
						previousValue.PRJ_Task.Remove(this);
					}
					this._PRJ_TaskLevel.Entity = value;
					if ((value != null))
					{
						value.PRJ_Task.Add(this);
						this._TaskLevelID = value.TaskLevelID;
					}
					else
					{
						this._TaskLevelID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskLevel");
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_14", Storage="_PRJ_TaskType", ThisKey="TaskTypeID", IsForeignKey=true)]
		public PRJ_TaskType PRJ_TaskType
		{
			get
			{
				return this._PRJ_TaskType.Entity;
			}
			set
			{
				PRJ_TaskType previousValue = this._PRJ_TaskType.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskType.Entity = null;
						previousValue.PRJ_Task.Remove(this);
					}
					this._PRJ_TaskType.Entity = value;
					if ((value != null))
					{
						value.PRJ_Task.Add(this);
						this._TaskTypeID = value.TaskTypeID;
					}
					else
					{
						this._TaskTypeID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskType");
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_19", Storage="_PRJ_TaskNegotiatingMessage", OtherKey="TaskID", DeleteRule="CASCADE")]
		public EntitySet<PRJ_TaskNegotiatingMessage> PRJ_TaskNegotiatingMessage
		{
			get
			{
				return this._PRJ_TaskNegotiatingMessage;
			}
			set
			{
				this._PRJ_TaskNegotiatingMessage.Assign(value);
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_23", Storage="_PRJ_TaskValuation", ThisKey="TaskID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public PRJ_TaskValuation PRJ_TaskValuation
		{
			get
			{
				return this._PRJ_TaskValuation.Entity;
			}
			set
			{
				PRJ_TaskValuation previousValue = this._PRJ_TaskValuation.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskValuation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskValuation.Entity = null;
						previousValue.PRJ_Task = null;
					}
					this._PRJ_TaskValuation.Entity = value;
					if ((value != null))
					{
						value.PRJ_Task = this;
					}
					this.SendPropertyChanged("PRJ_TaskValuation");
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_3", Storage="_PRJ_TaskImportance", ThisKey="TaskImportanceID", IsForeignKey=true)]
		public PRJ_TaskImportance PRJ_TaskImportance
		{
			get
			{
				return this._PRJ_TaskImportance.Entity;
			}
			set
			{
				PRJ_TaskImportance previousValue = this._PRJ_TaskImportance.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskImportance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskImportance.Entity = null;
						previousValue.PRJ_Task.Remove(this);
					}
					this._PRJ_TaskImportance.Entity = value;
					if ((value != null))
					{
						value.PRJ_Task.Add(this);
						this._TaskImportanceID = value.ImportanceID;
					}
					else
					{
						this._TaskImportanceID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskImportance");
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_4", Storage="_PRJ_TaskSource", ThisKey="SourceID", IsForeignKey=true)]
		public PRJ_TaskSource PRJ_TaskSource
		{
			get
			{
				return this._PRJ_TaskSource.Entity;
			}
			set
			{
				PRJ_TaskSource previousValue = this._PRJ_TaskSource.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskSource.Entity = null;
						previousValue.PRJ_Task.Remove(this);
					}
					this._PRJ_TaskSource.Entity = value;
					if ((value != null))
					{
						value.PRJ_Task.Add(this);
						this._SourceID = value.SourceID;
					}
					else
					{
						this._SourceID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskSource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_TaskNegotiatingMessage(PRJ_TaskNegotiatingMessage entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_Task = this;
		}
		
		private void detach_PRJ_TaskNegotiatingMessage(PRJ_TaskNegotiatingMessage entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_Task = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskAlarmMode")]
	public partial class PRJ_TaskAlarmMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlarmModeID;
		
		private string _AlarmMode;
		
		private EntitySet<PRJ_TaskAlarmSetting> _PRJ_TaskAlarmSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlarmModeIDChanging(int value);
    partial void OnAlarmModeIDChanged();
    partial void OnAlarmModeChanging(string value);
    partial void OnAlarmModeChanged();
    #endregion
		
		public PRJ_TaskAlarmMode()
		{
			this._PRJ_TaskAlarmSetting = new EntitySet<PRJ_TaskAlarmSetting>(new Action<PRJ_TaskAlarmSetting>(this.attach_PRJ_TaskAlarmSetting), new Action<PRJ_TaskAlarmSetting>(this.detach_PRJ_TaskAlarmSetting));
			OnCreated();
		}
		
		[Column(Storage="_AlarmModeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlarmModeID
		{
			get
			{
				return this._AlarmModeID;
			}
			set
			{
				if ((this._AlarmModeID != value))
				{
					this.OnAlarmModeIDChanging(value);
					this.SendPropertyChanging();
					this._AlarmModeID = value;
					this.SendPropertyChanged("AlarmModeID");
					this.OnAlarmModeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AlarmMode
		{
			get
			{
				return this._AlarmMode;
			}
			set
			{
				if ((this._AlarmMode != value))
				{
					this.OnAlarmModeChanging(value);
					this.SendPropertyChanging();
					this._AlarmMode = value;
					this.SendPropertyChanged("AlarmMode");
					this.OnAlarmModeChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_22", Storage="_PRJ_TaskAlarmSetting", OtherKey="AlarmModeID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_TaskAlarmSetting> PRJ_TaskAlarmSetting
		{
			get
			{
				return this._PRJ_TaskAlarmSetting;
			}
			set
			{
				this._PRJ_TaskAlarmSetting.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_TaskAlarmSetting(PRJ_TaskAlarmSetting entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskAlarmMode = this;
		}
		
		private void detach_PRJ_TaskAlarmSetting(PRJ_TaskAlarmSetting entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskAlarmMode = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskAlarmSetting")]
	public partial class PRJ_TaskAlarmSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AlarmUser;
		
		private int _AlarmModeID;
		
		private string _ItemID;
		
		private string _AlarmValue;
		
		private string _AlarmContent;
		
		private bool _FinishedFlag;
		
		private System.DateTime _RecordTime;
		
		private EntityRef<PRJ_TaskAlarmMode> _PRJ_TaskAlarmMode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAlarmUserChanging(string value);
    partial void OnAlarmUserChanged();
    partial void OnAlarmModeIDChanging(int value);
    partial void OnAlarmModeIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnAlarmValueChanging(string value);
    partial void OnAlarmValueChanged();
    partial void OnAlarmContentChanging(string value);
    partial void OnAlarmContentChanged();
    partial void OnFinishedFlagChanging(bool value);
    partial void OnFinishedFlagChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    #endregion
		
		public PRJ_TaskAlarmSetting()
		{
			this._PRJ_TaskAlarmMode = default(EntityRef<PRJ_TaskAlarmMode>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmUser", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AlarmUser
		{
			get
			{
				return this._AlarmUser;
			}
			set
			{
				if ((this._AlarmUser != value))
				{
					this.OnAlarmUserChanging(value);
					this.SendPropertyChanging();
					this._AlarmUser = value;
					this.SendPropertyChanged("AlarmUser");
					this.OnAlarmUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmModeID", DbType="Int NOT NULL")]
		public int AlarmModeID
		{
			get
			{
				return this._AlarmModeID;
			}
			set
			{
				if ((this._AlarmModeID != value))
				{
					if (this._PRJ_TaskAlarmMode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlarmModeIDChanging(value);
					this.SendPropertyChanging();
					this._AlarmModeID = value;
					this.SendPropertyChanged("AlarmModeID");
					this.OnAlarmModeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AlarmValue
		{
			get
			{
				return this._AlarmValue;
			}
			set
			{
				if ((this._AlarmValue != value))
				{
					this.OnAlarmValueChanging(value);
					this.SendPropertyChanging();
					this._AlarmValue = value;
					this.SendPropertyChanged("AlarmValue");
					this.OnAlarmValueChanged();
				}
			}
		}
		
		[Column(Storage="_AlarmContent", DbType="VarChar(300)")]
		public string AlarmContent
		{
			get
			{
				return this._AlarmContent;
			}
			set
			{
				if ((this._AlarmContent != value))
				{
					this.OnAlarmContentChanging(value);
					this.SendPropertyChanging();
					this._AlarmContent = value;
					this.SendPropertyChanged("AlarmContent");
					this.OnAlarmContentChanged();
				}
			}
		}
		
		[Column(Storage="_FinishedFlag", DbType="Bit NOT NULL")]
		public bool FinishedFlag
		{
			get
			{
				return this._FinishedFlag;
			}
			set
			{
				if ((this._FinishedFlag != value))
				{
					this.OnFinishedFlagChanging(value);
					this.SendPropertyChanging();
					this._FinishedFlag = value;
					this.SendPropertyChanged("FinishedFlag");
					this.OnFinishedFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_22", Storage="_PRJ_TaskAlarmMode", ThisKey="AlarmModeID", IsForeignKey=true)]
		public PRJ_TaskAlarmMode PRJ_TaskAlarmMode
		{
			get
			{
				return this._PRJ_TaskAlarmMode.Entity;
			}
			set
			{
				PRJ_TaskAlarmMode previousValue = this._PRJ_TaskAlarmMode.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_TaskAlarmMode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_TaskAlarmMode.Entity = null;
						previousValue.PRJ_TaskAlarmSetting.Remove(this);
					}
					this._PRJ_TaskAlarmMode.Entity = value;
					if ((value != null))
					{
						value.PRJ_TaskAlarmSetting.Add(this);
						this._AlarmModeID = value.AlarmModeID;
					}
					else
					{
						this._AlarmModeID = default(int);
					}
					this.SendPropertyChanged("PRJ_TaskAlarmMode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskCooperativePeople")]
	public partial class PRJ_TaskCooperativePeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _WorkID;
		
		private bool _ReceivedFlag;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    partial void OnReceivedFlagChanging(bool value);
    partial void OnReceivedFlagChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskCooperativePeople()
		{
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedFlag", DbType="Bit NOT NULL")]
		public bool ReceivedFlag
		{
			get
			{
				return this._ReceivedFlag;
			}
			set
			{
				if ((this._ReceivedFlag != value))
				{
					this.OnReceivedFlagChanging(value);
					this.SendPropertyChanging();
					this._ReceivedFlag = value;
					this.SendPropertyChanged("ReceivedFlag");
					this.OnReceivedFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskFile")]
	public partial class PRJ_TaskFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private System.Guid _FileID;
		
		private string _FileType;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntityRef<DOC_File> _DOC_File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskFile()
		{
			this._DOC_File = default(EntityRef<DOC_File>);
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._DOC_File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_DOC_FILE_1", Storage="_DOC_File", ThisKey="FileID", IsForeignKey=true)]
		public DOC_File DOC_File
		{
			get
			{
				return this._DOC_File.Entity;
			}
			set
			{
				DOC_File previousValue = this._DOC_File.Entity;
				if (((previousValue != value) 
							|| (this._DOC_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOC_File.Entity = null;
						previousValue.PRJ_TaskFile.Remove(this);
					}
					this._DOC_File.Entity = value;
					if ((value != null))
					{
						value.PRJ_TaskFile.Add(this);
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(System.Guid);
					}
					this.SendPropertyChanged("DOC_File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskImportance")]
	public partial class PRJ_TaskImportance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportanceID;
		
		private string _ImportanceName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_DailyWork> _PRJ_DailyWork;
		
		private EntitySet<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportanceIDChanging(int value);
    partial void OnImportanceIDChanged();
    partial void OnImportanceNameChanging(string value);
    partial void OnImportanceNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskImportance()
		{
			this._PRJ_DailyWork = new EntitySet<PRJ_DailyWork>(new Action<PRJ_DailyWork>(this.attach_PRJ_DailyWork), new Action<PRJ_DailyWork>(this.detach_PRJ_DailyWork));
			this._PRJ_Task = new EntitySet<PRJ_Task>(new Action<PRJ_Task>(this.attach_PRJ_Task), new Action<PRJ_Task>(this.detach_PRJ_Task));
			OnCreated();
		}
		
		[Column(Storage="_ImportanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImportanceID
		{
			get
			{
				return this._ImportanceID;
			}
			set
			{
				if ((this._ImportanceID != value))
				{
					this.OnImportanceIDChanging(value);
					this.SendPropertyChanging();
					this._ImportanceID = value;
					this.SendPropertyChanged("ImportanceID");
					this.OnImportanceIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImportanceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImportanceName
		{
			get
			{
				return this._ImportanceName;
			}
			set
			{
				if ((this._ImportanceName != value))
				{
					this.OnImportanceNameChanging(value);
					this.SendPropertyChanging();
					this._ImportanceName = value;
					this.SendPropertyChanged("ImportanceName");
					this.OnImportanceNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_DAIL_REFERENCE_PRJ_TASK", Storage="_PRJ_DailyWork", OtherKey="ImportanceID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_DailyWork> PRJ_DailyWork
		{
			get
			{
				return this._PRJ_DailyWork;
			}
			set
			{
				this._PRJ_DailyWork.Assign(value);
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_3", Storage="_PRJ_Task", OtherKey="TaskImportanceID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_Task> PRJ_Task
		{
			get
			{
				return this._PRJ_Task;
			}
			set
			{
				this._PRJ_Task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_DailyWork(PRJ_DailyWork entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskImportance = this;
		}
		
		private void detach_PRJ_DailyWork(PRJ_DailyWork entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskImportance = null;
		}
		
		private void attach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskImportance = this;
		}
		
		private void detach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskImportance = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskLevel")]
	public partial class PRJ_TaskLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskLevelID;
		
		private string _LevelName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskLevelIDChanging(int value);
    partial void OnTaskLevelIDChanged();
    partial void OnLevelNameChanging(string value);
    partial void OnLevelNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskLevel()
		{
			this._PRJ_Task = new EntitySet<PRJ_Task>(new Action<PRJ_Task>(this.attach_PRJ_Task), new Action<PRJ_Task>(this.detach_PRJ_Task));
			OnCreated();
		}
		
		[Column(Storage="_TaskLevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskLevelID
		{
			get
			{
				return this._TaskLevelID;
			}
			set
			{
				if ((this._TaskLevelID != value))
				{
					this.OnTaskLevelIDChanging(value);
					this.SendPropertyChanging();
					this._TaskLevelID = value;
					this.SendPropertyChanged("TaskLevelID");
					this.OnTaskLevelIDChanged();
				}
			}
		}
		
		[Column(Storage="_LevelName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LevelName
		{
			get
			{
				return this._LevelName;
			}
			set
			{
				if ((this._LevelName != value))
				{
					this.OnLevelNameChanging(value);
					this.SendPropertyChanging();
					this._LevelName = value;
					this.SendPropertyChanged("LevelName");
					this.OnLevelNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK", Storage="_PRJ_Task", OtherKey="TaskLevelID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_Task> PRJ_Task
		{
			get
			{
				return this._PRJ_Task;
			}
			set
			{
				this._PRJ_Task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskLevel = this;
		}
		
		private void detach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskLevel = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskLog")]
	public partial class PRJ_TaskLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TaskID;
		
		private string _Content;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    #endregion
		
		public PRJ_TaskLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskNegotiatingMessage")]
	public partial class PRJ_TaskNegotiatingMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TaskID;
		
		private string _WorkId;
		
		private System.DateTime _Time;
		
		private string _Description;
		
		private bool _DelayFlag;
		
		private EntityRef<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDelayFlagChanging(bool value);
    partial void OnDelayFlagChanged();
    #endregion
		
		public PRJ_TaskNegotiatingMessage()
		{
			this._PRJ_Task = default(EntityRef<PRJ_Task>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._PRJ_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[Column(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DelayFlag", DbType="Bit NOT NULL")]
		public bool DelayFlag
		{
			get
			{
				return this._DelayFlag;
			}
			set
			{
				if ((this._DelayFlag != value))
				{
					this.OnDelayFlagChanging(value);
					this.SendPropertyChanging();
					this._DelayFlag = value;
					this.SendPropertyChanged("DelayFlag");
					this.OnDelayFlagChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_19", Storage="_PRJ_Task", ThisKey="TaskID", IsForeignKey=true, DeleteOnNull=true)]
		public PRJ_Task PRJ_Task
		{
			get
			{
				return this._PRJ_Task.Entity;
			}
			set
			{
				PRJ_Task previousValue = this._PRJ_Task.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_Task.Entity = null;
						previousValue.PRJ_TaskNegotiatingMessage.Remove(this);
					}
					this._PRJ_Task.Entity = value;
					if ((value != null))
					{
						value.PRJ_TaskNegotiatingMessage.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(string);
					}
					this.SendPropertyChanged("PRJ_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskNotifyPeople")]
	public partial class PRJ_TaskNotifyPeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _WorkID;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    #endregion
		
		public PRJ_TaskNotifyPeople()
		{
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskObserver")]
	public partial class PRJ_TaskObserver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _WorkID;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnWorkIDChanging(string value);
    partial void OnWorkIDChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskObserver()
		{
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskProgressLog")]
	public partial class PRJ_TaskProgressLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TaskID;
		
		private int _Progress;
		
		private string _Content;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnProgressChanging(int value);
    partial void OnProgressChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    #endregion
		
		public PRJ_TaskProgressLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_Progress", DbType="Int NOT NULL")]
		public int Progress
		{
			get
			{
				return this._Progress;
			}
			set
			{
				if ((this._Progress != value))
				{
					this.OnProgressChanging(value);
					this.SendPropertyChanging();
					this._Progress = value;
					this.SendPropertyChanged("Progress");
					this.OnProgressChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_TaskSource")]
	public partial class PRJ_TaskSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SourceID;
		
		private string _SourceName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskSource()
		{
			this._PRJ_Task = new EntitySet<PRJ_Task>(new Action<PRJ_Task>(this.attach_PRJ_Task), new Action<PRJ_Task>(this.detach_PRJ_Task));
			OnCreated();
		}
		
		[Column(Storage="_SourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_SourceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_4", Storage="_PRJ_Task", OtherKey="SourceID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_Task> PRJ_Task
		{
			get
			{
				return this._PRJ_Task;
			}
			set
			{
				this._PRJ_Task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskSource = this;
		}
		
		private void detach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskSource = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskType")]
	public partial class PRJ_TaskType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskTypeID;
		
		private string _TypeName;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
		private string _Remark;
		
		private EntitySet<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskTypeIDChanging(int value);
    partial void OnTaskTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PRJ_TaskType()
		{
			this._PRJ_Task = new EntitySet<PRJ_Task>(new Action<PRJ_Task>(this.attach_PRJ_Task), new Action<PRJ_Task>(this.detach_PRJ_Task));
			OnCreated();
		}
		
		[Column(Storage="_TaskTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskTypeID
		{
			get
			{
				return this._TaskTypeID;
			}
			set
			{
				if ((this._TaskTypeID != value))
				{
					this.OnTaskTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TaskTypeID = value;
					this.SendPropertyChanged("TaskTypeID");
					this.OnTaskTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_14", Storage="_PRJ_Task", OtherKey="TaskTypeID", DeleteRule="NO ACTION")]
		public EntitySet<PRJ_Task> PRJ_Task
		{
			get
			{
				return this._PRJ_Task;
			}
			set
			{
				this._PRJ_Task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskType = this;
		}
		
		private void detach_PRJ_Task(PRJ_Task entity)
		{
			this.SendPropertyChanging();
			entity.PRJ_TaskType = null;
		}
	}
	
	[Table(Name="dbo.PRJ_TaskValuation")]
	public partial class PRJ_TaskValuation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _WorkId;
		
		private System.DateTime _Time;
		
		private int _Score;
		
		private string _PublisherWorkId;
		
		private System.Nullable<System.DateTime> _PublisherTime;
		
		private System.Nullable<int> _PublisherScore;
		
		private int _FinalScore;
		
		private EntityRef<PRJ_Task> _PRJ_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnPublisherWorkIdChanging(string value);
    partial void OnPublisherWorkIdChanged();
    partial void OnPublisherTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPublisherTimeChanged();
    partial void OnPublisherScoreChanging(System.Nullable<int> value);
    partial void OnPublisherScoreChanged();
    partial void OnFinalScoreChanging(int value);
    partial void OnFinalScoreChanged();
    #endregion
		
		public PRJ_TaskValuation()
		{
			this._PRJ_Task = default(EntityRef<PRJ_Task>);
			OnCreated();
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._PRJ_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[Column(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[Column(Storage="_PublisherWorkId", DbType="VarChar(50)")]
		public string PublisherWorkId
		{
			get
			{
				return this._PublisherWorkId;
			}
			set
			{
				if ((this._PublisherWorkId != value))
				{
					this.OnPublisherWorkIdChanging(value);
					this.SendPropertyChanging();
					this._PublisherWorkId = value;
					this.SendPropertyChanged("PublisherWorkId");
					this.OnPublisherWorkIdChanged();
				}
			}
		}
		
		[Column(Storage="_PublisherTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublisherTime
		{
			get
			{
				return this._PublisherTime;
			}
			set
			{
				if ((this._PublisherTime != value))
				{
					this.OnPublisherTimeChanging(value);
					this.SendPropertyChanging();
					this._PublisherTime = value;
					this.SendPropertyChanged("PublisherTime");
					this.OnPublisherTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PublisherScore", DbType="Int")]
		public System.Nullable<int> PublisherScore
		{
			get
			{
				return this._PublisherScore;
			}
			set
			{
				if ((this._PublisherScore != value))
				{
					this.OnPublisherScoreChanging(value);
					this.SendPropertyChanging();
					this._PublisherScore = value;
					this.SendPropertyChanged("PublisherScore");
					this.OnPublisherScoreChanged();
				}
			}
		}
		
		[Column(Storage="_FinalScore", DbType="Int NOT NULL")]
		public int FinalScore
		{
			get
			{
				return this._FinalScore;
			}
			set
			{
				if ((this._FinalScore != value))
				{
					this.OnFinalScoreChanging(value);
					this.SendPropertyChanging();
					this._FinalScore = value;
					this.SendPropertyChanged("FinalScore");
					this.OnFinalScoreChanged();
				}
			}
		}
		
		[Association(Name="FK_PRJ_TASK_REFERENCE_PRJ_TASK_23", Storage="_PRJ_Task", ThisKey="TaskID", IsForeignKey=true, DeleteOnNull=true)]
		public PRJ_Task PRJ_Task
		{
			get
			{
				return this._PRJ_Task.Entity;
			}
			set
			{
				PRJ_Task previousValue = this._PRJ_Task.Entity;
				if (((previousValue != value) 
							|| (this._PRJ_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRJ_Task.Entity = null;
						previousValue.PRJ_TaskValuation = null;
					}
					this._PRJ_Task.Entity = value;
					if ((value != null))
					{
						value.PRJ_TaskValuation = this;
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(string);
					}
					this.SendPropertyChanged("PRJ_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRJ_WorkRepeatCycle")]
	public partial class PRJ_WorkRepeatCycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepeatID;
		
		private string _Mode;
		
		private string _TaskID;
		
		private System.DateTime _BeginDate;
		
		private System.DateTime _EndDate;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private System.Nullable<bool> _Monday;
		
		private System.Nullable<bool> _Tuesday;
		
		private System.Nullable<bool> _Wednesday;
		
		private System.Nullable<bool> _Thursday;
		
		private System.Nullable<bool> _Friday;
		
		private System.Nullable<bool> _Saturday;
		
		private System.Nullable<bool> _Sunday;
		
		private System.Nullable<byte> _Month;
		
		private System.Nullable<byte> _Day;
		
		private System.DateTime _RecordTime;
		
		private string _Recorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepeatIDChanging(int value);
    partial void OnRepeatIDChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnMondayChanging(System.Nullable<bool> value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(System.Nullable<bool> value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(System.Nullable<bool> value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(System.Nullable<bool> value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(System.Nullable<bool> value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(System.Nullable<bool> value);
    partial void OnSaturdayChanged();
    partial void OnSundayChanging(System.Nullable<bool> value);
    partial void OnSundayChanged();
    partial void OnMonthChanging(System.Nullable<byte> value);
    partial void OnMonthChanged();
    partial void OnDayChanging(System.Nullable<byte> value);
    partial void OnDayChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnRecorderChanging(string value);
    partial void OnRecorderChanged();
    #endregion
		
		public PRJ_WorkRepeatCycle()
		{
			OnCreated();
		}
		
		[Column(Storage="_RepeatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepeatID
		{
			get
			{
				return this._RepeatID;
			}
			set
			{
				if ((this._RepeatID != value))
				{
					this.OnRepeatIDChanging(value);
					this.SendPropertyChanging();
					this._RepeatID = value;
					this.SendPropertyChanged("RepeatID");
					this.OnRepeatIDChanged();
				}
			}
		}
		
		[Column(Storage="_Mode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_BeginDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_BeginTime", DbType="VarChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="VarChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Monday", DbType="Bit")]
		public System.Nullable<bool> Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[Column(Storage="_Tuesday", DbType="Bit")]
		public System.Nullable<bool> Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[Column(Storage="_Wednesday", DbType="Bit")]
		public System.Nullable<bool> Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[Column(Storage="_Thursday", DbType="Bit")]
		public System.Nullable<bool> Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[Column(Storage="_Friday", DbType="Bit")]
		public System.Nullable<bool> Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[Column(Storage="_Saturday", DbType="Bit")]
		public System.Nullable<bool> Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[Column(Storage="_Sunday", DbType="Bit")]
		public System.Nullable<bool> Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Day", DbType="TinyInt")]
		public System.Nullable<byte> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Recorder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recorder
		{
			get
			{
				return this._Recorder;
			}
			set
			{
				if ((this._Recorder != value))
				{
					this.OnRecorderChanging(value);
					this.SendPropertyChanging();
					this._Recorder = value;
					this.SendPropertyChanged("Recorder");
					this.OnRecorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Task_ShortMessage")]
	public partial class Task_ShortMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Status;
		
		private string _CreaterID;
		
		private System.DateTime _CreateTime;
		
		private string _Receiver;
		
		private string _MobileNo;
		
		private string _Content;
		
		private System.DateTime _SendTime;
		
		private string _Remark;
		
		private int _ShortMsgTypeID;
		
		private EntityRef<Task_ShortMessageType> _Task_ShortMessageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreaterIDChanging(string value);
    partial void OnCreaterIDChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnShortMsgTypeIDChanging(int value);
    partial void OnShortMsgTypeIDChanged();
    #endregion
		
		public Task_ShortMessage()
		{
			this._Task_ShortMessageType = default(EntityRef<Task_ShortMessageType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_CreaterID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreaterID
		{
			get
			{
				return this._CreaterID;
			}
			set
			{
				if ((this._CreaterID != value))
				{
					this.OnCreaterIDChanging(value);
					this.SendPropertyChanging();
					this._CreaterID = value;
					this.SendPropertyChanged("CreaterID");
					this.OnCreaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Receiver", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[Column(Storage="_MobileNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="VarChar(800) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_SendTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._SendTime;
			}
			set
			{
				if ((this._SendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_ShortMsgTypeID", DbType="Int NOT NULL")]
		public int ShortMsgTypeID
		{
			get
			{
				return this._ShortMsgTypeID;
			}
			set
			{
				if ((this._ShortMsgTypeID != value))
				{
					if (this._Task_ShortMessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShortMsgTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ShortMsgTypeID = value;
					this.SendPropertyChanged("ShortMsgTypeID");
					this.OnShortMsgTypeIDChanged();
				}
			}
		}
		
		[Association(Name="FK_Task_ShortMessage_Task_ShortMessageType", Storage="_Task_ShortMessageType", ThisKey="ShortMsgTypeID", IsForeignKey=true)]
		public Task_ShortMessageType Task_ShortMessageType
		{
			get
			{
				return this._Task_ShortMessageType.Entity;
			}
			set
			{
				Task_ShortMessageType previousValue = this._Task_ShortMessageType.Entity;
				if (((previousValue != value) 
							|| (this._Task_ShortMessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task_ShortMessageType.Entity = null;
						previousValue.Task_ShortMessage.Remove(this);
					}
					this._Task_ShortMessageType.Entity = value;
					if ((value != null))
					{
						value.Task_ShortMessage.Add(this);
						this._ShortMsgTypeID = value.TypeID;
					}
					else
					{
						this._ShortMsgTypeID = default(int);
					}
					this.SendPropertyChanged("Task_ShortMessageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Task_ShortMessageType")]
	public partial class Task_ShortMessageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private EntitySet<Task_ShortMessage> _Task_ShortMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public Task_ShortMessageType()
		{
			this._Task_ShortMessage = new EntitySet<Task_ShortMessage>(new Action<Task_ShortMessage>(this.attach_Task_ShortMessage), new Action<Task_ShortMessage>(this.detach_Task_ShortMessage));
			OnCreated();
		}
		
		[Column(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Association(Name="FK_Task_ShortMessage_Task_ShortMessageType", Storage="_Task_ShortMessage", OtherKey="ShortMsgTypeID", DeleteRule="NO ACTION")]
		public EntitySet<Task_ShortMessage> Task_ShortMessage
		{
			get
			{
				return this._Task_ShortMessage;
			}
			set
			{
				this._Task_ShortMessage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Task_ShortMessage(Task_ShortMessage entity)
		{
			this.SendPropertyChanging();
			entity.Task_ShortMessageType = this;
		}
		
		private void detach_Task_ShortMessage(Task_ShortMessage entity)
		{
			this.SendPropertyChanging();
			entity.Task_ShortMessageType = null;
		}
	}
	
	[Table(Name="dbo.View_PRJ_Meeting")]
	public partial class View_PRJ_Meeting
	{
		
		private string _会议编号;
		
		private string _事务类别;
		
		private string _标题;
		
		private System.DateTime _开始时间;
		
		private System.DateTime _结束时间;
		
		private string _会议资源;
		
		private string _创建人工号;
		
		private string _创建人姓名;
		
		private System.DateTime _创建日期;
		
		private string _重要性;
		
		private string _会议状态;
		
		private string _主持人工号;
		
		private string _主持人姓名;
		
		private string _记录人工号;
		
		private string _记录人姓名;
		
		private string _与会人员;
		
		private string _提醒方式;
		
		private int _提醒提前分钟数;
		
		private string _会议正文;
		
		private string _批准人工号;
		
		private string _批准人;
		
		private System.Nullable<System.DateTime> _批准时间;
		
		public View_PRJ_Meeting()
		{
		}
		
		[Column(Storage="_会议编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 会议编号
		{
			get
			{
				return this._会议编号;
			}
			set
			{
				if ((this._会议编号 != value))
				{
					this._会议编号 = value;
				}
			}
		}
		
		[Column(Storage="_事务类别", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 事务类别
		{
			get
			{
				return this._事务类别;
			}
			set
			{
				if ((this._事务类别 != value))
				{
					this._事务类别 = value;
				}
			}
		}
		
		[Column(Storage="_标题", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 标题
		{
			get
			{
				return this._标题;
			}
			set
			{
				if ((this._标题 != value))
				{
					this._标题 = value;
				}
			}
		}
		
		[Column(Storage="_开始时间", DbType="DateTime NOT NULL")]
		public System.DateTime 开始时间
		{
			get
			{
				return this._开始时间;
			}
			set
			{
				if ((this._开始时间 != value))
				{
					this._开始时间 = value;
				}
			}
		}
		
		[Column(Storage="_结束时间", DbType="DateTime NOT NULL")]
		public System.DateTime 结束时间
		{
			get
			{
				return this._结束时间;
			}
			set
			{
				if ((this._结束时间 != value))
				{
					this._结束时间 = value;
				}
			}
		}
		
		[Column(Storage="_会议资源", DbType="VarChar(1000)")]
		public string 会议资源
		{
			get
			{
				return this._会议资源;
			}
			set
			{
				if ((this._会议资源 != value))
				{
					this._会议资源 = value;
				}
			}
		}
		
		[Column(Storage="_创建人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 创建人工号
		{
			get
			{
				return this._创建人工号;
			}
			set
			{
				if ((this._创建人工号 != value))
				{
					this._创建人工号 = value;
				}
			}
		}
		
		[Column(Storage="_创建人姓名", DbType="NVarChar(4000)")]
		public string 创建人姓名
		{
			get
			{
				return this._创建人姓名;
			}
			set
			{
				if ((this._创建人姓名 != value))
				{
					this._创建人姓名 = value;
				}
			}
		}
		
		[Column(Storage="_创建日期", DbType="DateTime NOT NULL")]
		public System.DateTime 创建日期
		{
			get
			{
				return this._创建日期;
			}
			set
			{
				if ((this._创建日期 != value))
				{
					this._创建日期 = value;
				}
			}
		}
		
		[Column(Storage="_重要性", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 重要性
		{
			get
			{
				return this._重要性;
			}
			set
			{
				if ((this._重要性 != value))
				{
					this._重要性 = value;
				}
			}
		}
		
		[Column(Storage="_会议状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 会议状态
		{
			get
			{
				return this._会议状态;
			}
			set
			{
				if ((this._会议状态 != value))
				{
					this._会议状态 = value;
				}
			}
		}
		
		[Column(Storage="_主持人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 主持人工号
		{
			get
			{
				return this._主持人工号;
			}
			set
			{
				if ((this._主持人工号 != value))
				{
					this._主持人工号 = value;
				}
			}
		}
		
		[Column(Storage="_主持人姓名", DbType="NVarChar(4000)")]
		public string 主持人姓名
		{
			get
			{
				return this._主持人姓名;
			}
			set
			{
				if ((this._主持人姓名 != value))
				{
					this._主持人姓名 = value;
				}
			}
		}
		
		[Column(Storage="_记录人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 记录人工号
		{
			get
			{
				return this._记录人工号;
			}
			set
			{
				if ((this._记录人工号 != value))
				{
					this._记录人工号 = value;
				}
			}
		}
		
		[Column(Storage="_记录人姓名", DbType="NVarChar(4000)")]
		public string 记录人姓名
		{
			get
			{
				return this._记录人姓名;
			}
			set
			{
				if ((this._记录人姓名 != value))
				{
					this._记录人姓名 = value;
				}
			}
		}
		
		[Column(Storage="_与会人员", DbType="VarChar(1000)")]
		public string 与会人员
		{
			get
			{
				return this._与会人员;
			}
			set
			{
				if ((this._与会人员 != value))
				{
					this._与会人员 = value;
				}
			}
		}
		
		[Column(Storage="_提醒方式", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 提醒方式
		{
			get
			{
				return this._提醒方式;
			}
			set
			{
				if ((this._提醒方式 != value))
				{
					this._提醒方式 = value;
				}
			}
		}
		
		[Column(Storage="_提醒提前分钟数", DbType="Int NOT NULL")]
		public int 提醒提前分钟数
		{
			get
			{
				return this._提醒提前分钟数;
			}
			set
			{
				if ((this._提醒提前分钟数 != value))
				{
					this._提醒提前分钟数 = value;
				}
			}
		}
		
		[Column(Storage="_会议正文", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 会议正文
		{
			get
			{
				return this._会议正文;
			}
			set
			{
				if ((this._会议正文 != value))
				{
					this._会议正文 = value;
				}
			}
		}
		
		[Column(Storage="_批准人工号", DbType="VarChar(50)")]
		public string 批准人工号
		{
			get
			{
				return this._批准人工号;
			}
			set
			{
				if ((this._批准人工号 != value))
				{
					this._批准人工号 = value;
				}
			}
		}
		
		[Column(Storage="_批准人", DbType="NVarChar(4000)")]
		public string 批准人
		{
			get
			{
				return this._批准人;
			}
			set
			{
				if ((this._批准人 != value))
				{
					this._批准人 = value;
				}
			}
		}
		
		[Column(Storage="_批准时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 批准时间
		{
			get
			{
				return this._批准时间;
			}
			set
			{
				if ((this._批准时间 != value))
				{
					this._批准时间 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_Resource")]
	public partial class View_PRJ_Resource
	{
		
		private System.Nullable<int> _资源类别编号;
		
		private string _资源类别名称;
		
		private System.Nullable<int> _资源编号;
		
		private string _资源名称;
		
		private System.Nullable<bool> _是共享类资源;
		
		private string _资源空闲;
		
		public View_PRJ_Resource()
		{
		}
		
		[Column(Storage="_资源类别编号", DbType="Int")]
		public System.Nullable<int> 资源类别编号
		{
			get
			{
				return this._资源类别编号;
			}
			set
			{
				if ((this._资源类别编号 != value))
				{
					this._资源类别编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源类别名称", DbType="VarChar(50)")]
		public string 资源类别名称
		{
			get
			{
				return this._资源类别名称;
			}
			set
			{
				if ((this._资源类别名称 != value))
				{
					this._资源类别名称 = value;
				}
			}
		}
		
		[Column(Storage="_资源编号", DbType="Int")]
		public System.Nullable<int> 资源编号
		{
			get
			{
				return this._资源编号;
			}
			set
			{
				if ((this._资源编号 != value))
				{
					this._资源编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源名称", DbType="VarChar(50)")]
		public string 资源名称
		{
			get
			{
				return this._资源名称;
			}
			set
			{
				if ((this._资源名称 != value))
				{
					this._资源名称 = value;
				}
			}
		}
		
		[Column(Storage="_是共享类资源", DbType="Bit")]
		public System.Nullable<bool> 是共享类资源
		{
			get
			{
				return this._是共享类资源;
			}
			set
			{
				if ((this._是共享类资源 != value))
				{
					this._是共享类资源 = value;
				}
			}
		}
		
		[Column(Storage="_资源空闲", DbType="VarChar(20)")]
		public string 资源空闲
		{
			get
			{
				return this._资源空闲;
			}
			set
			{
				if ((this._资源空闲 != value))
				{
					this._资源空闲 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_ResourceSimpleInfo")]
	public partial class View_PRJ_ResourceSimpleInfo
	{
		
		private string _资源类别名称;
		
		private bool _是共享资源;
		
		private string _资源名称;
		
		public View_PRJ_ResourceSimpleInfo()
		{
		}
		
		[Column(Storage="_资源类别名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 资源类别名称
		{
			get
			{
				return this._资源类别名称;
			}
			set
			{
				if ((this._资源类别名称 != value))
				{
					this._资源类别名称 = value;
				}
			}
		}
		
		[Column(Storage="_是共享资源", DbType="Bit NOT NULL")]
		public bool 是共享资源
		{
			get
			{
				return this._是共享资源;
			}
			set
			{
				if ((this._是共享资源 != value))
				{
					this._是共享资源 = value;
				}
			}
		}
		
		[Column(Storage="_资源名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 资源名称
		{
			get
			{
				return this._资源名称;
			}
			set
			{
				if ((this._资源名称 != value))
				{
					this._资源名称 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_ResourceUsageList")]
	public partial class View_PRJ_ResourceUsageList
	{
		
		private int _资源类别编号;
		
		private string _资源类别名称;
		
		private int _资源编号;
		
		private string _资源名称;
		
		private bool _是共享类资源;
		
		private System.Nullable<System.DateTime> _资源占用开始时间;
		
		private System.Nullable<System.DateTime> _资源占用结束时间;
		
		private string _占用资源事务名称;
		
		public View_PRJ_ResourceUsageList()
		{
		}
		
		[Column(Storage="_资源类别编号", DbType="Int NOT NULL")]
		public int 资源类别编号
		{
			get
			{
				return this._资源类别编号;
			}
			set
			{
				if ((this._资源类别编号 != value))
				{
					this._资源类别编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源类别名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 资源类别名称
		{
			get
			{
				return this._资源类别名称;
			}
			set
			{
				if ((this._资源类别名称 != value))
				{
					this._资源类别名称 = value;
				}
			}
		}
		
		[Column(Storage="_资源编号", DbType="Int NOT NULL")]
		public int 资源编号
		{
			get
			{
				return this._资源编号;
			}
			set
			{
				if ((this._资源编号 != value))
				{
					this._资源编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 资源名称
		{
			get
			{
				return this._资源名称;
			}
			set
			{
				if ((this._资源名称 != value))
				{
					this._资源名称 = value;
				}
			}
		}
		
		[Column(Storage="_是共享类资源", DbType="Bit NOT NULL")]
		public bool 是共享类资源
		{
			get
			{
				return this._是共享类资源;
			}
			set
			{
				if ((this._是共享类资源 != value))
				{
					this._是共享类资源 = value;
				}
			}
		}
		
		[Column(Storage="_资源占用开始时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 资源占用开始时间
		{
			get
			{
				return this._资源占用开始时间;
			}
			set
			{
				if ((this._资源占用开始时间 != value))
				{
					this._资源占用开始时间 = value;
				}
			}
		}
		
		[Column(Storage="_资源占用结束时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 资源占用结束时间
		{
			get
			{
				return this._资源占用结束时间;
			}
			set
			{
				if ((this._资源占用结束时间 != value))
				{
					this._资源占用结束时间 = value;
				}
			}
		}
		
		[Column(Storage="_占用资源事务名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 占用资源事务名称
		{
			get
			{
				return this._占用资源事务名称;
			}
			set
			{
				if ((this._占用资源事务名称 != value))
				{
					this._占用资源事务名称 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_Task")]
	public partial class View_PRJ_Task
	{
		
		private string _任务编号;
		
		private string _任务名称;
		
		private string _任务状态;
		
		private string _父任务编号;
		
		private int _任务等级编号;
		
		private string _任务等级;
		
		private int _任务重要性编号;
		
		private string _任务重要性;
		
		private int _任务类别编号;
		
		private string _任务类别;
		
		private int _任务来源编号;
		
		private string _任务来源;
		
		private string _任务内容;
		
		private string _任务关键点;
		
		private System.DateTime _开始时间;
		
		private System.DateTime _要求完成时间;
		
		private System.Nullable<System.DateTime> _实际开始时间;
		
		private System.Nullable<System.DateTime> _实际完成时间;
		
		private string _发布人工号;
		
		private string _发布人;
		
		private System.DateTime _发布日期;
		
		private string _督办人工号;
		
		private string _督办人;
		
		private string _负责人工号;
		
		private string _负责人;
		
		private string _责任部门;
		
		private string _责任部门编码;
		
		private double _任务进度;
		
		private bool _是里程碑;
		
		private int _延期次数;
		
		private System.Nullable<int> _总工期;
		
		private System.Nullable<int> _已执行天数;
		
		private System.Nullable<int> _剩余天数;
		
		private bool _是否有子任务;
		
		private System.Nullable<int> _最终评分;
		
		public View_PRJ_Task()
		{
		}
		
		[Column(Storage="_任务编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务编号
		{
			get
			{
				return this._任务编号;
			}
			set
			{
				if ((this._任务编号 != value))
				{
					this._任务编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 任务名称
		{
			get
			{
				return this._任务名称;
			}
			set
			{
				if ((this._任务名称 != value))
				{
					this._任务名称 = value;
				}
			}
		}
		
		[Column(Storage="_任务状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务状态
		{
			get
			{
				return this._任务状态;
			}
			set
			{
				if ((this._任务状态 != value))
				{
					this._任务状态 = value;
				}
			}
		}
		
		[Column(Storage="_父任务编号", DbType="VarChar(50)")]
		public string 父任务编号
		{
			get
			{
				return this._父任务编号;
			}
			set
			{
				if ((this._父任务编号 != value))
				{
					this._父任务编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务等级编号", DbType="Int NOT NULL")]
		public int 任务等级编号
		{
			get
			{
				return this._任务等级编号;
			}
			set
			{
				if ((this._任务等级编号 != value))
				{
					this._任务等级编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务等级", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务等级
		{
			get
			{
				return this._任务等级;
			}
			set
			{
				if ((this._任务等级 != value))
				{
					this._任务等级 = value;
				}
			}
		}
		
		[Column(Storage="_任务重要性编号", DbType="Int NOT NULL")]
		public int 任务重要性编号
		{
			get
			{
				return this._任务重要性编号;
			}
			set
			{
				if ((this._任务重要性编号 != value))
				{
					this._任务重要性编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务重要性", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务重要性
		{
			get
			{
				return this._任务重要性;
			}
			set
			{
				if ((this._任务重要性 != value))
				{
					this._任务重要性 = value;
				}
			}
		}
		
		[Column(Storage="_任务类别编号", DbType="Int NOT NULL")]
		public int 任务类别编号
		{
			get
			{
				return this._任务类别编号;
			}
			set
			{
				if ((this._任务类别编号 != value))
				{
					this._任务类别编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务类别", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务类别
		{
			get
			{
				return this._任务类别;
			}
			set
			{
				if ((this._任务类别 != value))
				{
					this._任务类别 = value;
				}
			}
		}
		
		[Column(Storage="_任务来源编号", DbType="Int NOT NULL")]
		public int 任务来源编号
		{
			get
			{
				return this._任务来源编号;
			}
			set
			{
				if ((this._任务来源编号 != value))
				{
					this._任务来源编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务来源", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务来源
		{
			get
			{
				return this._任务来源;
			}
			set
			{
				if ((this._任务来源 != value))
				{
					this._任务来源 = value;
				}
			}
		}
		
		[Column(Storage="_任务内容", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 任务内容
		{
			get
			{
				return this._任务内容;
			}
			set
			{
				if ((this._任务内容 != value))
				{
					this._任务内容 = value;
				}
			}
		}
		
		[Column(Storage="_任务关键点", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 任务关键点
		{
			get
			{
				return this._任务关键点;
			}
			set
			{
				if ((this._任务关键点 != value))
				{
					this._任务关键点 = value;
				}
			}
		}
		
		[Column(Storage="_开始时间", DbType="DateTime NOT NULL")]
		public System.DateTime 开始时间
		{
			get
			{
				return this._开始时间;
			}
			set
			{
				if ((this._开始时间 != value))
				{
					this._开始时间 = value;
				}
			}
		}
		
		[Column(Storage="_要求完成时间", DbType="DateTime NOT NULL")]
		public System.DateTime 要求完成时间
		{
			get
			{
				return this._要求完成时间;
			}
			set
			{
				if ((this._要求完成时间 != value))
				{
					this._要求完成时间 = value;
				}
			}
		}
		
		[Column(Storage="_实际开始时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 实际开始时间
		{
			get
			{
				return this._实际开始时间;
			}
			set
			{
				if ((this._实际开始时间 != value))
				{
					this._实际开始时间 = value;
				}
			}
		}
		
		[Column(Storage="_实际完成时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 实际完成时间
		{
			get
			{
				return this._实际完成时间;
			}
			set
			{
				if ((this._实际完成时间 != value))
				{
					this._实际完成时间 = value;
				}
			}
		}
		
		[Column(Storage="_发布人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 发布人工号
		{
			get
			{
				return this._发布人工号;
			}
			set
			{
				if ((this._发布人工号 != value))
				{
					this._发布人工号 = value;
				}
			}
		}
		
		[Column(Storage="_发布人", DbType="NVarChar(4000)")]
		public string 发布人
		{
			get
			{
				return this._发布人;
			}
			set
			{
				if ((this._发布人 != value))
				{
					this._发布人 = value;
				}
			}
		}
		
		[Column(Storage="_发布日期", DbType="DateTime NOT NULL")]
		public System.DateTime 发布日期
		{
			get
			{
				return this._发布日期;
			}
			set
			{
				if ((this._发布日期 != value))
				{
					this._发布日期 = value;
				}
			}
		}
		
		[Column(Storage="_督办人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 督办人工号
		{
			get
			{
				return this._督办人工号;
			}
			set
			{
				if ((this._督办人工号 != value))
				{
					this._督办人工号 = value;
				}
			}
		}
		
		[Column(Storage="_督办人", DbType="NVarChar(4000)")]
		public string 督办人
		{
			get
			{
				return this._督办人;
			}
			set
			{
				if ((this._督办人 != value))
				{
					this._督办人 = value;
				}
			}
		}
		
		[Column(Storage="_负责人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 负责人工号
		{
			get
			{
				return this._负责人工号;
			}
			set
			{
				if ((this._负责人工号 != value))
				{
					this._负责人工号 = value;
				}
			}
		}
		
		[Column(Storage="_负责人", DbType="NVarChar(4000)")]
		public string 负责人
		{
			get
			{
				return this._负责人;
			}
			set
			{
				if ((this._负责人 != value))
				{
					this._负责人 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门", DbType="NVarChar(4000)")]
		public string 责任部门
		{
			get
			{
				return this._责任部门;
			}
			set
			{
				if ((this._责任部门 != value))
				{
					this._责任部门 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门编码", DbType="NVarChar(4000)")]
		public string 责任部门编码
		{
			get
			{
				return this._责任部门编码;
			}
			set
			{
				if ((this._责任部门编码 != value))
				{
					this._责任部门编码 = value;
				}
			}
		}
		
		[Column(Storage="_任务进度", DbType="Float NOT NULL")]
		public double 任务进度
		{
			get
			{
				return this._任务进度;
			}
			set
			{
				if ((this._任务进度 != value))
				{
					this._任务进度 = value;
				}
			}
		}
		
		[Column(Storage="_是里程碑", DbType="Bit NOT NULL")]
		public bool 是里程碑
		{
			get
			{
				return this._是里程碑;
			}
			set
			{
				if ((this._是里程碑 != value))
				{
					this._是里程碑 = value;
				}
			}
		}
		
		[Column(Storage="_延期次数", DbType="Int NOT NULL")]
		public int 延期次数
		{
			get
			{
				return this._延期次数;
			}
			set
			{
				if ((this._延期次数 != value))
				{
					this._延期次数 = value;
				}
			}
		}
		
		[Column(Storage="_总工期", DbType="Int")]
		public System.Nullable<int> 总工期
		{
			get
			{
				return this._总工期;
			}
			set
			{
				if ((this._总工期 != value))
				{
					this._总工期 = value;
				}
			}
		}
		
		[Column(Storage="_已执行天数", DbType="Int")]
		public System.Nullable<int> 已执行天数
		{
			get
			{
				return this._已执行天数;
			}
			set
			{
				if ((this._已执行天数 != value))
				{
					this._已执行天数 = value;
				}
			}
		}
		
		[Column(Storage="_剩余天数", DbType="Int")]
		public System.Nullable<int> 剩余天数
		{
			get
			{
				return this._剩余天数;
			}
			set
			{
				if ((this._剩余天数 != value))
				{
					this._剩余天数 = value;
				}
			}
		}
		
		[Column(Storage="_是否有子任务", DbType="Bit NOT NULL")]
		public bool 是否有子任务
		{
			get
			{
				return this._是否有子任务;
			}
			set
			{
				if ((this._是否有子任务 != value))
				{
					this._是否有子任务 = value;
				}
			}
		}
		
		[Column(Storage="_最终评分", DbType="Int")]
		public System.Nullable<int> 最终评分
		{
			get
			{
				return this._最终评分;
			}
			set
			{
				if ((this._最终评分 != value))
				{
					this._最终评分 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_TaskLog")]
	public partial class View_PRJ_TaskLog
	{
		
		private string _任务名称;
		
		private string _内容;
		
		private System.DateTime _时间;
		
		private string _人员;
		
		private string _人员工号;
		
		private string _任务编号;
		
		public View_PRJ_TaskLog()
		{
		}
		
		[Column(Storage="_任务名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 任务名称
		{
			get
			{
				return this._任务名称;
			}
			set
			{
				if ((this._任务名称 != value))
				{
					this._任务名称 = value;
				}
			}
		}
		
		[Column(Storage="_内容", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 内容
		{
			get
			{
				return this._内容;
			}
			set
			{
				if ((this._内容 != value))
				{
					this._内容 = value;
				}
			}
		}
		
		[Column(Storage="_时间", DbType="DateTime NOT NULL")]
		public System.DateTime 时间
		{
			get
			{
				return this._时间;
			}
			set
			{
				if ((this._时间 != value))
				{
					this._时间 = value;
				}
			}
		}
		
		[Column(Storage="_人员", DbType="NVarChar(50)")]
		public string 人员
		{
			get
			{
				return this._人员;
			}
			set
			{
				if ((this._人员 != value))
				{
					this._人员 = value;
				}
			}
		}
		
		[Column(Storage="_人员工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 人员工号
		{
			get
			{
				return this._人员工号;
			}
			set
			{
				if ((this._人员工号 != value))
				{
					this._人员工号 = value;
				}
			}
		}
		
		[Column(Storage="_任务编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务编号
		{
			get
			{
				return this._任务编号;
			}
			set
			{
				if ((this._任务编号 != value))
				{
					this._任务编号 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_TaskNegotiatingMessage")]
	public partial class View_PRJ_TaskNegotiatingMessage
	{
		
		private string _任务编号;
		
		private string _任务名称;
		
		private string _协商人;
		
		private string _协商人工号;
		
		private System.DateTime _协商时间;
		
		private string _描述;
		
		private bool _请求延期;
		
		public View_PRJ_TaskNegotiatingMessage()
		{
		}
		
		[Column(Storage="_任务编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务编号
		{
			get
			{
				return this._任务编号;
			}
			set
			{
				if ((this._任务编号 != value))
				{
					this._任务编号 = value;
				}
			}
		}
		
		[Column(Storage="_任务名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 任务名称
		{
			get
			{
				return this._任务名称;
			}
			set
			{
				if ((this._任务名称 != value))
				{
					this._任务名称 = value;
				}
			}
		}
		
		[Column(Storage="_协商人", DbType="NVarChar(4000)")]
		public string 协商人
		{
			get
			{
				return this._协商人;
			}
			set
			{
				if ((this._协商人 != value))
				{
					this._协商人 = value;
				}
			}
		}
		
		[Column(Storage="_协商人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 协商人工号
		{
			get
			{
				return this._协商人工号;
			}
			set
			{
				if ((this._协商人工号 != value))
				{
					this._协商人工号 = value;
				}
			}
		}
		
		[Column(Storage="_协商时间", DbType="DateTime NOT NULL")]
		public System.DateTime 协商时间
		{
			get
			{
				return this._协商时间;
			}
			set
			{
				if ((this._协商时间 != value))
				{
					this._协商时间 = value;
				}
			}
		}
		
		[Column(Storage="_描述", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 描述
		{
			get
			{
				return this._描述;
			}
			set
			{
				if ((this._描述 != value))
				{
					this._描述 = value;
				}
			}
		}
		
		[Column(Storage="_请求延期", DbType="Bit NOT NULL")]
		public bool 请求延期
		{
			get
			{
				return this._请求延期;
			}
			set
			{
				if ((this._请求延期 != value))
				{
					this._请求延期 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PRJ_TaskProgressLog")]
	public partial class View_PRJ_TaskProgressLog
	{
		
		private string _任务名称;
		
		private int _进度;
		
		private string _内容;
		
		private System.DateTime _时间;
		
		private string _人员;
		
		private string _人员工号;
		
		private string _任务编号;
		
		public View_PRJ_TaskProgressLog()
		{
		}
		
		[Column(Storage="_任务名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 任务名称
		{
			get
			{
				return this._任务名称;
			}
			set
			{
				if ((this._任务名称 != value))
				{
					this._任务名称 = value;
				}
			}
		}
		
		[Column(Storage="_进度", DbType="Int NOT NULL")]
		public int 进度
		{
			get
			{
				return this._进度;
			}
			set
			{
				if ((this._进度 != value))
				{
					this._进度 = value;
				}
			}
		}
		
		[Column(Storage="_内容", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 内容
		{
			get
			{
				return this._内容;
			}
			set
			{
				if ((this._内容 != value))
				{
					this._内容 = value;
				}
			}
		}
		
		[Column(Storage="_时间", DbType="DateTime NOT NULL")]
		public System.DateTime 时间
		{
			get
			{
				return this._时间;
			}
			set
			{
				if ((this._时间 != value))
				{
					this._时间 = value;
				}
			}
		}
		
		[Column(Storage="_人员", DbType="NVarChar(50)")]
		public string 人员
		{
			get
			{
				return this._人员;
			}
			set
			{
				if ((this._人员 != value))
				{
					this._人员 = value;
				}
			}
		}
		
		[Column(Storage="_人员工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 人员工号
		{
			get
			{
				return this._人员工号;
			}
			set
			{
				if ((this._人员工号 != value))
				{
					this._人员工号 = value;
				}
			}
		}
		
		[Column(Storage="_任务编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 任务编号
		{
			get
			{
				return this._任务编号;
			}
			set
			{
				if ((this._任务编号 != value))
				{
					this._任务编号 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_Task_ShortMessage")]
	public partial class View_Task_ShortMessage
	{
		
		private string _短信编号;
		
		private string _短信类别;
		
		private string _状态;
		
		private string _接收人姓名;
		
		private string _接收人手机号;
		
		private string _短信内容;
		
		private System.DateTime _发送时间;
		
		private string _备注;
		
		private string _编制人工号;
		
		private string _编制人姓名;
		
		private System.DateTime _编制时间;
		
		public View_Task_ShortMessage()
		{
		}
		
		[Column(Storage="_短信编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 短信编号
		{
			get
			{
				return this._短信编号;
			}
			set
			{
				if ((this._短信编号 != value))
				{
					this._短信编号 = value;
				}
			}
		}
		
		[Column(Storage="_短信类别", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 短信类别
		{
			get
			{
				return this._短信类别;
			}
			set
			{
				if ((this._短信类别 != value))
				{
					this._短信类别 = value;
				}
			}
		}
		
		[Column(Storage="_状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 状态
		{
			get
			{
				return this._状态;
			}
			set
			{
				if ((this._状态 != value))
				{
					this._状态 = value;
				}
			}
		}
		
		[Column(Storage="_接收人姓名", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 接收人姓名
		{
			get
			{
				return this._接收人姓名;
			}
			set
			{
				if ((this._接收人姓名 != value))
				{
					this._接收人姓名 = value;
				}
			}
		}
		
		[Column(Storage="_接收人手机号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 接收人手机号
		{
			get
			{
				return this._接收人手机号;
			}
			set
			{
				if ((this._接收人手机号 != value))
				{
					this._接收人手机号 = value;
				}
			}
		}
		
		[Column(Storage="_短信内容", DbType="VarChar(800) NOT NULL", CanBeNull=false)]
		public string 短信内容
		{
			get
			{
				return this._短信内容;
			}
			set
			{
				if ((this._短信内容 != value))
				{
					this._短信内容 = value;
				}
			}
		}
		
		[Column(Storage="_发送时间", DbType="DateTime NOT NULL")]
		public System.DateTime 发送时间
		{
			get
			{
				return this._发送时间;
			}
			set
			{
				if ((this._发送时间 != value))
				{
					this._发送时间 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(500)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_编制人工号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 编制人工号
		{
			get
			{
				return this._编制人工号;
			}
			set
			{
				if ((this._编制人工号 != value))
				{
					this._编制人工号 = value;
				}
			}
		}
		
		[Column(Storage="_编制人姓名", DbType="NVarChar(4000)")]
		public string 编制人姓名
		{
			get
			{
				return this._编制人姓名;
			}
			set
			{
				if ((this._编制人姓名 != value))
				{
					this._编制人姓名 = value;
				}
			}
		}
		
		[Column(Storage="_编制时间", DbType="DateTime NOT NULL")]
		public System.DateTime 编制时间
		{
			get
			{
				return this._编制时间;
			}
			set
			{
				if ((this._编制时间 != value))
				{
					this._编制时间 = value;
				}
			}
		}
	}
	
	public partial class Fun_get_RecuresiveDeptResult
	{
		
		private string _DeptCode;
		
		private string _FatherCode;
		
		private System.Nullable<int> _Level;
		
		public Fun_get_RecuresiveDeptResult()
		{
		}
		
		[Column(Storage="_DeptCode", DbType="VarChar(50)")]
		public string DeptCode
		{
			get
			{
				return this._DeptCode;
			}
			set
			{
				if ((this._DeptCode != value))
				{
					this._DeptCode = value;
				}
			}
		}
		
		[Column(Storage="_FatherCode", DbType="VarChar(50)")]
		public string FatherCode
		{
			get
			{
				return this._FatherCode;
			}
			set
			{
				if ((this._FatherCode != value))
				{
					this._FatherCode = value;
				}
			}
		}
		
		[Column(Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
	}
	
	public partial class Fun_GetResourceViewResult
	{
		
		private System.Nullable<int> _资源类别编号;
		
		private string _资源类别名称;
		
		private System.Nullable<int> _资源编号;
		
		private string _资源名称;
		
		private System.Nullable<bool> _是共享类资源;
		
		private string _资源空闲;
		
		public Fun_GetResourceViewResult()
		{
		}
		
		[Column(Storage="_资源类别编号", DbType="Int")]
		public System.Nullable<int> 资源类别编号
		{
			get
			{
				return this._资源类别编号;
			}
			set
			{
				if ((this._资源类别编号 != value))
				{
					this._资源类别编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源类别名称", DbType="VarChar(50)")]
		public string 资源类别名称
		{
			get
			{
				return this._资源类别名称;
			}
			set
			{
				if ((this._资源类别名称 != value))
				{
					this._资源类别名称 = value;
				}
			}
		}
		
		[Column(Storage="_资源编号", DbType="Int")]
		public System.Nullable<int> 资源编号
		{
			get
			{
				return this._资源编号;
			}
			set
			{
				if ((this._资源编号 != value))
				{
					this._资源编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源名称", DbType="VarChar(50)")]
		public string 资源名称
		{
			get
			{
				return this._资源名称;
			}
			set
			{
				if ((this._资源名称 != value))
				{
					this._资源名称 = value;
				}
			}
		}
		
		[Column(Storage="_是共享类资源", DbType="Bit")]
		public System.Nullable<bool> 是共享类资源
		{
			get
			{
				return this._是共享类资源;
			}
			set
			{
				if ((this._是共享类资源 != value))
				{
					this._是共享类资源 = value;
				}
			}
		}
		
		[Column(Storage="_资源空闲", DbType="VarChar(20)")]
		public string 资源空闲
		{
			get
			{
				return this._资源空闲;
			}
			set
			{
				if ((this._资源空闲 != value))
				{
					this._资源空闲 = value;
				}
			}
		}
	}
	
	public partial class Fun_GetResourceView_1Result
	{
		
		private System.Nullable<int> _资源类别编号;
		
		private string _资源类别名称;
		
		private System.Nullable<int> _资源编号;
		
		private string _资源名称;
		
		private System.Nullable<bool> _是共享类资源;
		
		private string _资源空闲;
		
		public Fun_GetResourceView_1Result()
		{
		}
		
		[Column(Storage="_资源类别编号", DbType="Int")]
		public System.Nullable<int> 资源类别编号
		{
			get
			{
				return this._资源类别编号;
			}
			set
			{
				if ((this._资源类别编号 != value))
				{
					this._资源类别编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源类别名称", DbType="VarChar(50)")]
		public string 资源类别名称
		{
			get
			{
				return this._资源类别名称;
			}
			set
			{
				if ((this._资源类别名称 != value))
				{
					this._资源类别名称 = value;
				}
			}
		}
		
		[Column(Storage="_资源编号", DbType="Int")]
		public System.Nullable<int> 资源编号
		{
			get
			{
				return this._资源编号;
			}
			set
			{
				if ((this._资源编号 != value))
				{
					this._资源编号 = value;
				}
			}
		}
		
		[Column(Storage="_资源名称", DbType="VarChar(50)")]
		public string 资源名称
		{
			get
			{
				return this._资源名称;
			}
			set
			{
				if ((this._资源名称 != value))
				{
					this._资源名称 = value;
				}
			}
		}
		
		[Column(Storage="_是共享类资源", DbType="Bit")]
		public System.Nullable<bool> 是共享类资源
		{
			get
			{
				return this._是共享类资源;
			}
			set
			{
				if ((this._是共享类资源 != value))
				{
					this._是共享类资源 = value;
				}
			}
		}
		
		[Column(Storage="_资源空闲", DbType="VarChar(20)")]
		public string 资源空闲
		{
			get
			{
				return this._资源空闲;
			}
			set
			{
				if ((this._资源空闲 != value))
				{
					this._资源空闲 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
