<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServerModule</name>
    </assembly>
    <members>
        <member name="T:ServerModule.PYMnumber">
            <summary>
            拼音码服务类
            </summary>
        </member>
        <member name="M:ServerModule.PYMnumber.GetPYString(System.String)">
            <summary>
            获得拼音码
            </summary>
            <param name="str">字符串</param>
            <returns>返回拼音码</returns>
        </member>
        <member name="M:ServerModule.PYMnumber.GetPYChar(System.String)">
            <summary>
            取单个字符的拼音声母
            </summary>
            <param name="str">要转换的单个汉字</param>
            <returns>拼音声母(I、U、V不能返回)</returns>
        </member>
        <member name="T:ServerModule.MaterialRequisitionGoodsServer">
            <summary>
            领料单物品信息服务
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialRequisitionGoodsServer">
            <summary>
            领料单物品信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.SumListBillNoInfo(System.Collections.Generic.List{System.String})">
            <summary>
            根据单据列表合计物品需要领用的数量
            </summary>
            <param name="listBillNo">单据列表</param>
            <returns>返回物品领用数量信息字典</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.AutoCreateGoods(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            插入领料明细
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="listInfo">明细LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.CheckScrapGoods(System.String,System.Int32,System.Decimal,System.String@)">
            <summary>
            检测报废项目
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="count">出库数量</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.AddGoods(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.AddGoods(System.Collections.Generic.List{ServerModule.View_S_MaterialRequisitionGoods},System.String@)">
            <summary>
            批量添加物品
            </summary>
            <param name="lstGoods">要添加的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.UpdateyGoodsFromWireless(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            由无线接收信息更新实际领取物品的信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某领料单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">领料单号</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某领料单下的所有物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.GetGoods(System.String)">
            <summary>
            获取指定领料单的物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.GetGoodsAmount(System.String,System.Int32)">
            <summary>
            获取所有领料单对指定关联单据的指定物品实际领料数
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <param name="goodsID">物品ID</param>
            <returns>获取此物品已经领料的数量</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.GetGoods(System.String,ServerModule.S_InDepotGoodsBarCodeTable)">
            <summary>
            获取指定领料单的物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <param name="goodsBarCode">条形码物品表信息</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.GetAssemblyGoodsBill(System.String)">
            <summary>
            获取总成装配物品明细
            </summary>
            <param name="assemblyName">总成名称</param>
            <returns>返回获取到的总成装配物品明细</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.GetGoodsOfAssociatedBill(System.String)">
            <summary>
            获取关联单号对应的物品明细
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>返回获取到的物品明细信息, 没有时结果信息数量为0</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.UpdateGoods(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.CheckDepot(System.String,System.String,System.String)">
            <summary>
            检查材料类别是否同属于同一个仓库
            </summary>
            <param name="nowDepotCode">当前的材料类别编码</param>
            <param name="befDepotCode">之前的材料类别编码</param>
            <param name="storageID">库房ID</param>
            <returns>同属于返回True，不存在或者不属于返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.IsInJumblyBomGoods(System.String,System.String,System.String)">
            <summary>
            判断物品是否在BOM混装表中
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>存在返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionGoodsServer.InsertInfoExcel(System.String,System.Data.DataTable)">
            <summary>
            Excel导入
            </summary>
            <param name="billNo">单据号</param>
            <param name="infoTable">信息表</param>
        </member>
        <member name="F:ServerModule.MaterialRequisitionGoodsServer.m_basicGoodsServer">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionGoodsServer.m_serverReturn">
            <summary>
            还货服务组件
            </summary>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.CheckScrapGoods(System.String,System.Int32,System.Decimal,System.String@)">
            <summary>
            检测报废项目
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="count">出库数量</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.AutoCreateGoods(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            插入领料明细
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="listInfo">明细LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.GetGoods(System.String)">
            <summary>
            获取指定领料单的物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.GetGoodsOfAssociatedBill(System.String)">
            <summary>
            获取关联单号对应的物品明细
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>返回获取到的物品明细信息, 没有时结果信息数量为0</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.GetGoodsAmount(System.String,System.Int32)">
            <summary>
            获取所有领料单对指定关联单据的指定物品实际领料数
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <param name="goodsID">物品ID</param>
            <returns>获取此物品已经领料的数量</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.GetAssemblyGoodsBill(System.String)">
            <summary>
            获取总成装配物品明细
            </summary>
            <param name="assemblyName">总成名称</param>
            <returns>返回获取到的总成装配物品明细</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.GetGoods(System.String,ServerModule.S_InDepotGoodsBarCodeTable)">
            <summary>
            获取指定领料单的物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <param name="goodsBarCode">条形码物品表信息</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.OperationDetailInfo(ServerModule.DepotManagementDataContext,System.String,ServerModule.S_MaterialRequisitionGoods,GlobalObject.CE_OperatorMode)">
            <summary>
            明细操作
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="detailInfo">明细信息</param>
            <param name="mode">操作类型</param>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.AddGoods(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.AddGoods(System.Collections.Generic.List{ServerModule.View_S_MaterialRequisitionGoods},System.String@)">
            <summary>
            批量添加物品
            </summary>
            <param name="lstGoods">要添加的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="idList">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某领料单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">领料单号</param>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某领料单下的所有物品信息
            </summary>
            <param name="billNo">领料单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.UpdateGoods(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.UpdateyGoodsFromWireless(ServerModule.S_MaterialRequisitionGoods,System.String@)">
            <summary>
            由无线接收信息更新实际领取物品的信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition,ServerModule.S_MaterialRequisitionGoods)">
            <summary>
            赋值账务信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition,ServerModule.S_MaterialRequisitionGoods)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.CheckDepot(System.String,System.String,System.String)">
            <summary>
            检查材料类别是否同属于同一个仓库
            </summary>
            <param name="nowDepotCode">当前的材料类别编码</param>
            <param name="befDepotCode">之前的材料类别编码</param>
            <param name="storageID">库房ID</param>
            <returns>同属于返回True，不存在或者不属于返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.IsInJumblyBomGoods(System.String,System.String,System.String)">
            <summary>
            判断物品是否在BOM混装表中
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>存在返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionGoodsServer.SumListBillNoInfo(System.Collections.Generic.List{System.String})">
            <summary>
            根据单据列表合计物品需要领用的数量
            </summary>
            <param name="listBillNo">单据列表</param>
            <returns>返回物品领用数量信息字典</returns>
        </member>
        <member name="T:ServerModule.MaterialRequisitionGoodsServer.GoodsComparer">
            <summary>
            物品比较器
            </summary>
        </member>
        <member name="T:ServerModule.OrdinaryInDepotBillStatus">
            <summary>
            普通入库单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.等待质检">
            <summary>
            等待质检
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.等待工装验证">
            <summary>
            等待工装验证
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.等待入库">
            <summary>
            等待入库
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.等待工装验证报告">
            <summary>
            等待工装验证报告
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.已报废">
            <summary>
            已报废
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillStatus.已入库">
            <summary>
            已入库
            </summary>
        </member>
        <member name="T:ServerModule.IOrdinaryInDepotBillServer">
            <summary>
            普通入库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.GetHavingInvoice(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            获取普通入库单的单据到票标志
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回普通入库单是否到票的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.GetHavingInvoice(System.String,System.String@)">
            <summary>
            获取普通入库单的单据到票标志
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回普通入库单是否到票的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.GetBill(System.String)">
            <summary>
            获取普通入库单信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取普通入库单信息
            </summary>
            <param name="returnInfo">入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.AddBill(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加普通入库单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.SubmitNewBill(System.String,ServerModule.OrdinaryInDepotBillStatus,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            采购员提交单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="status">提交后的单据状态</param>
            <param name="returnInfo">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.SubmitQualityInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billInfo">取单据中质量信息部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.SubmitMachineValidationInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交工装验证信息
            </summary>
            <param name="billInfo">取单据中工装验证信息部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.SubmitInDepotInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.UpdateBill(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改单据
            </summary>
            <param name="bill">单据号</param>
            <param name="returnInfo">修改完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.UpdateGoodsType(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            更新指定单据物品类别
            </summary>
            <param name="billNo">单据编号</param>
            <param name="depotType">物品类别</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除普通入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="returnInfo">普通入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotBillServer.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退后查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.MaterialTypeData">
            <summary>
            材料类别信息类
            </summary>
        </member>
        <member name="F:ServerModule.MaterialTypeData.m_materialTypeCode">
            <summary>
            材料类别编码
            </summary>
        </member>
        <member name="F:ServerModule.MaterialTypeData.m_materialTypeName">
            <summary>
            材料类别名称
            </summary>
        </member>
        <member name="F:ServerModule.MaterialTypeData.m_materialTypeGrade">
            <summary>
            材料类别级数(用于构成树形结构)
            </summary>
        </member>
        <member name="F:ServerModule.MaterialTypeData.m_isEnd">
            <summary>
            是否末级(用于构成树形结构)
            </summary>
        </member>
        <member name="M:ServerModule.MaterialTypeData.Clone">
            <summary>
            克隆对象信息
            </summary>
            <returns>克隆后的对象</returns>
        </member>
        <member name="P:ServerModule.MaterialTypeData.MaterialTypeCode">
            <summary>
            获取或设置材料类别编码
            </summary>
        </member>
        <member name="P:ServerModule.MaterialTypeData.MaterialTypeName">
            <summary>
            获取或设置材料类别名称
            </summary>
        </member>
        <member name="P:ServerModule.MaterialTypeData.MaterialTypeGrade">
            <summary>
            获取或设置材料类别级数(用于构成树形结构)
            </summary>
        </member>
        <member name="P:ServerModule.MaterialTypeData.IsEnd">
            <summary>
            获取或设置是否末级(用于构成树形结构)
            </summary>
        </member>
        <member name="T:ServerModule.ITechnologyChange">
            <summary>
            技术变更单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.ITechnologyChange.GetBill(System.String)">
            <summary>
            获得单条记录
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.GetAllBill">
            <summary>
            获得全部单据
            </summary>
            <returns>返回获得的全部单据信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.SubmitBill(ServerModule.S_TechnologyChangeBill,System.String@)">
            <summary>
            提交单据
            </summary>
            <param name="inBill">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.GetBomInfo(System.String,System.String,System.String)">
            <summary>
            获得同名称同型号同规格在BOM表中的记录
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取的BOM表信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.UpdateBill(ServerModule.S_TechnologyChangeBill,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="inBill">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyChange.GetProductInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <param name="edition">型号</param>
            <returns>返回DataRow</returns>
        </member>
        <member name="T:ServerModule.IScrapGoodsServer">
            <summary>
            报废单物品信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.SaveGoods(System.String,ServerModule.S_ScrapBill,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            保存单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="bill">要保存的单据对象</param>
            <param name="goodsList">要保存的报废物品清单</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.IsInfoAccordance(System.String,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            检测是否与之前的数据一致
            </summary>
            <param name="djh">单据号</param>
            <param name="lstGoods">物品列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>True 一致 False 不一致</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.AddGoods(ServerModule.S_ScrapGoods,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.AddGoods(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods})">
            <summary>
            批量添加物品
            </summary>
            <param name="dataContxt">LINQ 数据上下文</param>
            <param name="lstGoods">要添加的物品信息列表</param>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某报废单下的所有物品信息
            </summary>
            <param name="dataContxt">LINQ 数据上下文</param>
            <param name="billNo">报废单号</param>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.GetGoods(System.String)">
            <summary>
            获取指定报废单的物品信息
            </summary>
            <param name="billNo">报废单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.GetGoodsByGroup(System.String)">
            <summary>
            获取指定报废单的物品分组信息
            </summary>
            <param name="billNo">报废单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.UpdateGoods(ServerModule.S_ScrapGoods,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapGoodsServer.UpdateGoods(System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            批量更新工时
            </summary>
            <param name="lstGoods">要更新的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.IHomemadeRejectList">
            <summary>
            自制件退货单明细服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.AddGoods(ServerModule.S_HomemadeRejectList,System.String,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某自制件退货单下的所有物品信息
            </summary>
            <param name="billNo">退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某自制件退货单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">退货单号</param>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="idList">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.GetBillView(System.String)">
            <summary>
            获取自制件退货单视图信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectList.UpdateGoods(ServerModule.S_HomemadeRejectList,System.String,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.HomemadeRejectList">
            <summary>
            自制件退货明细服务类
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectList.m_basicGoodsServer">
            <summary>
            基础物品信息服务
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectList.m_storeServer">
            <summary>
            库存服务
            </summary>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.GetBillView(System.String)">
            <summary>
            获取自制件退货单视图信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.SetPriceInfo(ServerModule.S_HomemadeRejectList,System.String,System.String@)">
            <summary>
            设置金额信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.AddGoods(ServerModule.S_HomemadeRejectList,System.String,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某自制件退货单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">退货单号</param>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某自制件退货单下的所有物品信息
            </summary>
            <param name="billNo">退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectList.UpdateGoods(ServerModule.S_HomemadeRejectList,System.String,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.HomemadePartInDepotServer">
            <summary>
            自制件入库单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IHomemadePartInDepotServer">
            <summary>
            自制件入库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">自制件入库单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.GetBill(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ单条信息</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件入库单信息
            </summary>
            <param name="returnBill">返回的入库单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.IsExist(System.Int32)">
            <summary>
            检查自制件入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.AddBill(ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件入库单
            </summary>
            <param name="bill">自制件单据信息</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.UpdateBill(ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            更新自制件入库单
            </summary>
            <param name="updateBill">更新的自制件单据信息</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.AffirmGoodsAmount(System.String,System.String,System.Int32,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            确认到货数
            </summary>
            <param name="billID">单据编号</param>
            <param name="confirmAmountSignatory">仓库收货员签名</param>
            <param name="goodsAmount">货物数量</param>
            <param name="billStatusInfo">单据状态消息</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.SubmitQualityInfo(System.String,ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.SubmitInDepotInfo(System.String,ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="returnBill">自制件入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除自制件入库单号</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.RebackBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            逐级回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="rebackReason">回退原因</param>
            <param name="returnBill">单据查询结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInDepotServer.ScrapBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="billID">要报废的单据号</param>
            <param name="returnBill">单据查询结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="F:ServerModule.HomemadePartInDepotServer.m_basicGoodsServer">
            <summary>
            获取基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.HomemadePartInDepotServer.m_personnelInfoServer">
            <summary>
            人员信息服务
            </summary>
        </member>
        <member name="F:ServerModule.HomemadePartInDepotServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.HomemadePartInDepotServer.m_billUniqueID">
            <summary>
            单据唯一码
            </summary>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.GetBill(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ单条信息</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件入库单信息
            </summary>
            <param name="returnBill">返回的入库单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.IsExist(System.Int32)">
            <summary>
            检查自制件入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.AddBill(ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件入库单
            </summary>
            <param name="bill">自制件单据信息</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.UpdateBill(ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            更新自制件入库单
            </summary>
            <param name="updateBill">更新的自制件单据信息</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.AffirmGoodsAmount(System.String,System.String,System.Int32,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            确认到货数
            </summary>
            <param name="billID">单据编号</param>
            <param name="confirmAmountSignatory">仓库收货员签名</param>
            <param name="goodsAmount">货物数量</param>
            <param name="billStatusInfo">单据状态消息</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.SubmitQualityInfo(System.String,ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">自制件入库单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.SubmitInDepotInfo(System.String,ServerModule.S_HomemadePartBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除自制件入库单号</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.RebackBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            逐级回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="rebackReason">回退原因</param>
            <param name="returnBill">返回的单据查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadePartBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="bill">单据信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInDepotServer.ScrapBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="billID">要报废的单据号</param>
            <param name="returnBill">单据查询结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.IGaugeManage">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerModule.IGaugeManage.GetSingleInfo(System.String)">
            <summary>
            获取单个量检具信息对象
            </summary>
            <param name="code">量检具编号</param>
            <returns>返回单条对象信息</returns>
        </member>
        <member name="M:ServerModule.IGaugeManage.GetTable_FilesInfo(System.String)">
            <summary>
            获取文件列表
            </summary>
            <param name="gaugeCode">量检具编号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IGaugeManage.UpLoadFileInfo(ServerModule.Bus_Gauge_Files)">
            <summary>
            上传文件
            </summary>
            <param name="fileInfo">文件对象</param>
        </member>
        <member name="M:ServerModule.IGaugeManage.DeleteFileInfo(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="keyValue">对象唯一编码</param>
        </member>
        <member name="M:ServerModule.IGaugeManage.DeleteInfo(System.String)">
            <summary>
            删除量检具
            </summary>
            <param name="gaugeCoding">量检具编号</param>
        </member>
        <member name="M:ServerModule.IGaugeManage.GetGaugeCodingFromBillNo(System.String,System.Int32)">
            <summary>
            根据单据号获得某个物品的量检具编号数据集
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回一条工装台帐的数据集</returns>
        </member>
        <member name="M:ServerModule.IGaugeManage.GetGaugeAllInfo(System.Boolean,System.Boolean)">
            <summary>
            获得量检具台帐信息
            </summary>
            <returns>返回量检具台帐信息</returns>
        </member>
        <member name="M:ServerModule.IGaugeManage.OperationGaugeStandingBook(ServerModule.DepotManagementDataContext,System.String,GlobalObject.CE_MarketingType,System.Int32)">
            <summary>
            操作量检具台账
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="type">业务类型</param>
            <param name="operationType">操作类型编号</param>
        </member>
        <member name="M:ServerModule.IGaugeManage.SaveInfo(ServerModule.S_GaugeStandingBook,GlobalObject.CE_OperatorMode)">
            <summary>
            保存信息
            </summary>
            <param name="gaugeStandingBook">量检具台账单条对象</param>
            <param name="mode">操作类型</param>
        </member>
        <member name="M:ServerModule.IGaugeManage.UpdateGaugeOperation(System.String,System.Int32,System.Data.DataTable)">
            <summary>
            批量插入量检具业务表
            </summary>
            <param name="billNo">业务单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="gaugeCodingTable">单据业务的量检具编号数据集</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.IsolationManageBill">
            <summary>
            不合格品隔离单据管理类
            </summary>
        </member>
        <member name="T:ServerModule.IIsolationManageBill">
            <summary>
            不合格品隔离单据管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.GetAllBill(System.String)">
            <summary>
            获取全部单据信息
            </summary>
            <param name="strSelect">选择信息</param>
            <returns>返回隔离单单据信息</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.ClearBillDate(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            清除隔离单数据
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">关联的采购退货单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>清除成功返回True，清除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.UpdateBill(ServerModule.S_IsolationManageBill,System.Boolean,System.String@)">
            <summary>
            提交单据（可重复完成）
            </summary>
            <param name="isolation">不合格品隔离处置单信息</param>
            <param name="flag">标志 True 等待隔离原因 False 等待主管审核</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.UpdateBill(System.String,ServerModule.S_IsolationManageBill,System.String@)">
            <summary>
            提交信息至数据库，按流程更新单据状态
            </summary>
            <param name="needBillStatus">要求的单据状态</param>
            <param name="isolation">单据信息</param>
            <param name="error">出现错误时返回的错误信息，没有错误返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.ScrapBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.ReturnBill(System.String,System.String,ServerModule.S_IsolationManageBill,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">隔离单单号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="isolation">隔离单单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.GetAssociateBillID(System.String)">
            <summary>
            获得隔离单的关联单据号
            </summary>
            <param name="billID">隔离单号</param>
            <returns>返回获得的关联单据号</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.AffrimBill(System.String,System.String,System.String@)">
            <summary>
            将隔离品调入库房，确认解除隔离
            </summary>
            <param name="billID">隔离单号</param>
            <param name="message">否认说明</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.ClearGoodsDate(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            清除单个单据(隔离单)
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">物品批次</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IIsolationManageBill.UpdateAssicotaeBillID(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            更改关联单据号
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="F:ServerModule.IsolationManageBill.m_serverStore">
            <summary>
            库存信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.IsolationManageBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.IsolationManageBill.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.IsolationManageBill.ClearBillDate(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            清除隔离单数据
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">关联的采购退货单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>清除成功返回True，清除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.GetAllBill(System.String)">
            <summary>
            获取全部单据信息
            </summary>
            <param name="strSelect">选择信息</param>
            <returns>返回隔离单单据信息</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.InsertNewDate(ServerModule.S_IsolationManageBill,System.String@)">
            <summary>
            新建单据
            </summary>
            <param name="isolation">不合格品隔离处置单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.UpdateBill(ServerModule.S_IsolationManageBill,System.Boolean,System.String@)">
            <summary>
            提交单据（可重复完成）
            </summary>
            <param name="isolation">不合格品隔离处置单信息</param>
            <param name="flag">标志 True 等待隔离原因 False 等待主管审核</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.AffrimBill(System.String,System.String,System.String@)">
            <summary>
            将隔离品调入库房，确认解除隔离
            </summary>
            <param name="billID">隔离单号</param>
            <param name="message">否认说明</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.UpdateBill(System.String,ServerModule.S_IsolationManageBill,System.String@)">
            <summary>
            提交信息至数据库，按流程更新单据状态
            </summary>
            <param name="needBillStatus">要求的单据状态</param>
            <param name="isolation">单据信息</param>
            <param name="error">出现错误时返回的错误信息，没有错误返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.CreateMeterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_IsolationManageBill,System.String,System.String@)">
            <summary>
            自动生成领料单
            </summary>
            <param name="context">数据上下文</param>
            <param name="isolation">隔离单单据信息</param>
            <param name="flag">是否为废弃数，若为废弃数则用“废弃数”表示</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>自动生成成功返回True，自动生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.ScrapBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.ReturnBill(System.String,System.String,ServerModule.S_IsolationManageBill,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">隔离单单号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="isolation">隔离单单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.GetAssociateBillID(System.String)">
            <summary>
            获得隔离单的关联单据号
            </summary>
            <param name="billID">隔离单号</param>
            <returns>返回获得的关联单据号</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.ClearGoodsDate(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            清除单个单据(隔离单)
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">物品批次</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IsolationManageBill.UpdateAssicotaeBillID(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            更改关联单据号
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.IQuarantine">
            <summary>
            产品隔离单管理类
            </summary>
        </member>
        <member name="M:ServerModule.IQuarantine.GetAllBill(System.String,System.String,System.String,System.String@)">
            <summary>
            过滤查询
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回表信息</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetBillID">
            <summary>
            获得单号
            </summary>
            <returns>返回获取的单号</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.DeleteBill(System.String,System.String@)">
            <summary>
            根据单据号删除(改变删除状态)
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.AddList(System.Data.DataTable,System.String,System.String@)">
            <summary>
            单据明细的数据库操作
            </summary>
            <param name="listInfo">需要操作的数据集</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.UpdateProductStockStatus(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            修改ProductStock表的状态
            </summary>
            <param name="stockCode">箱体编号</param>
            <param name="goodID">物品编号</param>
            <param name="flag">是否为正常状态 True 是 False 不是</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.AddBill(ServerModule.S_QuarantineBill,System.String@)">
            <summary>
            添加主表信息
            </summary>
            <param name="quarantine">S_QuarantineBill对象</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.AuditingBill(System.String,System.String,System.String,System.String@)">
            <summary>
            仓管审核，修改主表状态
            </summary>
            <param name="billID">单据号</param>
            <param name="handle">是否处理标志 字符串</param>
            <param name="status">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetList(System.String,System.String@)">
            <summary>
            根据单据号查询明细
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回表数据</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.UpdateList(ServerModule.S_QuarantineList,System.String@)">
            <summary>
            修改明细
            </summary>
            <param name="quarantineList">产品明细对象</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetOperationStatus(System.String,System.String,System.String@)">
            <summary>
            通过单据号查到处理状态
            </summary>
            <param name="billID">单据号</param>
            <param name="code">箱体编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetProductStockInfo(System.String,System.String,System.String@)">
            <summary>
            查询入库商品信息
            </summary>
            <param name="goodsID">物品编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetProductCodeInfo(System.String)">
            <summary>
            查找产品编号查找信息
            </summary>
            <param name="goodsID">产品ID</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetInsulateGoodsInfo">
            <summary>
            查找已经隔离了的产品
            </summary>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.GetBillID(System.String)">
            <summary>
            通过箱体编号查看单据号
            </summary>
            <param name="stockCode">箱体编号</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.IQuarantine.HandleBill(System.String,System.String,System.String,System.String@)">
            <summary>
            质管处理，修改表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="disposeName">处理人</param>
            <param name="dispose">处理方案</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True</returns>
        </member>
        <member name="T:ServerModule.GoodsLeastPackAndStock">
            <summary>
            供应商物品采购配额管理类（最小采购量、最小包装数）
            </summary>
        </member>
        <member name="T:ServerModule.IGoodsLeastPackAndStock">
            <summary>
            供应商物品采购配置服务接口（最小采购量、最小包装数）
            </summary>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.AddInfo(ServerModule.B_GoodsLeastPackAndStock,System.String@)">
            <summary>
            向供应商配额设置表中添加数据
            </summary>
            <param name="inLeast">供应商物品采购配额信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除供应商配额设置表中的一条数据
            </summary>
            <param name="id">序号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.GetAllInfo">
            <summary>
            获得供应商物品采购配置的所有信息
            </summary>
            <returns>返回获取到供应商物品采购配置的所有记录</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.UpdateInfo(ServerModule.B_GoodsLeastPackAndStock,System.String@)">
            <summary>
            修改供应商配额设置表中的一条数据
            </summary>
            <param name="inLeast">供应商物品采购配额信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.GetMaxID">
            <summary>
            获得最大序号
            </summary>
            <returns>返回获取到的最大序号</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.GetGoodsUseBomTable(System.String,System.String,System.String)">
            <summary>
            获得BOM表零部件不在安全库存或配额中
            </summary>
            <param name="editionSql">产品类型</param>
            <param name="whereSql">剔除条件</param>
            <param name="DataTableName">表名，与Bom相比较的表</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IGoodsLeastPackAndStock.GetGoodsNotUseBomTable(System.String,System.String)">
            <summary>
            获得安全库存或配额中存在没有使用的零件
            </summary>
            <param name="whereSql">剔除条件</param>
            <param name="DataTableName">表名，与Bom相比较的表</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.GetAllInfo">
            <summary>
            获得供应商物品采购配置的所有信息
            </summary>
            <returns>返回获取到供应商物品采购配置的所有记录</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.GetMaxID">
            <summary>
            获得最大序号
            </summary>
            <returns>返回获取到的最大序号</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.AddInfo(ServerModule.B_GoodsLeastPackAndStock,System.String@)">
            <summary>
            向供应商配额设置表中添加数据
            </summary>
            <param name="inLeast">供应商物品采购配额信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.UpdateInfo(ServerModule.B_GoodsLeastPackAndStock,System.String@)">
            <summary>
            修改供应商配额设置表中的一条数据
            </summary>
            <param name="inLeast">供应商物品采购配额信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除供应商配额设置表中的一条数据
            </summary>
            <param name="id">序号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.GetGoodsUseBomTable(System.String,System.String,System.String)">
            <summary>
            获得BOM表零部件不在安全库存或配额中
            </summary>
            <param name="editionSql">产品类型</param>
            <param name="whereSql">剔除条件</param>
            <param name="DataTableName">表名，与Bom相比较的表</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.GoodsLeastPackAndStock.GetGoodsNotUseBomTable(System.String,System.String)">
            <summary>
            获得安全库存或配额中存在没有使用的零件
            </summary>
            <param name="whereSql">剔除条件</param>
            <param name="DataTableName">表名，与Bom相比较的表</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="T:ServerModule.CalculateClass">
            <summary>
            金额转换类
            </summary>
        </member>
        <member name="M:ServerModule.CalculateClass.GetDecimalData(System.String)">
            <summary>
            小数位大写金额
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.CalculateClass.GetTotalPrice(System.Decimal)">
            <summary>
            大写金额
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ServerModule.ToolsManage">
            <summary>
            工具管理服务
            </summary>
        </member>
        <member name="T:ServerModule.IToolsManage">
            <summary>
            工具管理服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IToolsManage.IsTools(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            是否为工具
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <returns>是 ： True, 否 ：False</returns>
        </member>
        <member name="M:ServerModule.IToolsManage.GetDayToDayViewInfo">
            <summary>
            获得工具流水账视图信息
            </summary>
            <returns>返回对象集列表</returns>
        </member>
        <member name="M:ServerModule.IToolsManage.DayToDayAccount(ServerModule.DepotManagementDataContext,ServerModule.S_DayToDay_Tools)">
            <summary>
            流水账记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="dayToDayInfo">流水账对象</param>
        </member>
        <member name="M:ServerModule.IToolsManage.GetMachineAccountViewInfo">
            <summary>
            获得视图信息
            </summary>
            <returns>返回对象集列表</returns>
        </member>
        <member name="M:ServerModule.IToolsManage.IsTools(System.Int32)">
            <summary>
            是否为工具
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>是 ： True, 否 ：False</returns>
        </member>
        <member name="M:ServerModule.IToolsManage.OpertionInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MachineAccount_Tools)">
            <summary>
            操作工具台帐
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="toolsInfo">工具台帐对象</param>
        </member>
        <member name="M:ServerModule.IToolsManage.DayToDayAccount(ServerModule.DepotManagementDataContext,ServerModule.S_MachineAccount_Tools,System.String)">
            <summary>
            工具流水账记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="toolsInfo">工具台帐对象</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.ToolsManage.IsTools(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            是否为工具
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <returns>是 ： True, 否 ：False</returns>
        </member>
        <member name="M:ServerModule.ToolsManage.IsTools(System.Int32)">
            <summary>
            是否为工具
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>是 ： True, 否 ：False</returns>
        </member>
        <member name="M:ServerModule.ToolsManage.GetMachineAccountViewInfo">
            <summary>
            获得工具账存视图信息
            </summary>
            <returns>返回对象集列表</returns>
        </member>
        <member name="M:ServerModule.ToolsManage.GetDayToDayViewInfo">
            <summary>
            获得工具流水账视图信息
            </summary>
            <returns>返回对象集列表</returns>
        </member>
        <member name="M:ServerModule.ToolsManage.OpertionInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MachineAccount_Tools)">
            <summary>
            操作工具台帐
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="toolsInfo">工具台帐对象</param>
        </member>
        <member name="M:ServerModule.ToolsManage.DayToDayAccount(ServerModule.DepotManagementDataContext,ServerModule.S_DayToDay_Tools)">
            <summary>
            流水账记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="dayToDayInfo">流水账对象</param>
        </member>
        <member name="M:ServerModule.ToolsManage.DayToDayAccount(ServerModule.DepotManagementDataContext,ServerModule.S_MachineAccount_Tools,System.String)">
            <summary>
            工具流水账记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="toolsInfo">工具台帐对象</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="T:ServerModule.ScrapBillStatus">
            <summary>
            报废单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.等待质检批准">
            <summary>
            等待质检批准
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.等待SQE处理意见">
            <summary>
            等待SQE处理意见
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.等待仓管确认">
            <summary>
            等待仓管确认
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.IScrapBillServer">
            <summary>
            报废单服务
            </summary>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetOrderForm(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String)">
            <summary>
            获得订单号
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
            <returns>返回字符串</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetBill(System.String)">
            <summary>
            获取单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetScrapBill(System.DateTime,System.DateTime)">
            <summary>
            获取指定时间范围内的所有报废单信息
            </summary>
            <param name="start">开始时间</param>
            <param name="end">终止时间</param>
            <returns>返回所有的报废单</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetBillView(System.String)">
            <summary>
            获取单据视图信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetAllBill(System.DateTime,System.DateTime,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有日期范围内单据信息
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.GetAllBillForFetchGoods(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有已经完成并且需要冲抵领料单的单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.AddBill(ServerModule.DepotManagementDataContext,ServerModule.S_ScrapBill,System.String@)">
            <summary>
            添加单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="dataContxt">数据上下文</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.DeleteBill(System.String,System.Boolean,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="flag">操作标志</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.DeleteBill(ServerModule.DepotManagementDataContext,System.String,System.Boolean,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="dataContxt">LINQ 数据库上下文</param>
            <param name="billNo">单据号</param>
            <param name="flag">【此参数已作废】是否设置单据为报废状态（不真正删除单据）</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.UpdateBill(ServerModule.S_ScrapBill,System.String@)">
            <summary>
            修改单据(仅更新报废类别、原因、是否冲抵领料单)
            </summary>
            <param name="bill">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.SubmitNewBill(System.String,System.String@)">
            <summary>
            提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.DirectorAuthorizeBill(System.String,System.String,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.SubmitQualityInfo(System.String,ServerModule.S_ScrapBill,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.FinishBill(System.String,System.String,System.String@)">
            <summary>
            完成单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IScrapBillServer.SubmitSQEMessage(System.String,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            提交SQE信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="lstGoods">报废物品清单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.MaterialReturnedInTheDepotBillStatus">
            <summary>
            领料退库单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepotBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepotBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepotBillStatus.等待质检批准">
            <summary>
            等待质检批准
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepotBillStatus.等待仓管退库">
            <summary>
            等待仓管退库
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepotBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialReturnedInTheDepot">
            <summary>
            领料退库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有领料退库单信息
            </summary>
            <param name="returnBill">入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.GetBill(System.String)">
            <summary>
            获取领料退库单信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.GetBillView(System.String)">
            <summary>
            获取领料退库单视图信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.GetAllBillForFetchGoods(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            为领料而获取所有已经完成的单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.AddBill(ServerModule.S_MaterialReturnedInTheDepot,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加领料退库单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除领料退库单
            </summary>
            <param name="billNo">领料退库单号</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料退库单号</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.UpdateBill(ServerModule.S_MaterialReturnedInTheDepot,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料退库单(只修改编制人涉及信息)
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            领料出库人提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.DirectorAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.QualityAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            质量批准单据
            </summary>
            <param name="billID">单据编号</param>
            <param name="name">质量签名</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成领料退库单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.IMaterialReturnedInTheDepot.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退更新后查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.CheckReturnRepair">
            <summary>
            挑选返工返修服务组件
            </summary>
        </member>
        <member name="T:ServerModule.ICheckReturnRepair">
            <summary>
            挑选返修返工单业务操作服务接口
            </summary>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.Create(System.String,System.String,System.String@,System.String@)">
            <summary>
            创建挑返单
            </summary>
            <param name="djh">报检单单据号</param>
            <param name="logID">挑返单创建人工号</param>
            <param name="error">出错时返回错误信息</param>
            <param name="tfDJH">挑返单单据号</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回查询到的挑返单的单据信息</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.GetData(System.String)">
            <summary>
            获得单条数据
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条挑返单的单据信息</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.UpdateBill(ServerModule.S_CheckReturnRepairBill,System.String@)">
            <summary>
            根据单据状态更新相应的单据信息
            </summary>
            <param name="bill">Linq挑返单的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>处理成功返回True，处理失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.ScrapBill(ServerModule.S_CheckReturnRepairBill,System.Boolean,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="inReturn">Linq挑返单数据集</param>
            <param name="flag">标志 True 等待质检机检验 False 等待质检电检验</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.SubmitBill(ServerModule.S_CheckReturnRepairBill,System.String@)">
            <summary>
            编制人提交单据
            </summary>
            <param name="inReturn">Linq挑返单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>处理成功返回True，处理失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">操作类型(单据状态)</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckReturnRepair.ScrapAllBill(System.String,System.String@)">
            <summary>
            报废入库单单号对应的所有挑返单
            </summary>
            <param name="inDepotBillID">入库单单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="F:ServerModule.CheckReturnRepair.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckReturnRepair.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.Create(System.String,System.String,System.String@,System.String@)">
            <summary>
            创建挑返单
            </summary>
            <param name="djh">报检单单据号</param>
            <param name="logID">挑返单创建人工号</param>
            <param name="error">出错时返回错误信息</param>
            <param name="tfDJH">挑返单单据号</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回查询到的挑返单的单据信息</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.GetData(System.String)">
            <summary>
            获得单条数据
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条挑返单的单据信息</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.SubmitBill(ServerModule.S_CheckReturnRepairBill,System.String@)">
            <summary>
            编制人提交单据
            </summary>
            <param name="inReturn">Linq挑返单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>处理成功返回True，处理失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.UpdateBill(ServerModule.S_CheckReturnRepairBill,System.String@)">
            <summary>
            操作数据库
            </summary>
            <param name="bill">Linq挑返单的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>处理成功返回True，处理失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.UpdateInDepotBill(ServerModule.DepotManagementDataContext,ServerModule.S_CheckReturnRepairBill,System.String@)">
            <summary>
            更新报检入库单（记录合格数、报废数、退货数等，并更改单据状态）
            </summary>
            <param name="dataContext">LINQ数据上下文</param>
            <param name="bill">Linq挑返单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.ScrapBill(ServerModule.S_CheckReturnRepairBill,System.Boolean,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="inReturn">Linq挑返单数据集</param>
            <param name="flag">标志 True 等待质检机检验 False 等待质检电检验</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">操作类型(单据状态)</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckReturnRepair.ScrapAllBill(System.String,System.String@)">
            <summary>
            报废入库单单号对应的所有挑返单
            </summary>
            <param name="inDepotBillID">入库单单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.CheckOutInDepotForOutsourcingServer">
            <summary>
            委外报检入库管理类
            </summary>
        </member>
        <member name="T:ServerModule.ICheckOutInDepotForOutsourcingServer">
            <summary>
            委外报检入库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">报检单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>生成成功返回True，生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.AddScrapBill(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            插入报废单
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="outSourcing">Linq操作数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.GetBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            查询显示的数据
            </summary>
            <param name="returnBill">返回 IQueryResult 数据集 </param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>查询成功返回True，查询失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.AddBill(ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            插入信息
            </summary>
            <param name="outSourcing">Linq数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.UpdateBill(ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="outSourcing">Linq操作数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.GetBill(System.String)">
            <summary>
            获得一条记录
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ S_CheckOutInDepotForOutsourcingBill 视图</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotForOutsourcingServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_serverDepartment">
            <summary>
            部门信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_serverBasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_personnelInfoServer">
            <summary>
            人员信息服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_barCodeServer">
            <summary>
            条形码服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotForOutsourcingServer.m_billUniqueID">
            <summary>
            单据唯一码
            </summary>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.GetBill(System.String)">
            <summary>
            获得一条记录
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ S_CheckOutInDepotForOutsourcingBill 视图</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.GetBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            查询显示的数据
            </summary>
            <param name="returnBill">返回 IQueryResult 数据集 </param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>查询成功返回True，查询失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.AddBill(ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            插入信息
            </summary>
            <param name="outSourcing">Linq数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.UpdateBill(ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="outSourcing">Linq操作数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.ReturnBillInDepot(System.String,System.String,System.String@)">
            <summary>
            回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="mrBillID">领料单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">报检单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>生成成功返回True，生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="outSourcing">单据信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="outSourcing">单据信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.AddScrapBill(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotForOutsourcingBill,System.String@)">
            <summary>
            插入报废单
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="outSourcing">Linq操作数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotForOutsourcingServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.ProductChange">
            <summary>
            产品型号变更管理类
            </summary>
        </member>
        <member name="T:ServerModule.IProductChange">
            <summary>
            产品型号变更管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductChange.AddBill(ServerModule.P_ProductChangeBill,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="inProductChange">产品型号变更信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductChange.IsRepeatBillID(System.String)">
            <summary>
            检查单据是否重复
            </summary>
            <param name="djh">变更单号</param>
            <returns>未重复返回True，重复返回False</returns>
        </member>
        <member name="M:ServerModule.IProductChange.GetAllBill">
            <summary>
            获得父表信息
            </summary>
            <returns>返回产品型号变更信息</returns>
        </member>
        <member name="M:ServerModule.IProductChange.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">变更单号</param>
            <returns>返回明细表信息</returns>
        </member>
        <member name="M:ServerModule.IProductChange.UpdateBill(ServerModule.DepotManagementDataContext,ServerModule.P_ProductChangeBill,System.Data.DataTable,System.String@)">
            <summary>
            修改父表信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inProductChange">产品型号变更信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductChange.DeleteBill(System.String,System.String@)">
            <summary>
            删除表信息
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductChange.AuthorizeBill(System.String,System.String@)">
            <summary>
            修改父表信息，质管批准
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductChange.AuditingBill(System.String,System.String@)">
            <summary>
            修改父表信息，主管审核
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductChange.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductChange.GetAllBill">
            <summary>
            获得父表信息
            </summary>
            <returns>返回产品型号变更信息</returns>
        </member>
        <member name="M:ServerModule.ProductChange.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">变更单号</param>
            <returns>返回明细表信息</returns>
        </member>
        <member name="M:ServerModule.ProductChange.IsRepeatBillID(System.String)">
            <summary>
            检查单据是否重复
            </summary>
            <param name="djh">变更单号</param>
            <returns>未重复返回True，重复返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.UpdateBill(ServerModule.DepotManagementDataContext,ServerModule.P_ProductChangeBill,System.Data.DataTable,System.String@)">
            <summary>
            修改父表信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inProductChange">产品型号变更信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.AddBill(ServerModule.P_ProductChangeBill,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="inProductChange">产品型号变更信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.DeletePlanList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.DeleteBill(System.String,System.String@)">
            <summary>
            删除表信息
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.AddPlanList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String@)">
            <summary>
            添加子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.AuditingBill(System.String,System.String@)">
            <summary>
            修改父表信息，主管审核
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductChange.AuthorizeBill(System.String,System.String@)">
            <summary>
            修改父表信息，质管批准
            </summary>
            <param name="djh">变更单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="T:ServerModule.MessMessageFeedback">
            <summary>
            质量信息反馈单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IMessMessageFeedback">
            <summary>
            质量信息反馈单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetAllData(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetBillID">
            <summary>
            获得入库单号
            </summary>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.AddData(ServerModule.S_MessMessageFeedback,System.String@)">
            <summary>
            插入新数据
            </summary>
            <param name="inMess">反馈单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.UpdateData(ServerModule.S_MessMessageFeedback,System.String,System.String@)">
            <summary>
            更新数据库
            </summary>
            <param name="inMessMessage">反馈单信息</param>
            <param name="flag">更新状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetData(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获取到的单据记录信息</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetCheckInDepotBill(System.String)">
            <summary>
            获得报检单中的信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得报检单的信息</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.ReturnData(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="flag">回退状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetNearestLinkManInfo(System.String)">
            <summary>
            获得最近的单据的联系人信息
            </summary>
            <param name="providerName">供应商名称</param>
            <returns>返回最近单据的联系人信息</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.GetAllCount(System.Int32,System.String,System.String,System.String@)">
            <summary>
            获得本批总数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回本批总数信息</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.InsertData(ServerModule.S_MessMessageFeedback,System.String@)">
            <summary>
            插入记录
            </summary>
            <param name="inMessMessage">反馈单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMessMessageFeedback.ScarpData(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废单据成功返回True，报废单据失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetBillID">
            <summary>
            获得入库单号
            </summary>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetAllData(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.AddData(ServerModule.S_MessMessageFeedback,System.String@)">
            <summary>
            插入新数据
            </summary>
            <param name="inMess">反馈单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.InsertData(ServerModule.S_MessMessageFeedback,System.String@)">
            <summary>
            插入记录
            </summary>
            <param name="inMessMessage">反馈单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.UpdateData(ServerModule.S_MessMessageFeedback,System.String,System.String@)">
            <summary>
            更新数据库
            </summary>
            <param name="inMessMessage">反馈单信息</param>
            <param name="flag">更新状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetData(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获取到的单据记录信息</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetCheckInDepotBill(System.String)">
            <summary>
            获得报检单中的信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得报检单的信息</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.ScarpData(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废单据成功返回True，报废单据失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetNearestLinkManInfo(System.String)">
            <summary>
            获得最近的单据的联系人信息
            </summary>
            <param name="providerName">供应商名称</param>
            <returns>返回最近单据的联系人信息</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.ReturnData(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="flag">回退状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.MessMessageFeedback.GetAllCount(System.Int32,System.String,System.String,System.String@)">
            <summary>
            获得本批总数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回本批总数信息</returns>
        </member>
        <member name="T:ServerModule.IMarketingPlan">
            <summary>
            营销计划管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMarketingPlan.UpdateFilePath(System.String,System.String)">
            <summary>
            上传附件
            </summary>
            <param name="billNo">单据号</param>
            <param name="fileNo">附件编号</param>
        </member>
        <member name="M:ServerModule.IMarketingPlan.AddBill(ServerModule.S_MarketingPlanBill,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="marketingPlan">计划主表信息</param>
            <param name="planList">计划明细表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.IsRepeatBillID(System.String)">
            <summary>
            检查单据是否重复
            </summary>
            <param name="djh">计划单号</param>
            <returns>未重复返回True,重复返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.GetAllBill">
            <summary>
            获得父表信息
            </summary>
            <returns>返回获得的营销计划主表信息</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">营销计划单号</param>
            <returns>返回获得的营销计划明细信息</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.GetYearAndMonth">
            <summary>
            获得计划年月
            </summary>
            <returns>返回计划年月</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.UpdateBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            更改状态
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="billIDList">计划单号列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.AddDelivery(ServerModule.S_MarketingPlanDelivery,System.String@)">
            <summary>
            插入交货期数据
            </summary>
            <param name="marketingPlanDelivery">交货期数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.DeleteDelivery(ServerModule.S_MarketingPlanDelivery,System.String@)">
            <summary>
            删除营销计划交货期
            </summary>
            <param name="marketingPlanDelivery">交货期数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.GetPlanDeliveryInfo(System.String,System.Int32,System.Int32)">
            <summary>
            获得交货期数据集
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="month">计划月</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IMarketingPlan.GetCellToolTipString(System.String,System.Int32,System.Int32)">
            <summary>
            获得ToolTip字符串
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="month">计划月</param>
            <returns>返回字符串</returns>
        </member>
        <member name="T:ServerModule.CVTTruckLoadingInformation">
            <summary>
            CVT装车信息服务类
            </summary>
        </member>
        <member name="T:ServerModule.ICVTTruckLoadingInformation">
            <summary>
            CVT装车信息服务类接口
            </summary>
        </member>
        <member name="M:ServerModule.ICVTTruckLoadingInformation.GetLoadingInfo">
            <summary>
            获得装车信息
            </summary>
            <returns>返货装车信息</returns>
        </member>
        <member name="M:ServerModule.ICVTTruckLoadingInformation.DeleteLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            删除装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTTruckLoadingInformation.UpdateLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            更新装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTTruckLoadingInformation.InsertIntoLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            插入装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTTruckLoadingInformation.BatchInsertLoadingInfo(System.Data.DataTable,System.String@)">
            <summary>
            批量插入装车信息
            </summary>
            <param name="loadingInfo">装车信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>批量插入成功返回True，批量插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTTruckLoadingInformation.GetLoadingInfo">
            <summary>
            获得装车信息
            </summary>
            <returns>返货装车信息</returns>
        </member>
        <member name="M:ServerModule.CVTTruckLoadingInformation.DeleteLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            删除装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTTruckLoadingInformation.UpdateLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            更新装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTTruckLoadingInformation.InsertIntoLoadingInfo(ServerModule.YX_LoadingInfo,System.String@)">
            <summary>
            插入装车信息
            </summary>
            <param name="loadingInfo">装车信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTTruckLoadingInformation.BatchInsertLoadingInfo(System.Data.DataTable,System.String@)">
            <summary>
            批量插入装车信息
            </summary>
            <param name="loadingInfo">装车信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>批量插入成功返回True，批量插入失败返回False</returns>
        </member>
        <member name="T:ServerModule.FieldWidthServer">
            <summary>
            字段宽度信息服务类
            </summary>
        </member>
        <member name="T:ServerModule.IFieldWidthServer">
            <summary>
            字段宽度信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IFieldWidthServer.GetFieldWidth(System.Collections.Generic.List{ServerModule.Show_FieldWidth},System.String)">
            <summary>
            从数据库中获取字段宽度信息
            </summary>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:ServerModule.IFieldWidthServer.GetFieldWidth">
            <summary>
            从数据源中获取满足被参数字段名包含的字段宽度信息
            </summary>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.FieldWidthServer.GetFieldWidth">
            <summary>
            从数据库中获取字段宽度信息
            </summary>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:ServerModule.FieldWidthServer.GetFieldWidth(System.Collections.Generic.List{ServerModule.Show_FieldWidth},System.String)">
            <summary>
            从数据源中获取满足被参数字段名包含的字段宽度信息
            </summary>
            <param name="source">数据源</param>
            <param name="fieldName">字段名</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="T:ServerModule.ClientServer">
            <summary>
            客户管理类
            </summary>
        </member>
        <member name="T:ServerModule.IClientServer">
            <summary>
            客户管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IClientServer.GetClient">
            <summary>
            获得客户表
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IClientServer.GetAllClient(System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            获取客户信息
            </summary>
            <param name="returnClient">客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取客户信息</returns>
        </member>
        <member name="M:ServerModule.IClientServer.AddClient(ServerModule.Client,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            添加客户
            </summary>
            <param name="clientInfo">客户信息</param>
            <param name="returnClient">客户信息结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加客户信息</returns>
        </member>
        <member name="M:ServerModule.IClientServer.UpdateClient(ServerModule.Client,ServerModule.Client,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            更新客户
            </summary>
            <param name="clientInfo">客户信息</param>
            <param name="oldClient">旧客户信息</param>
            <param name="returnClient">客户信息结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功更新客户信息</returns>
        </member>
        <member name="M:ServerModule.IClientServer.DeleteClient(System.String,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            删除客户
            </summary>
            <param name="clientCode">客户编码</param>
            <param name="returnClient">客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除客户信息</returns>
        </member>
        <member name="M:ServerModule.IClientServer.GetClientName(System.String)">
            <summary>
            获得客户名
            </summary>
            <param name="clientCode">客户编码</param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IClientServer.GetClientCode(System.String)">
            <summary>
            获得客户编码
            </summary>
            <param name="clientName">客户名</param>
            <returns>成功则返回客户编码，失败返回空串</returns>
        </member>
        <member name="M:ServerModule.ClientServer.GetClient">
            <summary>
            获得客户表
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.ClientServer.GetAllClient(System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            获取客户信息
            </summary>
            <param name="returnClient">客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取客户信息</returns>
        </member>
        <member name="M:ServerModule.ClientServer.AddClient(ServerModule.Client,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            添加客户
            </summary>
            <param name="clientInfo">客户信息</param>
            <param name="returnClient">客户信息结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加客户信息</returns>
        </member>
        <member name="M:ServerModule.ClientServer.UpdateClient(ServerModule.Client,ServerModule.Client,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            更新客户
            </summary>
            <param name="clientInfo">客户信息</param>
            <param name="oldClient">旧客户信息</param>
            <param name="returnClient">客户信息结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功更新客户信息</returns>
        </member>
        <member name="M:ServerModule.ClientServer.DeleteClient(System.String,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            删除客户
            </summary>
            <param name="clientCode">客户编码</param>
            <param name="returnClient">客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除客户信息</returns>
        </member>
        <member name="M:ServerModule.ClientServer.SetReturnError(System.Object,System.Linq.IQueryable{ServerModule.View_Client}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnClient">单位信息</param>
            <param name="error">返回的错误信息</param>
            <returns>始终为false</returns>
        </member>
        <member name="M:ServerModule.ClientServer.GetClientName(System.String)">
            <summary>
            获得客户名
            </summary>
            <param name="clientCode">客户编码</param>
            <returns>成功则返回客户名称，失败返回空串</returns>
        </member>
        <member name="M:ServerModule.ClientServer.GetClientCode(System.String)">
            <summary>
            获得客户编码
            </summary>
            <param name="clientName">客户名</param>
            <returns>成功则返回客户编码，失败返回空串</returns>
        </member>
        <member name="T:ServerModule.IStorageInfo">
            <summary>
            库房信息服务类
            </summary>
        </member>
        <member name="M:ServerModule.IStorageInfo.GetStorageID(System.String,System.String,System.String)">
            <summary>
            通过查询某张表的某个单据字段获得指定表 指定单据的库房ID
            </summary>
            <param name="billID">单据号</param>
            <param name="tableName">数据库表名</param>
            <param name="billName">字段名称</param>
            <returns>返回库房ID</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.GetStoreRoom">
            <summary>
            获得库房信息表
            </summary>
            <returns>返货获取的库房信息</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.GetStoreRoomAndPerson">
            <summary>
            获得库房人员关系表
            </summary>
            <returns>返回获取的库房人员关系信息</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.AddStorage(System.String,System.String,System.String@)">
            <summary>
            添加库房信息
            </summary>
            <param name="stroageID">库房ID</param>
            <param name="stroageName">库房名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.DeleteStorage(System.String,System.String,System.String@)">
            <summary>
            删除库房信息
            </summary>
            <param name="stroageID">库房ID</param>
            <param name="stroageName">库房名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.AddStorageAndPersonnel(System.String,System.String,System.String@)">
            <summary>
            添加库房人员关系信息
            </summary>
            <param name="workID">人员工号</param>
            <param name="stroageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.DeleteStorageAndPersonnel(System.String,System.String,System.String@)">
            <summary>
            删除库房人员关系信息
            </summary>
            <param name="workID">人员工号</param>
            <param name="stroageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.GetStorageIDAndPersonnel(System.String)">
            <summary>
            获得人员与库房的关系表
            </summary>
            <param name="workID">人员工号</param>
            <returns>返回获得的人员与库房的关系信息</returns>
        </member>
        <member name="M:ServerModule.IStorageInfo.GetStorageNameFromPersonnel(System.String)">
            <summary>
            获得人员所属库房列表
            </summary>
            <returns>返回库房与人员关系表</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.GetStorageIDAndPersonnel(System.String)">
            <summary>
            获得人员与库房的关系表
            </summary>
            <param name="workID">人员工号</param>
            <returns>返回获得的人员与库房的关系信息</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.GetStoreRoom">
            <summary>
            获得库房信息表
            </summary>
            <returns>返货获取的库房信息</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.GetStoreRoomAndPerson">
            <summary>
            获得库房人员关系表
            </summary>
            <returns>返回获取的库房人员关系信息</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.AddStorage(System.String,System.String,System.String@)">
            <summary>
            添加库房信息
            </summary>
            <param name="stroageID">库房ID</param>
            <param name="stroageName">库房名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.DeleteStorage(System.String,System.String,System.String@)">
            <summary>
            删除库房信息
            </summary>
            <param name="stroageID">库房ID</param>
            <param name="stroageName">库房名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.AddStorageAndPersonnel(System.String,System.String,System.String@)">
            <summary>
            添加库房人员关系信息
            </summary>
            <param name="workID">人员工号</param>
            <param name="stroageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.DeleteStorageAndPersonnel(System.String,System.String,System.String@)">
            <summary>
            删除库房人员关系信息
            </summary>
            <param name="workID">人员工号</param>
            <param name="stroageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.GetStorageID(System.String,System.String,System.String)">
            <summary>
            通过查询某张表的某个单据字段获得指定表 指定单据的库房ID
            </summary>
            <param name="billID">单据号</param>
            <param name="tableName">数据库表名</param>
            <param name="billName">字段名称</param>
            <returns>返回库房ID</returns>
        </member>
        <member name="M:ServerModule.StorageInfo.GetStorageNameFromPersonnel(System.String)">
            <summary>
            获得人员所属库房列表
            </summary>
            <returns>返回库房与人员关系表</returns>
        </member>
        <member name="T:ServerModule.QualityProblemRectificationDisposalBill">
            <summary>
            质量问题整改处置单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IQualityProblemRectificationDisposalBill">
            <summary>
            质量问题整改处置单接口类
            </summary>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.SaveInfo(ServerModule.ZL_QualityProblemRectificationDisposalBill,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="qualityProblem">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.SaveAnalysisResult(ServerModule.ZL_AssemblingAnalysisSchedule,System.String@)">
            <summary>
            保存搭车分析计划表的分析结果信息
            </summary>
            <param name="assemblingAnalysis">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.AuditingAnalysisResult(System.String,System.String@)">
            <summary>
            审核搭车分析计划表的分析结果
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.AuditingSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表审核记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetBillID(System.String)">
            <summary>
            获得单据号
            </summary>
            <param name="scheduleType">表类型:质量整改处置单,试验验证计划表,新品开发计划表,搭车分析计划表</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetAllBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得记录集
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回获得的记录集</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetExperimentsMessage(System.String)">
            <summary>
            获得某一条试验验证计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetAssemblingAnalysisMessage(System.String)">
            <summary>
            获得某一条搭车分析计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetNewProductDevelopmentMessage(System.String)">
            <summary>
            获得某一条新品开发计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetQualityProblemMessage(System.String)">
            <summary>
            获得某一条质量问题整改处置单明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.InsertBill(ServerModule.ZL_QualityProblemRectificationDisposalBill,System.String@)">
            <summary>
            插入新数据
            </summary>
            <param name="qualityProblem">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.UpdateBill(System.String,System.String@)">
            <summary>
            流程管理
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">需要删除的单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.InsertSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表插入新记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.DeleteSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表删除记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.DeleteExcessSchedule(System.String@)">
            <summary>
            删除过剩的计划表记录
            </summary>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetExperimentsScheduleList(System.String)">
            <summary>
            获得试验验证计划表的试验步骤明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.GetNewProductDevelopmentScheduleList(System.String)">
            <summary>
            获得新品开发计划表的开发步骤明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.SaveExperimentsScheduleInfo(ServerModule.ZL_ExperimentsSchedule,System.Data.DataTable,System.String@)">
            <summary>
            保存试验验证计划表的信息
            </summary>
            <param name="experiment">数据集</param>
            <param name="listInfo">具体步骤列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.SaveAssemblingAnalysisScheduleInfo(ServerModule.ZL_AssemblingAnalysisSchedule,System.String@)">
            <summary>
            保存搭车分析计划表信息
            </summary>
            <param name="assemblingAnalysis">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IQualityProblemRectificationDisposalBill.SaveNewProductDevelopmentScheduleInfo(ServerModule.ZL_NewProductDevelopmentSchedule,System.Data.DataTable,System.String@)">
            <summary>
            保存试验验证计划表的信息
            </summary>
            <param name="newProductDevelopment">数据集</param>
            <param name="listInfo">具体开发过程列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetBillID(System.String)">
            <summary>
            获得单据号
            </summary>
            <param name="scheduleType">表类型:质量整改处置单,试验验证计划表,新品开发计划表,搭车分析计划表</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetNewProductDevelopmentMessage(System.String)">
            <summary>
            获得某一条新品开发计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetAssemblingAnalysisMessage(System.String)">
            <summary>
            获得某一条搭车分析计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetExperimentsMessage(System.String)">
            <summary>
            获得某一条试验验证计划表明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetQualityProblemMessage(System.String)">
            <summary>
            获得某一条质量问题整改处置单明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回一条明细信息</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetAllBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得记录集
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回获得的记录集</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.InsertBill(ServerModule.ZL_QualityProblemRectificationDisposalBill,System.String@)">
            <summary>
            插入新数据
            </summary>
            <param name="qualityProblem">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.SaveInfo(ServerModule.ZL_QualityProblemRectificationDisposalBill,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="qualityProblem">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.UpdateBill(System.String,System.String@)">
            <summary>
            流程管理
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">需要删除的单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.InsertSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表插入新记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.DeleteSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表删除记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.DeleteExcessSchedule(System.String@)">
            <summary>
            删除过剩的计划表记录
            </summary>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetExperimentsScheduleList(System.String)">
            <summary>
            获得试验验证计划表的试验步骤明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.GetNewProductDevelopmentScheduleList(System.String)">
            <summary>
            获得新品开发计划表的开发步骤明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.SaveExperimentsScheduleInfo(ServerModule.ZL_ExperimentsSchedule,System.Data.DataTable,System.String@)">
            <summary>
            保存试验验证计划表的信息
            </summary>
            <param name="experiment">数据集</param>
            <param name="listInfo">具体步骤列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.AuditingAnalysisResult(System.String,System.String@)">
            <summary>
            审核搭车分析计划表的分析结果
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.SaveAnalysisResult(ServerModule.ZL_AssemblingAnalysisSchedule,System.String@)">
            <summary>
            保存搭车分析计划表的分析结果信息
            </summary>
            <param name="assemblingAnalysis">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.SaveAssemblingAnalysisScheduleInfo(ServerModule.ZL_AssemblingAnalysisSchedule,System.String@)">
            <summary>
            保存搭车分析计划表信息
            </summary>
            <param name="assemblingAnalysis">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.SaveNewProductDevelopmentScheduleInfo(ServerModule.ZL_NewProductDevelopmentSchedule,System.Data.DataTable,System.String@)">
            <summary>
            保存试验验证计划表的信息
            </summary>
            <param name="newProductDevelopment">数据集</param>
            <param name="listInfo">具体开发过程列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.QualityProblemRectificationDisposalBill.AuditingSundrySchedule(System.String,System.String,System.String@)">
            <summary>
            对各种计划表审核记录
            </summary>
            <param name="scheduleType">计划表类型：试验验证计划表，新品开发计划表，搭车分析计划表</param>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:ServerModule.ProductLendService">
            <summary>
            借货单服务
            </summary>
        </member>
        <member name="T:ServerModule.IProductLendService">
            <summary>
            借货单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductLendService.GetTreePurpose">
            <summary>
            获得借货用途
            </summary>
        </member>
        <member name="M:ServerModule.IProductLendService.AffirmBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            确认单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.AuditBill(System.String,System.String@)">
            <summary>
            审核单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.GetBillInfo">
            <summary>
            获得单据信息
            </summary>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.GetBillSingle(System.String)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.GetListInfo(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductLendService.ProposeBill(ServerModule.S_ProductLendBill,System.Data.DataTable,System.String@)">
            <summary>
            申请单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.GetTreePurpose">
            <summary>
            获得借货用途
            </summary>
        </member>
        <member name="M:ServerModule.ProductLendService.GetBillInfo">
            <summary>
            获得单据信息
            </summary>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.GetListInfo(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.GetBillSingle(System.String)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.ListControl(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable)">
            <summary>
            单据明细操作
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="list">单据明细</param>
        </member>
        <member name="M:ServerModule.ProductLendService.AssignmentValue(ServerModule.S_ProductLendBill,ServerModule.S_ProductLendBill@)">
            <summary>
            单据赋值
            </summary>
            <param name="bill">单据数据集</param>
            <param name="returnBill">返回单据</param>
        </member>
        <member name="M:ServerModule.ProductLendService.ProposeBill(ServerModule.S_ProductLendBill,System.Data.DataTable,System.String@)">
            <summary>
            申请单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.AuditBill(System.String,System.String@)">
            <summary>
            审核单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.AffirmBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            确认单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductLendService.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendBill,System.Data.DataTable)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="dataTable">明细信息集合</param>
        </member>
        <member name="M:ServerModule.ProductLendService.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendBill,System.Data.DataRow)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="tempBill">单据信息</param>
            <param name="dr">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="T:ServerModule.TorqueConverterInfoServer">
            <summary>
            液力变矩器标识码信息操作类
            </summary>
        </member>
        <member name="T:ServerModule.ITorqueConverterInfoServer">
            <summary>
            液力变矩器标识码信息操作接口
            </summary>
        </member>
        <member name="M:ServerModule.ITorqueConverterInfoServer.DeleteInfo(System.String,System.String@)">
            <summary>
            删除指定单据的变矩器标识信息（当单据报废时进行此操作）
            </summary>
            <param name="billNo">单据编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ITorqueConverterInfoServer.ImportInfo(System.Data.DataTable,System.String,System.String,System.String@)">
            <summary>
            导入厂家提供的液力变矩器数据
            </summary>
            <param name="dt">数据表</param>
            <param name="billNo">报检单单据号</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.TorqueConverterInfoServer.IsExistsUniqueCode(System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            系统中是否已经存在现在导入的唯一编码
            </summary>
            <param name="importCode">要导入的唯一编码列表</param>
            <param name="existedCode">已经存在的唯一编号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.TorqueConverterInfoServer.ImportInfo(System.Data.DataTable,System.String,System.String,System.String@)">
            <summary>
            导入厂家提供的液力变矩器数据
            </summary>
            <param name="dt">数据表</param>
            <param name="billNo">报检单单据号</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.TorqueConverterInfoServer.DeleteInfo(System.String,System.String@)">
            <summary>
            删除指定单据的变矩器标识信息（当单据报废时进行此操作）
            </summary>
            <param name="billNo">单据编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.StoreQueryCondition">
            <summary>
            仓库查找条件
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.GoodsID">
            <summary>
            GoodsID
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.StorageID">
            <summary>
            StorageID
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.GoodsCode">
            <summary>
            GoodsCode
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.GoodsName">
            <summary>
            GoodsName
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.Spec">
            <summary>
            Spec
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.Provider">
            <summary>
            Provider
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.BatchNo">
            <summary>
            BatchNo
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.Depot">
            <summary>
            Depot
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.ShelfArea">
            <summary>
            ShelfArea
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.ColumnNumber">
            <summary>
            ColumnNumber
            </summary>
        </member>
        <member name="P:ServerModule.StoreQueryCondition.LayerNumber">
            <summary>
            LayerNumber
            </summary>
        </member>
        <member name="T:ServerModule.IStoreServer">
            <summary>
            库存管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IStoreServer.Operation_MES_InProduction(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            操作MES系统车间在产
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsUnitPrice(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String)">
            <summary>
            获得物品单价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.OutStore(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            出库业务库房操作
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="stockInfo">库存信息对象</param>
            <param name="operationType">业务类型</param>
        </member>
        <member name="M:ServerModule.IStoreServer.InStore(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            入库业务库房操作
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="stockInfo">库存信息对象</param>
            <param name="operationType">业务类型</param>
        </member>
        <member name="M:ServerModule.IStoreServer.UpdateAging(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,System.Boolean)">
            <summary>
            单独更改账龄
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="stockInfo">库存信息</param>
            <param name="autoSubmitToDatabase">是否直接提交数据库</param>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStock(System.Int32)">
            <summary>
            获得某物品的当前所有库存
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回库存数量</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetNoZeroStore(System.Linq.IQueryable{ServerModule.View_S_Stock}@,System.String@)">
            <summary>
            获取非零库存信息
            </summary>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStockInfoView(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存数</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStockInfo(System.Int32,System.String)">
            <summary>
            获取物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回所查询到的库存视图信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.OperationYXAfterService(ServerModule.DepotManagementDataContext,ServerModule.YX_AfterServiceStock,System.String@)">
            <summary>
            操作营销售后已返修待返修库存数量
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="afterServiceStock">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetStockInfoOverLoad(ServerModule.DepotManagementDataContext,ServerModule.StoreQueryCondition)">
            <summary>
            查找指定的库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="queryInfo">查询条件</param>
            <returns>返回查找到的库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.IsBatchNoOfGoodsExist(System.Int32,System.String)">
            <summary>
            判断物品ID 的批次号是否存在
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>存在返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.IsGoodsInStock(System.Int32,System.String)">
            <summary>
            检测某物品是否存在于某库房
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>存在返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsSumCount(System.Int32,System.String)">
            <summary>
            获得某一个物品的库存汇总
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>库存总数量</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsAveragePrice(System.Int32,System.String)">
            <summary>
            获取库存平均价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回物品的平均价</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStockInfo(System.Int32,System.String,System.Int32)">
            <summary>
            获得库存物品信息(不包括库存为0)
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="stroageID">库房ID</param>
            <param name="flag">显示方式</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStockInfo(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存数</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetStockCount(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商编码</param>
            <param name="storageID">库房ID</param>
            <returns>返回物品库存数量</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.ChangeStockStatus(ServerModule.DepotManagementDataContext,ServerModule.S_IsolationManageBill,System.Int32,System.String@)">
            <summary>
            由隔离单更改库存状态
            </summary>
            <param name="context">数据上下文</param>
            <param name="islation">隔离单单据信息</param>
            <param name="status">库存状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.ChangeStockCount(ServerModule.DepotManagementDataContext,ServerModule.S_IsolationManageBill,System.String@)">
            <summary>
            由隔离单改变库存数
            </summary>
            <param name="context">数据上下文</param>
            <param name="islation">隔离单单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>改变成功返回True，改变失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStockInfo(System.Int32,System.String,System.String)">
            <summary>
            获取物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回所查询到的库存视图信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.Clone(ServerModule.S_Stock)">
            <summary>
            克隆库存对象
            </summary>
            <param name="stockInfo">要克隆的对象</param>
            <returns>克隆后的新对象</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetStoreStatus">
            <summary>
            获取库存物品状态表信息
            </summary>
            <returns>获取到的信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetStockInfo(ServerModule.StoreQueryCondition)">
            <summary>
            查找指定的非唯一性库存信息(批次号使用包含符)
            </summary>
            <param name="queryInfo">查询条件</param>
            <returns>返回查找到的库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetProviderInfo(System.Int32)">
            <summary>
            获取库存中指定物品的供应商信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>成功返回获取到的供应商信息列表, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetFactUnitPrice(System.Int32,System.String,System.String,System.String)">
            <summary>
            获取实际单价
            </summary>
            <param name="GoodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的实际单价</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStore(System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStore(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStore(System.Int32)">
            <summary>
            根据物品ID获得某物品的所有库存信息
            </summary>
            <param name="intGoodsID"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetSomeGoodsCodeStore(System.String,System.String,System.Data.DataTable@,System.String@)">
            <summary>
            获取某图号型号的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取某图号型号的所有库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetAllStore(System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Stock}@,System.String@)">
            <summary>
            获取库存信息
            </summary>
            <param name="findCondition">查找条件</param>
            <param name="sequence">排序,True为升序,False为降序</param>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetAllStorePartInfo(System.String,System.Boolean,System.Data.DataTable@,System.String@)">
            <summary>
            获取所有仓库零件信息（供点击“图型/图号”按钮时进行查询用）
            </summary>
            <param name="depotType">仓库类型，取值为：零部件、产品、其他</param>
            <param name="groupbyBatchNo">是否要用批次分组</param>
            <param name="returnPartInfo">返回获取到的零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetOrderFormGoodsStockInfo(System.String,System.String)">
            <summary>
            获取指定订单物品库存信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.Test(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存数</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.DeleteStore(System.Int32,System.String@)">
            <summary>
            删除库存记录
            </summary>
            <param name="id">要删除的记录ID</param>
            <param name="error">返回的错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.UpdateStore(ServerModule.S_Stock,System.String@)">
            <summary>
            更新库存信息
            </summary>
            <param name="stockInfo">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetAllStore(System.Data.DataTable@,System.String@)">
            <summary>
            查询全部货物库存
            </summary>
            <param name="table">查询到的库存信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetDepotForPersonnel(System.String)">
            <summary>
            获取用户管辖仓库的信息
            </summary>
            <param name="WorkCode">工号</param>
            <returns>返回获取到的仓库记录</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreNorml(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForSBW(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于三包外领料的物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForAssembly(System.Int32,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForAssembly(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForJumbly(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的混装物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForRepair(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅限于返修箱用的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreOnlyForAttachment(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅限于售后备件的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsStoreMuster(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的样品的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetStockAveragePrice(System.Boolean,System.String)">
            <summary>
            获得库存物品实际平均价
            </summary>
            <param name="flag">True为View_S_Stock； False为View_S_InOutSaveStock </param>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回获取的库存物品平均价信息</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.ChangeAveragePrice(System.Int32,System.Decimal,System.Boolean,System.String,System.String@)">
            <summary>
            更改库存单价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="price">金额</param>
            <param name="flag">True为View_S_Stock； False为View_S_InOutSaveStock</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreServer.GetGoodsUnitPrice(System.Int32,System.String,System.String)">
            <summary>
            获得物品单价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="T:ServerModule.IMaterialTypeServer">
            <summary>
            材料类别管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.GetAllMaterialType(System.Linq.IQueryable{ServerModule.View_S_Depot}@,System.String@)">
            <summary>
            获取所有材料类别信息
            </summary>
            <param name="materialTypes">查询到的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.GetAllMaterialType(System.Collections.Generic.List{ServerModule.MaterialTypeData}@,System.String@)">
            <summary>
            获取所有材料类别信息
            </summary>
            <param name="materialTypes">查询到的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取材料类别信息表</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.Clone(System.Collections.Generic.List{ServerModule.MaterialTypeData})">
            <summary>
            克隆材料类别信息列表
            </summary>
            <param name="lstSurInfo">要克隆的源数据</param>
            <returns>克隆后的功能树节点信息列表</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.UpdataMaterialType(ServerModule.MaterialTypeData,System.String@)">
            <summary>
            更新材料类别
            </summary>
            <param name="materialType">材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.AddMaterialType(ServerModule.MaterialTypeData,ServerModule.MaterialTypeData,System.String@)">
            <summary>
            添加材料类别 并更新父材料类别信息
            </summary>
            <param name="newMaterialType">要增加的材料类别信息</param>
            <param name="parentMaterialType">要更新的父材料类别信息, 如果此信息不为null则需修改父材料类别树信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.AddMaterialType(ServerModule.MaterialTypeData,System.String@)">
            <summary>
            添加材料类别
            </summary>
            <param name="materialType">要增加的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.DeleteMaterialType(System.String,ServerModule.MaterialTypeData,System.String@)">
            <summary>
            删除指定材料类别信息（父材料类别参数存在数据时更新父材料类别信息）
            </summary>
            <param name="materialTypeCode">要删除的材料类别编码</param>
            <param name="parentMaterialType">父材料类别信息, 如果此信息不为null则需修改父材料类别树信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialTypeServer.DeleteMaterialType(System.String,System.String@)">
            <summary>
            删除某一材料类别信息
            </summary>
            <param name="materialTypeCode">材料类别编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一材料类别信息</returns>
        </member>
        <member name="T:ServerModule.OrderFormInfoServer">
            <summary>
            订单信息管理类
            </summary>
        </member>
        <member name="T:ServerModule.IOrderFormInfoServer">
            <summary>
            订单信息管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderNo(System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetAllOrderFormInfo(System.Collections.Generic.List{System.String},System.String,GlobalObject.CE_BillTypeEnum,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            获取订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="billType">单据类型</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.FindBargainCount(System.String)">
            <summary>
            查找订单中 是否有此合同记录
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>True 存在 False 不存在</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderFormType">
            <summary>
            获取订单类型信息
            </summary>
            <returns>返回获取到的订单类型信息</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetBuyerCode(System.String)">
            <summary>
            获取指定订单的订货员编码
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>返回获取到的订货员编码</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderFormInfo(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="orderFormNumber">订单号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderFormInfo(System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderFormCollection(System.String)">
            <summary>
            获取指定合同的订单信息集
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetOrderFormAnalyzer(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            获取订单综合查询结果
            </summary>
            <param name="listRole">用户角色列表</param>
            <param name="loginName">用户登录名</param>
            <returns>合同综合查询结果</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetAllOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            获取订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.AddOrderFormInfo(System.Collections.Generic.List{System.String},System.String,ServerModule.B_OrderFormInfo,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            添加订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="orderFormInfo">订单信息</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.UpdateBargainNumber(ServerModule.DepotManagementDataContext,System.String,System.String)">
            <summary>
            修改订单合同号(由合同信息表更新时级联调用此方法进行更新, 此方法不提交改变而由调用者提交)
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="oldNumber">旧合同号</param>
            <param name="newNumber">新合同号</param>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.UpdateOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.String,ServerModule.B_OrderFormInfo,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            修改订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="oldOrderFormNumber">旧订单号</param>
            <param name="orderFormInfo">订单信息</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.DeleteOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            删除订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="orderFormNumber">订单编号</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.FindInDepotOrderNumberCount(System.String,System.String,System.String,System.String)">
            <summary>
            查找普通入库单或报检入库单中是否有此订单号记录并且入库单中包含指定参数的物品
            </summary>
            <param name="orderBillID">订单号</param>
            <param name="goodsCode">要查找物品的图号</param>
            <param name="goodsName">要查找物品的名称</param>
            <param name="spec">规格</param>
            <returns>查找到返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.FindInDepotOrderGoodsCount(System.String)">
            <summary>
            查找未报废的普通入库单或未报废的报检入库单中是否有此订单记录
            </summary>
            <param name="orderBillID">订单号</param>
            <returns>查找到返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.Auditing(System.String,System.String,System.String@)">
            <summary>
            审核订单
            </summary>
            <param name="auditingPersonnel">审核人工号</param>
            <param name="orderFormNumber">审核订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.CheckDate(System.String)">
            <summary>
            检查订单是否已审核
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>审核了返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.GetGoodsAfloatOrderForm(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Int32)">
            <summary>
            获得未到货订单列表
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <param name="status">状态</param>
            <param name="provider">供应商</param>
            <param name="goodsID">物品ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IOrderFormInfoServer.UpdateOrderFormCloseStatus(System.String,System.Int32,System.Boolean)">
            <summary>
            变更订单状态
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <param name="status">变更状态</param>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.FindBargainCount(System.String)">
            <summary>
            查找订单中 是否有此合同记录
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>True 存在 False 不存在</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetOrderFormType">
            <summary>
            获取订单类型信息
            </summary>
            <returns>返回获取到的订单类型信息</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetBuyerCode(System.String)">
            <summary>
            获取指定订单的订货员编码
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>返回获取到的订货员编码</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetOrderFormInfo(System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetOrderFormInfo(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="orderFormNumber">订单号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetOrderFormCollection(System.String)">
            <summary>
            获取指定合同的订单信息集
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetAllOrderFormInfo(System.Collections.Generic.List{System.String},System.String,GlobalObject.CE_BillTypeEnum,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            获取订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="billType">单据类型</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetAllOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            获取订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetOrderFormAnalyzer(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            获取订单综合查询结果
            </summary>
            <param name="listRole">用户角色列表</param>
            <param name="loginName">用户登录名</param>
            <returns>合同综合查询结果</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.AddOrderFormInfo(System.Collections.Generic.List{System.String},System.String,ServerModule.B_OrderFormInfo,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            添加订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="orderFormInfo">订单信息</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.UpdateBargainNumber(ServerModule.DepotManagementDataContext,System.String,System.String)">
            <summary>
            修改订单合同号(由合同信息表更新时级联调用此方法进行更新, 此方法不提交改变而由调用者提交)
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="oldNumber">旧合同号</param>
            <param name="newNumber">新合同号</param>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.UpdateOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.String,ServerModule.B_OrderFormInfo,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            修改订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="oldOrderFormNumber">旧订单号</param>
            <param name="orderFormInfo">订单信息</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.DeleteOrderFormInfo(System.Collections.Generic.List{System.String},System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormInfo}@,System.String@)">
            <summary>
            删除订单信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="orderFormNumber">订单编号</param>
            <param name="returnOrderFormInfo">返回查询到的订单信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.FindInDepotOrderNumberCount(System.String,System.String,System.String,System.String)">
            <summary>
            查找普通入库单或报检入库单中是否有此订单号记录并且入库单中包含指定参数的物品
            </summary>
            <param name="orderBillID">订单号</param>
            <param name="goodsCode">要查找物品的图号</param>
            <param name="goodsName">要查找物品的名称</param>
            <param name="spec">规格</param>
            <returns>查找到返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.FindInDepotOrderGoodsCount(System.String)">
            <summary>
            查找未报废的普通入库单或未报废的报检入库单中是否有此订单记录
            </summary>
            <param name="orderBillID">订单号</param>
            <returns>查找到返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.Auditing(System.String,System.String,System.String@)">
            <summary>
            审核订单
            </summary>
            <param name="auditingPersonnel">审核人工号</param>
            <param name="orderFormNumber">审核订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.CheckDate(System.String)">
            <summary>
            检查订单是否已审核
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>审核了返回true，否则返回false</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.GetGoodsAfloatOrderForm(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Int32)">
            <summary>
            获得未到货订单列表
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">截止时间</param>
            <param name="status">状态</param>
            <param name="provider">供应商</param>
            <param name="goodsID">物品ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.OrderFormInfoServer.UpdateOrderFormCloseStatus(System.String,System.Int32,System.Boolean)">
            <summary>
            变更订单状态
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <param name="status">变更状态</param>
        </member>
        <member name="T:ServerModule.OrderFormGoodsServer">
            <summary>
            订单物品信息管理类
            </summary>
        </member>
        <member name="T:ServerModule.IOrderFormGoodsServer">
            <summary>
            订单物品信息管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.GetGoodsUnitPrice(System.String,System.Int32)">
            <summary>
            获取订单物品表中某一产品单价
            </summary>
            <param name="orderFormNumber">订单物品号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的单价</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.GetOrderFormGoods(System.String)">
            <summary>
            获取指定合同所有的订单物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.GetAllOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            获取订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="returnOrderFormGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.GetOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            获取订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="orderFormNumber">订单号</param>
            <param name="returnOrderFormGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.AddOrderFormGoods(System.Collections.Generic.List{System.String},System.String,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            添加订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginID">登录ID</param>
            <param name="orderFormInfo">订单物品信息</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.UpdateOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Int32,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            修改订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newGoods">新订单物品</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.UpdateOrderFormGoods(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{System.String},System.String,System.Int32,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            修改订单物品信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newGoods">新订单物品</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.UpdateOrderFormNumber(System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String@)">
            <summary>
            修改订单物品信息中的订单号
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newOrderFormNumber">新订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.UpdateOrderFormNumber(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String@)">
            <summary>
            修改订单物品信息中的订单号
            </summary>
            <param name="dataContext">数据库上下文</param>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newOrderFormNumber">新订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrderFormGoodsServer.DeleteOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Int32,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            删除订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="P:ServerModule.IOrderFormGoodsServer.AutoSubmitToDatabase">
            <summary>
            获取或设置是否自动将结果提交到数据库的标志，默认为true
            </summary>
        </member>
        <member name="F:ServerModule.OrderFormGoodsServer.m_autoSubmitToDatabase">
            <summary>
            是否自动将结果提交到数据库的标志
            </summary>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.GetGoodsUnitPrice(System.String,System.Int32)">
            <summary>
            获取订单物品表中某一产品单价
            </summary>
            <param name="orderFormNumber">订单物品号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的单价</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.GetAllOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            获取订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="returnOrderFormGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.GetOrderFormGoods(System.String)">
            <summary>
            获取指定合同所有的订单物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.GetOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            获取订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginID">登录名</param>
            <param name="orderFormNumber">订单号</param>
            <param name="returnOrderFormGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.AddOrderFormGoods(System.Collections.Generic.List{System.String},System.String,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            添加订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginID">登录ID</param>
            <param name="orderFormGoods">订单物品信息</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.UpdateOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Int32,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            修改订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newGoods">新订单物品</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.UpdateOrderFormGoods(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{System.String},System.String,System.Int32,ServerModule.B_OrderFormGoods,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            修改订单物品信息
            </summary>
            <param name="dataContext">LINQ 数据库上下文</param>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newGoods">新订单物品</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.UpdateOrderFormNumber(System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String@)">
            <summary>
            修改订单物品信息中的订单号
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newOrderFormNumber">新订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.UpdateOrderFormNumber(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String@)">
            <summary>
            修改订单物品信息中的订单号
            </summary>
            <param name="dataContext">数据库上下文</param>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="newOrderFormNumber">新订单号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrderFormGoodsServer.DeleteOrderFormGoods(System.Collections.Generic.List{System.String},System.String,System.Int32,System.Linq.IQueryable{ServerModule.View_B_OrderFormGoods}@,System.String@)">
            <summary>
            删除订单物品信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="loginName">登录名</param>
            <param name="id">订单物品ID</param>
            <param name="returnOrderFormGoods">返回查询到的订单物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="P:ServerModule.OrderFormGoodsServer.AutoSubmitToDatabase">
            <summary>
            获取或设置是否自动将结果提交到数据库的标志，默认为true
            </summary>
        </member>
        <member name="T:ServerModule.OrderFormAffrim">
            <summary>
            网络订单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IOrderFormAffrim">
            <summary>
            网络订单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.AddAffrimInfo(ServerModule.B_WebForAffirmTime,System.String@)">
            <summary>
            添加确认到货日期
            </summary>
            <param name="webForAffirmTime">网络订单确认信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.AddBill(ServerModule.B_WebForOrderFormList,System.String@)">
            <summary>
            添加网络订单明细
            </summary>
            <param name="webOrderFormList">网络订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>.
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.DeleteAllInfo(System.String,System.String@)">
            <summary>
            整张订单删除
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.DeleteAffrimInfo(System.Int32,System.String@)">
            <summary>
            删除确认到货日期
            </summary>
            <param name="id">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除数据
            </summary>
            <param name="id">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得总单的所有信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="flag">单据状态</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.GetListInfo(System.String)">
            <summary>
            获得某一单据的明细信息
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回查询到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.GetListInfo(System.String,System.String)">
            <summary>
            获得某一单据的明细信息
            </summary>
            <param name="yearAndMonth">年月字符串 格式为“YYYYMM”</param>
            <param name="workName">采购员姓名</param>
            <returns>返回查询到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.UpdateBill(System.String,System.String@)">
            <summary>
            修改单据状态
            </summary>
            <param name="yearAndMonth">操作年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.UpdateListInfo(ServerModule.B_WebForOrderFormList,System.String@)">
            <summary>
            修改网络订单明细
            </summary>
            <param name="webOrderFormList">网络订单明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.GetAffrimInfo(System.Int32)">
            <summary>
            获得到货日期表
            </summary>
            <param name="listID">明细ID</param>
            <returns>返回到货日期列表</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.IsListInfoIn(System.Int32,System.Int32,System.String,System.String@)">
            <summary>
            检查数据
            </summary>
            <param name="djID">单据ID</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>无记录则返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.SumCount(System.Int32)">
            <summary>
            获得某一条记录的所有到货数之和
            </summary>
            <param name="listID">明细ID</param>
            <returns>返货明细ID的到货数量之和</returns>
        </member>
        <member name="M:ServerModule.IOrderFormAffrim.UpdateBillStatus(System.String,System.String@)">
            <summary>
            改变BILL的单据状态为 等待审核
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>改变成功返回True，改变失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得总单的所有信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="flag">单据状态</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.GetListInfo(System.String,System.String)">
            <summary>
            获得某一单据的明细信息
            </summary>
            <param name="yearAndMonth">年月字符串 格式为“YYYYMM”</param>
            <param name="workName">采购员姓名</param>
            <returns>返回查询到的明细信息</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.GetListInfo(System.String)">
            <summary>
            获得某一单据的明细信息
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回查询到的明细信息</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.AddBill(ServerModule.B_WebForOrderFormList,System.String@)">
            <summary>
            添加网络订单明细
            </summary>
            <param name="webOrderFormList">网络订单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.UpdateListInfo(ServerModule.B_WebForOrderFormList,System.String@)">
            <summary>
            修改网络订单明细
            </summary>
            <param name="webOrderFormList">网络订单明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.UpdateBillStatus(System.String,System.String@)">
            <summary>
            改变BILL的单据状态为 等待审核
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>改变成功返回True，改变失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除数据
            </summary>
            <param name="id">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.AddAffrimInfo(ServerModule.B_WebForAffirmTime,System.String@)">
            <summary>
            添加确认到货日期
            </summary>
            <param name="webForAffirmTime">网络订单确认信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.DeleteAffrimInfo(System.Int32,System.String@)">
            <summary>
            删除确认到货日期
            </summary>
            <param name="id">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.DeleteAllInfo(System.String,System.String@)">
            <summary>
            整张订单删除
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.UpdateBill(System.String,System.String@)">
            <summary>
            修改单据状态
            </summary>
            <param name="yearAndMonth">操作年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.InsertWebOrderForm(System.String,System.String@)">
            <summary>
            插入WEB订单
            </summary>
            <param name="yearAndMonth">操作年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.InsertWinFormOrderForm(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            插入WINFORM订单
            </summary>
            <param name="context">数据上下文</param>
            <param name="yearAndMonth">操作的年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True,插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.GetMaxArrivalDate(System.Int32)">
            <summary>
            获得最大的到货日期
            </summary>
            <param name="listID">明细ID</param>
            <returns>返回最大的到货日期</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.GetAffrimInfo(System.Int32)">
            <summary>
            获得到货日期表
            </summary>
            <param name="listID">明细ID</param>
            <returns>返回到货日期列表</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.SumCount(System.Int32)">
            <summary>
            获得某一条记录的所有到货数之和
            </summary>
            <param name="listID">明细ID</param>
            <returns>返货明细ID的到货数量之和</returns>
        </member>
        <member name="M:ServerModule.OrderFormAffrim.IsListInfoIn(System.Int32,System.Int32,System.String,System.String@)">
            <summary>
            检查数据
            </summary>
            <param name="djID">单据ID</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>无记录则返回True，否则返回False</returns>
        </member>
        <member name="T:ServerModule.IMaterialListReturnedInTheDepot">
            <summary>
            领料退库单物品信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.InsertInfoExcel(System.String,System.Data.DataTable)">
            <summary>
            Excel导入数据
            </summary>
            <param name="billNo"></param>
            <param name="tableInfo"></param>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot,ServerModule.S_MaterialListReturnedInTheDepot)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="goodsItem">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot,ServerModule.S_MaterialListReturnedInTheDepot)">
            <summary>
            赋值账务信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.GetBatchCreatList(System.String,System.DateTime,System.DateTime)">
            <summary>
            对于批量生成单据明细界面的显示功能
            </summary>
            <param name="selectType">显示单据类型  (“领料”，“领料退库”)</param>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回TABLE</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.BatchCreateList(System.String,System.String,System.String,System.String@)">
            <summary>
            批量生成明细
            </summary>
            <param name="selectType">单据类型  (“领料”，“领料退库”)</param>
            <param name="billID">单据号</param>
            <param name="billIDGather">数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.AddGoods(ServerModule.S_MaterialListReturnedInTheDepot,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.AddGoods(System.Collections.Generic.List{ServerModule.View_S_MaterialListReturnedInTheDepot},System.String@)">
            <summary>
            批量添加物品
            </summary>
            <param name="lstGoods">要添加的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某领料退库单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">领料退库单号</param>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某领料退库单下的所有物品信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.GetGoods(System.String)">
            <summary>
            获取指定领料退库单的物品信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.UpdateGoods(ServerModule.S_MaterialListReturnedInTheDepot,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListReturnedInTheDepot.GetBillView(System.String)">
            <summary>
            获取领料退库单视图信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料信息, 失败返回null</returns>
        </member>
        <member name="T:ServerModule.BarcodePrint">
            <summary>
            条形码打印功能服务类
            </summary>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_Begin(System.IntPtr,System.Boolean)">
            <summary>
            打印初始化
            </summary>
            <param name="vcHDC">图形设备句柄</param>
            <param name="bPreview">是否需要预览</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_Line(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            画线
            </summary>
            <param name="x1">左端点x坐标</param>
            <param name="y1">左端点y坐标</param>
            <param name="x2">右端点x坐标</param>
            <param name="y2">右端点y坐标</param>
            <param name="penWidth">线宽</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_Rectangle(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            画矩形
            </summary>
            <param name="x1">左上角x坐标</param>
            <param name="y1">左上角y坐标</param>
            <param name="x2">右下角x坐标</param>
            <param name="y2">右下角y坐标</param>
            <param name="penWidth">线宽</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_SetFont(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            设置字体
            </summary>
            <param name="fontName">字体名称</param>
            <param name="fontSize">字体尺寸</param>
            <param name="bold">是否粗体的标志</param>
            <param name="italic">是否斜体的标志</param>
            <param name="underline">是否下划线的标志</param>
            <param name="strikeOut"></param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_Text(System.Double,System.Double,System.String,System.Int32)">
            <summary>
            打印文本
            </summary>
            <param name="x">左上角x坐标</param>
            <param name="y">左上角y坐标</param>
            <param name="text">要打印的文本</param>
            <param name="angle">文本角度</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_Barcode(System.Double,System.Double,System.Double,System.Double,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            打印条形码
            </summary>
            <param name="x">左上角x坐标</param>
            <param name="y">左上角y坐标</param>
            <param name="width">条形码宽度</param>
            <param name="height">条形码高度</param>
            <param name="barcodeData">条形码数据</param>
            <param name="barcodeType">条形码类型</param>
            <param name="angle">条形码角度</param>
            <param name="isReadable">是否是可读的</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_GetTextWidth(System.String)">
            <summary>
            获取文字宽度
            </summary>
            <param name="text">文本</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_GetTextHeight(System.String)">
            <summary>
            获取文字高度
            </summary>
            <param name="text">文本</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_GetBarWidth(System.Double,System.String)">
            <summary>
            获取条码宽度
            </summary>
            <param name="width">宽度</param>
            <param name="barcodeType">条形码类型</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_SetBCRatio(System.String)">
            <summary>
            设置条码(可能是比例)
            </summary>
            <param name="text">文本</param>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="M:ServerModule.BarcodePrint.UTC_End">
            <summary>
            打印结束(起分页效果)
            </summary>
            <returns>成功返回true, 失败返回false</returns>
        </member>
        <member name="T:ServerModule.ISystemLogServer">
            <summary>
            系统日志操作组件接口
            </summary>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,``0,``0)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="operationContent">操作对象</param>
            <param name="NoUpdatedContent">操作前对象</param>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,``0,System.Collections.Generic.List{ServerModule.SystemLog_Content})">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="tObj">操作对象</param>
            <param name="listContent">操作内容日志列表</param>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,System.String,System.Object)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="explainContent">操作说明</param>
            <param name="singlePrimaryKeyContent">单一主键值</param>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,System.String)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="explainContent">操作说明</param>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog``1(System.String)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="explainContent">操作说明</param>
        </member>
        <member name="M:ServerModule.ISystemLogServer.RecordLog(System.String)">
            <summary>
            记录日志
            </summary>
            <param name="explainContent">操作说明</param>
        </member>
        <member name="T:ServerModule.UnProductTestingSingle">
            <summary>
            非产品件检验单服务组件
            </summary>
        </member>
        <member name="T:ServerModule.IUnProductTestingSingle">
            <summary>
            非产品件检验单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.DeleteBill(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.FlowBill(System.String,System.String@)">
            <summary>
            单据流程
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得所有单据信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.GetInfo(System.String)">
            <summary>
            获得检验单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.GetListInfo(System.String,System.String)">
            <summary>
            获得检验验证记录信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="type">类型</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.SaveDataTableInfo(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String)">
            <summary>
            保存检验验证记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="infoTable">检验验证记录信息集</param>
            <param name="type">记录类型：检验，验证</param>
        </member>
        <member name="M:ServerModule.IUnProductTestingSingle.SaveInfo(ServerModule.ZL_UnProductTestingSingleBill,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="lnqBill">LINQ数据集</param>
            <param name="InspectionTable">检验记录表</param>
            <param name="ProvingTable">验证记录表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得所有单据信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.GetInfo(System.String)">
            <summary>
            获得检验单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.GetListInfo(System.String,System.String)">
            <summary>
            获得检验验证记录信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="type">类型</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.SaveDataTableInfo(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String)">
            <summary>
            保存检验验证记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="infoTable">检验验证记录信息集</param>
            <param name="type">记录类型：检验，验证</param>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.FlowBill(System.String,System.String@)">
            <summary>
            单据流程
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.SaveInfo(ServerModule.ZL_UnProductTestingSingleBill,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="lnqBill">LINQ数据集</param>
            <param name="InspectionTable">检验记录表</param>
            <param name="ProvingTable">验证记录表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.UnProductTestingSingle.DeleteBill(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="T:ServerModule.GoodsShelfLife">
            <summary>
            物品保质期管理类
            </summary>
        </member>
        <member name="T:ServerModule.IGoodsShelfLife">
            <summary>
            物品保质期监控接口
            </summary>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.IsShelfLife(System.Int32)">
            <summary>
            是否需要进行保质期管理
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>是 返回True,否 返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.GetBASEInfo">
            <summary>
            获得保质物品清单
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.DeleteInfo(System.Int32,System.String)">
            <summary>
            删除记录
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.UpdateDeleteFlag(System.Int32,System.String)">
            <summary>
            设置删除标志
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.GetInfo(System.DateTime,System.DateTime)">
            <summary>
            获得需要监控保质期的物品
            </summary>
            <param name="startTime">起始日期</param>
            <param name="endTime">截止日期</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.InsertInfo(ServerModule.DepotManagementDataContext,ServerModule.KF_GoodsShelfLife,System.String@)">
            <summary>
            插入新记录
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="goodsShelfLife">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsShelfLife.SetInfo(ServerModule.KF_GoodsShelfLife,System.String@)">
            <summary>
            设置一条物品记录
            </summary>
            <param name="goodsShelfLife">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.IsShelfLife(System.Int32)">
            <summary>
            是否需要进行保质期管理
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>是 返回True,否 返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.GetInfo(System.DateTime,System.DateTime)">
            <summary>
            获得需要监控保质期的物品
            </summary>
            <param name="startTime">起始日期</param>
            <param name="endTime">截止日期</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.UpdateDeleteFlag(System.Int32,System.String)">
            <summary>
            设置删除标志
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.DeleteInfo(System.Int32,System.String)">
            <summary>
            删除记录
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.SetInfo(ServerModule.KF_GoodsShelfLife,System.String@)">
            <summary>
            设置一条物品记录
            </summary>
            <param name="goodsShelfLife">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.InsertInfo(ServerModule.DepotManagementDataContext,ServerModule.KF_GoodsShelfLife,System.String@)">
            <summary>
            插入新记录
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="goodsShelfLife">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsShelfLife.GetBASEInfo">
            <summary>
            获得保质物品清单
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerModule.IProductDeliveryInspectionServer">
            <summary>
            CVT出厂检验记录管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.SelectFinalInspectionList(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            CVT终检信息记录查询
            </summary>
            <param name="startTime">开始日期</param>
            <param name="endTime">结束日期</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.DeleteCVTFinalInspectionInfo(System.DateTime,System.DateTime,ServerModule.ZL_CVTFinalInspection)">
            <summary>
            删除CVT终检记录
            </summary>
            <param name="startTime">开始日期</param>
            <param name="endTime">结束日期</param>
            <param name="lnqFinalInfo">CVT终检信息</param>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.AddCVTFinalInspectionInfo(ServerModule.ZL_CVTFinalInspection)">
            <summary>
            添加CVT终检记录
            </summary>
            <param name="lnqFinalInfo">CVT终检信息</param>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetTechnicalRequirementsInfo(System.Int32)">
            <summary>
            获取检查明细项目信息
            </summary>
            <param name="technicalID">明细项目ID</param>
            <returns>返回LNQ</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetAllAccreditedTestingItemsInfo(System.Int32)">
            <summary>
            获取检查项目信息
            </summary>
            <param name="testID">项目ID</param>
            <returns>返回LNQ</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.IsExamine(System.String,System.String@)">
            <summary>
            检测此单据的单据状态是否为“已检验”
            </summary>
            <param name="billID">营销单据号</param>
            <param name="storageID">库房ID</param>
            <returns>已检验返回True，未检验返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetBill(System.String)">
            <summary>
            获得某一条BILL信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetListInfo(System.String)">
            <summary>
            获得明细信息
            </summary>
            <param name="billID">检验记录表单号</param>
            <returns>返回CVT出厂检验记录表的明细信息</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetEmptyTable(System.String)">
            <summary>
            显示空表格(2013-12-04之后的数据，邱瑶改)
            </summary>
            <param name="productType">产品型号</param>
            <returns>返回CVT出厂检验空表格</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.DeleteDeliveryInspection(System.String,System.String@)">
            <summary>
            删除所关联的所有CVT出厂检验记录
            </summary>
            <param name="djh">关联单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.ManageDeliveryInspection(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            处理自动生成CVT出厂检验记录表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="djh">营销入库单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>自动生成成功返回True，自动生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.UpdateDeliveryInspection(ServerModule.P_DeliveryInspection,System.String@)">
            <summary>
            更新出厂检验记录
            </summary>
            <param name="delivery">出厂检验记录表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetTechnicalRequirementsID(System.String,System.String)">
            <summary>
            获得明细项目ID
            </summary>
            <param name="name">明细项目名称</param>
            <param name="productType">产品类型</param>
            <returns>获取成功返回明细项目ID，获取失败返回0</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetTestItemNameID(System.String,System.String)">
            <summary>
            获得项目ID
            </summary>
            <param name="name">项目名称</param>
            <param name="productType">产品类型</param>
            <returns>获取成功返回项目ID，获取失败返回0</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetTechnicalRequirements(System.String,System.String)">
            <summary>
            获得明细项目集合
            </summary>
            <param name="name">项目名称</param>
            <param name="productType">产品型号</param>
            <returns>返回获取的明细项目集合</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.FinalJudgeBill(ServerModule.P_DeliveryInspection,System.String@)">
            <summary>
            最终判定
            </summary>
            <param name="delivery">CVT检验报告信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True ，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetAllTechnical(System.String,System.String)">
            <summary>
            获得明细项目集合
            </summary>
            <param name="technicalName">明细项目名称</param>
            <param name="productType">产品类型</param>
            <returns>返回明细项目与主项目关联后的数据集合</returns>
        </member>
        <member name="M:ServerModule.IProductDeliveryInspectionServer.GetDeliveryInspection(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得CVT出厂检验记录
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="djzt">单据状态</param>
            <returns>返回CVT出厂检验记录集</returns>
        </member>
        <member name="T:ServerModule.SellIn">
            <summary>
            营销管理类
            </summary>
        </member>
        <member name="T:ServerModule.ISellIn">
            <summary>
            营销管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.ISellIn.AddList_ProductCodesGreenLight(System.Collections.Generic.List{ServerModule.ProductsCode_GreenLight})">
            <summary>
            添加特殊放行记录
            </summary>
            <param name="lstInfo">对象列表</param>
        </member>
        <member name="M:ServerModule.ISellIn.GetBarcodeTable(System.String)">
            <summary>
            获得条形码Table
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetBillID">
            <summary>
            获得单据号
            </summary>
            <returns>返回最大单据ID</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsExistAbnomalProductCode(System.String)">
            <summary>
            检测单据是否存在异常箱号
            </summary>
            <param name="billNo">单据号</param>
            <returns>True: 存在 False : 不存在</returns>
        </member>
        <member name="M:ServerModule.ISellIn.UpdateBill(System.Data.DataTable,System.Data.DataRow,System.String,System.String@)">
            <summary>
            单据的数据库操作
            </summary>
            <param name="listInfo">明细信息</param>
            <param name="billInfo">单据信息，若ID=0则添加，否则更新</param>
            <param name="marketingType">单据类型</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetList(System.Int32)">
            <summary>
            获得单据明细
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回获取的单据明细信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djID">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.AffrimBill(System.Int32,GlobalObject.CE_MarketingType,System.Data.DataTable,System.String@)">
            <summary>
            仓管确认
            </summary>
            <param name="djID">单据ID</param>
            <param name="marketingType">单据类型</param>
            <param name="listInfo">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>确认成功返回True，确认失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.AuditingBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（审核）
            </summary>
            <param name="djID">单据ID</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回false</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetBill(System.String,System.Int32)">
            <summary>
            获得单据信息
            </summary>
            <param name="djh">单据号</param>
            <param name="djID">单据ID</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetBatchNo(System.Int32,System.String)">
            <summary>
            获得批次号
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="marketingType">单据类型</param>
            <returns>返回批次号</returns>
        </member>
        <member name="M:ServerModule.ISellIn.ExamineBill(System.String,System.String,System.String@)">
            <summary>
            编辑检验状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>编辑成功返回True，编辑失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetBoxNo(System.String)">
            <summary>
            获得箱子批次
            </summary>
            <param name="prefix">前缀</param>
            <returns>返回箱体批次号</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetAllBill(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            权限过滤查询
            </summary>
            <param name="type">查询类型 ("入库","出库","退库","退货")</param>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的数据信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsRepaired(System.String,System.Int32,System.String)">
            <summary>
            检查库存产品返修状态是否为已返修
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>为已返修返回True,不在库房或者不为已返修返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsNatural(System.String,System.Int32,System.String)">
            <summary>
            检查库存产品状态是否为正常
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>为正常返回True，不在库房或者非正常返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.UpdateProductStock(ServerModule.DepotManagementDataContext,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            操作产品库存(仅限于调拨)
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">单据号</param>
            <param name="marketingType">单据类型</param>
            <param name="outStorageID">调出库房</param>
            <param name="inStorageID">调入库房</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetStockProductCodeCountInfo(System.String)">
            <summary>
            获得库存的产品编号总数
            </summary>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的库存产品编号信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetProductCodeOperationInfo(System.String,System.Int32,System.String)">
            <summary>
            查询产品编号的业务
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的产品编号业务信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsPrint(System.String)">
            <summary>
            判断是否打印单据
            </summary>
            <param name="djh">单据号</param>
            <returns>已打印返回True，未打印返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetBoxInfo(System.String,System.String)">
            <summary>
            获得整盒的TCU
            </summary>
            <param name="boxNo">TCU盒号</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的整盒TCU信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetHoldBoxNo(System.String)">
            <summary>
            获得箱子编号
            </summary>
            <param name="productCode">产品编号</param>
            <returns>返回查询到的箱子编号</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetOutStockInfo">
            <summary>
            获得外部库存数
            </summary>
            <returns>返回查询的外部库存数的信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.DeleteOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            删除一条外部库存记录
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.UpdateOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            更新外部库存数
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.AddOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            添加外部库存数据
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetOutStockInfo(System.Int32,System.String)">
            <summary>
            获得更新的外部库存数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的外部库存数的信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.DeleteProductCodeInfo(System.String,System.String@)">
            <summary>
            当退出界面时删除已提交未保存的产品编码
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetCustomerInfo(System.Int32,System.String)">
            <summary>
            查询客户信息
            </summary>
            <param name="goodsID">产品ID</param>
            <param name="productCode">箱体编号</param>
            <returns>返回查询到的客户信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetLoadingInfo(System.Int32,System.String)">
            <summary>
            查询装车信息
            </summary>
            <param name="goodsID">产品ID</param>
            <param name="productCode">箱体编号</param>
            <returns>返回查询到的装车信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsOperationMatching(System.Int32,System.String,System.String)">
            <summary>
            检查业务是否匹配
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="productCode">产品编码</param>
            <param name="marktingType">业务类型</param>
            <returns>TRUE成功匹配，FALSE匹配失败</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetInsertingCoilStockInfo(System.String)">
            <summary>
            获得下线库存
            </summary>
            <param name="storageName">库房名称</param>
            <returns>返回查询的下线库存信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetStockProductCodeInfo(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            查询对应的编码状态
            </summary>
            <param name="storageID">库房ID</param>
            <param name="goodsID">物品ID</param>
            <param name="type">查询类型 ("库房","下线","TCU")</param>
            <param name="productCode">产品编码</param>
            <param name="version">版次号</param>
            <returns>返回查询结果集</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetDeliveryInspectionInfo(System.String,System.Int32)">
            <summary>
            查询出厂检验数据
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回查询的出厂检验信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetInStockWay(System.String,System.String)">
            <summary>
            获得自动入库的入库方式
            </summary>
            <param name="producrType">产品类型 ("0公里返修退货",售后返修退货","售后已修退货","批量生产退货","0公里批量返修退货","新箱","未知")</param>
            <param name="productCode">产品编码</param>
            <returns>成功返回获取到的入库方式，失败返回“未知”</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetOperationWay(System.String,System.String)">
            <summary>
            获得业务方式
            </summary>
            <param name="producrType">产品类型</param>
            <param name="productCode">产品编码</param>
            <returns>成功返回获取到的业务方式，失败返回“未知”</returns>
        </member>
        <member name="M:ServerModule.ISellIn.BatchCreateBill(System.Data.DataTable,System.String@)">
            <summary>
            批量生成入库单
            </summary>
            <param name="insertTable">需要插入的信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetProductCodeMatchingInfo">
            <summary>
            查看匹配表
            </summary>
            <returns>返回查询的匹配表信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetMatchingBillID">
            <summary>
            获得单号
            </summary>
            <returns>返回获得的单号</returns>
        </member>
        <member name="M:ServerModule.ISellIn.AddMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching,System.String@)">
            <summary>
            插入数据
            </summary>
            <param name="insert">匹配信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.UpdateMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching,System.Int32,System.String@)">
            <summary>
            更新匹配
            </summary>
            <param name="insert">匹配信息</param>
            <param name="id">表的ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.DeleteMatchingInfo(System.Int32,System.String@)">
            <summary>
            删除匹配
            </summary>
            <param name="id">表的ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsSameProductMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching)">
            <summary>
            检查是否有相同匹配记录
            </summary>
            <param name="insert">匹配信息</param>
            <returns>存在相同的返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.GetProductRepairStatusCount(System.String,System.Int32,System.Boolean)">
            <summary>
            获得库房中合格CVT数量
            </summary>
            <param name="storageID">库房ID</param>
            <param name="goodID">物品ID</param>
            <param name="isRepairstatus">是否为返修状态 1 是，0 不是</param>
            <returns>返回获得的CVT数量信息</returns>
        </member>
        <member name="M:ServerModule.ISellIn.RetrialBill(System.String,System.String,System.String@)">
            <summary>
            编辑复审状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>编辑成功返回True，编辑失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.IsProductCodeOperationStandard(System.String,System.Type,System.Int32,System.String,System.String,System.String@)">
            <summary>
            检测箱号的业务是否规范
            </summary>
            <param name="allType">明细业务类型</param>
            <param name="typeName">类型名称</param>
            <param name="goodsID">物品ID</param>
            <param name="productCode">箱体编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>规范返回True,不规范返回False</returns>
        </member>
        <member name="M:ServerModule.ISellIn.ReturnBill(System.String,System.String,System.String@,System.String,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <param name="billType">单据类型</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="F:ServerModule.SellIn.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_serverProductCode">
            <summary>
            产品箱号服务组件
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_serverStore">
            <summary>
            库存服务组件
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_serverProductList">
            <summary>
            营销产品信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_serverBasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_personnerServer">
            <summary>
            人员档案服务组件
            </summary>
        </member>
        <member name="F:ServerModule.SellIn.m_serverDepartment">
            <summary>
            部门服务组件
            </summary>
        </member>
        <member name="M:ServerModule.SellIn.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsExistAbnomalProductCode(System.String)">
            <summary>
            检测单据是否存在异常箱号
            </summary>
            <param name="billNo">单据号</param>
            <returns>True: 存在 False : 不存在</returns>
        </member>
        <member name="M:ServerModule.SellIn.AddList_ProductCodesGreenLight(System.Collections.Generic.List{ServerModule.ProductsCode_GreenLight})">
            <summary>
            添加特殊放行记录
            </summary>
            <param name="lstInfo">对象列表</param>
        </member>
        <member name="M:ServerModule.SellIn.DataInSellInList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.Int32,System.String@)">
            <summary>
            单据明细的数据库操作
            </summary>
            <param name="context">数据上下文</param>
            <param name="ListInfo">明细信息</param>
            <param name="djID">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteSellInList(ServerModule.DepotManagementDataContext,System.Int32,System.String@)">
            <summary>
            删除单据明细
            </summary>
            <param name="context">数据上下文</param>
            <param name="djID">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBillID">
            <summary>
            获得单据号
            </summary>
            <returns>返回最大单据ID</returns>
        </member>
        <member name="M:ServerModule.SellIn.UpdateBill(System.Data.DataTable,System.Data.DataRow,System.String,System.String@)">
            <summary>
            单据的数据库操作
            </summary>
            <param name="listInfo">明细信息</param>
            <param name="billInfo">单据信息，若ID=0则添加，否则更新</param>
            <param name="marketingType">单据类型</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetList(System.Int32)">
            <summary>
            获得单据明细
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回获取的单据明细信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetAllBill(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            权限过滤查询
            </summary>
            <param name="type">查询类型 ("入库","出库","退库","退货")</param>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的数据信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteBill(System.Int32,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djID">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.AffrimBill(System.Int32,GlobalObject.CE_MarketingType,System.Data.DataTable,System.String@)">
            <summary>
            仓管确认
            </summary>
            <param name="djID">单据ID</param>
            <param name="marketingType">单据类型</param>
            <param name="listInfo">操作的数据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>确认成功返回True，确认失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetConnibalizeGoodsProductStatus(System.String,System.Int32,System.String)">
            <summary>
            获得产品返修状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回产品返修状态</returns>
        </member>
        <member name="M:ServerModule.SellIn.UpdateProductStock(ServerModule.DepotManagementDataContext,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            操作产品库存(仅限于调拨)
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">单据号</param>
            <param name="marketingType">单据类型</param>
            <param name="outStorageID">调出库房</param>
            <param name="inStorageID">调入库房</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.OperationDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill,GlobalObject.CE_MarketingType)">
            <summary>
            操作账务信息与库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="operationType">单据类型</param>
        </member>
        <member name="M:ServerModule.SellIn.AssignDetailInfo_In(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill,ServerModule.View_S_MarketingBill_V3)">
            <summary>
            赋值账务信息_入
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.SellIn.AssignDetailInfo_Out(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill,ServerModule.View_S_MarketingBill_V3)">
            <summary>
            赋值账务信息_出
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.SellIn.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill,ServerModule.View_S_MarketingBill_V3)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="tempBillLnq">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.SellIn.OperationDetailAndStock_Out(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill)">
            <summary>
            根据单据信息操作账务信息与库存信息_出
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.SellIn.OperationDetailAndStock_In(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingBill)">
            <summary>
            根据单据信息操作账务信息与库存信息_入
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.SellIn.AuditingBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（审核）
            </summary>
            <param name="djID">单据ID</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回false</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBill(System.String,System.Int32)">
            <summary>
            获得单据信息
            </summary>
            <param name="djh">单据号</param>
            <param name="djID">单据ID</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBatchNo(System.Int32,System.String)">
            <summary>
            获得批次号
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="marketingType">单据类型</param>
            <returns>返回批次号</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBoxNo(System.String)">
            <summary>
            获得箱子批次
            </summary>
            <param name="prefix">前缀</param>
            <returns>返回箱体批次号</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteProductCode(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String,System.String@)">
            <summary>
            删除流水码表中的数据
            </summary>
            <param name="context">数据上下文</param>
            <param name="showTable">信息列表</param>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteRemainProductCode(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String,System.String@)">
            <summary>
            删除多余的流水码信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="showTable">信息列表</param>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.ExamineBill(System.String,System.String,System.String@)">
            <summary>
            编辑检验状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>编辑成功返回True，编辑失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.RetrialBill(System.String,System.String,System.String@)">
            <summary>
            编辑复审状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>编辑成功返回True，编辑失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBillInfo(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="djID">单据ID</param>
            <returns>返回单条单据信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBillInfo(System.Int32)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回单条单据信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsRepaired(System.String,System.Int32,System.String)">
            <summary>
            检查库存产品返修状态是否为已返修
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>为已返修返回True,不在库房或者不为已返修返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsNatural(System.String,System.Int32,System.String)">
            <summary>
            检查库存产品状态是否为正常
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>为正常返回True，不在库房或者非正常返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetStockProductCodeInfo(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            查询对应的编码状态
            </summary>
            <param name="storageID">库房ID</param>
            <param name="goodsID">物品ID</param>
            <param name="type">查询类型 ("库房","下线","TCU")</param>
            <param name="productCode">产品编码</param>
            <param name="version">版次号</param>
            <returns>返回查询结果集</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetInsertingCoilStockInfo(System.String)">
            <summary>
            获得下线库存
            </summary>
            <param name="storageName">库房名称</param>
            <returns>返回查询的下线库存信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetStockProductCodeCountInfo(System.String)">
            <summary>
            获得库存的产品编号总数
            </summary>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的库存产品编号信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetDeliveryInspectionInfo(System.String,System.Int32)">
            <summary>
            查询出厂检验数据
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回查询的出厂检验信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetProductCodeOperationInfo(System.String,System.Int32,System.String)">
            <summary>
            查询产品编号的业务
            </summary>
            <param name="productCode">产品编号</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的产品编号业务信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsPrint(System.String)">
            <summary>
            判断是否打印单据
            </summary>
            <param name="djh">单据号</param>
            <returns>已打印返回True，未打印返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBoxInfo(System.String,System.String)">
            <summary>
            获得整盒的TCU
            </summary>
            <param name="boxNo">TCU盒号</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的整盒TCU信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetHoldBoxNo(System.String)">
            <summary>
            获得箱子编号
            </summary>
            <param name="productCode">产品编号</param>
            <returns>返回查询到的箱子编号</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetOutStockInfo">
            <summary>
            获得外部库存数
            </summary>
            <returns>返回查询的外部库存数的信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            删除一条外部库存记录
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.UpdateOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            更新外部库存数
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.AddOutStockInfo(ServerModule.S_OutStock,System.String@)">
            <summary>
            添加外部库存数据
            </summary>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.InsertTheUpdateOutStock(ServerModule.DepotManagementDataContext,ServerModule.S_OutStock,System.String@)">
            <summary>
            插入更新的数据记录
            </summary>
            <param name="context">数据上下文</param>
            <param name="outStock">外部库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetOutStockInfo(System.Int32,System.String)">
            <summary>
            获得更新的外部库存数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回查询到的外部库存数的信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteProductCodeInfo(System.String,System.String@)">
            <summary>
            当退出界面时删除已提交未保存的产品编码
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.ChangeDJHInProductCode(ServerModule.DepotManagementDataContext,System.String,System.String,System.String@)">
            <summary>
            改变产品编码业务表中的关联单据号
            </summary>
            <param name="context">数据上下文</param>
            <param name="oldDJH">老单据号</param>
            <param name="newDJH">新单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetCustomerInfo(System.Int32,System.String)">
            <summary>
            查询客户信息
            </summary>
            <param name="goodsID">产品ID</param>
            <param name="productCode">箱体编号</param>
            <returns>返回查询到的客户信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetLoadingInfo(System.Int32,System.String)">
            <summary>
            查询装车信息
            </summary>
            <param name="goodsID">产品ID</param>
            <param name="productCode">箱体编号</param>
            <returns>返回查询到的装车信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetInStockWay(System.String,System.String)">
            <summary>
            获得自动入库的入库方式
            </summary>
            <param name="producrType">产品类型 ("0公里返修退货",售后返修退货","售后已修退货",
            "批量生产退货","0公里批量返修退货","新箱","未知","生产返修退货")</param>
            <param name="productCode">产品编码</param>
            <returns>成功返回获取到的入库方式，失败返回“未知”</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetOperationWay(System.String,System.String)">
            <summary>
            获得业务方式
            </summary>
            <param name="producrType">产品类型</param>
            <param name="productCode">产品编码</param>
            <returns>成功返回获取到的业务方式，失败返回“未知”</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetTHYWFS(System.String,System.String)">
            <summary>
            获得对应的退货的业务方式
            </summary>
            <param name="producrType">产品类型</param>
            <param name="productCode">产品编码</param>
            <returns>成功返回获取到的业务方式，失败返回“未知”</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsOperationMatching(System.Int32,System.String,System.String)">
            <summary>
            检查业务是否匹配
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="productCode">产品编码</param>
            <param name="marktingType">业务类型</param>
            <returns>TRUE成功匹配，FALSE匹配失败</returns>
        </member>
        <member name="M:ServerModule.SellIn.BatchCreateBill(System.Data.DataTable,System.String@)">
            <summary>
            批量生成入库单
            </summary>
            <param name="insert">需要插入的信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetProductCodeMatchingInfo">
            <summary>
            查看匹配表
            </summary>
            <returns>返回查询的匹配表信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetMatchingBillID">
            <summary>
            获得单号
            </summary>
            <returns>返回获得的单号</returns>
        </member>
        <member name="M:ServerModule.SellIn.AddMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching,System.String@)">
            <summary>
            插入数据
            </summary>
            <param name="insert">匹配信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.UpdateMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching,System.Int32,System.String@)">
            <summary>
            更新匹配
            </summary>
            <param name="insert">匹配信息</param>
            <param name="id">表的ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsSameProductMatchingInfo(ServerModule.S_NewAndOldProductCodeMatching)">
            <summary>
            检查是否有相同匹配记录
            </summary>
            <param name="insert">匹配信息</param>
            <returns>存在相同的返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.DeleteMatchingInfo(System.Int32,System.String@)">
            <summary>
            删除匹配
            </summary>
            <param name="id">表的ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetProductRepairStatusCount(System.String,System.Int32,System.Boolean)">
            <summary>
            获得库房中合格CVT数量
            </summary>
            <param name="storageID">库房ID</param>
            <param name="goodID">物品ID</param>
            <param name="isRepairstatus">是否为返修状态 1 是，0 不是</param>
            <returns>返回获得的CVT数量信息</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsProductCodeOperationStandardWorkShop(System.String,System.Int32,System.String,System.String,System.String@)">
            <summary>
            车间业务检测
            </summary>
            <param name="allType">明细业务类型</param>
            <param name="goodsID">物品ID</param>
            <param name="productCode">箱体编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>规范返回True,不规范返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsProductCodeOperationStandardStock(System.String,System.Int32,System.String,System.String,System.String@)">
            <summary>
            库房业务检测
            </summary>
            <param name="allType">明细业务类型</param>
            <param name="goodsID">物品ID</param>
            <param name="productCode">箱体编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>规范返回True,不规范返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.IsProductCodeOperationStandard(System.String,System.Type,System.Int32,System.String,System.String,System.String@)">
            <summary>
            检测箱号的业务是否规范
            </summary>
            <param name="allType">明细业务类型</param>
            <param name="typeName">类型名称</param>
            <param name="goodsID">物品ID</param>
            <param name="productCode">箱体编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>规范返回True,不规范返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.ReturnBill(System.String,System.String,System.String@,System.String,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <param name="billType">单据类型</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.SellIn.GetBarcodeTable(System.String)">
            <summary>
            获得条形码Table
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.IBargainGoodsServer">
            <summary>
            合同物品信息管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.OperatorMinorPurchase(System.String,System.String)">
            <summary>
            操作零星采购单相关业务
            </summary>
            <param name="bargainBillNo">合同号</param>
            <param name="minorPurchaseBillNo">零星采购单号</param>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.IsOperator(System.Int32,System.String)">
            <summary>
            判断是否可以操作
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="bargainNumber">合同号</param>
            <returns>可以操作 返回True，不可操作 返回False</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.GetGoodsUnitPrice(System.String,System.Int32,System.String)">
            <summary>
            获取合同物品表中某一产品单价
            </summary>
            <param name="bargainNumber">合同物品号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <returns>返回获取到的单价</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.GetBargainGoods(System.String,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            获取合同物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <param name="returnBargainGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.AddBargainGoods(ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            添加合同物品信息
            </summary>
            <param name="bargainInfo">合同物品信息</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.UpdateBargainGoods(System.Int32,ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            修改合同物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="newGoods">新合同物品</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.UpdateBargainGoods(ServerModule.DepotManagementDataContext,System.Int32,ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            修改合同物品信息
            </summary>
            <param name="dataContext">LINQ数据库上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="newGoods">新合同物品</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.UpdateBargainNumber(System.Int32,System.String,System.String@)">
            <summary>
            修改合同物品信息中的合同号
            </summary>
            <param name="id">合同物品ID</param>
            <param name="newBargainNumber">新合同号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.UpdateBargainNumber(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String@)">
            <summary>
            修改合同物品信息中的合同号
            </summary>
            <param name="dataContext">数据库上下文</param>
            <param name="id">合同物品ID</param>
            <param name="newBargainNumber">新合同号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.DeleteBargainGoods(System.String,System.Int32,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            删除合同物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <param name="goodsID">物品ID</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainGoodsServer.GetBargainGoodsInfo(System.String)">
            <summary>
            根据合同号获取合同物品信息
            </summary>
            <param name="bargainNumber">合同编号</param>
            <returns>返回获取到的合同物品信息</returns>
        </member>
        <member name="P:ServerModule.IBargainGoodsServer.AutoSubmitToDatabase">
            <summary>
            获取或设置是否自动将结果提交到数据库的标志，默认为true
            </summary>
        </member>
        <member name="T:ServerModule.MaterialListRejectBill">
            <summary>
            采购退货单物品信息服务
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialListRejectBill">
            <summary>
            采购退货单物品信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.SetPriceInfo(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            设置金额信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill,ServerModule.S_MaterialListRejectBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill,ServerModule.S_MaterialListRejectBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.AddGoods(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某采购退货单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">采购退货单号</param>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某采购退货单下的所有物品信息
            </summary>
            <param name="billNo">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.GetGoods(System.String)">
            <summary>
            获取指定采购退货单的物品信息
            </summary>
            <param name="billNo">采购退货单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.UpdateGoods(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.GetScrapGoods(System.String)">
            <summary>
            获得报废物品信息
            </summary>
            <param name="strProvider">报废物品供应商</param>
            <returns>报废物品供应商不为空是返回供应商对应的报废物品列表，
            报废物品供应商为空串时返回所有报废物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.GetIsolationBill(System.String,System.String)">
            <summary>
            获得对应隔离单信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="storageID">库房ID</param>
            <returns>成功返回获取到的隔离单信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialListRejectBill.IsGoodsStockThan(System.Int32,System.String,System.Decimal,System.String,System.String)">
            <summary>
            检查物品库存是否大于等于指定值
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="count">要比较的数量</param>
            <param name="provider">供应商</param>
            <param name="storageID">库房ID</param>
            <returns> >= 指定值返回true </returns>
        </member>
        <member name="F:ServerModule.MaterialListRejectBill.m_serverDepartment">
            <summary>
            部门服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialListRejectBill.m_basicGoodsServer">
            <summary>
            基础物品信息服务
            </summary>
        </member>
        <member name="F:ServerModule.MaterialListRejectBill.m_storeServer">
            <summary>
            库存服务
            </summary>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.GetGoods(System.String)">
            <summary>
            获取指定采购退货单的物品信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.SetPriceInfo(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            设置金额信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.AddGoods(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="idList">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某采购退货单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">退货单号</param>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.IsGoodsStockThan(System.Int32,System.String,System.Decimal,System.String,System.String)">
            <summary>
            检查物品库存是否大于等于指定值
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="count">要比较的数量</param>
            <param name="provider">供应商</param>
            <param name="storageID">库房ID</param>
            <returns> >= 指定值返回true </returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某采购退货单下的所有物品信息
            </summary>
            <param name="billNo">退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.UpdateGoods(System.String,ServerModule.S_MaterialListRejectBill,System.String,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goods">物品信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill,ServerModule.S_MaterialListRejectBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill,ServerModule.S_MaterialListRejectBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.GetScrapGoods(System.String)">
            <summary>
            获得报废物品信息
            </summary>
            <param name="provider">报废物品供应商</param>
            <returns>报废物品供应商不为空是返回供应商对应的报废物品列表，报废物品供应商为空串时返回所有报废物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.GetIsolationBill(System.String,System.String)">
            <summary>
            获得对应隔离单信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="storageID">库房ID</param>
            <returns>成功返回获取到的隔离单信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.ClearGoodsDate(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            清除隔离单关联的采购退货单单号信息
            </summary>
            <param name="context">LINQ 数据上下文</param>
            <param name="billNo">隔离单关联的采购退货单的单据号</param>
            <param name="goodsID">隔离物品ID</param>
            <param name="batchNo">隔离物品批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListRejectBill.UpdateAssicotaeBillID(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String@)">
            <summary>
            更改隔离单中关联单据号
            </summary>
            <param name="context">LINQ 数据上下文</param>
            <param name="billNo">隔离单关联的采购退货单的新单据号</param>
            <param name="goodsID">隔离物品ID</param>
            <param name="batchNo">隔离物品批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.IGeneratesCheckOutInDepotServer">
            <summary>
            自动生成入库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IGeneratesCheckOutInDepotServer.GetAllInfo(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            获得可以自动生成的入库单信息
            </summary>
            <param name="provider">供应商</param>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="gpec">规格</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回可以自动生成的入库单信息</returns>
        </member>
        <member name="M:ServerModule.IGeneratesCheckOutInDepotServer.AddCheckInDepotBill(System.Data.DataTable,System.String,System.String,System.String@)">
            <summary>
            自动插入报检入库单
            </summary>
            <param name="dateTable">需要插入的数据集</param>
            <param name="storageID">库房ID</param>
            <param name="version">版次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.HomemadePartInfoServer">
            <summary>
            自制件零件信息服务类
            </summary>
        </member>
        <member name="T:ServerModule.IHomemadePartInfoServer">
            <summary>
            自制件零件信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IHomemadePartInfoServer.IsInHomemadePartInfo(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            判断是否属于自制件
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <returns>True 是, False 否</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInfoServer.IsInHomemadePartInfo(System.Int32)">
            <summary>
            判断是否属于自制件
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>True 是, False 否</returns>
        </member>
        <member name="M:ServerModule.IHomemadePartInfoServer.GetHomemadeAccessory">
            <summary>
            获取自制件零件信息
            </summary>
            <returns>返回获取到的自制件零件信息</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInfoServer.IsInHomemadePartInfo(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            判断是否属于自制件
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <returns>True 是, False 否</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInfoServer.IsInHomemadePartInfo(System.Int32)">
            <summary>
            判断是否属于自制件
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>True 是, False 否</returns>
        </member>
        <member name="M:ServerModule.HomemadePartInfoServer.GetHomemadeAccessory">
            <summary>
            获取自制件零件信息
            </summary>
            <returns>返回获取到的自制件零件信息</returns>
        </member>
        <member name="T:ServerModule.BargainGoodsServer">
            <summary>
            合同物品信息管理类
            </summary>
        </member>
        <member name="F:ServerModule.BargainGoodsServer.m_autoSubmitToDatabase">
            <summary>
            是否自动将结果提交到数据库的标志
            </summary>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.IsOperator(System.Int32,System.String)">
            <summary>
            判断是否可以操作
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="bargainNumber">合同号</param>
            <returns>可以操作 返回True，不可操作 返回False</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.GetGoodsUnitPrice(System.String,System.Int32,System.String)">
            <summary>
            获取合同物品表中某一产品单价
            </summary>
            <param name="bargainNumber">合同物品号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <returns>返回获取到的单价</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.GetBargainGoods(System.String,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            获取合同物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <param name="returnBargainGoods">返回查询到的信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.AddBargainGoods(ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            添加合同物品信息
            </summary>
            <param name="bargainGoods">合同物品信息</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.UpdateBargainGoods(System.Int32,ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            修改合同物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="newGoods">新合同物品</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.UpdateBargainGoods(ServerModule.DepotManagementDataContext,System.Int32,ServerModule.B_BargainGoods,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            修改合同物品信息
            </summary>
            <param name="dataContext">LINQ 数据库上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="newGoods">新合同物品</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.UpdateBargainNumber(System.Int32,System.String,System.String@)">
            <summary>
            修改合同物品信息中的合同号
            </summary>
            <param name="id">合同物品ID</param>
            <param name="newBargainNumber">新合同号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.UpdateBargainNumber(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String@)">
            <summary>
            修改合同物品信息中的合同号
            </summary>
            <param name="dataContext">数据库上下文</param>
            <param name="id">合同物品ID</param>
            <param name="newBargainNumber">新合同号</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.OperatorMinorPurchase(System.String,System.String)">
            <summary>
            操作零星采购单相关业务
            </summary>
            <param name="bargainBillNo">合同号</param>
            <param name="minorPurchaseBillNo">零星采购单号</param>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.DeleteBargainGoods(System.String,System.Int32,System.Linq.IQueryable{ServerModule.View_B_BargainGoods}@,System.String@)">
            <summary>
            删除合同物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <param name="goodsID">物品ID</param>
            <param name="returnBargainGoods">返回查询到的合同物品信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainGoodsServer.GetBargainGoodsInfo(System.String)">
            <summary>
            获取指定合同号对应的物品信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>指定合同号对应的物品信息</returns>
        </member>
        <member name="P:ServerModule.BargainGoodsServer.AutoSubmitToDatabase">
            <summary>
            获取或设置是否自动将结果提交到数据库的标志，默认为true
            </summary>
        </member>
        <member name="T:ServerModule.ITCURepairInfoServer">
            <summary>
            TCU返修信息服务接口
            </summary>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.ConfirmUpdateData(System.String,System.String@)">
            <summary>
            质管确认修改TCU返修信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.DeleteData(System.String,System.String@)">
            <summary>
            通过单号删除TCU返修信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.GetAllData(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有返修信息
            </summary>
            <param name="result">结果集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.GetDataByBillNo(System.String)">
            <summary>
            通过单号获取一条信息
            </summary>
            <param name="billNo">单号</param>
            <returns>成功返回TCU_RepairInfo数据集，失败返回null</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.InsertData(ServerModule.TCU_RepairInfo,System.String@)">
            <summary>
            添加一条TCU返修信息
            </summary>
            <param name="repairInfo">TCU返修信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.UpdateData(ServerModule.TCU_RepairInfo,System.String@)">
            <summary>
            通过单号修改TCU返修信息(先删后增)
            </summary>
            <param name="repairInfo">TCU返修信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.ITCURepairInfoServer.GetMaxBillNo">
            <summary>
            获得最大编号
            </summary>
            <returns>成功返回最大编号，失败返回null</returns>
        </member>
        <member name="P:ServerModule.ITCURepairInfoServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:ServerModule.CheckInDepotBillStatus">
            <summary>
            报检入库单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.等待确认到货数">
            <summary>
            等待确认到货数
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.等待质检机检验">
            <summary>
            等待质检机检验
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.等待质检电检验">
            <summary>
            等待质检电检验
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.等待入库">
            <summary>
            等待入库
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.等待挑返">
            <summary>
            等待挑返
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.已入库">
            <summary>
            已入库
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.已报废">
            <summary>
            已报废
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.撤消">
            <summary>
            撤消
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.回退_采购单据有误">
            <summary>
            回退_采购单据有误
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.回退_确认到货有误">
            <summary>
            回退_确认到货有误
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.回退_质检电信息有误">
            <summary>
            回退_质检电信息有误
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotBillStatus.回退_质检机信息有误">
            <summary>
            回退_质检机信息有误
            </summary>
        </member>
        <member name="T:ServerModule.CheckInDepotAssociatedBillType">
            <summary>
            报检入库单关联单据类别
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotAssociatedBillType.订单">
            <summary>
            订单
            </summary>
        </member>
        <member name="F:ServerModule.CheckInDepotAssociatedBillType.合同">
            <summary>
            合同
            </summary>
        </member>
        <member name="T:ServerModule.ICheckOutInDepotServer">
            <summary>
            报检入库单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">报检单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.SubmitReportInfo(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交检验报告
            </summary>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetBill(System.String)">
            <summary>
            获取报检单视图信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条报检单的单据信息</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetBillNo(System.Int32,System.String)">
            <summary>
            由物品ID，批次号获得报检入库单据号
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.InsertWebData(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            插入WEB 数据库
            </summary>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetNextBillNo(System.Int32)">
            <summary>
            获取新的入库单号
            </summary>
            <param name="checkOutGoodsType">报检物品类别</param>
            <returns>返回获取到的新的入库单号</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetAllBill">
            <summary>
            获取报检入库单信息
            </summary>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetBill(System.String,System.String,System.String)">
            <summary>
            获取指定物品的单据信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取到的单据信息</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.IsExist(System.Int32)">
            <summary>
            检查报检入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.AddBill(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            添加报检入库单
            </summary>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.UpdateBill(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            采购员更新报检入库单
            </summary>
            <param name="updateBill">单据信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.AffirmGoodsAmount(System.String,System.String,System.Int32,System.String,System.String@)">
            <summary>
            确认到货数
            </summary>
            <param name="billID">单据编号</param>
            <param name="confirmAmountSignatory">仓库收货员签名</param>
            <param name="goodsAmount">货物数量</param>
            <param name="billStatusInfo">单据状态消息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.SubmitQualityInfo(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.SubmitInDepotInfo(System.String,ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除报检入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除报检入库单号</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.RebackBill(System.String,System.String,System.Int32,System.String@)">
            <summary>
            逐级回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="rebackReason">回退原因</param>
            <param name="statusFlag">状态标志 0：回退_质检电信息有误；1：回退_质检机信息有误</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.ScrapBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="billID">要报废的单据编号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.UpdateRejectMode(System.String,System.String,System.String@)">
            <summary>
            更新退货建议数据
            </summary>
            <param name="djh">报检单单号</param>
            <param name="rejectMode">退货建议</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ICheckOutInDepotServer.GetRejectMode(System.String)">
            <summary>
            获得退货建议方式
            </summary>
            <param name="djh">报检单单号</param>
            <returns>成功则返回获取到的退货建议，失败返回空串</returns>
        </member>
        <member name="T:ServerModule.OrdinaryInDepotBillServer">
            <summary>
            普通入库单管理类
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillServer.m_serverFrockStandingBook">
            <summary>
            工装信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillServer.m_serverBasicGoods">
            <summary>
            计划价格服务
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotBillServer.m_billUniqueID">
            <summary>
            单据唯一码
            </summary>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.GetHavingInvoice(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            获取普通入库单的单据到票标志
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回普通入库单是否到票的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.GetHavingInvoice(System.String,System.String@)">
            <summary>
            获取普通入库单的单据到票标志
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回普通入库单是否到票的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.GetBill(System.String)">
            <summary>
            获取普通入库单信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取普通入库单信息
            </summary>
            <param name="returnInfo">入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.AddBill(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加普通入库单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.CreateNewFrockMessage(ServerModule.S_OrdinaryInDepotBill,System.String@)">
            <summary>
            插入工装所有信息
            </summary>
            <param name="ordinarybill">普通入库单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.SubmitNewBill(System.String,ServerModule.OrdinaryInDepotBillStatus,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            采购员提交单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="status">提交后的单据状态</param>
            <param name="returnInfo">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.SubmitQualityInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billInfo">取单据中质量信息部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.SubmitMachineValidationInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交工装验证信息
            </summary>
            <param name="billInfo">取单据中工装验证信息部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.UpdateFrockStockStatus(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            根据工装验证报告表更新工装台帐的库存状态
            </summary>
            <param name="context">LINQ数据上下文</param>
            <param name="billNo">普通入库单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.SubmitInDepotInfo(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_OrdinaryInDepotBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.UpdateBill(ServerModule.S_OrdinaryInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnInfo">修改完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.UpdateGoodsType(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            更新指定单据物品类别
            </summary>
            <param name="billNo">单据编号</param>
            <param name="depotType">物品类别</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除普通入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="returnInfo">普通入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除普通入库单号</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotBillServer.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退后查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.MaterialRequisitionBillStatus">
            <summary>
            领料单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.等待部门领导批准">
            <summary>
            等待部门领导批准
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.等待工艺人员批准">
            <summary>
            等待工艺人员批准
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.等待出库">
            <summary>
            等待出库
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionBillStatus.已出库">
            <summary>
            已出库
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialRequisitionServer">
            <summary>
            领料单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetKievMaterialInfo">
            <summary>
            基辅料信息查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.DeleteBoardIssue(System.String)">
            <summary>
            删除看板发料记录
            </summary>
            <param name="issueType">发料类型</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetBoardIssueInfo(System.String)">
            <summary>
            获得看板发料的记录
            </summary>
            <param name="issueType">发料类型</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.DeleteBoardIssue(ServerModule.S_MaterialRequisition_BoardIssue)">
            <summary>
            删除看板发料记录
            </summary>
            <param name="issue">看板发料对象</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AddBoardIssue(ServerModule.S_MaterialRequisition_BoardIssue)">
            <summary>
            添加看板发料记录
            </summary>
            <param name="issue">看板发料对象</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.IsExistsIsolationGoods(System.String)">
            <summary>
            检查物料中是否存在隔离物品
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回隔离的物品信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AutoCreateBoardPicking(System.Collections.Generic.List{ServerModule.S_MaterialRequisitionGoods},System.String,System.String)">
            <summary>
            看板领料自动生成
            </summary>
            <param name="goodsInfo">物料信息</param>
            <param name="pickingType">领用类型</param>
            <param name="storageID">库房ID</param>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetBill(System.String)">
            <summary>
            获得单条领料单记录
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单条领料单信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AutoCreateBill(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition,System.String@)">
            <summary>
            外部插入领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billInfo">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.TechnologistBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            工艺人员批准
            </summary>
            <param name="billid">单据号</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.IsExistAssociatedBill(System.String)">
            <summary>
            检查是否存在填写了指定关联单号的单据
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.ContainAssociatedBill(System.String)">
            <summary>
            获取包含了指定关联单号的领料单
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>返回获取到的关联单据</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有领料单信息
            </summary>
            <param name="returnBill">入库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetBillView(System.String)">
            <summary>
            获取领料单视图信息
            </summary>
            <param name="billNo">领料单号</param>
            <returns>成功返回获取领料信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AddBill(ServerModule.S_MaterialRequisition,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加领料单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除领料单
            </summary>
            <param name="billNo">领料单号</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料单号</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除领料单
            </summary>
            <param name="billNo">领料单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料单号</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.UpdateBill(ServerModule.S_MaterialRequisition,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料单(只修改编制人涉及信息)
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.UpdateBill(System.String,System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料单
            </summary>
            <param name="billNo">单据编号</param>
            <param name="purposeCode">用途编号</param>
            <param name="remark">备注</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            领料人提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AuthorizeBill(System.String,System.String,ServerModule.MaterialRequisitionBillStatus@,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="msg">返回更新后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成领料单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.FinishBill(ServerModule.DepotManagementDataContext,System.String,System.String,System.String@)">
            <summary>
            完成领料单(系统自动生成领料单时调用)
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退后查询到的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetScrapGoods(System.String,System.String@)">
            <summary>
            查询未领用的报废物品
            </summary>
            <param name="loginName">登录人姓名</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的数据集</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.CheckGoodsVersion(System.String)">
            <summary>
            检查并导出版次号不符的物品
            </summary>
            <param name="billID">领料单号</param>
            <returns>返回检测出的结果集</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetDeptPickingToplimitTable">
            <summary>
            获得部门真实的每月领料上限
            </summary>
            <returns>返回部门真实的每月领料上限</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.SaveDeptPickingToplimit(System.Data.DataTable,System.String@)">
            <summary>
            保存领料上限表
            </summary>
            <param name="insertTable">被保存的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>保存成功返回True，保存失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AuthorizBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            分管领导批准
            </summary>
            <param name="billID">单据号</param>
            <param name="returnBill">返回更新后所查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetManufacturingConsumeTable">
            <summary>
            获得部门每月领料上限的按台为单位的基数
            </summary>
            <returns>返回部门的领料上限数据集</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.AutogenerationPickingToplimit(System.Decimal,System.String@)">
            <summary>
            自动生成消耗定额
            </summary>
            <param name="dccount">每月的台套数</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>生成成功返回True，生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.FinishFrock(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            针对于领料单的工装业务处理
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.InsertSysLog(ServerModule._Sys_Log,System.String@)">
            <summary>
            在系统日志中插入一条信息
            </summary>
            <param name="log">日志数据集</param>
            <param name="error">错误信息</param>
            <returns>插入成功返回True失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.UpdateBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改用途
            </summary>
            <param name="billNo">单据号</param>
            <param name="type">用途</param>
            <param name="returnBill">结果集</param>
            <param name="error">错误信息</param>
            <returns>插入成功返回True失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetWholeMachineRequistionDetail(System.String)">
            <summary>
            获得整台请领单明细列表
            </summary>
            <param name="billNo">整台请领单号</param>
            <returns>返回列表</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionServer.GetSummarySheet(System.String,System.String)">
            <summary>
            获得领料汇总表
            </summary>
            <param name="yearAndMonth">年月</param>
            <param name="sheetName">表单名</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.DepartmentServer">
            <summary>
            部门管理类
            </summary>
        </member>
        <member name="T:ServerModule.IDepartmentServer">
            <summary>
            部门管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetDepartment_Finance">
            <summary>
            获得部门——财务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetDepartmentCode(System.String)">
            <summary>
            获得部门编码
            </summary>
            <param name="departmentName">部门名称</param>
            <returns>返回部门编码</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.IsPersonByDept(System.String)">
            <summary>
            判断人员是否在某部门部门
            </summary>
            <param name="workID">人员工号</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetPersonnelAffiliatedTopFunction(System.String)">
            <summary>
            获得人员最好级所属部门
            </summary>
            <param name="personnel">人员姓名</param>
            <returns>返回 Table</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetDeptInfoFromPersonnelInfo(System.String)">
            <summary>
            获得人员信息对应的部门信息
            </summary>
            <param name="personnelInfo">人员信息（姓名或工号）</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetDepartmentName(System.String)">
            <summary>
            获得部门名称
            </summary>
            <param name="departmentCode">部门编码</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetAllDepartmentType">
            <summary>
            获取所有的部门类别
            </summary>
            <returns>返回获取到的部门类别</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetDepartments(System.String)">
            <summary>
            获取部门编号对应的部门信息
            </summary>
            <param name="departmentCode">部门编号</param>
            <returns>成功返回获取到的部门，失败返回null</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.GetAllDepartment(System.Linq.IQueryable{ServerModule.View_Department}@,System.String@)">
            <summary>
            获取部门信息表
            </summary>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取部门信息表</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.AddDepartment(ServerModule.Department,System.String@)">
            <summary>
            添加部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.UpdataDepartment(ServerModule.Department,System.String@)">
            <summary>
            修改部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.IDepartmentServer.DeleteDepartment(System.String,System.String@)">
            <summary>
            删除某一部门
            </summary>
            <param name="departmentCode">部门编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一部门</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetDepartmentCode(System.String)">
            <summary>
            获得部门编码
            </summary>
            <param name="departmentName">部门名称</param>
            <returns>返回部门编码</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.IsPersonByDept(System.String)">
            <summary>
            判断人员是否在某部门部门
            </summary>
            <param name="workID">人员工号</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetPersonnelAffiliatedTopFunction(System.String)">
            <summary>
            获得人员最好级所属部门
            </summary>
            <param name="personnel">人员姓名</param>
            <returns>返回 Table</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetDeptInfoFromPersonnelInfo(System.String)">
            <summary>
            获得人员信息对应的部门信息
            </summary>
            <param name="personnelInfo">人员信息（姓名或工号）</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetDepartmentName(System.String)">
            <summary>
            获得部门名称
            </summary>
            <param name="departmentCode">部门编码</param>
            <returns>部门名称</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetAllDepartmentType">
            <summary>
            获取所有的部门类别
            </summary>
            <returns>返回获取到的部门类别</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetAllDepartment(System.Linq.IQueryable{ServerModule.View_Department}@,System.String@)">
            <summary>
            获取部门信息表
            </summary>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取部门信息表</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.GetDepartments(System.String)">
            <summary>
            获取部门编号对应的部门信息
            </summary>
            <param name="departmentCode">部门编号</param>
            <returns>成功返回获取到的部门，失败返回null</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.AddDepartment(ServerModule.Department,System.String@)">
            <summary>
            添加部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.UpdataDepartment(ServerModule.Department,System.String@)">
            <summary>
            修改部门信息表
            </summary>
            <param name="dept">部门信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.DepartmentServer.DeleteDepartment(System.String,System.String@)">
            <summary>
            删除某一部门
            </summary>
            <param name="departmentCode">部门编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一部门</returns>
        </member>
        <member name="T:ServerModule.ICVTCustomerInformationServer">
            <summary>
            CVT客户信息服务类接口
            </summary>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.BatchMatchingCVTNumber">
            <summary>
            批量自动匹配CVT编号
            </summary>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.DeleteCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            删除数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">CVT客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.GetCVTCustomerInformation">
            <summary>
            获得CVT客户基础信息
            </summary>
            <returns>返回CVT客户基础信息</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.InsertCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            插入数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">要插入的CVT客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.UpdateCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            更改数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">CVT客户信息</param>
            <param name="error">c错误信息</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.BatchInsertCVTCustomerInformation(System.Data.DataTable,System.String@)">
            <summary>
            批量插入CVT客户基础信息
            </summary>
            <param name="cvtCustomerInfomation">CVT客户信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.GetCVTCustomerHistoryInfo(System.String)">
            <summary>
            根据经销商及客户名称获得其历史信息
            </summary>
            <param name="vehicleShelfNumber">车架号</param>
            <returns>返回获得的信息</returns>
        </member>
        <member name="M:ServerModule.ICVTCustomerInformationServer.InsertCustomerHistoryInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入客户信息历史记录，若更换的是CVT，则修改客户信息中对应的车架号的CVT编号
            </summary>
            <param name="serviceID">反馈单号</param>
            <param name="vehicleShelfNumber">车架号</param>
            <param name="cvtType">变速箱型号</param>
            <param name="carModel">车型</param>
            <param name="clientName">客户名称</param>
            <param name="dealerName">经销商名称</param>
            <param name="replaceAccessoryList">更换件列表</param>
            <param name="error">错误信息</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.IInvoiceServer">
            <summary>
            发票管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IInvoiceServer.DeleteInvoiceInfo(System.String,System.String@)">
            <summary>
            删除发票记录
            </summary>
            <param name="invoiceCode">发票号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.AddInvoiceInfo(System.Data.DataTable,System.String@)">
            <summary>
            添加发票记录
            </summary>
            <param name="invoiceTable">需要添加的发票信息数据</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.GetInvoiceInfo(System.String)">
            <summary>
            获得一张发票的数据集
            </summary>
            <param name="invoiceCode">发票号</param>
            <returns>返回查询到的发票信息</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.GetInvoiceInfo(System.DateTime,System.DateTime)">
            <summary>
            获取全部发票记录
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回查询到的发票记录表</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.GetBillInfo(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            获得对应的单据数据集
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="provider">供应商编码</param>
            <param name="orderNumber">订单号</param>
            <returns>返回获取对应的单据数据集</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.GetGoodsInfo(System.String)">
            <summary>
            获得对应的物品明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回对应的物品单据明细</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.UpdatePrice(System.Data.DataTable,System.String@)">
            <summary>
            更新出入库的金额
            </summary>
            <param name="invoiceTable">需要更新的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功True，更新失败False</returns>
        </member>
        <member name="M:ServerModule.IInvoiceServer.UpdateInvoiceInfo(System.String,System.String,System.Int32,System.String,System.String,System.String@)">
            <summary>
            修改发票记录
            </summary>
            <param name="invoiceCode">新发票号</param>
            <param name="provide">供应商</param>
            <param name="invoiceType">1:专用发票，0:非专用发票</param>
            <param name="oldCode">旧发票号</param>
            <param name="pzh">新凭证号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="T:ServerModule.IDeclareWastrelType">
            <summary>
            报废类别服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IDeclareWastrelType.GetWastrelType(System.Int32)">
            <summary>
            获取报废类别
            </summary>
            <param name="typeId">类型ID</param>
            <returns>返回获取到的报废类别信息</returns>
        </member>
        <member name="M:ServerModule.IDeclareWastrelType.GetWastrelType(System.String)">
            <summary>
            获取报废类别
            </summary>
            <param name="typeName">类型名称</param>
            <returns>返回获取到的报废类别信息</returns>
        </member>
        <member name="M:ServerModule.IDeclareWastrelType.GetAllType">
            <summary>
            获取所有报废类别
            </summary>
            <returns>返回获取到的报废类别信息</returns>
        </member>
        <member name="T:ServerModule.BargainInfoServer">
            <summary>
            合同信息管理类
            </summary>
        </member>
        <member name="T:ServerModule.IBargainInfoServer">
            <summary>
            合同信息管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetTaxRate(System.String)">
            <summary>
            
            </summary>
            <param name="bargainNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.DisableInfo(System.String)">
            <summary>
            禁用合同
            </summary>
            <param name="bargainNumber"></param>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBargainUnitPrice(ServerModule.DepotManagementDataContext,System.String,System.Int32)">
            <summary>
            通过订单号,物品ID获得合同单价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回合同单价</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBargainUnitPrice(System.String,System.Int32)">
            <summary>
            通过订单号,物品ID获得合同单价
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回合同单价</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetLatelyBargainNumberInfo(System.Int32,System.String)">
            <summary>
            获得合同号
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商编码</param>
            <returns>返回获得的数据集</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBargainInfoDataRow(System.String)">
            <summary>
            获得合同信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返货指定合同号的合同信息</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBuyerCode(System.String)">
            <summary>
            获取指定合同的采购员编码
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返回获取到的采购员编码</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBargainInfo(System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetAllBargainInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有允许查询的合同信息
            </summary>
            <param name="returnResult">返回的结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.AddBargainInfo(ServerModule.B_BargainInfo,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加合同信息
            </summary>
            <param name="bargainInfo">合同信息</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.UpdateBargainInfo(System.String,ServerModule.B_BargainInfo,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改合同信息
            </summary>
            <param name="oldBargainNumber">旧合同号</param>
            <param name="bargainInfo">合同信息</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.DeleteBargainInfo(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除合同信息
            </summary>
            <param name="bargainNumber">合同编号</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.AuditingBargainInfo(System.String,System.String,System.String@)">
            <summary>
            审核合同
            </summary>
            <param name="auditingPersonnel">审核人</param>
            <param name="bargainNumber">合同号</param>
            <param name="error">出错时返回错误信息，否则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.IsAudited(System.String)">
            <summary>
            检查是否已审核
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>已经审核返回true</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.IsConsignOutBargain(System.String)">
            <summary>
            检查订单对应的合同是否为委外合同
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>是返回true, 否返回false</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.IsOverseasBargain(System.String)">
            <summary>
            检查订单对应的合同是否为海外合同
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>是返回true, 否返回false</returns>
        </member>
        <member name="M:ServerModule.IBargainInfoServer.GetBargainCess(System.String)">
            <summary>
            获得税率
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>返回税率</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBargainUnitPrice(ServerModule.DepotManagementDataContext,System.String,System.Int32)">
            <summary>
            通过订单号,物品ID获得合同单价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回合同单价</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBargainUnitPrice(System.String,System.Int32)">
            <summary>
            通过订单号,物品ID获得合同单价
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回合同单价</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetLatelyBargainNumberInfo(System.Int32,System.String)">
            <summary>
            获得最近一次的合同信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商编码</param>
            <returns>返回获得的数据集</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBargainInfoDataRow(System.String)">
            <summary>
            获得合同信息
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返货指定合同号的合同信息</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetAllBargainInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有允许查询的合同信息
            </summary>
            <param name="returnResult">返回的结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBargainInfo(System.String)">
            <summary>
            获取指定的订单信息
            </summary>
            <param name="bargainNumber">订单号</param>
            <returns>成功返回获取到的订单信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBuyerCode(System.String)">
            <summary>
            获取指定合同的采购员编码
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>返回获取到的采购员编码</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.AddBargainInfo(ServerModule.B_BargainInfo,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加合同信息
            </summary>
            <param name="bargainInfo">合同信息</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.UpdateBargainInfo(System.String,ServerModule.B_BargainInfo,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改合同信息
            </summary>
            <param name="oldBargainNumber">旧合同号</param>
            <param name="bargainInfo">合同信息</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.DeleteBargainInfo(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除合同信息
            </summary>
            <param name="bargainNumber">合同编号</param>
            <param name="returnBargainInfo">返回查询到的合同信息</param>
            <param name="error">错误信息, 没有则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.AuditingBargainInfo(System.String,System.String,System.String@)">
            <summary>
            审核合同
            </summary>
            <param name="auditingPersonnel">审核人</param>
            <param name="bargainNumber">合同号</param>
            <param name="error">出错时返回错误信息，否则为null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.IsAudited(System.String)">
            <summary>
            检查是否已审核
            </summary>
            <param name="bargainNumber">合同号</param>
            <returns>已经审核返回true</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.GetBargainCess(System.String)">
            <summary>
            获得税率
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>返回税率</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.IsConsignOutBargain(System.String)">
            <summary>
            检查订单对应的合同是否为委外合同
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>是返回true, 否返回false</returns>
        </member>
        <member name="M:ServerModule.BargainInfoServer.IsOverseasBargain(System.String)">
            <summary>
            检查订单对应的合同是否为海外合同
            </summary>
            <param name="orderFormNumber">订单号</param>
            <returns>是返回true, 否返回false</returns>
        </member>
        <member name="T:ServerModule.FinancialDetailManagement">
            <summary>
            账务明细服务组件
            </summary>
        </member>
        <member name="T:ServerModule.IFinancialDetailManagement">
            <summary>
            账务管理服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IFinancialDetailManagement.ProcessInDepotDetail(ServerModule.DepotManagementDataContext,ServerModule.S_InDepotDetailBill,ServerModule.S_Stock)">
            <summary>
            处理入库明细业务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="indepotDetailInfo">入库明细信息</param>
            <param name="stockInfo">库存信息</param>
        </member>
        <member name="M:ServerModule.IFinancialDetailManagement.ProcessFetchGoodsDetail(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill,ServerModule.S_Stock)">
            <summary>
            处理出库明细业务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库明细信息</param>
            <param name="stockInfo">库存信息</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.ProcessInDepotDetail(ServerModule.DepotManagementDataContext,ServerModule.S_InDepotDetailBill,ServerModule.S_Stock)">
            <summary>
            处理入库明细业务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="indepotDetailInfo">入库明细信息</param>
            <param name="stockInfo">库存信息</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.ProcessFetchGoodsDetail(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill,ServerModule.S_Stock)">
            <summary>
            处理出库明细业务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库明细信息</param>
            <param name="stockInfo">库存信息</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.InsertOnSubmitFetchGoodsDetailBill(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            插入提交出库明细表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detailInfo">明细信息</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.InsertOnSubmitInDepotDetailBill(ServerModule.DepotManagementDataContext,ServerModule.S_InDepotDetailBill)">
            <summary>
            插入提交入库明细表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detailInfo">明细信息</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.AssignmentInfo(ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            赋值入库明细信息
            </summary>
            <param name="originalInfo">原始信息</param>
            <returns>入库明细对象</returns>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.InDepotToolsInfo(ServerModule.DepotManagementDataContext,ServerModule.S_InDepotDetailBill)">
            <summary>
            工具入库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="indepotDetailInfo">入库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.InDepotGuagesInfo(ServerModule.DepotManagementDataContext,System.Object)">
            <summary>
            量检具入库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="objInfo">入库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.InDepotWorkShop(ServerModule.DepotManagementDataContext,ServerModule.S_InDepotDetailBill)">
            <summary>
            车间入库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="indepotDetailInfo">入库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.FetchToolsInfo(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            工具出库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.FetchGaugeInfo(ServerModule.DepotManagementDataContext,System.Object)">
            <summary>
            量检具出库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="objInfo">出库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.FetchWorkShop(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            车间出库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.FetchLendReturn(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            借还货出库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库业务对象</param>
        </member>
        <member name="M:ServerModule.FinancialDetailManagement.FetchLendReturn_MaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_FetchGoodsDetailBill)">
            <summary>
            借还货出库业务的处理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchGoodsDetailInfo">出库业务对象</param>
        </member>
        <member name="T:ServerModule.ProductReturnService">
            <summary>
            还贷服务
            </summary>
        </member>
        <member name="T:ServerModule.IProductReturnService">
            <summary>
            车间借贷服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductReturnService.GetBillInfo">
            <summary>
            获得单据信息
            </summary>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.GetListInfo(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.GetBillSingle(System.String)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.ProposeBill(ServerModule.S_ProductReturnBill,System.Data.DataTable,System.String@)">
            <summary>
            申请单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.AuditBill(System.String,System.String@)">
            <summary>
            审核单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.AffirmBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            确认单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.DeleteInfo(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String)">
            <summary>
            删除物品对应的信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
        </member>
        <member name="M:ServerModule.IProductReturnService.DeleteInfo(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IProductReturnService.GetAllInfo(System.String,System.Int32,System.String,System.String)">
            <summary>
            获得所有信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IProductReturnService.SaveInfo(System.String,System.Int32,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="infoTable">信息列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.GetBillInfo">
            <summary>
            获得单据信息
            </summary>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.GetListInfo(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.GetBillSingle(System.String)">
            <summary>
            获得单条单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单据信息</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.ListControl(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable)">
            <summary>
            单据明细操作
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="list">单据明细</param>
        </member>
        <member name="M:ServerModule.ProductReturnService.AssignmentValue(ServerModule.S_ProductReturnBill,ServerModule.S_ProductReturnBill@)">
            <summary>
            单据赋值
            </summary>
            <param name="bill">单据数据集</param>
            <param name="returnBill">返回单据</param>
        </member>
        <member name="M:ServerModule.ProductReturnService.ProposeBill(ServerModule.S_ProductReturnBill,System.Data.DataTable,System.String@)">
            <summary>
            申请单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.AuditBill(System.String,System.String@)">
            <summary>
            审核单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.AffirmBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            确认单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="list">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_ProductReturnBill,System.Data.DataTable)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="dataTable">明细信息集合</param>
        </member>
        <member name="M:ServerModule.ProductReturnService.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_ProductReturnBill,System.Data.DataRow)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="tempBill">单据信息</param>
            <param name="dr">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.GetAllInfo(System.String,System.Int32,System.String,System.String)">
            <summary>
            获得所有信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ProductReturnService.DeleteInfo(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.String)">
            <summary>
            删除物品对应的信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
        </member>
        <member name="M:ServerModule.ProductReturnService.DeleteInfo(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.ProductReturnService.SaveInfo(System.String,System.Int32,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="infoTable">信息列表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.GaugeManage.GetGaugeAllInfo(System.Boolean,System.Boolean)">
            <summary>
            获得量检具台帐信息
            </summary>
            <returns>返回量检具台帐信息</returns>
        </member>
        <member name="M:ServerModule.GaugeManage.GetGaugeCodingFromBillNo(System.String,System.Int32)">
            <summary>
            根据单据号获得某个物品的量检具编号数据集
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <returns>返回一条工装台帐的数据集</returns>
        </member>
        <member name="M:ServerModule.GaugeManage.SaveInfo(ServerModule.S_GaugeStandingBook,GlobalObject.CE_OperatorMode)">
            <summary>
            更新量检具信息
            </summary>
            <param name="gaugeStandingBook">量检具信息</param>
            <param name="mode">操作类型</param>
        </member>
        <member name="M:ServerModule.GaugeManage.UpdateGaugeOperation(System.String,System.Int32,System.Data.DataTable)">
            <summary>
            批量插入量检具业务表
            </summary>
            <param name="billNo">业务单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="gaugeCodingTable">单据业务的量检具编号数据集</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.DeviceMaintenanceBill">
            <summary>
            设备维修申请管理类
            </summary>
        </member>
        <member name="T:ServerModule.IDeviceMaintenanceBill">
            <summary>
            设备维修安装申请服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IDeviceMaintenanceBill.DeleteBill(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IDeviceMaintenanceBill.FlowInfo(ServerModule.S_DeviceMaintenanceBill,System.String@)">
            <summary>
            流程管理
            </summary>
            <param name="deviceMaintenanceBill">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IDeviceMaintenanceBill.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得全部信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.DeviceMaintenanceBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.DeviceMaintenanceBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.DeviceMaintenanceBill.GetAllInfo(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得全部信息
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.DeviceMaintenanceBill.DeleteBill(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.DeviceMaintenanceBill.FlowInfo(ServerModule.S_DeviceMaintenanceBill,System.String@)">
            <summary>
            流程管理
            </summary>
            <param name="deviceMaintenanceBill">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:ServerModule.ScrapBillServer">
            <summary>
            报废单服务
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillServer.m_serverProductCode">
            <summary>
            产品箱号服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.ScrapBillServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.ScrapBillServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetScrapBill(System.DateTime,System.DateTime)">
            <summary>
            获取指定时间范围内的所有报废单信息
            </summary>
            <param name="start">开始时间</param>
            <param name="end">终止时间</param>
            <returns>返回所有的报废单</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetBill(System.String)">
            <summary>
            获取单据信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetBillView(System.String)">
            <summary>
            获取单据视图信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetAllBill(System.DateTime,System.DateTime,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有日期范围内单据信息
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.GetAllBillForFetchGoods(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有已经完成并且需要冲抵领料单的单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取报废信息</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.AddBill(ServerModule.DepotManagementDataContext,ServerModule.S_ScrapBill,System.String@)">
            <summary>
            添加单据
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.DeleteBill(System.String,System.Boolean,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="flag">操作标志</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.DeleteBill(ServerModule.DepotManagementDataContext,System.String,System.Boolean,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="dataContxt">LINQ 数据库上下文</param>
            <param name="billNo">单据号</param>
            <param name="flag">【此参数已作废】是否设置单据为报废状态（不真正删除单据）</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.UpdateBill(ServerModule.S_ScrapBill,System.String@)">
            <summary>
            修改单据
            </summary>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.CheckProductCode(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            检查领用总成数量与所设置的流水码数量是否一致
            </summary>
            <param name="ctx">LINQ 数据库上下文</param>
            <param name="djh">报废单单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>一致返回true</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.SubmitNewBill(System.String,System.String@)">
            <summary>
            提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.DirectorAuthorizeBill(System.String,System.String,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.SubmitQualityInfo(System.String,ServerModule.S_ScrapBill,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.ToolsOperation(ServerModule.DepotManagementDataContext,System.String,System.Int32,System.String,System.Decimal,System.String)">
            <summary>
            工具账务操作
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="operationCount">操作数量</param>
            <param name="workID">操作人员ID</param>
        </member>
        <member name="M:ServerModule.ScrapBillServer.FinishBill(System.String,System.String,System.String@)">
            <summary>
            完成单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_ScrapBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.ScrapBillServer.InsertRejectBill(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            生成采购退货单
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.ScrapBillServer.InsertReturnBill(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            生成领料退库单
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.ScrapBillServer.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_ScrapBill,ServerModule.S_ScrapGoods)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.UpdateGoodsBill(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            将物品的报废方式置空
            </summary>
            <param name="ctx">LINQ数据库上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="rebackReason">回退原因</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapBillServer.SubmitSQEMessage(System.String,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            提交SQE信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="lstGoods">报废物品清单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.IAccessoryDutyInfoManageServer">
            <summary>
            零件责任归属管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IAccessoryDutyInfoManageServer.GetProviderPrincipal(System.String)">
            <summary>
            获得供应商的主要责任人
            </summary>
            <param name="providerCode">供应商编码</param>
            <returns>负责人姓名</returns>
        </member>
        <member name="M:ServerModule.IAccessoryDutyInfoManageServer.GetAllAccessoryDutyInfo(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_AccessoryDutyInfo}@,System.String@)">
            <summary>
            获取零件责任归属信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="logionName">登录名</param>
            <param name="returnAccessory">返回查询到的零件责任归属信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IAccessoryDutyInfoManageServer.GetAllAccessoryCode(System.String,System.Int32,System.Data.DataTable@,System.String@)">
            <summary>
            获取指定用户指定权限的零件责任归属信息
            </summary>
            <param name="userCode">用户名</param>
            <param name="userPower">
            0     ：获取记录中包含指定用户名的信息（如：SQE、采购员、供应商开发人员中有任何一个是指定用户的记录；
            其他值：所有记录
            </param>
            <param name="returnAccessory">返回查询到的零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IAccessoryDutyInfoManageServer.IsSafeProvider(ServerModule.B_AccessoryDutyInfo,System.String@)">
            <summary>
            判断此物品与供应商是否通过审核
            </summary>
            <param name="lnqAcc">零件责任归属信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>供应商通过审核返回true，否则返回false</returns>
        </member>
        <member name="T:ServerModule.PersonnelType">
            <summary>
            编制人枚举
            </summary>
        </member>
        <member name="F:ServerModule.PersonnelType.编制人">
            <summary>
            编制人
            </summary>
        </member>
        <member name="F:ServerModule.PersonnelType.审核人">
            <summary>
            审核人
            </summary>
        </member>
        <member name="F:ServerModule.PersonnelType.仓管员">
            <summary>
            仓管员
            </summary>
        </member>
        <member name="T:ServerModule.ISafeStockServer">
            <summary>
            安全库存类接口
            </summary>
        </member>
        <member name="M:ServerModule.ISafeStockServer.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="error"></param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.AddInfo(ServerModule.S_SafeStock,System.String@)">
            <summary>
            添加信息
            </summary>
            <param name="safeStock">LNQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.UpdateInfo(ServerModule.S_SafeStock,System.Int32,System.String@)">
            <summary>
            更新信息
            </summary>
            <param name="safeStock">LNQ数据集</param>
            <param name="goodsID">物品ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.UpdateSafeStockInfo(System.Data.DataTable,System.String@)">
            <summary>
            更新安全库存信息
            </summary>
            <param name="dtInfo">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetAllInfo">
            <summary>
            获得全部信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.OperationInfo(System.Data.DataTable,System.String@)">
            <summary>
            操作数据库
            </summary>
            <param name="safeList">新的安全库存的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新数据库成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetMaxID">
            <summary>
            获得最大序号
            </summary>
            <returns>返回最大的序号</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetSafeStockCount(System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            根据总成台数生成物品的安全库存数
            </summary>
            <param name="code">图号型号</param>
            <param name="name">名称</param>
            <param name="liFanCount">力帆总成数量</param>
            <param name="liFan320Count">力帆320总成数量</param>
            <param name="zhongTaiCount">众泰总成数量</param>
            <param name="yeMaCount">野马总成数量</param>
            <param name="haiMaCount">海马总成数量</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetSafeStockCount(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            根据总成台数生成物品的安全库存数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="dicNumberOfProduct">总成型号与数量构成的字典</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetStockCount(System.Int32)">
            <summary>
            获得某个物品的安全库存数
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.ISafeStockServer.GetSafeStockCountInfo(System.Data.DataTable)">
            <summary>
            由总成自动生成安全库存表
            </summary>
            <param name="cvtList">CVT总成数据集</param>
            <returns>返回自动生成的数据集</returns>
        </member>
        <member name="T:ServerModule.IProductPlan">
            <summary>
            生产计划管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductPlan.GetAllBill(System.String)">
            <summary>
            获得父表信息
            </summary>
            <param name="planType">计划类别</param>
            <returns>返回产品计划信息</returns>
        </member>
        <member name="M:ServerModule.IProductPlan.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">计划单号</param>
            <returns>返回明细表信息</returns>
        </member>
        <member name="M:ServerModule.IProductPlan.AddBill(ServerModule.S_ProductPlan,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="inProductPlan">生产计划信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductPlan.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProductPlan.IsRepeatPlanDate(System.DateTime,System.String)">
            <summary>
            检查计划日期是否重复
            </summary>
            <param name="newDateTime">被检测的日期</param>
            <param name="planType">单据类型</param>
            <returns>重复返回True，不重复返回False</returns>
        </member>
        <member name="T:ServerModule.TechnologyAlteration">
            <summary>
            技术变更单管理类
            </summary>
        </member>
        <member name="T:ServerModule.ITechnologyAlteration">
            <summary>
            技术变更单管理类
            </summary>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.GetListInfo(System.String)">
            <summary>
            通过单号获得明细
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的全部单据信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.GetBillInfo(System.String)">
            <summary>
            获得单条记录
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.GetBomInfo(System.String,System.String,System.String)">
            <summary>
            获得同名称同型号同规格在BOM表中的记录
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取的BOM表信息</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.GetProductInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <param name="edition">型号</param>
            <returns>返回DataRow</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.SubmitBill(ServerModule.S_TechnologyAlterationBill,System.Data.DataTable,System.String@)">
            <summary>
            提交申请
            </summary>
            <param name="technology">单据信息数据集</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.UpdateBill(ServerModule.S_TechnologyAlterationBill,System.Data.DataTable,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="technology">变更单信息</param>
            <param name="listInfo">零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.ITechnologyAlteration.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="strRebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="F:ServerModule.TechnologyAlteration.m_msgPromulgator">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.GetBillInfo(System.String)">
            <summary>
            获得单条记录
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.GetListInfo(System.String)">
            <summary>
            通过单号获得明细
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的全部单据信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.GetBomInfo(System.String,System.String,System.String)">
            <summary>
            获得同名称同型号同规格在BOM表中的记录
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取的BOM表信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.GetProductInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <param name="edition">型号</param>
            <returns>返回DataRow</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.SubmitBill(ServerModule.S_TechnologyAlterationBill,System.Data.DataTable,System.String@)">
            <summary>
            提交申请
            </summary>
            <param name="technology">单据信息数据集</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.DeleteList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.InsertList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.UpdateBill(ServerModule.S_TechnologyAlterationBill,System.Data.DataTable,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="technology">变更单信息</param>
            <param name="listInfo">零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.UpdateBOMDate(ServerModule.DepotManagementDataContext,ServerModule.S_TechnologyAlterationBill,System.Data.DataTable,System.String@)">
            <summary>
            对BOM表中数据进行变更
            </summary>
            <param name="datatContxt">数据上下文</param>
            <param name="technology">单据信息数据集</param>
            <param name="listInfo">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyAlteration.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="strRebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.MinorPurchaseBillStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待仓管确认">
            <summary>
            等待仓管确认
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待部门负责人审核">
            <summary>
            等待部门负责人
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待确认日期">
            <summary>
            等待确认日期
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待高级负责人审批">
            <summary>
            等待高级负责人审批
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待分管领导审核">
            <summary>
            等待分管领导审批
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待财务审核">
            <summary>
            等待财务审批
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待总经理审核">
            <summary>
            等待总审核
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待采购部调配人员">
            <summary>
            等待采购分配采购
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待采购工程师确认采购">
            <summary>
            等待采购工程师确认采购
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.等待确认到货">
            <summary>
            等待采购工程师确认到货
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.IMinorPurchaseBillServer">
            <summary>
            零星采购单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetSumPrice(System.String)">
            <summary>
            获得合计金额
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回金额</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetBargainRelate(System.DateTime,System.DateTime)">
            <summary>
            获得引用的合同信息
            </summary>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetListSingle(System.String,System.String,System.String,System.String)">
            <summary>
            获得明细单条记录
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回单条LNQ记录</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetAllBillInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获得单据列表
            </summary>
            <param name="returnInfo">零星采购信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetBillInfo(System.String)">
            <summary>
            获得单条信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetListInfo(System.String)">
            <summary>
            获得明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetFinishListInfo(System.String)">
            <summary>
            获得已到货的明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.InsertBill(ServerModule.B_MinorPurchaseBill,System.Data.DataTable,System.String@)">
            <summary>
            提交申请
            </summary>
            <param name="minorBill">单据信息数据集</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.OperationInfo(ServerModule.B_MinorPurchaseBill,System.Data.DataTable,System.String@)">
            <summary>
            操作业务
            </summary>
            <param name="minorBill">单据信息数据集</param>
            <param name="listInfo">单据明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.DeleteInfo(System.String,System.String@)">
            <summary>
            删除零星采购单
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="strRebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetGoodsStock(System.Int32)">
            <summary>
            通过物品ID获得物品库存信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.InsertChangeBill(ServerModule.B_MinorPurchaseChangeBill,System.String@)">
            <summary>
            新增采购变更处置单
            </summary>
            <param name="changBill">采购变更处置信息</param>
            <param name="error">错误信息</param>
            <returns>新增成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.DeleteChangeBill(System.Int32,System.String@)">
            <summary>
            删除采购变更处置单
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>删除成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.UpdateChangeBill(ServerModule.B_MinorPurchaseChangeBill,System.String@)">
            <summary>
            修改采购变更处置单
            </summary>
            <param name="changBill">采购变更处置信息</param>
            <param name="error">错误信息</param>
            <returns>新增成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetMinorPurchaseChangeBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得时间范围内的采购变更处置单的所有信息
            </summary>
            <param name="starTime">起始日期</param>
            <param name="endTime">结束日期</param>
            <param name="status">单据状态</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.IsFinishMinorPur(System.String)">
            <summary>
            通过关联号查询变更单是否走完
            </summary>
            <param name="associateBillNo">关联单号</param>
            <returns>完成返回true，未完成返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.DeleteChangeBill(System.String,System.String@)">
            <summary>
            删除采购变更处置单
            </summary>
            <param name="associateBillNo">关联单号</param>
            <param name="error">错误信息</param>
            <returns>删除成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetStatisticsTable(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得采购申请单的统计报表
            </summary>
            <param name="startYear">查询起始日期的年</param>
            <param name="startMonth">查询起始日期的月</param>
            <param name="endYear">查询截止日期的年</param>
            <param name="endMonth">查询截止日期的月</param>
            <param name="dept">需要查询的部门</param>
            <returns>返回统计报表</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.UpdatePrintStatus(System.String,System.String@)">
            <summary>
            修改单据中已打印的状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>修改成功返回true失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.UpdateMinorPurchaseBill(System.String,System.String,System.String@)">
            <summary>
            在审批通过后，采购部文员分配采购工程师
            </summary>
            <param name="billNo">单据号</param>
            <param name="workID">采购工程师工号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetPurposeNameByCode(System.String)">
            <summary>
            通过用途编号获得用途名称
            </summary>
            <param name="purposeCode">用途编号</param>
            <returns>成功返回用途名称，失败返回Null</returns>
        </member>
        <member name="M:ServerModule.IMinorPurchaseBillServer.GetPart(System.Int32,System.String)">
            <summary>
            同一零件近期是否购买过
            </summary>
            <param name="goodsID">零件ID</param>
            <param name="billNo">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:ServerModule.IMinorPurchaseBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:ServerModule.ProviderServer">
            <summary>
            供应商管理类
            </summary>
        </member>
        <member name="T:ServerModule.IProviderServer">
            <summary>
            供应商管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IProviderServer.InsertUnitPriceList(System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetProviderInfo(System.String)">
            <summary>
            获得供应商对象
            </summary>
            <param name="provider">供应商简码</param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetPrivderName(System.String)">
            <summary>
            获得供应商全称
            </summary>
            <param name="provider">供应商编码</param>
            <returns>供应商全称</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetProviderName(System.String)">
            <summary>
            获得供应商名称
            </summary>
            <param name="providercode">供应商编码</param>
            <returns>返回供应商名称</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetAllProvider(System.Data.DataTable@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="table">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetAllProvider(System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetDistinctProvider(System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            获取唯一性供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.AddProvider(System.String,System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            添加/修改部门信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="shortName">简称</param>
            <param name="personnel">责任人</param>
            <param name="isOdd">是否关联责任人</param>
            <param name="isUse">是否在用</param>
            <param name="isMainDuty">是否为主要责任人</param>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="isInternalSupplier">是否为内部供应商</param>
            <param name="clearingForm">结算方式</param>
            <param name="yearMonth">追溯年月</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.UpdataProvider(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            添加/修改供应商信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="shortName">简称</param>
            <param name="isOdd">是否修改</param>
            <param name="isUse">是否在用</param>
            <param name="isMainDuty">是否为主要责任人</param>
            <param name="personnel">新责任人</param>
            <param name="oldPersonnel">老责任人</param>
            <param name="clearingForm">结算方式</param>
            <param name="yearMonth">追溯年月</param>
            <param name="returnBill">变更后返回的数据集</param>
            <param name="error">错误信息</param>
            <param name="isInternalSupplier">是否为内部供应商</param>
            <returns>添加/修改成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.DeleteProvider(System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            删除某一供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="personnelCode">工号</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一供应商</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetAllNewProvider(System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.AddNewProvider(System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            添加/修改部门信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="remark">备注</param>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.UpdataNewProvider(System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            添加/修改供应商信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="remark">备注</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改供应商信息表</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.DeleteNewProvider(System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            删除某一供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一供应商</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.CheckStockPrivuderIsIn(System.String,System.String@)">
            <summary>
            检测供应商是否在库存表已存在
            </summary>
            <param name="providercode">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>不存在返回True，存在返回False</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.UpdateProviderIsUse(System.String,System.String@)">
            <summary>
            停用此供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetProviderPrincipal(System.String)">
            <summary>
            获得责任人信息
            </summary>
            <param name="providerCode">责任人工号</param>
            <returns>返回责任人信息</returns>
        </member>
        <member name="M:ServerModule.IProviderServer.GetProviderPrincipalList(System.String)">
            <summary>
            获得责任人信息
            </summary>
            <param name="providerCode">责任人工号</param>
            <returns>返回责任人信息</returns>
        </member>
        <member name="F:ServerModule.ProviderServer.m_planCostServer">
            <summary>
            计划成本服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ProviderServer.m_dbOperate">
            <summary>
            数据库操作接口
            </summary>
        </member>
        <member name="M:ServerModule.ProviderServer.GetPrivderName(System.String)">
            <summary>
            获得供应商全称
            </summary>
            <param name="provider">供应商编码</param>
            <returns>供应商全称</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetAllProvider(System.Data.DataTable@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="table">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetAllProvider(System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetProviderName(System.String)">
            <summary>
            获得供应商名称
            </summary>
            <param name="providercode">供应商编码</param>
            <returns>返回供应商名称</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetDistinctProvider(System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            获取唯一性供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetAllNewProvider(System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            获取供应商信息表
            </summary>
            <param name="returnBill">供应商信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取供应商信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.AddProvider(System.String,System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            添加/修改部门信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="shortName">简称</param>
            <param name="personnel">责任人</param>
            <param name="isOdd">是否关联责任人</param>
            <param name="isUse">是否在用</param>
            <param name="isMainDuty">是否为主要责任人</param>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="isInternalSupplier">是否为内部供应商</param>
            <param name="clearingForm">挂账方式</param>
            <param name="yearMonth">追溯年月</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.AddNewProvider(System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            添加/修改部门信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="remark">备注</param>
            <param name="returnBill">部门信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改部门信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.UpdataProvider(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            添加/修改供应商信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="shortName">简称</param>
            <param name="isOdd">是否修改</param>
            <param name="isUse">是否在用</param>
            <param name="isMainDuty">是否为主要责任人</param>
            <param name="personnel">新责任人</param>
            <param name="oldPersonnel">老责任人</param>
            <param name="returnBill">变更后返回的数据集</param>
            <param name="error">错误信息</param>
            <param name="isInternalSupplier">是否为内部供应商</param>
            <param name="clearingForm">挂账方式</param>
            <param name="yearMonth">追溯年月</param>
            <returns>添加/修改成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.UpdataNewProvider(System.String,System.String,System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            添加/修改供应商信息表
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="providerName">供应商名称</param>
            <param name="remark">备注</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加/修改供应商信息表</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.UpdateProviderIsUse(System.String,System.String@)">
            <summary>
            停用此供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.CheckStockPrivuderIsIn(System.String,System.String@)">
            <summary>
            检测供应商是否在库存表已存在
            </summary>
            <param name="providercode">供应商编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>不存在返回True，存在返回False</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.DeleteProvider(System.String,System.String,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            删除某一供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="persnonnelCode">工号</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一供应商</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.DeleteNewProvider(System.String,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            删除某一供应商
            </summary>
            <param name="providerCode">供应商编码</param>
            <param name="returnBill">操作成功后返回的查询信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一供应商</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.SetReturnError2(System.Object,System.Linq.IQueryable{ServerModule.View_B_NewProvider}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnBill">部门信息</param>
            <param name="error">返回的错误信息</param>
            <returns>始终返回False</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.SetReturnError1(System.Object,System.Linq.IQueryable{ServerModule.View_Provider}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnBill">部门信息</param>
            <param name="error">返回的错误信息</param>
            <returns>始终返回False</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetProviderPrincipal(System.String)">
            <summary>
            获得责任人信息
            </summary>
            <param name="providerCode">责任人工号</param>
            <returns>返回责任人信息</returns>
        </member>
        <member name="M:ServerModule.ProviderServer.GetProviderPrincipalList(System.String)">
            <summary>
            获得责任人信息
            </summary>
            <param name="providerCode">责任人工号</param>
            <returns>返回责任人信息</returns>
        </member>
        <member name="T:ServerModule.ICBOMServer">
            <summary>
            采购物料清单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.ICBOMServer.GetSynthesisInfo">
            <summary>
            获得零件综合信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ICBOMServer.GetAllInfo">
            <summary>
            获得采购清单
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ICBOMServer.OperatorInfo(GlobalObject.CE_OperatorMode,System.Int32,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            操作采购清单
            </summary>
            <param name="operatorMode">操作模式</param>
            <param name="goodsID">物品ID</param>
            <param name="safeStockCount">安全库存数</param>
            <param name="DicNumberOfProduct">基数</param>
        </member>
        <member name="M:ServerModule.ICBOMServer.BatchInsertCGBom(System.Data.DataTable)">
            <summary>
            批量插入数据
            </summary>
            <param name="dtSource">数据源列表</param>
        </member>
        <member name="T:ServerModule.MaterialTypeServer">
            <summary>
            材料类别管理类
            </summary>
        </member>
        <member name="F:ServerModule.MaterialTypeServer.m_dbOperate">
            <summary>
            数据库操作接口
            </summary>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.GetAllMaterialType(System.Linq.IQueryable{ServerModule.View_S_Depot}@,System.String@)">
            <summary>
            获取所有材料类别信息
            </summary>
            <param name="materialTypes">查询到的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.GetAllMaterialType(System.Collections.Generic.List{ServerModule.MaterialTypeData}@,System.String@)">
            <summary>
            获取材料类别信息表
            </summary>
            <param name="lstMaterialType">材料类别信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取材料类别信息表</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.GetMaterialTypeInfo(System.Data.DataRow,System.Data.DataColumnCollection)">
            <summary>
            从数据行中获取材料类别信息
            </summary>
            <param name="row">数据行</param>
            <param name="columns">列集合</param>
            <returns>从数据行获取到的材料类别信息</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.Clone(System.Collections.Generic.List{ServerModule.MaterialTypeData})">
            <summary>
            克隆材料类别信息列表
            </summary>
            <param name="lstSurInfo">要克隆的源数据</param>
            <returns>克隆后的功能树节点信息列表</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.UpdataMaterialType(ServerModule.MaterialTypeData,System.String@)">
            <summary>
            更新材料类别
            </summary>
            <param name="materialType">要修改的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.GetParamTable(ServerModule.MaterialTypeData)">
            <summary>
            获取由材料类别信息产生的存储过程参数表
            </summary>
            <param name="materialTypeInfo">材料类别信息</param>
            <returns>产生的参数表</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.AddMaterialType(ServerModule.MaterialTypeData,ServerModule.MaterialTypeData,System.String@)">
            <summary>
            添加材料类别 并更新父材料类别信息
            </summary>
            <param name="newMaterialType">要增加的材料类别信息</param>
            <param name="parentMaterialType">要更新的父材料类别信息, 如果此信息不为null则需修改父材料类别树信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.AddMaterialType(ServerModule.MaterialTypeData,System.String@)">
            <summary>
            添加材料类别
            </summary>
            <param name="materialType">要增加的材料类别信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.DeleteMaterialType(System.String,System.String@)">
            <summary>
            删除某一材料类别信息
            </summary>
            <param name="materialTypeCode">材料类别编码</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除某一材料类别信息</returns>
        </member>
        <member name="M:ServerModule.MaterialTypeServer.DeleteMaterialType(System.String,ServerModule.MaterialTypeData,System.String@)">
            <summary>
            删除指定材料类别信息（父材料类别参数存在数据时更新父材料类别信息）
            </summary>
            <param name="materialTypeCode">要删除的材料类别编码</param>
            <param name="parentMaterialType">父材料类别信息, 如果此信息不为null则需修改父材料类别树信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="T:ServerModule.MaterialRequisitionPurposeServer">
            <summary>
            领料单用途服务接口
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialRequisitionPurposeServer">
            <summary>
            领料单用途服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionPurposeServer.GetAllPurpose">
            <summary>
            获取所有用途
            </summary>
            <returns>返回获取到的单据用途信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionPurposeServer.GetBillPurpose(System.String)">
            <summary>
            根据用途编码获取用途信息
            </summary>
            <param name="purpose">用途编码/用途名称</param>
            <returns>返回获取到的用途信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialRequisitionPurposeServer.GetBillPurpose(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            根据用途编码获取用途信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="purpose">用途编码/用途名称</param>
            <returns>返回获取到的用途信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionPurposeServer.GetAllPurpose">
            <summary>
            获取所有用途
            </summary>
            <returns>返回获取到的单据用途信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionPurposeServer.GetBillPurpose(System.String)">
            <summary>
            根据用途编码获取用途信息
            </summary>
            <param name="purpose">用途编码/用途名称</param>
            <returns>返回获取到的用途信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionPurposeServer.GetBillPurpose(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            根据用途编码获取用途信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="purpose">用途编码/用途名称</param>
            <returns>返回获取到的用途信息, 失败返回null</returns>
        </member>
        <member name="T:ServerModule.MaterialListReturnedInTheDepot">
            <summary>
            领料退库单物品信息服务
            </summary>
        </member>
        <member name="F:ServerModule.MaterialListReturnedInTheDepot.m_serverProductList">
            <summary>
            产品信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialListReturnedInTheDepot.m_serverStore">
            <summary>
            库存服务组件
            </summary>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.GetBatchCreatList(System.String,System.DateTime,System.DateTime)">
            <summary>
            对于批量生成单据明细界面的显示功能
            </summary>
            <param name="selectType">显示单据类型  (“领料”，“领料退库”)</param>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回TABLE</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.BatchCreateList(System.String,System.String,System.String,System.String@)">
            <summary>
            批量生成明细
            </summary>
            <param name="selectType">单据类型 (“领料”，“领料退库”)</param>
            <param name="billID">单据号</param>
            <param name="billIDGather">数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.GetGoods(System.String)">
            <summary>
            获取指定领料退库单的物品信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.AddGoods(ServerModule.S_MaterialListReturnedInTheDepot,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.AddGoods(System.Collections.Generic.List{ServerModule.View_S_MaterialListReturnedInTheDepot},System.String@)">
            <summary>
            批量添加物品
            </summary>
            <param name="lstGoods">要添加的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="idList">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某领料退库单下的所有物品信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">领料退库单号</param>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.DeleteGoods(System.String,System.String@)">
            <summary>
            删除某领料退库单下的所有物品信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.UpdateGoods(ServerModule.S_MaterialListReturnedInTheDepot,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot,ServerModule.S_MaterialListReturnedInTheDepot)">
            <summary>
            赋值账务信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot,ServerModule.S_MaterialListReturnedInTheDepot)">
            <summary>
            赋值库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="goodsItem">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.MaterialListReturnedInTheDepot.GetBillView(System.String)">
            <summary>
            获取领料退库单视图信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料信息, 失败返回null</returns>
        </member>
        <member name="T:ServerModule.MaterialDetainBill">
            <summary>
            扣货单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialDetainBill">
            <summary>
            扣货单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.GetBill(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ单条信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.GetAllBill">
            <summary>
            获得全部单据信息
            </summary>
            <returns>返回扣货单表信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.AddBill(ServerModule.S_MaterialDetainBill,System.String@)">
            <summary>
            添加扣货单
            </summary>
            <param name="bill">扣货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.UpdateBill(ServerModule.S_MaterialDetainBill,System.String@)">
            <summary>
            编制人修改扣货单
            </summary>
            <param name="bill">扣货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.UpdateList(ServerModule.S_MaterialDetainList,System.String,System.String@)">
            <summary>
            编制人修改子表信息
            </summary>
            <param name="goods">扣货单明细信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.DeleteList(System.String,System.String@)">
            <summary>
            删除子表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除主表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.SQEConfirmBill(System.String,System.String@)">
            <summary>
            SQE确认，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.AuditingBill(System.String,System.String@)">
            <summary>
            领导审核，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.AuthorizeBill(System.String,System.String,System.String@)">
            <summary>
            质管批准，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">质管人编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.ConfirmBill(System.String,System.String,System.String@)">
            <summary>
            采购确认，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">采购确认人编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.AddList(ServerModule.S_MaterialDetainList,System.String@)">
            <summary>
            添加子表信息
            </summary>
            <param name="list">子表数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.GetList(System.String,System.String@)">
            <summary>
            获得子表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.GetOrderFormInfo(System.String,System.String,System.String,System.String@)">
            <summary>
            通过物品的ID获得订单信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供货单位</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.IMaterialDetainBill.UpdateList(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            采购员选择订单号，修改子表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="orderFormID">关联订单号</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_serverPersonnelInfo">
            <summary>
            人员服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_serverProductList">
            <summary>
            产品信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_serverStore">
            <summary>
            库存服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_serverBasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialDetainBill.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetBill(System.String)">
            <summary>
            获得单条记录信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ单条信息</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetAllBill">
            <summary>
            获得全部单据信息
            </summary>
            <returns>返回扣货单表信息</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetList(System.String,System.String@)">
            <summary>
            获得子表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.AddBill(ServerModule.S_MaterialDetainBill,System.String@)">
            <summary>
            添加扣货单
            </summary>
            <param name="bill">扣货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.UpdateBill(ServerModule.S_MaterialDetainBill,System.String@)">
            <summary>
            编制人修改扣货单
            </summary>
            <param name="bill">扣货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.DeleteList(System.String,System.String@)">
            <summary>
            删除子表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="idList">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除主表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.AuditingBill(System.String,System.String@)">
            <summary>
            领导审核，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.AuthorizeBill(System.String,System.String,System.String@)">
            <summary>
            质管批准，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">质管人编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.SQEConfirmBill(System.String,System.String@)">
            <summary>
            SQE确认，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.ConfirmBill(System.String,System.String,System.String@)">
            <summary>
            采购确认，修改主表的单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">采购确认人编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.InsertMaterialReturnedInTheDepot(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.Data.DataTable,System.String,System.String@)">
            <summary>
            插入领料退库表
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="billList">扣货子表</param>
            <param name="billTable">扣货主表</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.InsertMaterialRejectBill(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.Data.DataTable,System.String,System.String@)">
            <summary>
            插入采购退货表
            </summary>
            <param name="dataContxt">LINQ数据上下文</param>
            <param name="billList">扣货子表</param>
            <param name="billTable">扣货主表</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetShelfArea(System.Int32,System.String,System.String@)">
            <summary>
            通过物品ID和批次号获得货架
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="error">错误信息</param>
            <returns>返回满足条件的货架</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetTableByID(System.String)">
            <summary>
            通过单据号查找主表信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.AddList(ServerModule.S_MaterialDetainList,System.String@)">
            <summary>
            添加子表信息
            </summary>
            <param name="list">子表数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.UpdateList(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            采购员选择订单号，修改子表信息
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="orderFormID">关联订单号</param>
            <param name="batchNo">批次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.UpdateList(ServerModule.S_MaterialDetainList,System.String,System.String@)">
            <summary>
            编制人修改子表信息
            </summary>
            <param name="goods">扣货单明细信息</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.GetOrderFormInfo(System.String,System.String,System.String,System.String@)">
            <summary>
            通过物品的ID获得订单信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供货单位</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.MaterialDetainBill.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.IStoreageCheck">
            <summary>
            库房盘点单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IStoreageCheck.IsRepeat(System.String,System.String)">
            <summary>
            是否重复建单
            </summary>
            <param name="storageID">库房名称</param>
            <param name="billNo">单据号</param>
            <returns>重复返回 True，不重复返回 False</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.GetAllBill">
            <summary>
            获得主表信息
            </summary>
            <returns>返回获取的主表信息</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.GetList(System.String,System.Data.DataTable)">
            <summary>
            获得明细表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="depotTable">材料类别列表</param>
            <returns>返回获取的明细表信息</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.AddBill(ServerModule.S_StorageCheck,System.Data.DataTable,System.String@)">
            <summary>
            添加主表信息
            </summary>
            <param name="inCheck">盘点单信息</param>
            <param name="checkList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.GetBill(System.String)">
            <summary>
            获得单条主表信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获取的单挑主表信息</returns>
        </member>
        <member name="M:ServerModule.IStoreageCheck.GetList(System.String)">
            <summary>
            获得物品明细信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获取的物品明细信息</returns>
        </member>
        <member name="T:ServerModule.IOrdinaryInDepotGoodsBill">
            <summary>
            普通入库单物品清单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.IsExistFrock(System.String)">
            <summary>
            是否存在工装
            </summary>
            <param name="billID"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_OrdinaryInDepotBill,ServerModule.S_OrdinaryInDepotGoodsBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_OrdinaryInDepotBill,ServerModule.S_OrdinaryInDepotGoodsBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.GetNewBatchNo">
            <summary>
            获得普通入库的新批次号
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.IsExist(System.Int32)">
            <summary>
            检查普通入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.AddGoods(System.String,ServerModule.S_OrdinaryInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            添加普通入库单物品
            </summary>
            <param name="billNo">单据编号</param>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.DeleteGoods(System.Collections.Generic.List{System.Int32},System.String@)">
            <summary>
            批量删除普通入库单物品
            </summary>
            <param name="lstID">物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.DeleteGoods(System.String,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            删除指定单据的所有物品信息
            </summary>
            <param name="billNo">要删除的物品单据号</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.GetGoodsViewInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.GetGoodsInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.GetGoodsViewInfo(System.Int32)">
            <summary>
            获取包含指定物品编号的信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.UpdateGoods(ServerModule.S_OrdinaryInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            更新普通入库单物品
            </summary>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IOrdinaryInDepotGoodsBill.GetSumJE(System.String)">
            <summary>
            获得合计金额
            </summary>
            <param name="billID">单据号</param>
            <returns>获得合计的金额</returns>
        </member>
        <member name="T:ServerModule.DetailSummaryInfo">
            <summary>
            入库、出库名细汇总信息操作类
            </summary>
        </member>
        <member name="T:ServerModule.IDetailSummaryInfo">
            <summary>
            入库、出库名细汇总信息操作接口
            </summary>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetInDepotSummarInfoForStorageID(System.DateTime,System.DateTime,System.String)">
            <summary>
            分库房查询入库汇总统计
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetGetFetchGoodsSummarInfoForStorageID(System.DateTime,System.DateTime,System.String)">
            <summary>
            分库房查询领料汇总统计
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetFetchGoodsSummarInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的领料汇总信息
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的汇总信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetFetchGoodstDetailInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的领料名细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetInDepotDetailInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的入库名细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetInDepotSummarInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的入库汇总信息
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的汇总信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.CheckInDepotDetail(System.String)">
            <summary>
            检查入库明细表里是否包含指定单据编号
            </summary>
            <param name="billNo">单据编号</param>
            <returns>包含返回true</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.CheckFetchGoodsDetail(System.String)">
            <summary>
            检查领料明细表里是否包含指定单据编号
            </summary>
            <param name="billNo">单据编号</param>
            <returns>包含返回true</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetInDepotDetailInfoForTable(System.Collections.Generic.List{System.Object})">
            <summary>
            获取指定日期的入库明细的TABLE
            </summary>
            <param name="lstWhere">查询条件</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetFetchGoodstDetailInfoForTable(System.DateTime,System.DateTime,System.String)">
            <summary>
            获取指定日期的领料明细的TABLE
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.IDetailSummaryInfo.GetFetchGoodstDetailInfoForTable_New(System.DateTime,System.DateTime,System.String)">
            <summary>
            获取指定日期的新账套的领料明细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetFetchGoodstDetailInfoForTable(System.DateTime,System.DateTime,System.String)">
            <summary>
            获取指定日期的领料明细的TABLE
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetFetchGoodstDetailInfoForTable_New(System.DateTime,System.DateTime,System.String)">
            <summary>
            获取指定日期的新账套的领料明细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetInDepotDetailInfoForTable(System.Collections.Generic.List{System.Object})">
            <summary>
            获取指定日期的入库明细的TABLE
            </summary>
            <param name="lstWhere">查询条件</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetInDepotDetailInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的入库名细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetInDepotSummarInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的入库汇总信息
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的汇总信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetFetchGoodstDetailInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的领料名细
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的明细信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetInDepotSummarInfoForStorageID(System.DateTime,System.DateTime,System.String)">
            <summary>
            分库房查询入库汇总统计
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回分库房查询入库汇总统计数据</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetGetFetchGoodsSummarInfoForStorageID(System.DateTime,System.DateTime,System.String)">
            <summary>
            分库房查询领料汇总统计
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="storageID">库房ID</param>
            <returns>返回分库房查询领料汇总统计数据</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.GetFetchGoodsSummarInfo(System.DateTime,System.DateTime,ServerModule.SummaryMode)">
            <summary>
            获取指定日期的领料汇总信息
            </summary>
            <param name="beginDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="orderMode">模式</param>
            <returns>返回获取到的汇总信息</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.CheckInDepotDetail(System.String)">
            <summary>
            检查入库明细表里是否包含指定单据编号
            </summary>
            <param name="billNo">单据编号</param>
            <returns>包含返回true</returns>
        </member>
        <member name="M:ServerModule.DetailSummaryInfo.CheckFetchGoodsDetail(System.String)">
            <summary>
            检查领料明细表里是否包含指定单据编号
            </summary>
            <param name="billNo">单据编号</param>
            <returns>包含返回true</returns>
        </member>
        <member name="T:ServerModule.GeneratesCheckOutInDepotServer">
            <summary>
            自动生成入库单管理类
            </summary>
        </member>
        <member name="M:ServerModule.GeneratesCheckOutInDepotServer.GetAllInfo(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            获得可以自动生成的入库单信息
            </summary>
            <param name="provider">供应商</param>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="gpec">规格</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回可以自动生成的入库单信息</returns>
        </member>
        <member name="M:ServerModule.GeneratesCheckOutInDepotServer.AddCheckInDepotBill(System.Data.DataTable,System.String,System.String,System.String@)">
            <summary>
            自动插入报检入库单
            </summary>
            <param name="dateTable">需要插入的数据集</param>
            <param name="storageID">库房ID</param>
            <param name="version">版次号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GeneratesCheckOutInDepotServer.GetBillID(System.String,System.Int32)">
            <summary>
            获得单据号
            </summary>
            <param name="djh">当前单据号</param>
            <param name="i">需要累加的值</param>
            <returns>返回新单据号</returns>
        </member>
        <member name="T:ServerModule.MusterUse">
            <summary>
            样品耗用管理类
            </summary>
        </member>
        <member name="T:ServerModule.IMusterUse">
            <summary>
            样品耗用管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMusterUse.GetStockCount(System.Int32,System.String)">
            <summary>
            获得库存信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回库存数</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.GetAllBill">
            <summary>
            获得所有单据
            </summary>
            <returns>返回样品耗用单信息</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.GetList(System.String)">
            <summary>
            获得指定单据号的明细
            </summary>
            <param name="djh">单据号</param>
            <returns>返回样品耗用单明细信息</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.GetBill(System.String)">
            <summary>
            获得一条单据
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条样品耗用单信息</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.SaveBill(System.String,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            保存对单据明细的修改
            </summary>
            <param name="djh">样品耗用单号</param>
            <param name="storageID">库房ID</param>
            <param name="purposeCode">用途编码</param>
            <param name="useList">单据明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>保存成功返回True，保存失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.UpdateBill(ServerModule.S_MusterUseBill,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="inMusterUse">样品耗用单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterUse.ScarpBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">样品耗用单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterUse.GetStockCount(System.Int32,System.String)">
            <summary>
            获得库存信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回库存数</returns>
        </member>
        <member name="M:ServerModule.MusterUse.GetUseSumCount(System.Int32,System.String)">
            <summary>
            获得样品耗用单Table
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回耗用数量之和</returns>
        </member>
        <member name="M:ServerModule.MusterUse.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MusterUse.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MusterUse.GetAllBill">
            <summary>
            获得所有单据
            </summary>
            <returns>返回样品耗用单信息</returns>
        </member>
        <member name="M:ServerModule.MusterUse.GetBill(System.String)">
            <summary>
            获得一条单据
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条样品耗用单信息</returns>
        </member>
        <member name="M:ServerModule.MusterUse.GetList(System.String)">
            <summary>
            获得指定单据号的明细
            </summary>
            <param name="djh">单据号</param>
            <returns>返回样品耗用单明细信息</returns>
        </member>
        <member name="M:ServerModule.MusterUse.UpdateBill(ServerModule.S_MusterUseBill,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="inMusterUse">样品耗用单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterUse.DeleteList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除指定单据号的明细
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterUse.AddList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String@)">
            <summary>
            添加指定单据号的明细
            </summary>
            <param name="context">数据上下文</param>
            <param name="useList">样品耗用单明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterUse.SaveBill(System.String,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            保存对单据明细的修改
            </summary>
            <param name="djh">样品耗用单号</param>
            <param name="storageID">库房ID</param>
            <param name="purposeCode">用途编码</param>
            <param name="useList">单据明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>保存成功返回True，保存失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterUse.ScarpBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">样品耗用单单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="T:ServerModule.MaterialReturnedInTheDepot">
            <summary>
            领料退库单管理类
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepot.m_serverFrockStandingBook">
            <summary>
            工装信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepot.m_serverProductCode">
            <summary>
            箱体编码服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepot.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MaterialReturnedInTheDepot.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取领料退库单信息
            </summary>
            <param name="returnBill">领料退库单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.GetBill(System.String)">
            <summary>
            获取领料退库单信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.GetBillView(System.String)">
            <summary>
            获取领料退库单视图信息
            </summary>
            <param name="billNo">领料退库单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.GetAllBillForFetchGoods(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            为领料而获取所有已经完成的单据信息
            </summary>
            <param name="returnBill">查询到的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.AddBill(ServerModule.S_MaterialReturnedInTheDepot,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加领料退库单
            </summary>
            <param name="bill">领料退库单信息</param>
            <param name="returnBill">返回更新后的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.UpdateBill(ServerModule.S_MaterialReturnedInTheDepot,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料退库单(只修改编制人涉及信息)
            </summary>
            <param name="bill">领料退库单信息</param>
            <param name="returnBill">返回更新后的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除领料退库单
            </summary>
            <param name="billNo">领料退库单号</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料退库单号</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            领料出库人提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.DirectorAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.QualityAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            质量批准单据
            </summary>
            <param name="billNo">单据编号</param>
            <param name="name">质量签名</param>
            <param name="returnBill">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.FinishFrock(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            工装业务处理
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成领料退库单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的领料退库单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料退库单</returns>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialReturnedInTheDepot)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.MaterialReturnedInTheDepot.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退更新后查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.IThreePacketsOfTheRepairBill">
            <summary>
            三包外售后返修管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetShortcutDetail(System.String)">
            <summary>
            获得明细快捷选择列表
            </summary>
            <param name="productType">产品类型</param>
            <returns>返回TABLE </returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetShortcutDetailList(System.Data.DataTable,System.String@)">
            <summary>
            快捷设置明细
            </summary>
            <param name="dtSoucre">数据源</param>
            <param name="error">错误信息</param>
            <returns>返回明细列表</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.InsertThreePacketsOfTheRepairList(System.String,System.String@)">
            <summary>
            获得一次性物料集合
            </summary>
            <param name="billID">单据号</param>
            <param name="msg">操作信息</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.UpdateList(System.String,System.Data.DataTable,System.String@)">
            <summary>
            对明细信息进行更新/删除/添加
            </summary>
            <param name="billID">单据号</param>
            <param name="listTable">明细数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetThreePacketGoodsUnitPrice(System.Int32)">
            <summary>
            获得三包外返修的某个零件单价
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.OperationGoodsUnitPrice(System.Int32,ServerModule.YX_ThreePacketsOfTheRepairGoodsUnitPrice,System.Int32,System.String@)">
            <summary>
            对单条三包外返修零件信息的数据库操作
            </summary>
            <param name="flag">操作方式 0：添加，1：修改，2：删除</param>
            <param name="threePacket">数据集</param>
            <param name="oldGoodsID">老的物品ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.UpdateAllGoodsUnitPrice(System.Boolean,System.Data.DataTable,System.String@)">
            <summary>
            设置所有三包外返修零件单价
            </summary>
            <param name="flag">是否删除原有的记录 True：删除 False：不删除</param>
            <param name="goodSunitPrice">数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetGoodsUnitPriceInfo">
            <summary>
            获得所有三包外返修零件单价信息
            </summary>
            <returns>返回获得的三包外返修零件单价信息</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetList(System.String)">
            <summary>
            获得明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回获得的明细信息</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.GetBill(System.String,System.String@)">
            <summary>
            获得一条记录的信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param> 
            <returns>返回获得的信息记录</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.UpdateBill(ServerModule.YX_ThreePacketsOfTheRepairBill,System.String@)">
            <summary>
            单据流程操作
            </summary>
            <param name="threePacketBill">LINQ 单据数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作流程成功返回True，操作流程失败返回False</returns>
        </member>
        <member name="M:ServerModule.IThreePacketsOfTheRepairBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="T:ServerModule.IGoodsAntirust">
            <summary>
            物品防锈管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.AddAntirustInfo(System.Int32,System.Decimal,System.String@)">
            <summary>
            添加防锈物品
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="antirustTime">防锈期</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.AuditingAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            审核防锈
            </summary>
            <param name="goodsTable">需要执行的物品数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.DeleteAntirustInfo(System.Int32,System.String@)">
            <summary>
            删除防锈物品
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.ExceAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            执行防锈
            </summary>
            <param name="goodsTable">需要执行防锈的物品数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.GetBaseGoodsAntirustSet">
            <summary>
            获得设置防锈期的表
            </summary>
            <returns>返回防锈期设置表</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.GetStockAntirustCheck">
            <summary>
            获得库存物品的防锈信息表
            </summary>
            <returns>返回库存物品的防锈信息表</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.GetMaxID">
            <summary>
            获得最大ID
            </summary>
            <returns>返回string 最大ID</returns>
        </member>
        <member name="M:ServerModule.IGoodsAntirust.AuthorizeAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            确认防锈
            </summary>
            <param name="goodsTable">需要执行的物品数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>True 成功 false  失败</returns>
        </member>
        <member name="T:ServerModule.ICannibalize">
            <summary>
            库房调拨类的接口
            </summary>
        </member>
        <member name="M:ServerModule.ICannibalize.SaveBillList(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{ServerModule.S_CannibalizeList},System.Int32,System.String)">
            <summary>
            保存单据明细信息
            </summary>
            <param name="dataContxt">LINQ数据上下文</param>
            <param name="lstDetail">添加的表</param>
            <param name="djID">添加的行</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.ICannibalize.QualityBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（检测）
            </summary>
            <param name="djID">单据ID</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.GetAllData(System.String,System.String,System.String,System.String@)">
            <summary>
            获取指定日期范围内的全部信息
            </summary>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.DeleteBill(System.Int32)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据ID</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.CheckBill(System.String,System.String,System.String@)">
            <summary>
            编辑检验状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.AuditingBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（审核）
            </summary>
            <param name="djID">单据序号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.GetList(System.Int32)">
            <summary>
            获得单据明细
            </summary>
            <param name="djID">单据序号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.GetBill(System.Int32)">
            <summary>
            获得入库单据
            </summary>
            <param name="djID">单据序号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.SaveBill(System.Data.DataTable,ServerModule.S_CannibalizeBill)">
            <summary>
            保存单据数据(如果单据信息ID为0则添加数据，否则更新数据)
            </summary>
            <param name="billList">单据明细</param>
            <param name="billInfo">单据信息</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICannibalize.AffirmBill(System.Int32,System.String@)">
            <summary>
            仓管确认
            </summary>
            <param name="djID">单据序号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.AccessoryDutyInfoManageServer">
            <summary>
            零件责任归属管理类
            </summary>
        </member>
        <member name="M:ServerModule.AccessoryDutyInfoManageServer.GetProviderPrincipal(System.String)">
            <summary>
            获得供应商的主要责任人
            </summary>
            <param name="providerCode">供应商编码</param>
            <returns>负责人姓名</returns>
        </member>
        <member name="M:ServerModule.AccessoryDutyInfoManageServer.GetAllAccessoryDutyInfo(System.Collections.Generic.List{System.String},System.String,System.Linq.IQueryable{ServerModule.View_B_AccessoryDutyInfo}@,System.String@)">
            <summary>
            获取零件责任归属信息
            </summary>
            <param name="listRole">角色列表</param>
            <param name="logionName">登录名</param>
            <param name="returnAccessory">返回查询到的零件责任归属信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.AccessoryDutyInfoManageServer.GetAllAccessoryCode(System.String,System.Int32,System.Data.DataTable@,System.String@)">
            <summary>
            获取指定用户指定权限的零件责任归属信息
            </summary>
            <param name="userCode">用户名</param>
            <param name="userPower">
            0     ：获取记录中包含指定用户名的信息（如：SQE、采购员、供应商开发人员中有任何一个是指定用户的记录；
            其他值：所有记录
            </param>
            <param name="returnAccessory">返回查询到的零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.AccessoryDutyInfoManageServer.IsSafeProvider(ServerModule.B_AccessoryDutyInfo,System.String@)">
            <summary>
            判断此物品与供应商是否通过审核
            </summary>
            <param name="AccessoryDutyInfo">零件责任归属信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>供应商通过审核返回true，否则返回false</returns>
        </member>
        <member name="T:ServerModule.MarqueeServer">
            <summary>
            跑马灯的内容显示类
            </summary>
        </member>
        <member name="T:ServerModule.IMarqueeServer">
            <summary>
            跑马灯的内容显示操作类
            </summary>
        </member>
        <member name="M:ServerModule.IMarqueeServer.GetMarquee">
            <summary>
            获得所有需要显示的内容
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.MarqueeServer.GetMarquee">
            <summary>
            获得所有需要显示的内容
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="T:ServerModule.SalesOrderServer">
            <summary>
            销售合同/订单评审
            </summary>
        </member>
        <member name="T:ServerModule.ISalesOrderServer">
            <summary>
            销售合同/订单评审服务接口
            </summary>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetAllBillInfo(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得单据列表
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetBillInfo(System.String)">
            <summary>
            获得单条信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetPartListInfo(System.String)">
            <summary>
            获得零件明细信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetReviewListInfo(System.String)">
            <summary>
            获得评审信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.InsertBill(ServerModule.YX_SalesOrder,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            提交单据
            </summary>
            <param name="salesOrder">单据信息数据集</param>
            <param name="listPartInfo">零件明细信息</param>
            <param name="listReviewInfo">评审信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetNextBillID">
            <summary>
            获取新的单据号
            </summary>
            <returns>成功返回单号，失败抛出异常</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.OperationInfo(ServerModule.YX_SalesOrder,System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            操作业务
            </summary>
            <param name="salesOrder">单据信息数据集</param>
            <param name="listPartInfo">零件明细信息</param>
            <param name="listReviewInfo">评审部门信息</param>
            <param name="deptCode">部门编码</param>
            <param name="opinion">部门评审意见</param>
            <param name="status">单据状态</param>
            <param name="type">操作类型（主管审核、部门评审、评审结果）</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetReviewHistory(System.String,System.String)">
            <summary>
            通过单据号，部门编码获得评审意见历史信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="deptCode">部门编码</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ISalesOrderServer.GetCommunicate(System.String,System.Int32)">
            <summary>
            通过物品ID和主机厂编码获得与主机厂相对应的图号名称
            </summary>
            <param name="clientCode">主机厂编码</param>
            <param name="goodsID">物品ID</param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetAllBillInfo(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得单据列表
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetBillInfo(System.String)">
            <summary>
            获得单条信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetPartListInfo(System.String)">
            <summary>
            获得零件明细信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetReviewHistory(System.String,System.String)">
            <summary>
            通过单据号，部门编码获得评审意见历史信息
            </summary>
            <param name="billNo">单据号</param>
            <param name="deptCode">部门编码</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetReviewListInfo(System.String)">
            <summary>
            获得评审信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetNextBillID">
            <summary>
            获取新的单据号
            </summary>
            <returns>成功返回单号，失败抛出异常</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.DeletePartList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除零件明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.DeleteReviewList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除评审信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.InsertPartList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="listInfo">零件明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.InsertReviewList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="listInfo">零件明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.InsertBill(ServerModule.YX_SalesOrder,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            提交单据
            </summary>
            <param name="salesOrder">单据信息数据集</param>
            <param name="listPartInfo">零件明细信息</param>
            <param name="listReviewInfo">评审信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.OperationInfo(ServerModule.YX_SalesOrder,System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            操作业务
            </summary>
            <param name="salesOrder">单据信息数据集</param>
            <param name="listPartInfo">零件明细信息</param>
            <param name="listReviewInfo">评审部门信息</param>
            <param name="deptCode">部门编码</param>
            <param name="opinion">部门评审意见</param>
            <param name="status">单据状态</param>
            <param name="type">操作类型（主管审核、部门评审、评审结果）</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SalesOrderServer.GetCommunicate(System.String,System.Int32)">
            <summary>
            通过物品ID和主机厂编码获得与主机厂相对应的图号名称
            </summary>
            <param name="clientCode">主机厂编码</param>
            <param name="goodsID">物品ID</param>
            <returns></returns>
        </member>
        <member name="T:ServerModule.IProductLendReturnService">
            <summary>
            物品借贷服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.GetListDetailInfo">
            <summary>
            获得借贷流水账信息列表
            </summary>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.GetListRecordInfo">
            <summary>
            获得借贷账存信息列表
            </summary>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.GetStockSingleInfo(ServerModule.DepotManagementDataContext,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得单条借贷记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="DebtorCode">借方代码</param>
            <param name="CreditCode">贷方代码</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
            <returns>返回单条LNQ数据集</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.QueryRunningAccount(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String@)">
            <summary>
            查询车间物品借贷流水账
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="wsName">车间代码</param>
            <param name="storage">库房代码</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="error">错误信息</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.GetRecordInfo">
            <summary>
            获得借贷信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.GetStockSingleInfo(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得单条借贷记录
            </summary>
            <param name="DebtorCode">借方代码</param>
            <param name="CreditCode">贷方代码</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
            <returns>返回单条LNQ数据集</returns>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.OperationDetail(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendReturnDetail)">
            <summary>
            操作借贷明细账
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detail">借贷明细LINQ数据集</param>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.OperationDetailRecord(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendReturnDetail)">
            <summary>
            操作明细与借贷记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detail">明细信息</param>
        </member>
        <member name="M:ServerModule.IProductLendReturnService.OperationRecord(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendRecord)">
            <summary>
            操作借货记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="record">LINQ数据集</param>
        </member>
        <member name="T:ServerModule.MarketingPlan">
            <summary>
            营销计划管理类
            </summary>
        </member>
        <member name="M:ServerModule.MarketingPlan.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.GetAllBill">
            <summary>
            获得父表信息
            </summary>
            <returns>返回获得的营销计划主表信息</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">营销计划单号</param>
            <returns>返回获得的营销计划明细信息</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.CheckBillType(ServerModule.DepotManagementDataContext,System.String,System.String,System.String@)">
            <summary>
            判断单据类型并进行相关操作
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="yearAndMonth">年月字符串 格式为“YYYYMM”</param>
            <param name="billType">计划类型(营销要货计划,营销变更计划,营销增量计划)</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.AddBill(ServerModule.S_MarketingPlanBill,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="marketingPlan">计划主表信息</param>
            <param name="planList">计划明细表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.DeletePlanList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.AddPlanList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String@)">
            <summary>
            添加子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="planList">计划子表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.UpdateBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            更改状态
            </summary>
            <param name="billStatus">单据状态</param>
            <param name="billIDList">计划单号列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.IsRepeatBillID(System.String)">
            <summary>
            检查单据是否重复
            </summary>
            <param name="djh">计划单号</param>
            <returns>未重复返回True,重复返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.GetYearAndMonth">
            <summary>
            获得计划年月
            </summary>
            <returns>返回计划年月</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.UpdateBill(ServerModule.DepotManagementDataContext,ServerModule.S_MarketingPlanBill,System.Data.DataTable,System.String@)">
            <summary>
            修改父表信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inMkPlan">采购计划主表信息</param>
            <param name="planList">采购计划明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.AddDelivery(ServerModule.S_MarketingPlanDelivery,System.String@)">
            <summary>
            插入交货期数据
            </summary>
            <param name="marketingPlanDelivery">交货期数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.DeleteDelivery(ServerModule.S_MarketingPlanDelivery,System.String@)">
            <summary>
            删除营销计划交货期
            </summary>
            <param name="marketingPlanDelivery">交货期数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.GetPlanDeliveryInfo(System.String,System.Int32,System.Int32)">
            <summary>
            获得交货期数据集
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="month">计划月</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.MarketingPlan.GetCellToolTipString(System.String,System.Int32,System.Int32)">
            <summary>
            获得ToolTip字符串
            </summary>
            <param name="billID">单据号</param>
            <param name="goodsID">物品ID</param>
            <param name="month">计划月</param>
            <returns>返回字符串</returns>
        </member>
        <member name="T:ServerModule.IPurcharsingPlan">
            <summary>
            采购计划管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.RecordMissingParts(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            记录缺件
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.DeleteProcurementMath(System.Int32,System.String@)">
            <summary>
            删除公式
            </summary>
            <param name="mathID">公式ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返货False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.SaveProcurementMath(ServerModule.CG_ProcurementMath,System.String@)">
            <summary>
            保存计算公式
            </summary>
            <param name="procurementMath">新公式数据</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetProcurementMath">
            <summary>
            获得计算公式数据
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.OperatorMathSteps(ServerModule.CG_ProcurementSteps,GlobalObject.CE_OperatorMode,System.String@)">
            <summary>
            操作采购计划的计算步骤
            </summary>
            <param name="procurementSteps">新数据</param>
            <param name="mode">操作模式</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetMathSteps">
            <summary>
            获得计算步骤
            </summary>
            <returns>返回计算步骤TABLE</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.OperatorProcuremnetPlanFormla(GlobalObject.CE_OperatorMode,ServerModule.CG_ProcurementPlan,ServerModule.CG_ProcurementMath,System.String@)">
            <summary>
            操作采购计划计算公式
            </summary>
            <param name="mode">操作方式</param>
            <param name="model">LINQ实体集</param>
            <param name="mathModel">LINQ实体集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetProcurementPlanView(System.String)">
            <summary>
            获得采购计划计算公式
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetProcurementPlanView">
            <summary>
            获得采购计划计算公式
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.IsAllowCreate(System.DateTime,System.DateTime,System.String)">
            <summary>
            是否允许创建采购计划
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="nY">年月</param>
            <returns>允许返回True ,不允许返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.AddAllBill(System.Data.DataTable,System.String,System.String@)">
            <summary>
            添加所有信息
            </summary>
            <param name="messageList">需要添加的信息</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.AddBill(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            添加主表数据
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="yearAndMonth">年月</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.AddList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String,System.String@)">
            <summary>
            添加子表数据
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="messageList">需要添加的数据集</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.DeleteList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除子表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetBill(System.String)">
            <summary>
            获得主表数据集
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回主表信息</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetList(System.String)">
            <summary>
            返回明细数据
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回明细信息</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.UpdateBill(System.Data.DataTable,System.String,System.String@)">
            <summary>
            更新子父表信息
            </summary>
            <param name="messageList">需要更新的数据信息</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            更新主表单据状态
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetNewList(System.String,System.String@)">
            <summary>
            获得最新的记录集
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回最新的查询记录集</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.IsFinish(System.String,System.String@)">
            <summary>
            检查单据是否已完成
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>单据未完成返回True，单据已完成返回False</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetOrderGoodsCount(System.Data.DataTable)">
            <summary>
            计算订货数
            </summary>
            <param name="messageTable">需要获取订货数的数据集</param>
            <returns>返回已获取到订货数的数据集</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetOrderGoodsPrice(System.Data.DataTable)">
            <summary>
            获取订货金额
            </summary>
            <param name="messageTable">需要获取订货金额的数据集</param>
            <returns>返回已获取到订货金额的数据集</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.IsQualified(System.String,System.String@)">
            <summary>
            检查是否具备生成采购计划的条件
            </summary>
            <param name="yearAndMonth">年月</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>都具备条件返回TRUE，返回FALSE不具备条件</returns>
        </member>
        <member name="M:ServerModule.IPurcharsingPlan.GetMarketingPlanAndProductPlan(System.String,System.Data.DataTable@,System.Data.DataTable@)">
            <summary>
            获得生产计划单据列表与营销要货计划单据列表
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="marketingPlan">返回的营销计划数据集</param>
            <param name="productPlan">返回的生产计划数据集</param>
        </member>
        <member name="T:ServerModule.DeclareWastrelType">
            <summary>
            报废类别管理类
            </summary>
        </member>
        <member name="M:ServerModule.DeclareWastrelType.GetWastrelType(System.Int32)">
            <summary>
            获取报废类别
            </summary>
            <param name="typeId">类型ID</param>
            <returns>返回获取到的报废类别信息</returns>
        </member>
        <member name="M:ServerModule.DeclareWastrelType.GetWastrelType(System.String)">
            <summary>
            获取报废类别
            </summary>
            <param name="typeName">类型名称</param>
            <returns>返回获取到的报废类别信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.DeclareWastrelType.GetAllType">
            <summary>
            获取所有报废类别
            </summary>
            <returns>返回获取到的报废类别信息</returns>
        </member>
        <member name="T:ServerModule.IStockLack">
            <summary>
            库房报缺服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IStockLack.GetCustomTemplatesList(System.Int32)">
            <summary>
            获得自定义模板明细信息
            </summary>
            <param name="listID">模板ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IStockLack.GetCustomTemplatesMain">
            <summary>
            获得自定义模板信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IStockLack.OperationList(GlobalObject.CE_OperatorMode,ServerModule.S_StockLackCustomTemplatesList,System.String@)">
            <summary>
            操作自定义模板明细
            </summary>
            <param name="mode">操作模式</param>
            <param name="list">LNQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False </returns>
        </member>
        <member name="M:ServerModule.IStockLack.OperationMain(GlobalObject.CE_OperatorMode,ServerModule.S_StockLackCustomTemplates,System.String@)">
            <summary>
            自定义模板操作模板
            </summary>
            <param name="mode">操作模式</param>
            <param name="main">LNQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True, 失败返回False</returns>
        </member>
        <member name="M:ServerModule.IStockLack.GetBomTable(System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="cvtType">产品类型</param>
            <returns>返回table</returns>
        </member>
        <member name="M:ServerModule.IStockLack.ReportWanting(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            报缺查询
            </summary>
            <param name="strat">开始日期字符串</param>
            <param name="end">结束日期字符串</param>
            <param name="storageID">库房ID</param>
            <param name="productName">产品名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.IStockLack.AddTempTable(System.String,System.Decimal)">
            <summary>
            插入临时表
            </summary>
            <param name="code">产品型号</param>
            <param name="count">数量</param>
        </member>
        <member name="M:ServerModule.IStockLack.ClearTempTable">
            <summary>
            清空临时表
            </summary>
        </member>
        <member name="M:ServerModule.IStockLack.SetSingleBom(System.Collections.Generic.List{System.String})">
            <summary>
            获得单一的BOM清单信息
            </summary>
            <param name="listGoods">BOM物品信息列表</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.ProductListServer">
            <summary>
            用于营销产品类管理类
            </summary>
        </member>
        <member name="T:ServerModule.IProductListServer">
            <summary>
            用于营销产品类管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IProductListServer.GetProductInfo">
            <summary>
            获得产品信息
            </summary>
            <returns>返回产品信息</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.IsInProductStock(System.Int32)">
            <summary>
            判断此物品是否存在于成品库中
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>存在返回True,不存在返回False</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetMotorcycleType">
            <summary>
            获得车型
            </summary>
            <returns>返回车型记录列表</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetMotorcycleType(System.String)">
            <summary>
            根据车型获得ID
            </summary>
            <param name="carModel">车型</param>
            <returns>返回车型ID</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetMotorcycleInfo(System.Int32)">
            <summary>
            根据车型ID获得车型
            </summary>
            <param name="carModelID">车型ID</param>
            <returns>返回车型</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetProductGoodsID(System.String,System.Int32,System.Boolean)">
            <summary>
            获得产品的GoodsID且同时判断此物品ID是否属于产品
            </summary>
            <param name="productCode">产品型号</param>
            <param name="goodsID">物品ID</param>
            <param name="flagTCU">是否过滤TCU， True： 是，False： 否</param>
            <returns>返回物品ID，若为0则不属于产品</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetGoodsPlanID(System.String)">
            <summary>
            获得某一个产品信息
            </summary>
            <returns>返回一个产品信息</returns>
        </member>
        <member name="M:ServerModule.IProductListServer.GetAllProductList(System.String@)">
            <summary>
            获取与营销有关的所有产品信息
            </summary>
            <param name="error">出错时输出的错误信息</param>
            <returns>成功返回获取到的产品信息，失败返回null</returns>
        </member>
        <member name="F:ServerModule.ProductListServer.m_dbOperate">
            <summary>
            数据库操作接口
            </summary>
        </member>
        <member name="M:ServerModule.ProductListServer.GetMotorcycleType">
            <summary>
            获得车型
            </summary>
            <returns>返回车型记录列表</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetMotorcycleType(System.String)">
            <summary>
            根据车型获得ID
            </summary>
            <param name="carModel">车型</param>
            <returns>返回车型ID</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetMotorcycleInfo(System.Int32)">
            <summary>
            根据车型ID获得车型
            </summary>
            <param name="carModelID">车型ID</param>
            <returns>返回车型</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.IsInProductStock(System.Int32)">
            <summary>
            判断此物品是否存在于成品库中
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>存在返回True,不存在返回False</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetProductGoodsID(System.String,System.Int32,System.Boolean)">
            <summary>
            获得产品的GoodsID且同时判断此物品ID,图号型号是否属于产品
            </summary>
            <param name="productCode">产品型号</param>
            <param name="goodsID">物品ID</param>
            <param name="flagTCU">是否过滤TCU， True： 是，False： 否</param>
            <returns>返回物品ID，若为0则不属于产品</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetGoodsPlanID(System.String)">
            <summary>
            获得某一个产品信息
            </summary>
            <returns>返回一个产品信息</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetProductInfo">
            <summary>
            获得产品信息
            </summary>
            <returns>返回产品信息</returns>
        </member>
        <member name="M:ServerModule.ProductListServer.GetAllProductList(System.String@)">
            <summary>
            获取与营销有关的所有产品信息
            </summary>
            <param name="error">出错时输出的错误信息</param>
            <returns>成功返回获取到的产品信息，失败返回null</returns>
        </member>
        <member name="T:ServerModule.FrockIndepotBill">
            <summary>
            自制件工装报检管理类
            </summary>
        </member>
        <member name="T:ServerModule.IFrockIndepotBill">
            <summary>
            自制件工装报检接口类
            </summary>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.AddBill(ServerModule.S_FrockInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件工装
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.AddGoods(System.String,ServerModule.S_FrockInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            添加自制件工装报检物品
            </summary>
            <param name="billNo">单据编号</param>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.DeleteGoods(System.Collections.Generic.List{System.Int32},System.String@)">
            <summary>
            批量删除普通入库单物品
            </summary>
            <param name="lstId">物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.DeleteGoods(System.String,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            删除指定单据的所有物品信息
            </summary>
            <param name="billNo">要删除的物品单据号</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件工装报检信息
            </summary>
            <param name="returnInfo">自制件工装报检单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.GetBill(System.String)">
            <summary>
            获取自制件工装报检信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.GetGoodsInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.GetGoodsViewInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.GetGoodsViewInfo(System.Int32)">
            <summary>
            获取包含指定物品编号的信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.SubmitInDepotInfo(ServerModule.S_FrockInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.SubmitNewBill(System.String,System.Boolean,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            机加人员提交单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="flag">操作标志</param>
            <param name="returnInfo">返回更新后重新查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.UpdateGoods(ServerModule.S_FrockInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            更新普通入库单物品
            </summary>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IFrockIndepotBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件工装报检
            </summary>
            <param name="billNo">单据号号</param>
            <param name="returnInfo">自制件工装报检</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除自制件工装报检</returns>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_serverFrockStandingBook">
            <summary>
            工装信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_serverBom">
            <summary>
            BOM表信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_serverbasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.FrockIndepotBill.m_billUniqueID">
            <summary>
            单据唯一码
            </summary>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件工装报检信息
            </summary>
            <param name="returnInfo">自制件工装报检单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetBill(System.String)">
            <summary>
            获取自制件工装报检信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>成功返回获取到的单据信息,失败返回null</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.AddBill(ServerModule.S_FrockInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件工装
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.AddGoods(System.String,ServerModule.S_FrockInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            添加自制件工装报检物品
            </summary>
            <param name="billNo">单据编号</param>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.CreateNewFrockMessage(ServerModule.S_FrockInDepotBill,System.Boolean,System.String@)">
            <summary>
            插入工装所有信息
            </summary>
            <param name="frockBill">自制件工装信息</param>
            <param name="flag">是否进入工装台帐</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetNewFrockNumber">
            <summary>
            获得新的工装编号
            </summary>
            <returns>返回工装编号</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.SubmitNewBill(System.String,System.Boolean,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            机加人员提交单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="flag">操作标志</param>
            <param name="returnInfo">返回更新后重新查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.SubmitInDepotInfo(ServerModule.S_FrockInDepotBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="returnInfo">添加完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_FrockInDepotBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.UpdateFrockStockStatus(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            根据工装验证报告表更新工装台帐的库存状态
            </summary>
            <param name="ctx">LINQ</param>
            <param name="billno">普通入库单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_FrockInDepotBill,ServerModule.S_FrockInDepotGoodsBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_FrockInDepotBill,ServerModule.S_FrockInDepotGoodsBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.ClearNullValue(ServerModule.S_FrockInDepotGoodsBill)">
            <summary>
            清除NULL值
            </summary>
            <param name="goods">物品信息</param>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.UpdateGoods(ServerModule.S_FrockInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            更新普通入库单物品
            </summary>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetGoodsViewInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetGoodsInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.GetGoodsViewInfo(System.Int32)">
            <summary>
            获取包含指定物品编号的信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.DeleteGoods(System.Collections.Generic.List{System.Int32},System.String@)">
            <summary>
            批量删除自制件工装报检物品
            </summary>
            <param name="lstID">物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.DeleteGoods(System.String,System.Linq.IQueryable{ServerModule.View_S_FrockInDepotGoodsBill}@,System.String@)">
            <summary>
            删除指定单据的所有物品信息
            </summary>
            <param name="billNo">要删除的物品单据号</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.FrockIndepotBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件工装报检
            </summary>
            <param name="billNo">单据号号</param>
            <param name="returnInfo">自制件工装报检</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除自制件工装报检</returns>
        </member>
        <member name="T:ServerModule.IUnitServer">
            <summary>
            单位管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IUnitServer.GetUnitName(System.Int32)">
            <summary>
            获得单位名称
            </summary>
            <param name="unitID">单位ID</param>
            <returns>单位名称</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.GetAllUnit(System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            获取单位信息
            </summary>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取单位信息</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.GetUnitInfo(System.Int32)">
            <summary>
            获取单位信息
            </summary>
            <param name="id">单位ID</param>
            <returns>成功返回获取到的单位信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.GetUnitInfo(System.String)">
            <summary>
            获取单位信息
            </summary>
            <param name="unit">单位ID</param>
            <returns>成功返回获取到的单位信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.AddUnit(System.String,System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            添加单位
            </summary>
            <param name="unit">单位</param>
            <param name="spec">单位规格</param>
            <param name="isDisable">停用</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加单位信息</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.UpdateUnit(System.Int32,System.String,System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            更新单位
            </summary>
            <param name="id">序号</param>
            <param name="unit">单位</param>
            <param name="spec">规格</param>
            <param name="isDisable">停用</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功更新单位信息</returns>
        </member>
        <member name="M:ServerModule.IUnitServer.DeleteUnit(System.Int32,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            删除单位
            </summary>
            <param name="id">序号</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除单位信息</returns>
        </member>
        <member name="T:ServerModule.GoodsGradeServer">
            <summary>
            产品、零件等级划分信息管理类
            </summary>
        </member>
        <member name="T:ServerModule.IGoodsGradeServer">
            <summary>
            产品、零件等级划分信息管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IGoodsGradeServer.JudgeGoodsGrade(System.String,System.String,System.Data.DataTable@,System.String@)">
            <summary>
            判断某零件是否属于AB类零件
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="returnTable">返回的AB类零件数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsGradeServer.GetAllGoodsGradeTable(System.Linq.IQueryable{ServerModule.View_Q_GoodsGradeTable}@,System.String@)">
            <summary>
            获取AB类零件表信息
            </summary>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsGradeServer.AddGoodsGrade(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Data.DataTable@,System.String@)">
            <summary>
            添加/修改AB类零件表信息
            </summary>
            <param name="goodsType">物品类型</param>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="goodsName">物品名称</param>
            <param name="goodsGrade">物品等级</param>
            <param name="id">序号</param>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IGoodsGradeServer.DeleteGoodsGrade(System.Int32,System.Linq.IQueryable{ServerModule.View_Q_GoodsGradeTable}@,System.String@)">
            <summary>
            删除AB类零件表信息
            </summary>
            <param name="id">序号</param>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="F:ServerModule.GoodsGradeServer.m_dbOperate">
            <summary>
            数据库操作
            </summary>
        </member>
        <member name="M:ServerModule.GoodsGradeServer.JudgeGoodsGrade(System.String,System.String,System.Data.DataTable@,System.String@)">
            <summary>
            判断某零件是否属于AB类零件
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="returnTable">返回的AB类零件数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsGradeServer.GetAllGoodsGradeTable(System.Linq.IQueryable{ServerModule.View_Q_GoodsGradeTable}@,System.String@)">
            <summary>
            获取AB类零件表信息
            </summary>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsGradeServer.AddGoodsGrade(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Data.DataTable@,System.String@)">
            <summary>
            添加/修改AB类零件表信息
            </summary>
            <param name="goodsType">物品类型</param>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="goodsName">物品名称</param>
            <param name="goodsGrade">物品等级</param>
            <param name="id">序号</param>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsGradeServer.DeleteGoodsGrade(System.Int32,System.Linq.IQueryable{ServerModule.View_Q_GoodsGradeTable}@,System.String@)">
            <summary>
            删除AB类零件表信息
            </summary>
            <param name="id">序号</param>
            <param name="returnTable">返回的AB零件表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsGradeServer.SetReturnError(System.Object,System.Linq.IQueryable{ServerModule.View_Q_GoodsGradeTable}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnTable">返回的信息</param>
            <param name="error">返回的错误信息</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.IHomemadeRejectBill">
            <summary>
            自制件退货单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.AddBill(ServerModule.S_HomemadeRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件退货单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.GetHomemadePartInfo">
            <summary>
            获得所有的自制件
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件退货单
            </summary>
            <param name="billNo">退货单号</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除退货单号</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.FinanceAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            财务审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">审批人姓名</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成自制件退货单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件退货单信息
            </summary>
            <param name="returnBill">返回的自制件退货单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.GetBillView(System.String)">
            <summary>
            获取自制件退货单视图信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="strRebackReason">回退原因</param>
            <param name="m_err">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            退货人提交单据(交给财务审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.IHomemadeRejectBill.UpdateBill(ServerModule.S_HomemadeRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改自制件退货单(只修改编制人涉及信息)
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="T:ServerModule.IFrockProvingReport">
            <summary>
            工装验证报告管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.GetBill(System.String)">
            <summary>
            获得指定单据数据
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条工装检验报告的数据集</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.GetBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据信息
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回工装检验报告视图信息</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.AddBill(ServerModule.S_FrockProvingReport,System.Data.DataTable,System.String@)">
            <summary>
            插入新的数据
            </summary>
            <param name="frockProvingReport">数据集</param>
            <param name="attachedTable">检验验证内容表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.GetAttachedTable(System.String,System.String)">
            <summary>
            获得附属表的信息
            </summary>
            <param name="djh">单据号</param>
            <param name="attachedType">附属信息内容类型 （检验，验证）</param>
            <returns>返回附属表的数据集</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            单据流程
            </summary>
            <param name="billNo">单据号</param>
            <param name="status">操作状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.IFrockProvingReport.SaveInfo(ServerModule.S_FrockProvingReport,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="frockProvingReport">LINQ 数据集</param>
            <param name="attachedTable">检测信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="T:ServerModule.IAfterServiceMakePartsBill">
            <summary>
            售后服务配件制造申请单服务接口
            </summary>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.GetBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得单据信息
            </summary>
            <param name="startTime">检索开始时间</param>
            <param name="endTime">检索结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>成功返回获取到的单据信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.GetBill(System.String)">
            <summary>
            获得单据信息
            </summary>
            <param name="billID">单据号</param>
            <returns>成功返回获取到的单据信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.GetList(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billID">单据号</param>
            <returns>成功返回活到的单据明细，失败返回NULL</returns>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.DeleteBill(System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            批量删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回获取到的单据信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.UpdateBill(ServerModule.YX_AfterServiceMakePartsBill,System.Data.DataTable,ServerModule.AfterServiceMakePartsBillStatus,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="bill">单据主表信息</param>
            <param name="listTable">单据明细信息</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.IAfterServiceMakePartsBill.AutogenerationMaterialRequisition(System.String,System.String,System.String@)">
            <summary>
            自动生成领料单
            </summary>
            <param name="billID">申请单号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回TRUE，失败返回FALES</returns>
        </member>
        <member name="T:ServerModule.HomemadeRejectBill">
            <summary>
            自制件退货服务类
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectBill.m_basicGoodsServer">
            <summary>
            基础物品信息服务
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectBill.m_storeServer">
            <summary>
            库存服务
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeRejectBill.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.GetHomemadePartInfo">
            <summary>
            获得所有的自制件
            </summary>
            <returns>返回的查询结果集</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取自制件退货单信息
            </summary>
            <param name="returnBill">返回的自制件退货单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.GetBillView(System.String)">
            <summary>
            获取自制件退货单视图信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.AddBill(ServerModule.S_HomemadeRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加自制件退货单
            </summary>
            <param name="bill">添加的自制件退货单据信息</param>
            <param name="returnBill">返回更新后的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.UpdateBill(ServerModule.S_HomemadeRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改自制件退货单(只修改编制人涉及信息)
            </summary>
            <param name="bill">修改的自制件退货单据信息</param>
            <param name="returnBill">返回更新后的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除自制件退货单
            </summary>
            <param name="billNo">自制件退货单号</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除退货单号</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.ClearDate(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            清除隔离单数据
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            退货人提交单据(交给财务审批)
            </summary>
            <param name="billNo">自制件单据号</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.FinanceAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            财务审批单据
            </summary>
            <param name="billNo">自制件退货单据号</param>
            <param name="name">审批人姓名</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加自制件退货单</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.UpdateIsolationBillStatus(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            修改关联的隔离单的单据状态
            </summary>
            <param name="context">上下文数据集</param>
            <param name="billNo">自制件退货单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成自制件退货单
            </summary>
            <param name="billNo">自制件退货单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadeRejectBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadeRejectBill,ServerModule.S_HomemadeRejectList)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_HomemadeRejectBill,ServerModule.S_HomemadeRejectList)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.SetScrapFlag(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            修改报废单退货标志
            </summary>
            <param name="context">数据上下文</param>
            <param name="billID">自制件退货单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.HomemadeRejectBill.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">自制件退货单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回更新后重新查询的自制件退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.FrockProvingReport">
            <summary>
            工装验证报告管理类
            </summary>
        </member>
        <member name="F:ServerModule.FrockProvingReport.m_serverFrockStandingBook">
            <summary>
            工装台帐服务组件
            </summary>
        </member>
        <member name="F:ServerModule.FrockProvingReport.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="M:ServerModule.FrockProvingReport.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.GetBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据信息
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回工装检验报告视图信息</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.GetAttachedTable(System.String,System.String)">
            <summary>
            获得附属表的信息
            </summary>
            <param name="djh">单据号</param>
            <param name="attachedType">附属信息内容类型 （检验，验证）</param>
            <returns>返回附属表的数据集</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.GetBill(System.String)">
            <summary>
            获得一条记录的所有信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条工装检验报告的数据集</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.AddBill(ServerModule.S_FrockProvingReport,System.Data.DataTable,System.String@)">
            <summary>
            插入新的数据
            </summary>
            <param name="frockProvingReport">数据集</param>
            <param name="attachedTable">检验验证内容表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.UpdateAttached(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入工装检验与验证内容与实测数据
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="djh">单据号</param>
            <param name="attachedTable">检验与验证内容表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.UpdateOrdinaryInDepotBillStatus(ServerModule.DepotManagementDataContext,ServerModule.S_FrockProvingReport,System.String@)">
            <summary>
            更新普通入库单的单据状态
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="frockProving">工装验证报告单的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.UpdateFrockInDepotBillStatus(ServerModule.DepotManagementDataContext,ServerModule.S_FrockProvingReport,System.String@)">
            <summary>
            更新自制件工装报检的单据状态
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="frockProving">工装验证报告单的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.SaveInfo(ServerModule.S_FrockProvingReport,System.Data.DataTable,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="frockProvingReport">LINQ 数据集</param>
            <param name="attachedTable">检测信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            单据流程
            </summary>
            <param name="billNo">单据号</param>
            <param name="status">操作状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.ReturnAttached(ServerModule.DepotManagementDataContext,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            回退单据时对检验验证要求表进行处理
            </summary>
            <param name="ctx">LINQ</param>
            <param name="djh">单据号</param>
            <param name="billType">单据类型</param>
            <param name="operationFlag">处理方式 True 删除 False 更改</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.FrockProvingReport.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.Report_FindType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="F:ServerModule.Report_FindType.存储过程">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="F:ServerModule.Report_FindType.业务授权">
            <summary>
            业务授权
            </summary>
        </member>
        <member name="F:ServerModule.Report_FindType.视图">
            <summary>
            视图
            </summary>
        </member>
        <member name="T:ServerModule.Report">
            <summary>
            报表服务类
            </summary>
        </member>
        <member name="T:ServerModule.IReport">
            <summary>
            报表服务类接口
            </summary>
        </member>
        <member name="M:ServerModule.IReport.GetIntegrationReportList(System.String)">
            <summary>
            
            </summary>
            <param name="reportCode"></param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.IReport.QueryInfo(System.String,System.Data.DataTable,System.String@)">
            <summary>
            执行存储过程查询
            </summary>
            <param name="reportCode">报表编号</param>
            <param name="infoList">查询内容</param>
            <param name="error">错误信息</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IReport.GetFindInfo(System.String)">
            <summary>
            获得查询条件与内容
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IReport.GetNewReportCode(System.String)">
            <summary>
            获得新号码
            </summary>
            <param name="reportCode">报表编码</param>
            <returns>返回新的报表编码</returns>
        </member>
        <member name="M:ServerModule.IReport.DeleteReportInfo(System.String,System.String@)">
            <summary>
            删除报表信息
            </summary>
            <param name="reportCode">报表编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IReport.GetReportInfo(System.String)">
            <summary>
            获得报表信息
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>成功返回数据，失败返回Null</returns>
        </member>
        <member name="M:ServerModule.IReport.GetReportInfoList(System.String)">
            <summary>
            获得报表明细信息
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IReport.SaveReportInfo(ServerModule.BASE_IntegrationReport,System.Data.DataTable,System.String@)">
            <summary>
            保存报表设置信息
            </summary>
            <param name="integrationReport">报表数据集</param>
            <param name="reportInfoList">字段数据表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.IReport.ScrapReport(System.DateTime,System.DateTime)">
            <summary>
            报废单报表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IReport.GetReportTree(System.String)">
            <summary>
            获得树的表数据
            </summary>
            <param name="deptCode">部门编码</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IReport.GetBusinessSelect(GlobalObject.CE_BillTypeEnum)">
            <summary>
            获得业务报表列表
            </summary>
            <param name="billType">业务类型</param>
            <returns>返回列表</returns>
        </member>
        <member name="M:ServerModule.Report.GetFindInfo(System.String)">
            <summary>
            获得查询条件与内容
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.Report.CheckInfoIsRepeat(System.String)">
            <summary>
            检测是否有重复记录
            </summary>
            <param name="reportCode">报表编码</param>
            <returns>重复返回True，不重复返回False</returns>
        </member>
        <member name="M:ServerModule.Report.GetNewReportCode(System.String)">
            <summary>
            获得新号码
            </summary>
            <param name="reportCode">报表编码</param>
            <returns>返回新的报表编码</returns>
        </member>
        <member name="M:ServerModule.Report.ScrapReport(System.DateTime,System.DateTime)">
            <summary>
            报废单报表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.Report.GetReportTree(System.String)">
            <summary>
            获得树的表数据
            </summary>
            <param name="deptCode">部门编码</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.Report.QueryInfo(System.String,System.Data.DataTable,System.String@)">
            <summary>
            执行存储过程查询
            </summary>
            <param name="reportCode">报表编号</param>
            <param name="infoList">查询内容</param>
            <param name="error">错误信息</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.Report.GetReportInfo(System.String)">
            <summary>
            获得报表信息
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>成功返回数据，失败返回Null</returns>
        </member>
        <member name="M:ServerModule.Report.GetReportInfoList(System.String)">
            <summary>
            获得报表明细信息
            </summary>
            <param name="reportCode">报表编号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.Report.SaveReportInfo(ServerModule.BASE_IntegrationReport,System.Data.DataTable,System.String@)">
            <summary>
            保存报表设置信息
            </summary>
            <param name="integrationReport">报表数据集</param>
            <param name="reportInfoList">字段数据表</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.Report.SaveReportInfoList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            保存报表信息明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="reportCode">报表编码</param>
            <param name="reportInfoList">明细表信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True ,失败返回False</returns>
        </member>
        <member name="M:ServerModule.Report.DeleteReportInfo(System.String,System.String@)">
            <summary>
            删除报表信息
            </summary>
            <param name="reportCode">报表编号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:ServerModule.LogisticSafeStock">
            <summary>
            物流安全库存
            </summary>
        </member>
        <member name="T:ServerModule.ILogisticSafeStock">
            <summary>
            物流安全库存
            </summary>
        </member>
        <member name="M:ServerModule.ILogisticSafeStock.AddInfo(ServerModule.S_LogisticSafeStock,System.String@)">
            <summary>
            添加信息
            </summary>
            <param name="logistic">LINQ数据</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ILogisticSafeStock.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除信息
            </summary>
            <param name="deleteGoodsID">删除物品ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ILogisticSafeStock.GetInfo">
            <summary>
            获得所有信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.ILogisticSafeStock.UpdateInfo(System.Int32,ServerModule.S_LogisticSafeStock,System.String@)">
            <summary>
            更新信息
            </summary>
            <param name="updateGoodsID">旧物品ID</param>
            <param name="logistic">LINQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.LogisticSafeStock.GetInfo">
            <summary>
            获得所有信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.LogisticSafeStock.AddInfo(ServerModule.S_LogisticSafeStock,System.String@)">
            <summary>
            添加信息
            </summary>
            <param name="logistic">LINQ数据</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.LogisticSafeStock.UpdateInfo(System.Int32,ServerModule.S_LogisticSafeStock,System.String@)">
            <summary>
            更新信息
            </summary>
            <param name="updateGoodsID">旧物品ID</param>
            <param name="logistic">LINQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.LogisticSafeStock.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除信息
            </summary>
            <param name="deleteGoodsID">删除物品ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:ServerModule.StockLack">
            <summary>
            库房报缺类
            </summary>
        </member>
        <member name="M:ServerModule.StockLack.ClearTempTable">
            <summary>
            清空临时表
            </summary>
        </member>
        <member name="M:ServerModule.StockLack.AddTempTable(System.String,System.Decimal)">
            <summary>
            插入临时表
            </summary>
            <param name="code">产品型号</param>
            <param name="count">数量</param>
        </member>
        <member name="M:ServerModule.StockLack.GetBomTable(System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="cvtType">产品类型</param>
            <returns>返回table</returns>
        </member>
        <member name="M:ServerModule.StockLack.ReportWanting(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            报缺查询
            </summary>
            <param name="strat">开始日期字符串</param>
            <param name="end">结束日期字符串</param>
            <param name="storageID">库房ID</param>
            <param name="productName">产品名称</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的信息</returns>
        </member>
        <member name="M:ServerModule.StockLack.SetSingleBom(System.Collections.Generic.List{System.String})">
            <summary>
            获得单一的BOM清单信息
            </summary>
            <param name="listGoods">BOM物品信息列表</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.StockLack.OperationMain(GlobalObject.CE_OperatorMode,ServerModule.S_StockLackCustomTemplates,System.String@)">
            <summary>
            自定义模板操作模板
            </summary>
            <param name="mode">操作模式</param>
            <param name="main">LNQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True, 失败返回False</returns>
        </member>
        <member name="M:ServerModule.StockLack.OperationList(GlobalObject.CE_OperatorMode,ServerModule.S_StockLackCustomTemplatesList,System.String@)">
            <summary>
            操作自定义模板明细
            </summary>
            <param name="mode">操作模式</param>
            <param name="list">LNQ信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False </returns>
        </member>
        <member name="M:ServerModule.StockLack.GetCustomTemplatesMain">
            <summary>
            获得自定义模板信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.StockLack.GetCustomTemplatesList(System.Int32)">
            <summary>
            获得自定义模板明细信息
            </summary>
            <param name="listID">模板ID</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.SalesOrderStatus">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.等待审核">
            <summary>
            等待审核
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.等待评审">
            <summary>
            等待评审
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.等待确认评审">
            <summary>
            等待确认
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.等待评审结果">
            <summary>
            等待评审结果
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.等待确认生效">
            <summary>
            等待生效,自动生成出库单
            </summary>
        </member>
        <member name="F:ServerModule.SalesOrderStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.SafeStockServer">
            <summary>
            安全库存类
            </summary>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetStockCount(System.Int32)">
            <summary>
            获得某个物品的安全库存数
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetSafeStockCount(System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            根据总成台数生成物品的安全库存数
            </summary>
            <param name="code">图号型号</param>
            <param name="name">名称</param>
            <param name="liFanCount">力帆总成数量</param>
            <param name="liFan320Count">力帆320总成数量</param>
            <param name="zhongTaiCount">众泰总成数量</param>
            <param name="yeMaCount">野马总成数量</param>
            <param name="haiMaCount">海马总成数量</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetSafeStockCount(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            根据总成台数生成物品的安全库存数
            夏石友，2013-06-13 添加
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="dicNumberOfProduct">总成型号与数量构成的字典</param>
            <returns>返回安全库存数</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetAllInfo">
            <summary>
            获得全部信息
            </summary>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetMaxID">
            <summary>
            获得最大序号
            </summary>
            <returns>返回最大的序号</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.UpdateSafeStockInfo(System.Data.DataTable,System.String@)">
            <summary>
            更新安全库存信息
            </summary>
            <param name="dtInfo">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.GetSafeStockCountInfo(System.Data.DataTable)">
            <summary>
            由总成自动生成安全库存表
            2013-06-13 夏石友修改写法
            </summary>
            <param name="cvtList">CVT总成数据集</param>
            <returns>返回自动生成的数据集</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.UpdateInfo(ServerModule.S_SafeStock,System.Int32,System.String@)">
            <summary>
            更新信息
            </summary>
            <param name="safeStock">LNQ数据集</param>
            <param name="goodsID">物品ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.DeleteInfo(System.Int32,System.String@)">
            <summary>
            删除信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="error"></param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.AddInfo(ServerModule.S_SafeStock,System.String@)">
            <summary>
            添加信息
            </summary>
            <param name="safeStock">LNQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.SafeStockServer.OperationInfo(System.Data.DataTable,System.String@)">
            <summary>
            操作数据库
            </summary>
            <param name="safeList">新的安全库存的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新数据库成功返回True，更新失败返回False</returns>
        </member>
        <member name="T:ServerModule.FetchGoodsType">
            <summary>
            领料类型
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.零星领料">
            <summary>
            零星领料
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.整台领料">
            <summary>
            整台领料
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.整台领料不含后补充">
            <summary>
            整台领料
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.后补充">
            <summary>
            后补充
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.阀块领料">
            <summary>
            阀块领料
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.行星轮合件领料">
            <summary>
            行星轮合件领料
            </summary>
        </member>
        <member name="F:ServerModule.FetchGoodsType.油底壳领料">
            <summary>
            油底壳领料
            </summary>
        </member>
        <member name="T:ServerModule.MaterialRequisitionServer">
            <summary>
            领料单管理类
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionServer.m_serverFrockStandingBook">
            <summary>
            工装信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionServer.m_serverProductCode">
            <summary>
            箱体编码服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRequisitionServer.m_serverReturn">
            <summary>
            还货服务组件
            </summary>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.IsExistAssociatedBill(System.String)">
            <summary>
            检查是否存在填写了指定报废单号的单据
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.ContainAssociatedBill(System.String)">
            <summary>
            获取包含了指定关联单号的领料单
            </summary>
            <param name="associatedBillNo">关联单号</param>
            <returns>返回获取到的关联单据</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetBill(System.String)">
            <summary>
            获得单条领料单记录
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回单条领料单信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取领料单信息
            </summary>
            <param name="returnBill">领料单</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetBillView(System.String)">
            <summary>
            获取领料单视图信息
            </summary>
            <param name="billNo">领料单号</param>
            <returns>成功返回获取领料信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AddBill(ServerModule.S_MaterialRequisition,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加领料单
            </summary>
            <param name="bill">领料单单据信息</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.UpdateBill(ServerModule.S_MaterialRequisition,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料单
            </summary>
            <param name="bill">领料单单据信息</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.UpdateBill(System.String,System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改领料单
            </summary>
            <param name="billNo">单据编号</param>
            <param name="purposeCode">用途编号</param>
            <param name="remark">备注</param>
            <param name="returnBill">返回更新后的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除领料单
            </summary>
            <param name="billNo">领料单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料单号</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除领料单
            </summary>
            <param name="billNo">领料单号</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除领料单号</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            领料人提交单据(交给主管审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AuthorizeBill(System.String,System.String,ServerModule.MaterialRequisitionBillStatus@,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            主管审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">主管姓名</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="msg">返回更新后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.FinishFrock(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            针对于领料单的工装业务处理
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.UpdateIsolationManageBillStatus(ServerModule.DepotManagementDataContext,System.String,System.String,System.String@)">
            <summary>
            完成不合格品隔离单并且解封隔离物品
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">单据号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.IsExistsIsolationGoods(System.String)">
            <summary>
            检查物料中是否存在隔离物品
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回隔离的物品信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成领料单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的领料单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AddMultiBatchPartForBoard(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition)">
            <summary>
            看板发料添加多批次管理
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="fetchBill">领料单主表对象</param>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AutomaticCVTMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition)">
            <summary>
            对于整台份领料不足物料自动生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="materialRequisition">LINQ数据集领料单</param>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.FinishBill(ServerModule.DepotManagementDataContext,System.String,System.String,System.String@)">
            <summary>
            完成领料单(系统自动生成领料单时调用)
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加领料单</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="returnBill">返回回退后查询到的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetScrapGoods(System.String,System.String@)">
            <summary>
            查询未领用的报废物品
            </summary>
            <param name="loginName">登录人姓名</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询到的数据集</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.CheckGoodsVersion(System.String)">
            <summary>
            检查并导出版次号不符的物品
            </summary>
            <param name="billID">领料单号</param>
            <returns>返回检测出的结果集</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetManufacturingConsumeTable">
            <summary>
            获得部门每月领料上限的按台为单位的基数
            </summary>
            <returns>返回部门的领料上限数据集</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetDeptPickingToplimitTable">
            <summary>
            获得部门真实的每月领料上限
            </summary>
            <returns>返回部门真实的每月领料上限</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AuthorizBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            分管领导批准
            </summary>
            <param name="billID">单据号</param>
            <param name="returnBill">返回更新后所查询的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.TechnologistBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            针对于工装的领料的工艺人员批准
            </summary>
            <param name="billID">单据号</param>
            <param name="returnBill">返回更新后查询得到的结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.CheckIsOutToplimit(System.String)">
            <summary>
            检查领料单中物品是否超过限额
            </summary>
            <param name="billID">领料单号</param>
            <returns>TRUE 表示超过，FALSE表示否</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AutogenerationPickingToplimit(System.Decimal,System.String@)">
            <summary>
            自动生成消耗定额
            </summary>
            <param name="count">每月的台套数</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>生成成功返回True，生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.SaveDeptPickingToplimit(System.Data.DataTable,System.String@)">
            <summary>
            保存领料上限表
            </summary>
            <param name="insertData">被保存的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>保存成功返回True，保存失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AutoCreateBill(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRequisition,System.String@)">
            <summary>
            外部插入领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billInfo">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.InsertSysLog(ServerModule._Sys_Log,System.String@)">
            <summary>
            在系统日志中插入一条信息
            </summary>
            <param name="log">日志数据集</param>
            <param name="error">错误信息</param>
            <returns>插入成功返回True失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.UpdateBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改用途
            </summary>
            <param name="billNo">单据号</param>
            <param name="type">用途</param>
            <param name="returnBill">结果集</param>
            <param name="error">错误信息</param>
            <returns>插入成功返回True失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetWholeMachineRequistionDetail(System.String)">
            <summary>
            获得整台请领单明细列表
            </summary>
            <param name="billNo">整台请领单号</param>
            <returns>返回列表</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.GetSummarySheet(System.String,System.String)">
            <summary>
            获得领料汇总表
            </summary>
            <param name="yearAndMonth">年月</param>
            <param name="sheetName">表单名</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.MaterialRequisitionServer.AutoCreateBoardPicking(System.Collections.Generic.List{ServerModule.S_MaterialRequisitionGoods},System.String,System.String)">
            <summary>
            看板领料自动生成
            </summary>
            <param name="goodsInfo">物料信息</param>
            <param name="pickingType">领用类型</param>
            <param name="storageID">库房ID</param>
        </member>
        <member name="T:ServerModule.MusterAffirmBill">
            <summary>
            样品管理类
            </summary>
        </member>
        <member name="T:ServerModule.IMusterAffirmBill">
            <summary>
            样品管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.SaveInfo(ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetAllBill">
            <summary>
            获得全部单据信息
            </summary>
            <returns>返回查询到的单据信息</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetBill(System.String)">
            <summary>
            获得一条单据的全部信息
            </summary>
            <param name="djh">样品单单号</param>
            <returns>返回一条样品单记录</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.UpdateBill(System.String,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetMusterStockCount(System.Int32,System.String)">
            <summary>
            获得样品库中的数量
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回样品库的数量</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.ScarpBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetAllMusterStock(System.Boolean)">
            <summary>
            获得样品库库存表
            </summary>
            <param name="flag">是否显示库存为0 的物品(True 显示，False 不显示)</param>
            <returns>返回样品库库存表</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetUseCount(System.Int32,System.String)">
            <summary>
            获得耗用数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返货获得的耗用数</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.GetStockCount(System.Int32,System.String)">
            <summary>
            获得库存数量
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回获得的库存数量</returns>
        </member>
        <member name="M:ServerModule.IMusterAffirmBill.UpdateMusterStockInfo(ServerModule.S_MusterStock,System.String@)">
            <summary>
            修改样品库库存物品存放位置
            </summary>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False </returns>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_serverBom">
            <summary>
            BOM表信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_serverDepartment">
            <summary>
            部门信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_serverUnit">
            <summary>
            单位服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_serverAssginBillNo">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_serverBasicGoods">
            <summary>
            获取计划价格服务组件
            </summary>
        </member>
        <member name="F:ServerModule.MusterAffirmBill.m_barCodeServer">
            <summary>
            条形码
            </summary>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetAllBill">
            <summary>
            获得全部单据信息
            </summary>
            <returns>返回查询到的单据信息</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetBill(System.String)">
            <summary>
            获得一条单据的全部信息
            </summary>
            <param name="djh">样品单单号</param>
            <returns>返回一条样品单记录</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.CreateBill(ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            新建单据
            </summary>
            <param name="musterAffirmBill">样品单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns></returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.SaveInfo(ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            保存信息
            </summary>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>保存成功返回True，保存失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.UpdateBill(System.String,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.IsMaterialRequisitionCount(System.String)">
            <summary>
            判断批次号是否领过料
            </summary>
            <param name="batchNo">批次号</param>
            <returns>领过返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertHomemadePartInDepotBill(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            自制件入库单
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品确认单LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertCheckInDepotOutsourcingBill(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入委外报检入库表中
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertCheckInDepotBill(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入正常报检入库表中
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.ClearMusterStock(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String,System.String@)">
            <summary>
            清空样品库库存
            </summary>
            <param name="context">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入领料单
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertNewBarCode(ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入条形码
            </summary>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.InsertMusterStock(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入样品库表
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetUseCount(System.Int32,System.String,System.String)">
            <summary>
            获得样品耗用单Table
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回获得的样品耗用单信息</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetMusterStockCount(System.Int32,System.String)">
            <summary>
            获得样品库中的数量
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回样品库的数量</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.ScarpBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>报废成功返回True，报废失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">回退后的单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.DeleteUseBill(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String,System.String@)">
            <summary>
            删除耗用表中的数据
            </summary>
            <param name="context">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True,删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.DeleteMusterStock(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String,System.String@)">
            <summary>
            删除样品库库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetAllMusterStock(System.Boolean)">
            <summary>
            获得样品库库存表
            </summary>
            <param name="flag">是否显示库存为0 的物品(True 显示，False 不显示)</param>
            <returns>返回样品库库存表</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.CreatMusterUseBill(ServerModule.DepotManagementDataContext,ServerModule.S_MusterAffirmBill,System.String@)">
            <summary>
            插入报废数的耗用单
            </summary>
            <param name="context">数据上下文</param>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetUseCount(System.Int32,System.String)">
            <summary>
            获得耗用数
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返货获得的耗用数</returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.UpdateMusterStockInfo(ServerModule.S_MusterStock,System.String@)">
            <summary>
            修改样品库库存物品存放位置
            </summary>
            <param name="inMuster">样品单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False </returns>
        </member>
        <member name="M:ServerModule.MusterAffirmBill.GetStockCount(System.Int32,System.String)">
            <summary>
            获得库存数量
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回获得的库存数量</returns>
        </member>
        <member name="T:ServerModule.HomemadeBillStatus">
            <summary>
            自制件入库单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.等待质检">
            <summary>
            等待质检
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.等待入库">
            <summary>
            等待入库
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.已入库">
            <summary>
            已入库
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.撤消">
            <summary>
            撤消
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.回退_编制单据有误">
            <summary>
            回退_编制单据有误
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.回退_确认到货有误">
            <summary>
            回退_确认到货有误
            </summary>
        </member>
        <member name="F:ServerModule.HomemadeBillStatus.回退_质检信息有误">
            <summary>
            回退_质检信息有误
            </summary>
        </member>
        <member name="T:ServerModule.CommunicateReportBill">
            <summary>
            主机厂报表管理类
            </summary>
        </member>
        <member name="T:ServerModule.ICommunicateReportBill">
            <summary>
            主机厂报表管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.GetGoodsID(System.String,System.String,System.String)">
            <summary>
            根据主机厂的图号名称获得系统的物品ID
            </summary>
            <param name="communicateGoodsCode">主机厂图号</param>
            <param name="communicateGoodsName">主机厂名称</param>
            <param name="communicateCode">主机厂名称</param>
            <returns>返回0 为空 否则返回GOODSID</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.GetMatchingTable">
            <summary>
            获得主机厂与系统零件的匹配信息
            </summary>
            <returns>返回获取的数据</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.UpdateMathchingTable(System.String,ServerModule.YX_GoodsSystemMatchingCommunicate,System.String@)">
            <summary>
            对于零件匹配表的数据库操作
            </summary>
            <param name="operationType">操作类型  (添加,删除)</param>
            <param name="goodsMathcning">Linq系统与供应商物品匹配的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.GetSignTheBill(System.String,System.String)">
            <summary>
            查询挂账汇总表
            </summary>
            <param name="yearAndMonth">查询年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回查询到的挂账汇总表</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.UpdateSignTheBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            由EXCEL表导入且对挂账表填入实挂数量
            </summary>
            <param name="communicate">主机厂编码</param>
            <param name="excle">EXCLE表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>导入成功返回True，导入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.SetSingTheBillPrice(System.String,System.String)">
            <summary>
            确认挂账
            </summary>
            <param name="yearAndMonth">年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回确认挂账后的挂账表</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.GetCommunicateReturnedMoneyBill(System.String,System.String,System.String)">
            <summary>
            查询回款汇总表
            </summary>
            <param name="startNy">开始年月 格式为“YYYYMM”</param>
            <param name="endNy">结束年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回查询的回款汇总表</returns>
        </member>
        <member name="M:ServerModule.ICommunicateReportBill.SetReturnedMoney(System.String,System.String,System.Decimal,System.String@)">
            <summary>
            设置回款金额
            </summary>
            <param name="yearAndMonth">年月  格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <param name="returnMoney">回款金额</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>设置成功返回True，设置失败返回False</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.GetGoodsID(System.String,System.String,System.String)">
            <summary>
            根据主机厂的图号名称获得系统的物品ID
            </summary>
            <param name="communicateGoodsCode">主机厂图号</param>
            <param name="communicateGoodsName">主机厂名称</param>
            <param name="communicateCode">主机厂名称</param>
            <returns>返回0 为空 否则返回GOODSID</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.GetMatchingTable">
            <summary>
            获得主机厂与系统零件的匹配信息
            </summary>
            <returns>返回获取的数据</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.UpdateMathchingTable(System.String,ServerModule.YX_GoodsSystemMatchingCommunicate,System.String@)">
            <summary>
            对于零件匹配表的数据库操作
            </summary>
            <param name="operationType">操作类型 (添加,删除)</param>
            <param name="goodsMathcning">Linq系统与供应商物品匹配的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.GetSignTheBill(System.String,System.String)">
            <summary>
            查询挂账汇总表
            </summary>
            <param name="yearAndMonth">查询年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回查询到的挂账汇总表</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.GetCommunicateReturnedMoneyBill(System.String,System.String,System.String)">
            <summary>
            查询回款汇总表
            </summary>
            <param name="startNy">开始年月 格式为“YYYYMM”</param>
            <param name="endNy">结束年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回查询的回款汇总表</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.SetSingTheBillPrice(System.String,System.String)">
            <summary>
            确认挂账
            </summary>
            <param name="yearAndMonth">年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <returns>返回确认挂账后的挂账表</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.SetReturnedMoney(System.String,System.String,System.Decimal,System.String@)">
            <summary>
            设置回款金额
            </summary>
            <param name="yearAndMonth">年月  格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <param name="returnMoney">回款金额</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>设置成功返回True，设置失败返回False</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.UpdateSignTheBill(System.String,System.Data.DataTable,System.String@)">
            <summary>
            由EXCEL表导入且对挂账表填入实挂数量
            </summary>
            <param name="communicate">主机厂编码</param>
            <param name="excle">EXCLE表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>导入成功返回True，导入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CommunicateReportBill.GetCommunicateGoodsOperationPrice(System.String,System.String,System.Int32)">
            <summary>
            获得主机厂的物品的业务综合金额
            </summary>
            <param name="yearAndMonth">年月 格式为“YYYYMM”</param>
            <param name="communicate">主机厂编码</param>
            <param name="goodsID">物品ID</param>
            <returns>返回金额</returns>
        </member>
        <member name="T:ServerModule.Quarantine">
            <summary>
            产品隔离单管理类
            </summary>
        </member>
        <member name="M:ServerModule.Quarantine.GetAllBill(System.String,System.String,System.String,System.String@)">
            <summary>
            过滤查询
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">结束时间</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回表信息</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetBillID">
            <summary>
            获得单号
            </summary>
            <returns>返回获取的单号</returns>
        </member>
        <member name="M:ServerModule.Quarantine.DeleteBill(System.String,System.String@)">
            <summary>
            根据单据号删除(改变删除状态)
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:ServerModule.Quarantine.AddBill(ServerModule.S_QuarantineBill,System.String@)">
            <summary>
            添加主表信息
            </summary>
            <param name="quarantine">S_QuarantineBill对象</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.Quarantine.UpdateProductStockStatus(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            修改ProductStock表的状态
            </summary>
            <param name="stockCode">箱体编号</param>
            <param name="goodID">物品编号</param>
            <param name="flag">是否为正常状态 True 是 False 不是</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True</returns>
        </member>
        <member name="M:ServerModule.Quarantine.AuditingBill(System.String,System.String,System.String,System.String@)">
            <summary>
            仓管审核，修改主表状态
            </summary>
            <param name="billID">单据号</param>
            <param name="handle">是否处理标志 字符串</param>
            <param name="status">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetList(System.String,System.String@)">
            <summary>
            根据单据号查询明细
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回表数据</returns>
        </member>
        <member name="M:ServerModule.Quarantine.UpdateList(ServerModule.S_QuarantineList,System.String@)">
            <summary>
            修改明细
            </summary>
            <param name="quarantineList">产品明细对象</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetOperationStatus(System.String,System.String,System.String@)">
            <summary>
            通过单据号查到处理状态
            </summary>
            <param name="billID">单据号</param>
            <param name="code">箱体编号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.Quarantine.DeleteSellInList(System.String,System.String@)">
            <summary>
            删除单据明细
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回TRUE</returns>
        </member>
        <member name="M:ServerModule.Quarantine.AddList(System.Data.DataTable,System.String,System.String@)">
            <summary>
            单据明细的数据库操作
            </summary>
            <param name="listInfo">需要操作的数据集</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetProductStockInfo(System.String,System.String,System.String@)">
            <summary>
            查询入库商品信息
            </summary>
            <param name="goodsID">物品编号</param>
            <param name="storageID">库房ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetProductCodeInfo(System.String)">
            <summary>
            查找产品编号查找信息
            </summary>
            <param name="goodsID">产品编号</param>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetInsulateGoodsInfo">
            <summary>
            查找已经隔离了的产品
            </summary>
            <returns>返回满足条件的数据集</returns>
        </member>
        <member name="M:ServerModule.Quarantine.GetBillID(System.String)">
            <summary>
            通过箱体编号查看单据号
            </summary>
            <param name="stockCode">箱体编号</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.Quarantine.HandleBill(System.String,System.String,System.String,System.String@)">
            <summary>
            质管处理，修改表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="disposeName">处理人</param>
            <param name="dispose">处理方案</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>成功返回True</returns>
        </member>
        <member name="T:ServerModule.ProductPlan">
            <summary>
            生产计划管理类
            </summary>
        </member>
        <member name="F:ServerModule.ProductPlan.m_serverProductList">
            <summary>
            产品信息服务组件
            </summary>
        </member>
        <member name="M:ServerModule.ProductPlan.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.GetAllBill(System.String)">
            <summary>
            获得父表信息
            </summary>
            <param name="planType">计划类别</param>
            <returns>返回产品计划信息</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.GetList(System.String)">
            <summary>
            获得子表信息
            </summary>
            <param name="djh">计划单号</param>
            <returns>返回明细表信息</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.AddBill(ServerModule.S_ProductPlan,System.Data.DataTable,System.String@)">
            <summary>
            添加父表信息
            </summary>
            <param name="inProductPlan">生产计划信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.DeletePlanList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.AddPlanList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String,System.String@)">
            <summary>
            添加子表信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="planList">明细表信息</param>
            <param name="billNo">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">计划单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.IsRepeatPlanDate(System.DateTime,System.String)">
            <summary>
            检查计划日期是否重复
            </summary>
            <param name="newDateTime">被检测的日期</param>
            <param name="planType">单据类型</param>
            <returns>重复返回True，不重复返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.CheckDJH(System.String)">
            <summary>
            检查单据是否重复
            </summary>
            <param name="djh">单据号</param>
            <returns>不重复返回True，重复返回False</returns>
        </member>
        <member name="M:ServerModule.ProductPlan.UpdateBill(ServerModule.DepotManagementDataContext,ServerModule.S_ProductPlan,System.Data.DataTable,System.String@)">
            <summary>
            修改父表信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inPdPlan">生产计划信息</param>
            <param name="planList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="T:ServerModule.OrdinaryInDepotGoodsBill">
            <summary>
            普通入库单物品清单服务类
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotGoodsBill.m_serverGoodsShelfLife">
            <summary>
            物品保质期监控服务组件
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotGoodsBill.m_serverPersonnelInfo">
            <summary>
            人员服务组件
            </summary>
        </member>
        <member name="F:ServerModule.OrdinaryInDepotGoodsBill.m_serverBasicGoods">
            <summary>
            计划价格服务
            </summary>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.IsExist(System.Int32)">
            <summary>
            检查普通入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.GetGoodsViewInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.GetGoodsInfo(System.String)">
            <summary>
            获取指定单据物品信息
            </summary>
            <param name="billNo">单据编号</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.GetGoodsViewInfo(System.Int32)">
            <summary>
            获取包含指定物品编号的信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回获取到的物品信息</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.AddGoods(System.String,ServerModule.S_OrdinaryInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            添加普通入库单物品
            </summary>
            <param name="billNo">单据编号</param>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.GetNewBatchNo">
            <summary>
            获得普通入库的新批次号
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_OrdinaryInDepotBill,ServerModule.S_OrdinaryInDepotGoodsBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_OrdinaryInDepotBill,ServerModule.S_OrdinaryInDepotGoodsBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="item">明细信息</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.ClearNullValue(ServerModule.S_OrdinaryInDepotGoodsBill)">
            <summary>
            清除NULL值
            </summary>
            <param name="goods">物品信息</param>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.UpdateGoods(ServerModule.S_OrdinaryInDepotGoodsBill,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            更新普通入库单物品
            </summary>
            <param name="goods">物品信息</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.DeleteGoods(System.Collections.Generic.List{System.Int32},System.String@)">
            <summary>
            批量删除普通入库单物品
            </summary>
            <param name="lstID">物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.DeleteGoods(System.String,System.Linq.IQueryable{ServerModule.View_S_OrdinaryInDepotGoodsBill}@,System.String@)">
            <summary>
            删除指定单据的所有物品信息
            </summary>
            <param name="billNo">要删除的物品单据号</param>
            <param name="returnInfo">操作完毕后查询数据库的返回结果</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.OrdinaryInDepotGoodsBill.GetSumJE(System.String)">
            <summary>
            获得合计金额
            </summary>
            <param name="billID">单据号</param>
            <returns>获得合计的金额</returns>
        </member>
        <member name="T:ServerModule.InvoiceServer">
            <summary>
            发票管理类
            </summary>
        </member>
        <member name="F:ServerModule.InvoiceServer.m_basicGoodsServer">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="M:ServerModule.InvoiceServer.GetInvoiceInfo(System.DateTime,System.DateTime)">
            <summary>
            获取全部发票记录
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回查询到的发票记录表</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.GetInvoiceInfo(System.String)">
            <summary>
            获得发票数据集
            </summary>
            <param name="invoiceCode">发票号</param>
            <returns>返回查询到的发票信息</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.AddInvoiceInfo(System.Data.DataTable,System.String@)">
            <summary>
            添加发票记录
            </summary>
            <param name="invoiceTable">需要添加的发票信息数据</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.DeleteInvoiceInfo(System.String,System.String@)">
            <summary>
            删除发票记录
            </summary>
            <param name="invoiceCode">发票号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.UpdateInvoiceInfo(System.String,System.String,System.Int32,System.String,System.String,System.String@)">
            <summary>
            修改发票记录
            </summary>
            <param name="invoiceCode">新发票号</param>
            <param name="provide">供应商</param>
            <param name="invoiceType">发票类型 1:专用发票，0:非专用发票</param>
            <param name="oldCode">旧发票号</param>
            <param name="pzh">新凭证号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.GetBillInfo(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            获得对应的单据数据集
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="provider">供应商编码</param>
            <param name="orderNumber">订单号</param>
            <returns>返回获取对应的单据数据集</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.GetGoodsInfo(System.String)">
            <summary>
            获得对应的物品明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回对应的物品单据明细</returns>
        </member>
        <member name="M:ServerModule.InvoiceServer.UpdatePrice(System.Data.DataTable,System.String@)">
            <summary>
            更新出入库的金额
            </summary>
            <param name="invoiceTable">需要更新的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功True，更新失败False</returns>
        </member>
        <member name="T:ServerModule.CVTCustomerInformationServer">
            <summary>
            CVT客户信息服务类
            </summary>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.GetCVTCustomerInformation">
            <summary>
            获得CVT客户基础信息
            </summary>
            <returns>返回CVT客户基础信息</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.DeleteCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            删除数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">CVT客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.InsertCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            插入数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">要插入的CVT客户信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.UpdateCVTCustomerInformation(ServerModule.YX_CVTCustomerInformation,System.String@)">
            <summary>
            更改数据CVT客户基础信息
            </summary>
            <param name="cvtCustomer">CVT客户信息</param>
            <param name="error">c错误信息</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.BatchInsertCVTCustomerInformation(System.Data.DataTable,System.String@)">
            <summary>
            批量插入CVT客户基础信息
            </summary>
            <param name="cvtCustomerInfomation">CVT客户信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.GetCVTCustomerHistoryInfo(System.String)">
            <summary>
            根据车架号获得其历史信息
            </summary>
            <param name="vehicleShelfNumber">车架号</param>
            <returns>返回获得的信息</returns>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.BatchMatchingCVTNumber">
            <summary>
            批量自动匹配CVT编号
            </summary>
        </member>
        <member name="M:ServerModule.CVTCustomerInformationServer.InsertCustomerHistoryInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入客户信息历史记录，若更换的是CVT，则修改客户信息中对应的车架号的CVT编号
            </summary>
            <param name="serviceID">反馈单号</param>
            <param name="vehicleShelfNumber">车架号</param>
            <param name="cvtType">变速箱型号</param>
            <param name="carModel">车型</param>
            <param name="clientName">客户名称</param>
            <param name="dealerName">经销商名称</param>
            <param name="replaceAccessoryList">更换件列表</param>
            <param name="error">错误信息</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.CBOMServer">
            <summary>
            采购物料清单服务
            </summary>
        </member>
        <member name="M:ServerModule.CBOMServer.GetAllInfo">
            <summary>
            获得采购清单
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.CBOMServer.GetSynthesisInfo">
            <summary>
            获得零件综合信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.CBOMServer.OperatorInfo(GlobalObject.CE_OperatorMode,System.Int32,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            操作采购清单
            </summary>
            <param name="operatorMode">操作模式</param>
            <param name="goodsID">物品ID</param>
            <param name="safeStockCount">安全库存数</param>
            <param name="DicNumberOfProduct">基数</param>
        </member>
        <member name="M:ServerModule.CBOMServer.BatchInsertCGBom(System.Data.DataTable)">
            <summary>
            批量插入数据
            </summary>
            <param name="dtSource">数据源列表</param>
        </member>
        <member name="T:ServerModule.SummaryMode">
            <summary>
            汇总方式
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.日期">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.图号">
            <summary>
            图号
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.名称">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.供应商">
            <summary>
            供应商
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.用途">
            <summary>
            用途
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.库房">
            <summary>
            库房
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.材料类别">
            <summary>
            材料类别
            </summary>
        </member>
        <member name="F:ServerModule.SummaryMode.单据编号">
            <summary>
            单据编号
            </summary>
        </member>
        <member name="T:ServerModule.FinancingReportBasic">
            <summary>
            财务报表基础类
            </summary>
        </member>
        <member name="F:ServerModule.TCURepairInfoServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.GetAllData(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有返修信息
            </summary>
            <param name="result">结果集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.GetDataByBillNo(System.String)">
            <summary>
            通过单号获取一条信息
            </summary>
            <param name="billNo">单号</param>
            <returns>成功返回TCU_RepairInfo数据集，失败返回null</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.InsertData(ServerModule.TCU_RepairInfo,System.String@)">
            <summary>
            添加一条TCU返修信息
            </summary>
            <param name="repairInfo">TCU返修信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.UpdateData(ServerModule.TCU_RepairInfo,System.String@)">
            <summary>
            通过单号修改TCU返修信息(先删后增)
            </summary>
            <param name="repairInfo">TCU返修信息数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.DeleteData(System.String,System.String@)">
            <summary>
            通过单号删除TCU返修信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.ConfirmUpdateData(System.String,System.String@)">
            <summary>
            质管确认修改TCU返修信息
            </summary>
            <param name="billNo">单号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.TCURepairInfoServer.GetMaxBillNo">
            <summary>
            获得最大编号
            </summary>
            <returns>成功返回最大编号，失败返回null</returns>
        </member>
        <member name="P:ServerModule.TCURepairInfoServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:ServerModule.ProductLendReturnBillStatus">
            <summary>
            借贷单据状态
            </summary>
        </member>
        <member name="F:ServerModule.ProductLendReturnBillStatus.新建单据">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:ServerModule.ProductLendReturnBillStatus.等待审核">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:ServerModule.ProductLendReturnBillStatus.等待确认">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:ServerModule.ProductLendReturnBillStatus.单据已完成">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="T:ServerModule.ProdutLendReturnBusinessType">
            <summary>
            借贷业务状态
            </summary>
        </member>
        <member name="F:ServerModule.ProdutLendReturnBusinessType.借方">
            <summary>
            借方
            </summary>
        </member>
        <member name="F:ServerModule.ProdutLendReturnBusinessType.贷方">
            <summary>
            贷方
            </summary>
        </member>
        <member name="T:ServerModule.ProductLendReturnService">
            <summary>
            物品借贷服务
            </summary>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.GetRecordInfo">
            <summary>
            获得借贷信息
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.GetListRecordInfo">
            <summary>
            获得借贷账存信息列表
            </summary>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.GetListDetailInfo">
            <summary>
            获得借贷流水账信息列表
            </summary>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.GetStockSingleInfo(ServerModule.DepotManagementDataContext,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得单条借贷记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="DebtorCode">借方代码</param>
            <param name="CreditCode">贷方代码</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
            <returns>返回单条LNQ数据集</returns>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.GetStockSingleInfo(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得单条借贷记录
            </summary>
            <param name="DebtorCode">借方代码</param>
            <param name="CreditCode">贷方代码</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商</param>
            <returns>返回单条LNQ数据集</returns>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.OperationDetail(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendReturnDetail)">
            <summary>
            操作借贷明细账
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detail">借贷明细LINQ数据集</param>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.OperationRecord(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendRecord)">
            <summary>
            操作借货记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="record">LINQ数据集</param>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.OperationDetailRecord(ServerModule.DepotManagementDataContext,ServerModule.S_ProductLendReturnDetail)">
            <summary>
            操作明细与借贷记录
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="detail">明细信息</param>
        </member>
        <member name="M:ServerModule.ProductLendReturnService.QueryRunningAccount(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String@)">
            <summary>
            查询车间物品借贷流水账
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="wsName">车间代码</param>
            <param name="storage">库房代码</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="error">错误信息</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.ServerModuleFactory">
            <summary>
            管理类厂
            </summary>
        </member>
        <member name="F:ServerModule.ServerModuleFactory.m_hashTable">
            <summary>
            用于保证服务组件实例的唯一性
            </summary>
        </member>
        <member name="M:ServerModule.ServerModuleFactory.GetServerModule``1">
            <summary>
            获取服务组件
            </summary>
            <returns>返回组件接口</returns>
        </member>
        <member name="T:ServerModule.CheckOutInDepotServer">
            <summary>
            报检入库单管理类
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotServer.m_personnelInfoServer">
            <summary>
            人员信息服务
            </summary>
        </member>
        <member name="F:ServerModule.CheckOutInDepotServer.m_billUniqueID">
            <summary>
            单据唯一码
            </summary>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetNextBillNo(System.Int32)">
            <summary>
            获取新的入库单号
            </summary>
            <param name="checkOutGoodsType">报检物品类别</param>
            <returns>返回获取到的新的入库单号</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetAllBill">
            <summary>
            获取报检入库单信息
            </summary>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetBill(System.String,System.String,System.String)">
            <summary>
            获取指定物品的单据信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取到的单据信息</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetBillNo(System.Int32,System.String)">
            <summary>
            由物品ID，批次号获得报检入库单据号
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回单据号</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.IsExist(System.Int32)">
            <summary>
            检查报检入库单中是否存在此物品相关信息
            </summary>
            <param name="id">物品ID</param>
            <returns>存在返回true, 不存在返回false</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.AddBill(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            添加报检入库单
            </summary>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.UpdateBill(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            采购员更新报检入库单
            </summary>
            <param name="updateBill">单据信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.AffirmGoodsAmount(System.String,System.String,System.Int32,System.String,System.String@)">
            <summary>
            确认到货数
            </summary>
            <param name="billID">单据编号</param>
            <param name="confirmAmountSignatory">仓库收货员签名</param>
            <param name="goodsAmount">货物数量</param>
            <param name="billStatusInfo">单据状态信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.SubmitQualityInfo(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交质量信息
            </summary>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.SubmitReportInfo(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交检验报告
            </summary>
            <param name="qualityInfo">质量信息, 只取其中质量部分</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.InsertIntoMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill,System.String@,System.String@)">
            <summary>
            有检测废的物品直接生成领料单
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="inDepotInfo">报检单信息</param>
            <param name="mrBillNo">分配的领料单单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.SubmitInDepotInfo(System.String,ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            提交入库信息
            </summary>
            <param name="billID">单据编号</param>
            <param name="inDepotInfo">入库信息, 只取其中入库部分</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetWebListID(System.String)">
            <summary>
            获得WEB数据库的明细ID
            </summary>
            <param name="billID">单据号</param>
            <returns>成功则返回获取到的ID，失败则返回0</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.InsertWebData(ServerModule.S_CheckOutInDepotBill,System.String@)">
            <summary>
            插入WEB 数据库
            </summary>
            <param name="bill">单据信息</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.ReturnBill(System.String,System.String,System.String@)">
            <summary>
            回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="lldID">领料单单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除报检入库单
            </summary>
            <param name="billNo">入库单号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.RebackBill(System.String,System.String,System.Int32,System.String@)">
            <summary>
            逐级回退单据
            </summary>
            <param name="billID">单据号</param>
            <param name="rebackReason">回退原因</param>
            <param name="intStatusFlag">0：回退_质检电信息有误；1：回退_质检机信息有误</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CheckOutInDepotBill)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <returns>返回账务信息对象</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.ScrapBill(System.String,System.String@)">
            <summary>
            报废单据
            </summary>
            <param name="billID">要报废的单据编号</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.UpdateRejectMode(System.String,System.String,System.String@)">
            <summary>
            更新退货建议数据
            </summary>
            <param name="djh">报检单单号</param>
            <param name="rejectMode">退货建议</param>
            <param name="error">出错时返回错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetRejectMode(System.String)">
            <summary>
            获得退货建议方式
            </summary>
            <param name="djh">报检单单号</param>
            <returns>成功则返回获取到的退货建议，失败返回空串</returns>
        </member>
        <member name="M:ServerModule.CheckOutInDepotServer.GetBill(System.String)">
            <summary>
            获取报检单视图信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回一条报检单的单据信息</returns>
        </member>
        <member name="T:ServerModule.ProductDeliveryInspectionServer">
            <summary>
            CVT出厂检验记录管理类
            </summary>
        </member>
        <member name="F:ServerModule.ProductDeliveryInspectionServer.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetTechnicalRequirementsID(System.String,System.String)">
            <summary>
            获得明细项目ID
            </summary>
            <param name="name">明细项目名称</param>
            <param name="productType">产品类型</param>
            <returns>获取成功返回明细项目ID，获取失败返回0</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetTestItemNameID(System.String,System.String)">
            <summary>
            获得项目ID
            </summary>
            <param name="name">项目名称</param>
            <param name="productType">产品类型</param>
            <returns>获取成功返回项目ID，获取失败返回0</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetTechnicalRequirements(System.String,System.String)">
            <summary>
            获得明细项目集合
            </summary>
            <param name="name">项目名称</param>
            <param name="productType">产品型号</param>
            <returns>返回获取的明细项目集合</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetAllTechnical(System.String,System.String)">
            <summary>
            获得明细项目集合
            </summary>
            <param name="technicalName">明细项目名称</param>
            <param name="productType">产品类型</param>
            <returns>返回明细项目与主项目关联后的数据集合</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetEmptyTable(System.String)">
            <summary>
            显示空表格(2013-12-04之后的数据，邱瑶改)
            </summary>
            <param name="productType">产品型号</param>
            <returns>返回CVT出厂检验空表格</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetListInfo(System.String)">
            <summary>
            获得明细信息
            </summary>
            <param name="billID">检验记录表单号</param>
            <returns>返回CVT出厂检验记录表的明细信息</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetBill(System.String)">
            <summary>
            获得某一条BILL信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.DeleteCVTList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除明细信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="billID">检验记录表的单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.GetDeliveryInspection(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得CVT出厂检验记录
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="djzt">单据状态</param>
            <returns>返回CVT出厂检验记录集</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.FinalJudgeBill(ServerModule.P_DeliveryInspection,System.String@)">
            <summary>
            最终判定
            </summary>
            <param name="delivery">CVT检验报告信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True ，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.UpdateDeliveryInspection(ServerModule.P_DeliveryInspection,System.String@)">
            <summary>
            更新出厂检验记录
            </summary>
            <param name="delivery">出厂检验记录表信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.UpdateMarketingBill(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            更新营销入库单据状态
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="djh">营销入库单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.ManageDeliveryInspection(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            处理自动生成CVT出厂检验记录表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="djh">营销入库单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>自动生成成功返回True，自动生成失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.AddDeliveryInspection(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            添加CVT出厂检验记录
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="djh">营销入库单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.DeleteDeliveryInspection(System.String,System.String@)">
            <summary>
            删除所关联的所有CVT出厂检验记录
            </summary>
            <param name="djh">关联单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.DeleteDeliveryInspection(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除所关联的所有CVT出厂检验记录
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="djh">关联单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.IsExamine(System.String,System.String@)">
            <summary>
            检测此单据的单据状态是否为“已检验”
            </summary>
            <param name="billID">营销单据号</param>
            <param name="storageID">库房ID</param>
            <returns>已检验返回True，未检验返回False</returns>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.AddCVTFinalInspectionInfo(ServerModule.ZL_CVTFinalInspection)">
            <summary>
            添加CVT终检记录
            </summary>
            <param name="lnqFinalInfo">CVT终检信息</param>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.DeleteCVTFinalInspectionInfo(System.DateTime,System.DateTime,ServerModule.ZL_CVTFinalInspection)">
            <summary>
            删除CVT终检记录
            </summary>
            <param name="startTime">开始日期</param>
            <param name="endTime">结束日期</param>
            <param name="lnqFinalInfo">CVT终检信息</param>
        </member>
        <member name="M:ServerModule.ProductDeliveryInspectionServer.SelectFinalInspectionList(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            CVT终检信息记录查询
            </summary>
            <param name="startTime">开始日期</param>
            <param name="endTime">结束日期</param>
            <returns>返回Table</returns>
        </member>
        <member name="T:ServerModule.QualitySystemDatabase">
            <summary>
            质量数据库服务
            </summary>
        </member>
        <member name="T:ServerModule.IQualitySystemDatabase">
            <summary>
            质量数据库接口
            </summary>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.BatchInportInfo(System.Collections.Generic.List{ServerModule.ZL_Database_Record})">
            <summary>
            批量导入数据
            </summary>
            <param name="listRecord">数据集</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.DeleteInfo(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.DeleteFilesStruct(System.String)">
            <summary>
            删除文件结构
            </summary>
            <param name="guid">唯一编码</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.UpdateFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            更新一条文件信息
            </summary>
            <param name="fileStruct">文件信息数据集</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.InsertFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            插入一条文件信息
            </summary>
            <param name="fileStruct">文件信息数据集</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.GetFileStructInfo(System.String)">
            <summary>
            获得单条文件信息
            </summary>
            <param name="guid"> 唯一编码</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.GetAllFileStruct(System.String,System.String)">
            <summary>
            获得文件结构
            </summary>
            <param name="guid">GUID</param>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.EditFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            编辑文件结构信息
            </summary>
            <param name="fileStruct">LNQ文件结构信息集合</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.EditInfo(ServerModule.ZL_Database_Record)">
            <summary>
            编辑业务信息
            </summary>
            <param name="record">LNQ业务信息集合</param>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.GetListInfo(System.DateTime,System.DateTime)">
            <summary>
            获得业务信息列表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回LIST列表信息</returns>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.GetSettingInfo(System.String)">
            <summary>
            获得设置信息
            </summary>
            <param name="settingName">设置类型名称</param>
            <returns>返回List集合</returns>
        </member>
        <member name="M:ServerModule.IQualitySystemDatabase.GetSingleInfo(System.String)">
            <summary>
            获得单条业务信息
            </summary>
            <param name="billNo">业务编号</param>
            <returns>返回LNQ数据集</returns>
        </member>
        <member name="F:ServerModule.QualitySystemDatabase.m_serverFTP">
            <summary>
            FTP服务组件
            </summary>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetSettingInfo(System.String)">
            <summary>
            获得设置信息
            </summary>
            <param name="settingName">设置类型名称</param>
            <returns>返回List集合</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetSingleInfo(System.String)">
            <summary>
            获得单条业务信息
            </summary>
            <param name="billNo">业务编号</param>
            <returns>返回LNQ数据集</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetListInfo(System.DateTime,System.DateTime)">
            <summary>
            获得业务信息列表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回LIST列表信息</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetError">
            <summary>
            获得FTP错误信息
            </summary>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.BatchInportInfo(System.Collections.Generic.List{ServerModule.ZL_Database_Record})">
            <summary>
            批量导入数据
            </summary>
            <param name="listRecord">数据集</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.EditInfo(ServerModule.ZL_Database_Record)">
            <summary>
            编辑业务信息
            </summary>
            <param name="record">LNQ业务信息集合</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.DeleteInfo(System.String)">
            <summary>
            删除单据
            </summary>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.EditFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            编辑文件结构信息
            </summary>
            <param name="fileStruct">LNQ文件结构信息集合</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetAllFileStruct(System.String,System.String)">
            <summary>
            获得文件结构
            </summary>
            <param name="guid">GUID</param>
            <param name="billNo">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetFileStructInfo(System.String)">
            <summary>
            获得单条文件信息
            </summary>
            <param name="guid"> 唯一编码</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.InsertFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            插入一条文件信息
            </summary>
            <param name="fileStruct">文件信息数据集</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.UpdateFileStruct(ServerModule.ZL_Database_FileStruct)">
            <summary>
            更新一条文件信息
            </summary>
            <param name="fileStruct">文件信息数据集</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.DeleteFilesStruct(System.String)">
            <summary>
            删除文件结构
            </summary>
            <param name="guid">唯一编码</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.DeleteFileStruct(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除一条文件信息,并且删除文件记录信息、FTP文件实体
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="guid">唯一编码</param>
        </member>
        <member name="M:ServerModule.QualitySystemDatabase.GetBelongFiles(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获得所属文件唯一编码列表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="guid">唯一编码</param>
            <returns>返回唯一编码字符串列表</returns>
        </member>
        <member name="T:ServerModule.UnitServer">
            <summary>
            单位管理类
            </summary>
        </member>
        <member name="M:ServerModule.UnitServer.GetUnitName(System.Int32)">
            <summary>
            获得单位名称
            </summary>
            <param name="unitID">单位ID</param>
            <returns>单位名称</returns>
        </member>
        <member name="M:ServerModule.UnitServer.GetUnitInfo(System.Int32)">
            <summary>
            获取单位信息
            </summary>
            <param name="id">单位ID</param>
            <returns>成功返回获取到的单位信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.UnitServer.GetUnitInfo(System.String)">
            <summary>
            获取单位信息
            </summary>
            <param name="unit">单位ID</param>
            <returns>成功返回获取到的单位信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.UnitServer.GetAllUnit(System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            获取单位信息
            </summary>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取单位信息</returns>
        </member>
        <member name="M:ServerModule.UnitServer.AddUnit(System.String,System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            添加单位
            </summary>
            <param name="unit">单位</param>
            <param name="spec">单位规格</param>
            <param name="isDisable">停用</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加单位信息</returns>
        </member>
        <member name="M:ServerModule.UnitServer.UpdateUnit(System.Int32,System.String,System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            更新单位
            </summary>
            <param name="id">序号</param>
            <param name="unit">单位</param>
            <param name="spec">规格</param>
            <param name="isDisable">停用</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功更新单位信息</returns>
        </member>
        <member name="M:ServerModule.UnitServer.DeleteUnit(System.Int32,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            删除单位
            </summary>
            <param name="id">序号</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除单位信息</returns>
        </member>
        <member name="M:ServerModule.UnitServer.SetReturnError(System.Object,System.Linq.IQueryable{ServerModule.View_S_Unit}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnUnit">单位信息</param>
            <param name="error">返回的错误信息</param>
            <returns></returns>
        </member>
        <member name="T:ServerModule.StoreServer">
            <summary>
            库存管理类
            </summary>
        </member>
        <member name="F:ServerModule.StoreServer.m_barCodeServer">
            <summary>
            条形码服务
            </summary>
        </member>
        <member name="F:ServerModule.StoreServer.m_billTypeServer">
            <summary>
            单据类别服务
            </summary>
        </member>
        <member name="M:ServerModule.StoreServer.Test(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存数</returns>
        </member>
        <member name="M:ServerModule.StoreServer.IsBatchNoOfGoodsExist(System.Int32,System.String)">
            <summary>
            判断物品ID 的批次号是否存在
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>存在返回True，否则返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.IsGoodsInStock(System.Int32,System.String)">
            <summary>
            检测某物品是否存在于某库房
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>存在返回True，不存在返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsSumCount(ServerModule.DepotManagementDataContext,System.Int32,System.String)">
            <summary>
            获得某一个物品的库存汇总
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>库存总数量</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsSumCount(System.Int32,System.String)">
            <summary>
            获得某一个物品的库存汇总
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>库存总数量</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsNearestWarehousingPrice(ServerModule.DepotManagementDataContext,System.Int32,System.String)">
            <summary>
            根据物品ID，批次号获得此物品最近的入库单价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>最近入库单价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsNearestWarehousingPrice(System.Int32,System.String)">
            <summary>
            根据物品ID，批次号获得此物品最近的入库单价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>最近入库单价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStockInfo(System.Int32,System.String,System.Int32)">
            <summary>
            获得库存物品信息(不包括库存为0)
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="stroageID">库房ID</param>
            <param name="flag">显示方式</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStockInfoView(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存信息
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStockInfo(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID 若为0则表示所有</param>
            <param name="batchNo">批次号 若为"所有"则表示所有</param>
            <param name="provider">供应商编码 若为""则表示所有</param>
            <param name="storageID">库房ID 若为""则表示所有</param>
            <returns>返回物品库存数</returns>
        </member>
        <member name="M:ServerModule.StoreServer.ChangeStockStatus(ServerModule.DepotManagementDataContext,ServerModule.S_IsolationManageBill,System.Int32,System.String@)">
            <summary>
            由隔离单更改库存状态
            </summary>
            <param name="context">数据上下文</param>
            <param name="islation">隔离单单据信息</param>
            <param name="status">库存状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.ChangeStockCount(ServerModule.DepotManagementDataContext,ServerModule.S_IsolationManageBill,System.String@)">
            <summary>
            由隔离单改变库存数
            </summary>
            <param name="context">数据上下文</param>
            <param name="islation">隔离单单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>改变成功返回True，改变失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStockCount(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得物品库存
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="provider">供应商编码</param>
            <param name="storageID">库房ID</param>
            <returns>返回物品库存数量</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetFactUnitPrice(System.Int32,System.String,System.String,System.String)">
            <summary>
            获取实际单价
            </summary>
            <param name="GoodsID">物品ID</param>
            <param name="provider">供应商</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的实际单价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStockInfo(System.Int32,System.String)">
            <summary>
            获取物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回所查询到的库存视图信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStockInfo(System.Int32,System.String,System.String)">
            <summary>
            获取物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回所查询到的库存视图信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetProviderInfo(System.Int32)">
            <summary>
            获取库存中指定物品的供应商信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>成功返回获取到的供应商信息列表, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetAllStorePartInfo(System.String,System.Boolean,System.Data.DataTable@,System.String@)">
            <summary>
            获取所有仓库零件信息（供点击“图型/图号”按钮时进行查询用）
            </summary>
            <param name="depotType">仓库类型，取值为：零部件、产品、其他</param>
            <param name="groupbyBatchNo">是否要用批次分组</param>
            <param name="returnPartInfo">返回获取到的零件信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStockInfoOverLoad(ServerModule.DepotManagementDataContext,ServerModule.StoreQueryCondition)">
            <summary>
            查找指定的库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="queryInfo">查询条件</param>
            <returns>返回查找到的库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStockInfo(ServerModule.StoreQueryCondition)">
            <summary>
            查找指定的库存信息
            </summary>
            <param name="queryInfo">查询条件</param>
            <returns>返回查找到的库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStockInfo(ServerModule.DepotManagementDataContext,ServerModule.StoreQueryCondition)">
            <summary>
            查找指定的库存信息
            </summary>
            <param name="context">数据上下文</param>
            <param name="queryInfo">查询条件</param>
            <returns>返回查找到的库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStore(System.Int32)">
            <summary>
            根据物品ID获得某物品的所有库存信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回获得的库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStock(System.Int32)">
            <summary>
            获得某物品的当前所有库存
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回库存数量</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStore(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreNorml(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForSBW(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于三包外领料的物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForAssembly(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForAssembly(System.Int32,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的物品信息
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForJumbly(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅仅针对于整台份领料的混装物品信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForRepair(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅限于返修箱用的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreOnlyForAttachment(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的仅限于售后备件的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStoreMuster(System.String,System.String,System.String,System.String)">
            <summary>
            获取某货物的样品的信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsStore(System.String,System.String,System.String)">
            <summary>
            获取某货物的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的货物库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetSomeGoodsCodeStore(System.String,System.String,System.Data.DataTable@,System.String@)">
            <summary>
            获取某图号型号的所有库存信息
            </summary>
            <param name="goodsCode">图号型号</param>
            <param name="spec">规格</param>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取某图号型号的所有库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetNoZeroStore(System.Linq.IQueryable{ServerModule.View_S_Stock}@,System.String@)">
            <summary>
            获取非零库存信息
            </summary>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetAllStore(System.String,System.Boolean,System.Linq.IQueryable{ServerModule.View_S_Stock}@,System.String@)">
            <summary>
            获取库存信息
            </summary>
            <param name="findCondition">查找条件</param>
            <param name="sequence">排序,True为升序,False为降序</param>
            <param name="returnStock">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取库存信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetOrderFormGoodsStockInfo(System.String,System.String)">
            <summary>
            获取指定订单物品库存信息
            </summary>
            <param name="orderFormNumber">订单号</param>
            <param name="storageID">库房ID</param>
            <returns>返回获取到的信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.SetReturnError(System.Object,System.Linq.IQueryable{ServerModule.View_S_Stock}@,System.String@)">
            <summary>
            设置出错返回值
            </summary>
            <param name="err">传入的错误信息</param>
            <param name="returnStock">库存信息</param>
            <param name="error">返回的错误信息</param>
            <returns>返回出错信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.UpdateStore(ServerModule.S_Stock,System.String@)">
            <summary>
            更新库存信息(仓库直接更新)
            </summary>
            <param name="stockInfo">库存信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.StoreServer.UpdateStore(ServerModule.DepotManagementDataContext,System.Int32,System.Nullable{System.Decimal})">
            <summary>
            更新库存数量(在现有库存的基础上更新)
            </summary>
            <param name="dataContxt">数据库上下文</param>
            <param name="stockInfoID">库存表ID</param>
            <param name="count">更新的物品数量</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.StoreServer.UpdateAging(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,System.Boolean)">
            <summary>
            单独更改账龄
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="stockInfo">库存信息</param>
            <param name="autoSubmitToDatabase">是否直接提交数据库</param>
        </member>
        <member name="M:ServerModule.StoreServer.InStore(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            入库业务库房操作
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="stockInfo">库存信息对象</param>
            <param name="operationType">业务类型</param>
        </member>
        <member name="M:ServerModule.StoreServer.OutStore(ServerModule.DepotManagementDataContext,ServerModule.S_Stock,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            出库业务库房操作
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="stockInfo">库存信息对象</param>
            <param name="operationType">业务类型</param>
        </member>
        <member name="M:ServerModule.StoreServer.DeleteStore(System.Int32,System.String@)">
            <summary>
            删除库存记录
            </summary>
            <param name="id">要删除的记录ID</param>
            <param name="error">返回的错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStoreStatus">
            <summary>
            获取库存物品状态表信息
            </summary>
            <returns>获取到的信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetAllStore(System.Data.DataTable@,System.String@)">
            <summary>
            查询全部货物库存
            </summary>
            <param name="table">查询到的库存信息表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.StoreServer.Clone(ServerModule.S_Stock)">
            <summary>
            克隆库存对象
            </summary>
            <param name="stockInfo">要克隆的对象</param>
            <returns>克隆后的新对象</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetDepotForPersonnel(System.String)">
            <summary>
            获取用户管辖仓库的信息
            </summary>
            <param name="workCode">工号</param>
            <returns>返回获取到的仓库记录</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsAveragePrice(System.Int32,System.String)">
            <summary>
            获取库存平均价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回物品的平均价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsAveragePrice(ServerModule.DepotManagementDataContext,System.Int32,System.String)">
            <summary>
            获取库存平均价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <returns>返回物品的平均价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetStockAveragePrice(System.Boolean,System.String)">
            <summary>
            获得库存物品实际平均价
            </summary>
            <param name="flag">True为View_S_Stock； False为View_S_InOutSaveStock </param>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回获取的库存物品平均价信息</returns>
        </member>
        <member name="M:ServerModule.StoreServer.ChangeAveragePrice(System.Int32,System.Decimal,System.Boolean,System.String,System.String@)">
            <summary>
            更改库存单价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="price">金额</param>
            <param name="flag">True为View_S_Stock； False为View_S_InOutSaveStock</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.OperationYXAfterService(ServerModule.DepotManagementDataContext,ServerModule.YX_AfterServiceStock,System.String@)">
            <summary>
            操作营销售后已返修待返修库存数量
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="afterServiceStock">LINQ数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsUnitPrice(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String)">
            <summary>
            获得物品单价
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.GetGoodsUnitPrice(System.Int32,System.String,System.String)">
            <summary>
            获得物品单价
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="M:ServerModule.StoreServer.IsAllowInStore(ServerModule.DepotManagementDataContext,System.Int32,System.String,System.String)">
            <summary>
            是否允许入库
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="goodsID">物品ID</param>
            <param name="batchNo">批次号</param>
            <param name="storageID">库房ID</param>
        </member>
        <member name="M:ServerModule.StoreServer.Operation_MES_InProduction(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            操作MES系统车间在产
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="T:ServerModule.StoreageCheck">
            <summary>
            库房盘点单管理类
            </summary>
        </member>
        <member name="F:ServerModule.StoreageCheck.m_barCodeServer">
            <summary>
            条形码服务
            </summary>
        </member>
        <member name="F:ServerModule.StoreageCheck.m_serverBom">
            <summary>
            BOM表信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.StoreageCheck.m_serverBasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.StoreageCheck.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.StoreageCheck.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.IsRepeat(System.String,System.String)">
            <summary>
            是否重复建单
            </summary>
            <param name="storageID">库房名称</param>
            <param name="billNo">单据号</param>
            <returns>重复返回 True，不重复返回 False</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetAllBill">
            <summary>
            获得主表信息
            </summary>
            <returns>返回获取的主表信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetBill(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获得单条主表信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="djh">单据号</param>
            <returns>返回获取的单挑主表信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetBill(System.String)">
            <summary>
            获得单条主表信息
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获取的单挑主表信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetList(System.String,System.Data.DataTable)">
            <summary>
            获得明细表信息
            </summary>
            <param name="djh">单据号</param>
            <param name="depotTable">材料类别列表</param>
            <returns>返回获取的明细表信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetList(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            获得物品明细信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
            <returns>返回获取的物品明细信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.GetList(System.String)">
            <summary>
            获得物品明细信息
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回获取的物品明细信息</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="djh">单据号</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.CreateMaterialReturnedInTheDepot(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            自动生成领料退库单
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="djh">单据号</param>
        </member>
        <member name="M:ServerModule.StoreageCheck.CreateMaterialRequisition(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            自动生成领料单
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="djh">单据号</param>
        </member>
        <member name="M:ServerModule.StoreageCheck.AddBill(ServerModule.S_StorageCheck,System.Data.DataTable,System.String@)">
            <summary>
            添加主表信息
            </summary>
            <param name="inCheck">盘点单信息</param>
            <param name="checkList">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.AddListDate(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            添加明细信息
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="djh">单据号</param>
            <param name="checkList">单据明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.StoreageCheck.DeleteListDate(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除明细信息
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="T:ServerModule.ScrapGoodsServer">
            <summary>
            报废单物品信息服务
            </summary>
        </member>
        <member name="F:ServerModule.ScrapGoodsServer.m_serverProductCode">
            <summary>
            箱体编码服务组件
            </summary>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.IsInfoAccordance(System.String,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            检测是否与之前的数据一致
            </summary>
            <param name="djh">单据号</param>
            <param name="lstGoods">要检查的数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>True 一致 False 不一致</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.IsExist(System.String)">
            <summary>
            检查是否存在某单据物品清单
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.GetGoods(System.String)">
            <summary>
            获取指定报废单的物品信息
            </summary>
            <param name="billNo">报废单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.GetGoodsByGroup(System.String)">
            <summary>
            获取指定报废单的物品分组信息
            </summary>
            <param name="billNo">报废单号</param>
            <returns>返回获取的物品信息</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.SaveGoods(System.String,ServerModule.S_ScrapBill,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            保存单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="bill">要保存的单据对象</param>
            <param name="goodsList">要保存的报废物品清单</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.AddGoods(ServerModule.S_ScrapGoods,System.String@)">
            <summary>
            添加物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.AddGoods(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{ServerModule.View_S_ScrapGoods})">
            <summary>
            批量添加物品
            </summary>
            <param name="dataContxt">LINQ 数据上下文</param>
            <param name="lstGoods">要添加的物品信息列表</param>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.UpdateGoods(System.Collections.Generic.List{ServerModule.View_S_ScrapGoods},System.String@)">
            <summary>
            批量更新工时
            </summary>
            <param name="lstGoods">要更新的物品信息列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.DeleteGoods(System.Collections.Generic.List{System.Int64},System.String@)">
            <summary>
            删除物品信息
            </summary>
            <param name="id">要删除的物品ID列表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.DeleteGoods(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            删除某报废单下的所有物品信息
            </summary>
            <param name="dataContxt">LINQ 数据上下文</param>
            <param name="billNo">报废单号</param>
        </member>
        <member name="M:ServerModule.ScrapGoodsServer.UpdateGoods(ServerModule.S_ScrapGoods,System.String@)">
            <summary>
            更新物品信息
            </summary>
            <param name="goods">物品信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回操作是否成功的标志</returns>
        </member>
        <member name="T:ServerModule.ScrapGoodsServer.GoodsComparer">
            <summary>
            物品比较器
            </summary>
        </member>
        <member name="T:ServerModule.PurcharsingPlan">
            <summary>
            采购计划管理类
            </summary>
        </member>
        <member name="F:ServerModule.PurcharsingPlan.m_serverGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.PurcharsingPlan.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.RecordMissingParts(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            记录缺件
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.DeleteProcurementMath(System.Int32,System.String@)">
            <summary>
            删除公式
            </summary>
            <param name="mathID">公式ID</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返货False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.SaveProcurementMath(ServerModule.CG_ProcurementMath,System.String@)">
            <summary>
            保存计算公式
            </summary>
            <param name="procurementMath">新公式数据</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.OperatorProcuremnetPlanFormla(GlobalObject.CE_OperatorMode,ServerModule.CG_ProcurementPlan,ServerModule.CG_ProcurementMath,System.String@)">
            <summary>
            操作采购计划计算公式
            </summary>
            <param name="mode">操作方式</param>
            <param name="model">LINQ实体集</param>
            <param name="mathModel">LINQ实体集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetProcurementMath">
            <summary>
            获得计算公式数据
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetProcurementPlanView(System.String)">
            <summary>
            获得采购计划计算公式
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetProcurementPlanView">
            <summary>
            获得采购计划计算公式
            </summary>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetMaxProcurementStep">
            <summary>
            获得最大操作步骤数
            </summary>
            <returns>返回Int</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetBill(System.String)">
            <summary>
            获得主表数据集
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回主表信息</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetList(System.String)">
            <summary>
            返回明细数据
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回明细信息</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetNewList(System.String,System.String@)">
            <summary>
            获得最新的记录集
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">错误信息</param>
            <returns>返回最新的查询记录集</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetOrderGoodsPrice(System.Data.DataTable)">
            <summary>
            获取订货金额
            </summary>
            <param name="messageTable">需要获取订货金额的数据集</param>
            <returns>返回已获取到订货金额的数据集</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetOrderGoodsCount(System.Data.DataTable)">
            <summary>
            计算订货数
            </summary>
            <param name="messageTable">需要获取订货数的数据集</param>
            <returns>返回已获取到订货数的数据集</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.AddAllBill(System.Data.DataTable,System.String,System.String@)">
            <summary>
            添加所有信息
            </summary>
            <param name="messageList">需要添加的信息</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.UpdateBill(System.Data.DataTable,System.String,System.String@)">
            <summary>
            更新子父表信息
            </summary>
            <param name="messageList">需要更新的数据信息</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.AddBill(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            添加主表数据
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="yearAndMonth">年月</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.AddList(ServerModule.DepotManagementDataContext,System.Data.DataTable,System.String,System.String@)">
            <summary>
            添加子表数据
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="messageList">需要添加的数据集</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>添加成功返回True，添加失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.DeleteList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除子表
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.UpdateBill(System.String,System.String,System.String@)">
            <summary>
            更新主表单据状态
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="djzt">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更新成功返回True，更新失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetMaxBill(System.String)">
            <summary>
            获取最新一条的营销计划的单据号
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <returns>返回营销计划的单据号</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetMarketingPlanAndProductPlan(System.String,System.Data.DataTable@,System.Data.DataTable@)">
            <summary>
            获得生产计划单据列表与营销要货计划单据列表
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="marketingPlan">返回的营销计划数据集</param>
            <param name="productPlan">返回的生产计划数据集</param>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.AffrimBill(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            对营销计划，生产计划的单据状态进行更改
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.InsertWebOrderFormBill(System.String,System.String@)">
            <summary>
            插入网络订单
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.InsertList(System.String,System.Int32,System.Decimal,System.String,System.String,System.Decimal,System.String@)">
            <summary>
            插入明细
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="goodsID">物品ID</param>
            <param name="orderFormCount">订单数量</param>
            <param name="provider">供应商</param>
            <param name="bargainNumber">合同号</param>
            <param name="stockCount">库存数量</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.InsertBill(System.String,System.String@)">
            <summary>
            插入主表
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetLeast(System.Int32,System.String)">
            <summary>
            获得最小采购量，最小采购量，采购份额的数据表
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="provider">供应商</param>
            <returns>返货获得的数据集</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetGoodsLostTable(System.String,System.String@)">
            <summary>
            取出报缺数据
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获得的数据集</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.IsFinish(System.String,System.String@)">
            <summary>
            检查单据是否已完成
            </summary>
            <param name="yearAndMonth">年月字符串</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>单据未完成返回True，单据已完成返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.IsQualified(System.String,System.String@)">
            <summary>
            检查是否具备生成采购计划的条件
            </summary>
            <param name="yearAndMonth">年月</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>都具备条件返回TRUE，返回FALSE不具备条件</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.IsAllowCreate(System.DateTime,System.DateTime,System.String)">
            <summary>
            是否允许创建采购计划
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="nY">年月</param>
            <returns>允许返回True ,不允许返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.MathTable(System.Data.DataTable@,System.String@)">
            <summary>
            计算数据集
            </summary>
            <param name="mathTable">数据集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetDataValue(System.Int32,System.String)">
            <summary>
            获得数据库数据
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="dataColumn">数据列名</param>
            <returns>返回object</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetValue(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.String@,System.Data.DataTable)">
            <summary>
            处理数据
            </summary>
            <param name="dic">数据字典</param>
            <param name="mathFormunla">计算公式</param>
            <param name="dtTemp">数据集</param>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.GetMathSteps">
            <summary>
            获得计算步骤
            </summary>
            <returns>返回计算步骤TABLE</returns>
        </member>
        <member name="M:ServerModule.PurcharsingPlan.OperatorMathSteps(ServerModule.CG_ProcurementSteps,GlobalObject.CE_OperatorMode,System.String@)">
            <summary>
            操作采购计划的计算步骤
            </summary>
            <param name="procurementSteps">新数据</param>
            <param name="mode">操作模式</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="T:ServerModule.Cannibalize">
            <summary>
            库房调拨管理类
            </summary>
        </member>
        <member name="F:ServerModule.Cannibalize.m_serverStore">
            <summary>
            库存信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.Cannibalize.m_serverBasincGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="M:ServerModule.Cannibalize.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.GetAllData(System.String,System.String,System.String,System.String@)">
            <summary>
            获取全部信息
            </summary>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <param name="djzt">单据状态("全  部"或者其他状态)</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回查询得到的信息</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.DeleteBill(System.Int32)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据ID</param>
        </member>
        <member name="M:ServerModule.Cannibalize.DeleteList(ServerModule.DepotManagementDataContext,System.Int32)">
            <summary>
            删除单据明细
            </summary>
            <param name="dataContxt">数据上下文</param>
            <param name="djID">单据ID</param>
        </member>
        <member name="M:ServerModule.Cannibalize.AuditingBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（审核）
            </summary>
            <param name="djID">单据ID</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.QualityBill(System.Int32,System.String,System.String@)">
            <summary>
            变更单据状态（检测）
            </summary>
            <param name="djID">单据ID</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.CheckBill(System.String,System.String,System.String@)">
            <summary>
            编辑检验状态
            </summary>
            <param name="djh">单据号</param>
            <param name="remark">备注</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>编辑成功返回True，编辑失败返回False</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.GetBill(System.Int32)">
            <summary>
            获得某一个调拨单单据信息
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回一条调拨单单据信息</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.GetListInfo(System.Int32)">
            <summary>
            获得单据明细
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回一张单据的所有明细信息</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.GetList(System.Int32)">
            <summary>
            获得单据明细
            </summary>
            <param name="djID">单据ID</param>
            <returns>返回一张单据的所有明细信息</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.SaveBill(System.Data.DataTable,ServerModule.S_CannibalizeBill)">
            <summary>
            保存单据数据(如果单据信息ID为0则添加数据，否则更新数据)
            </summary>
            <param name="billList">单据明细</param>
            <param name="billInfo">单据信息</param>
        </member>
        <member name="M:ServerModule.Cannibalize.SaveBillList(ServerModule.DepotManagementDataContext,System.Collections.Generic.List{ServerModule.S_CannibalizeList},System.Int32,System.String)">
            <summary>
            保存单据明细信息
            </summary>
            <param name="dataContxt">LINQ数据上下文</param>
            <param name="lstDetail">添加的表</param>
            <param name="djID">添加的行</param>
            <param name="billNo">单据号</param>
        </member>
        <member name="M:ServerModule.Cannibalize.GetDJID">
            <summary>
            获得最大的单据号
            </summary>
            <returns>返回单据ID</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.AffirmBill(System.Int32,System.String@)">
            <summary>
            仓管确认
            </summary>
            <param name="djID">单据ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>确认成功返回True，确认失败返回False</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_CannibalizeBill,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
            <param name="operationType">操作类型</param>
        </member>
        <member name="M:ServerModule.Cannibalize.AssignStockInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CannibalizeBill,ServerModule.S_CannibalizeList,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            赋值库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billInfo">单据信息</param>
            <param name="listSingle">明细信息</param>
            <param name="operationType">操作类型</param>
            <returns>返回库存信息对象</returns>
        </member>
        <member name="M:ServerModule.Cannibalize.AssignDetailInfo(ServerModule.DepotManagementDataContext,ServerModule.S_CannibalizeBill,ServerModule.S_CannibalizeList,GlobalObject.CE_SubsidiaryOperationType)">
            <summary>
            赋值账务信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billInfo">单据信息</param>
            <param name="listSingle">明细信息</param>
            <param name="operationType">操作类型</param>
            <returns>返回账务信息</returns>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillServer.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillServer.m_queryResultFilter">
            <summary>
            查询结果过滤器
            </summary>
        </member>
        <member name="F:ServerModule.MinorPurchaseBillServer.m_personnerServer">
            <summary>
            人员档案服务组件
            </summary>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetBargainRelate(System.DateTime,System.DateTime)">
            <summary>
            获得引用的合同信息
            </summary>
            <param name="startDate">开始时间</param>
            <param name="endDate">结束时间</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetAllBillInfo(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获得单据列表
            </summary>
            <param name="returnInfo">零星采购信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作是否成功的标志</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetBillInfo(System.String)">
            <summary>
            获得单条信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回LINQ数据集</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetListInfo(System.String)">
            <summary>
            获得明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetFinishListInfo(System.String)">
            <summary>
            获得已到货的明细信息
            </summary>
            <param name="billID">单据号</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.DeleteList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.DeleteInfo(System.String,System.String@)">
            <summary>
            删除零星采购单
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.InsertList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            插入明细
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="billNo">单据号</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetNextBillID">
            <summary>
            获取新的单据号
            </summary>
            <returns>成功返回单号，失败抛出异常</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.InsertBill(ServerModule.B_MinorPurchaseBill,System.Data.DataTable,System.String@)">
            <summary>
            提交申请
            </summary>
            <param name="minorBill">单据信息数据集</param>
            <param name="listInfo">明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetSumPrice(System.String)">
            <summary>
            获得合计金额
            </summary>
            <param name="billNo">单据号</param>
            <returns>返回金额</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.OperationInfo(ServerModule.B_MinorPurchaseBill,System.Data.DataTable,System.String@)">
            <summary>
            操作业务
            </summary>
            <param name="minorBill">单据信息数据集</param>
            <param name="listInfo">单据明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.UpdateMinorPurchaseBill(System.String,System.String,System.String@)">
            <summary>
            在审批通过后，采购部文员分配采购工程师
            </summary>
            <param name="billNo">单据号</param>
            <param name="workID">采购工程师工号</param>
            <param name="error">错误信息</param>
            <returns>成功返回true失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.ReturnBill(System.String,System.String,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="strDJH">单据号</param>
            <param name="strBillStatus">单据状态</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="strRebackReason">回退原因</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetGoodsStock(System.Int32)">
            <summary>
            通过物品ID获得物品库存信息
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回库存信息</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetMinorPurchaseChangeBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得时间范围内的采购变更处置单的所有信息
            </summary>
            <param name="starTime">起始日期</param>
            <param name="endTime">结束日期</param>
            <param name="status">单据状态</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.InsertChangeBill(ServerModule.B_MinorPurchaseChangeBill,System.String@)">
            <summary>
            新增采购变更处置单
            </summary>
            <param name="changBill">采购变更处置信息</param>
            <param name="error">错误信息</param>
            <returns>新增成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.UpdateChangeBill(ServerModule.B_MinorPurchaseChangeBill,System.String@)">
            <summary>
            修改采购变更处置单
            </summary>
            <param name="changBill">采购变更处置信息</param>
            <param name="error">错误信息</param>
            <returns>新增成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.DeleteChangeBill(System.Int32,System.String@)">
            <summary>
            删除采购变更处置单
            </summary>
            <param name="id">编号</param>
            <param name="error">错误信息</param>
            <returns>删除成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.DeleteChangeBill(System.String,System.String@)">
            <summary>
            删除采购变更处置单
            </summary>
            <param name="associateBillNo">关联单号</param>
            <param name="error">错误信息</param>
            <returns>删除成功返回true，失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.IsFinishMinorPur(System.String)">
            <summary>
            通过关联号查询变更单是否走完
            </summary>
            <param name="associateBillNo">关联单号</param>
            <returns>完成返回true，未完成返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetStatisticsTable(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得采购申请单的统计报表
            </summary>
            <param name="startYear">查询起始日期的年</param>
            <param name="startMonth">查询起始日期的月</param>
            <param name="endYear">查询截止日期的年</param>
            <param name="endMonth">查询截止日期的月</param>
            <param name="dept">需要查询的部门</param>
            <returns>返回统计报表</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.UpdatePrintStatus(System.String,System.String@)">
            <summary>
            修改单据中已打印的状态
            </summary>
            <param name="billNo">单据号</param>
            <param name="error">错误信息</param>
            <returns>修改成功返回true失败返回false</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetListSingle(System.String,System.String,System.String,System.String)">
            <summary>
            获得明细单条记录
            </summary>
            <param name="billNo">单据号</param>
            <param name="goodsCode">图号型号</param>
            <param name="goodsName">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回单条LNQ记录</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetPurposeNameByCode(System.String)">
            <summary>
            通过用途编号获得用途名称
            </summary>
            <param name="purposeCode">用途编号</param>
            <returns>成功返回用途名称，失败返回Null</returns>
        </member>
        <member name="M:ServerModule.MinorPurchaseBillServer.GetPart(System.Int32,System.String)">
            <summary>
            同一零件近期是否购买过
            </summary>
            <param name="goodsID">零件ID</param>
            <param name="billNo">单据号</param>
            <returns>返回数据集</returns>
        </member>
        <member name="P:ServerModule.MinorPurchaseBillServer.QueryResultFilter">
            <summary>
            获取或设置查询结果过滤器
            </summary>
        </member>
        <member name="T:ServerModule.TechnologyChange">
            <summary>
            技术变更单管理类
            </summary>
        </member>
        <member name="M:ServerModule.TechnologyChange.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.GetBill(System.String)">
            <summary>
            获得单条记录
            </summary>
            <param name="djh">单据号</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.GetAllBill">
            <summary>
            获得全部单据
            </summary>
            <returns>返回获得的全部单据信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.SubmitBill(ServerModule.S_TechnologyChangeBill,System.String@)">
            <summary>
            提交单据
            </summary>
            <param name="inBill">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.UpdateBill(ServerModule.S_TechnologyChangeBill,System.String@)">
            <summary>
            更改单据状态
            </summary>
            <param name="inBill">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>更改成功返回True，更改失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.UpdateBOMDate(ServerModule.DepotManagementDataContext,ServerModule.S_TechnologyChangeBill,System.String@)">
            <summary>
            对BOM表中数据进行变更
            </summary>
            <param name="context">数据上下文</param>
            <param name="inBill">变更单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>变更成功返回True，变更失败返回False</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.GetBomInfo(System.String,System.String,System.String)">
            <summary>
            获得同名称同型号同规格在BOM表中的记录
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <returns>返回获取的BOM表信息</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.GetProductInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获得BOM表信息
            </summary>
            <param name="code">图号型号</param>
            <param name="name">物品名称</param>
            <param name="spec">规格</param>
            <param name="edition">型号</param>
            <returns>返回DataRow</returns>
        </member>
        <member name="M:ServerModule.TechnologyChange.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="djh">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="T:ServerModule.ThreePacketsOfTheRepairBill">
            <summary>
            三包外返修管理类
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_serverPersonnel">
            <summary>
            人员信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_serverDepartment">
            <summary>
            部门信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_serverStore">
            <summary>
            库存信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_serverBasicGoods">
            <summary>
            基础物品服务组件
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_dbDate">
            <summary>
            数据库操作接口
            </summary>
        </member>
        <member name="F:ServerModule.ThreePacketsOfTheRepairBill.m_serverAssignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetShortcutDetailList(System.Data.DataTable,System.String@)">
            <summary>
            快捷设置明细
            </summary>
            <param name="dtSoucre">数据源</param>
            <param name="error">错误信息</param>
            <returns>返回明细列表</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.OperationGoodsUnitPrice(System.Int32,ServerModule.YX_ThreePacketsOfTheRepairGoodsUnitPrice,System.Int32,System.String@)">
            <summary>
            对单条三包外返修零件信息的数据库操作
            </summary>
            <param name="flag">操作方式 0：添加，1：修改，2：删除</param>
            <param name="threePacket">数据集</param>
            <param name="oldGoodsID">老的物品ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.UpdateAllGoodsUnitPrice(System.Boolean,System.Data.DataTable,System.String@)">
            <summary>
            设置所有三包外返修零件单价
            </summary>
            <param name="flag">是否删除原有的记录 True：删除 False：不删除</param>
            <param name="goodSunitPrice">数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetThreePacketGoodsUnitPrice(System.Int32)">
            <summary>
            获得三包外返修的某个零件单价
            </summary>
            <param name="goodsID">物品ID</param>
            <returns>返回单价</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetGoodsUnitPriceInfo">
            <summary>
            获得所有三包外返修零件单价信息
            </summary>
            <returns>返回获得的三包外返修零件单价信息</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetAllBill(System.String,System.DateTime,System.DateTime)">
            <summary>
            获得全部单据
            </summary>
            <param name="billStatus">单据状态,若为“全  部”则显示所有单据信息</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回获得的单据信息</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetList(System.String)">
            <summary>
            获得明细
            </summary>
            <param name="billID">单据号</param>
            <returns>返回获得的明细信息</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetBill(System.String,System.String@)">
            <summary>
            获得一条记录的信息
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回获得的信息记录</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.InsertThreePacketsOfTheRepairList(System.String,System.String@)">
            <summary>
            获得一次性物料集合
            </summary>
            <param name="billID">单据号</param>
            <param name="msg">操作信息</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.UpdateBill(ServerModule.YX_ThreePacketsOfTheRepairBill,System.String@)">
            <summary>
            单据流程
            </summary>
            <param name="threePacketBill">LINQ 单据数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作流程成功返回True，操作流程失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.InsertMaterialRequisition(ServerModule.DepotManagementDataContext,ServerModule.YX_ThreePacketsOfTheRepairBill,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            插入领料单
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="threePacketsOfTheRepairBill">三包外返修处置单主表信息</param>
            <param name="dtListOfStorageID">库房信息</param>
            <param name="threePacketsOfTheRepairList">三包外返修处置单明细信息</param>
            <param name="error">错误信息</param>
            <returns>成功返回True，失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetStorageTable(System.Data.DataTable,System.String@)">
            <summary>
            匹配物品库存信息
            </summary>
            <param name="threePacketsOfTheRepairList">数据集</param>
            <param name="error">错误信息</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.DeleteBill(System.String,System.String@)">
            <summary>
            删除单据
            </summary>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>删除成功返回True，删除失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.InsertYXCK(ServerModule.DepotManagementDataContext,ServerModule.YX_ThreePacketsOfTheRepairBill,System.Data.DataTable,System.Data.DataTable,System.String@)">
            <summary>
            插入营销出库业务
            </summary>
            <param name="contxt">数据上下文</param>
            <param name="threePacket">三包外售后返修单信息</param>
            <param name="dtListOfStorageID">库房信息</param>
            <param name="listTable">明细信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>插入成功返回True，插入失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.UpdateList(System.String,System.Data.DataTable,System.String@)">
            <summary>
            对明细信息进行更新/删除/添加
            </summary>
            <param name="billID">单据号</param>
            <param name="listTable">明细数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.ThreePacketsOfTheRepairBill.GetShortcutDetail(System.String)">
            <summary>
            获得明细快捷选择列表
            </summary>
            <param name="productType">产品类型</param>
            <returns>返回TABLE </returns>
        </member>
        <member name="T:ServerModule.MaterialRejectBill">
            <summary>
            采购退货单管理类
            </summary>
        </member>
        <member name="T:ServerModule.IMaterialRejectBill">
            <summary>
            采购退货单管理类接口
            </summary>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.SetHavingInvoiceReturn(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            获取采购退货单的单据到票标志
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回采购退货单是否到票标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.AuditBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            上级领导审核
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回结果集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.SetHavingInvoiceReturn(System.String,System.String@)">
            <summary>
            获取采购退货单的单据到票标志
            </summary>
            <param name="billID">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回采购退货单是否到票标志</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取所有采购退货单信息
            </summary>
            <param name="returnBill">返回的单据信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.GetBillView(System.String)">
            <summary>
            获取采购退货单视图信息
            </summary>
            <param name="billNo">采购退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.AddBill(ServerModule.S_MaterialRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加采购退货单
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除采购退货单
            </summary>
            <param name="billNo">采购退货单号</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除采购退货单号</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.UpdateBill(ServerModule.S_MaterialRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改采购退货单(只修改编制人涉及信息)
            </summary>
            <param name="bill">单据信息</param>
            <param name="returnBill">返回更新后的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            退库人提交单据(交给财务审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.FinanceAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            财务审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">审批人姓名</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成采购退货单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.IMaterialRejectBill.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">回退单据号</param>
            <param name="billStatus">回退单据状态</param>
            <param name="returnBill">返回的查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="F:ServerModule.MaterialRejectBill.m_billMessageServer">
            <summary>
            单据类消息发布器
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBill.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.SetHavingInvoiceReturn(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            获取采购退货单的单据到票标志
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回采购退货单是否到票标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.SetHavingInvoiceReturn(System.String,System.String@)">
            <summary>
            获取采购退货单的单据到票标志
            </summary>
            <param name="billID">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回采购退货单是否到票标志</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.GetAllBill(PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            获取采购退货单信息
            </summary>
            <param name="returnBill">返回的采购退货单信息</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功获取领料出库信息</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.GetBillView(System.String)">
            <summary>
            获取采购退货单视图信息
            </summary>
            <param name="billNo">退货单号</param>
            <returns>成功返回获取领料出库信息, 失败返回null</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.AddBill(ServerModule.S_MaterialRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            添加采购退货单
            </summary>
            <param name="bill">退货单信息</param>
            <param name="returnBill">返回更新后的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.UpdateBill(ServerModule.S_MaterialRejectBill,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            修改采购退货单(只修改编制人涉及信息)
            </summary>
            <param name="bill">退货单信息</param>
            <param name="returnBill">返回更新后的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.DeleteBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            删除采购退货单
            </summary>
            <param name="billNo">退货单号</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功删除退货单号</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.AuditBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            上级领导审核
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回结果集</param>
            <param name="error">错误信息</param>
            <returns>成功返回True,失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.SubmitNewBill(System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            退货人提交单据(交给财务审批)
            </summary>
            <param name="billNo">单据号</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.FinanceAuthorizeBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            财务审批单据
            </summary>
            <param name="billNo">单据号</param>
            <param name="name">审批人姓名</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.UpdateIsolationBillStatus(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            修改关联的隔离单的单据状态
            </summary>
            <param name="context">数据上下文</param>
            <param name="billNo">退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.CheckBillIsInIsolationManageBill(System.String,System.String@)">
            <summary>
            检查已经关联了不合格品隔离单
            </summary>
            <param name="billID">退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>检测合格返回True，不合格返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.FinishBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@)">
            <summary>
            完成采购退货单
            </summary>
            <param name="billNo">单据号</param>
            <param name="storeManager">仓库管理员</param>
            <param name="returnBill">返回更新后重新查询的采购退货单数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>返回是否成功添加采购退货单</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.OpertaionDetailAndStock(ServerModule.DepotManagementDataContext,ServerModule.S_MaterialRejectBill)">
            <summary>
            根据单据信息操作账务信息与库存信息
            </summary>
            <param name="dataContext">数据上下文</param>
            <param name="bill">单据信息</param>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.SetScrapFlag(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            修改报废单退货标志
            </summary>
            <param name="context">数据上下文</param>
            <param name="billID">采购退货单号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>修改成功返回True，修改失败返回False</returns>
        </member>
        <member name="M:ServerModule.MaterialRejectBill.ReturnBill(System.String,System.String,PlatformManagement.IQueryResult@,System.String@,System.String)">
            <summary>
            回退单据
            </summary>
            <param name="djh">回退单据号</param>
            <param name="billStatus">回退单据状态</param>
            <param name="returnBill">返回的查询结果集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <param name="rebackReason">回退原因</param>
            <returns>回退成功返回True，回退失败返回False</returns>
        </member>
        <member name="T:ServerModule.MaterialRejectBillBillStatus">
            <summary>
            采购退货单单据状态
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBillBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBillBillStatus.等待上级领导审核">
            <summary>
            等待上级领导审核
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBillBillStatus.等待财务审核">
            <summary>
            等待财务审核
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBillBillStatus.等待仓管退货">
            <summary>
            等待仓管退货
            </summary>
        </member>
        <member name="F:ServerModule.MaterialRejectBillBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.GoodsAntirust">
            <summary>
            物品防锈管理类
            </summary>
        </member>
        <member name="F:ServerModule.GoodsAntirust.m_assignBill">
            <summary>
            单据编号分配服务
            </summary>
        </member>
        <member name="M:ServerModule.GoodsAntirust.GetBaseGoodsAntirustSet">
            <summary>
            获得设置防锈期的表
            </summary>
            <returns>返回防锈期设置表</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.GetMaxID">
            <summary>
            获得最大ID
            </summary>
            <returns>返回string 最大ID</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.GetStockAntirustCheck">
            <summary>
            获得库存物品的防锈信息表
            </summary>
            <returns>返回库存物品的防锈信息表</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.AddAntirustInfo(System.Int32,System.Decimal,System.String@)">
            <summary>
            添加防锈物品
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="antirustTime">防锈期</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.DeleteAntirustInfo(System.Int32,System.String@)">
            <summary>
            删除防锈物品
            </summary>
            <param name="goodsID">物品ID</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.ExceAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            执行防锈
            </summary>
            <param name="goodsTable">需要执行防锈的物品数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.AuthorizeAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            确认防锈
            </summary>
            <param name="goodsTable">需要执行的物品数据集</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>True 成功 false  失败</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.CreateMaterialRequisitionGoods(ServerModule.DepotManagementDataContext,ServerModule.KF_GoodsAntirust,System.String,System.String@)">
            <summary>
            生成领料单明细
            </summary>
            <param name="dataContxt">LINQ数据上下文</param>
            <param name="antirust">防锈物品信息</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="M:ServerModule.GoodsAntirust.AuditingAntirustInfo(System.Data.DataTable,System.String@)">
            <summary>
            审核防锈
            </summary>
            <param name="goodsTable">需要执行的物品数据表</param>
            <param name="error">出错时返回错误信息，无错时返回null</param>
            <returns>操作成功返回True，操作失败返回False</returns>
        </member>
        <member name="T:ServerModule.AfterServiceMakePartsBillStatus">
            <summary>
            售后服务配件制造申请单状态
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBillStatus.新建单据">
            <summary>
            新建单据
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBillStatus.营销保存">
            <summary>
            营销保存
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBillStatus.等待主管审核">
            <summary>
            等待主管审核
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBillStatus.等待车间确认">
            <summary>
            等待制造确认
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBillStatus.已完成">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:ServerModule.AfterServiceMakePartsBill">
            <summary>
            售后服务配件制造申请单服务类
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBill.m_serverDepartment">
            <summary>
            部门信息服务组件
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBill.m_storeServer">
            <summary>
            库存服务
            </summary>
        </member>
        <member name="F:ServerModule.AfterServiceMakePartsBill.m_Assignbill">
            <summary>
            生成单据号服务
            </summary>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.IsExist(ServerModule.DepotManagementDataContext,System.String)">
            <summary>
            检查某业务是否存在
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billNo">业务号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.IsExist(System.String)">
            <summary>
            检查某单据是否存在
            </summary>
            <param name="billNo">单据号</param>
            <returns>存在返回true</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.GetBill(System.DateTime,System.DateTime,System.String)">
            <summary>
            获得单据信息
            </summary>
            <param name="startTime">检索开始时间</param>
            <param name="endTime">检索结束时间</param>
            <param name="billStatus">单据状态</param>
            <returns>成功返回获取到的单据主表信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.GetList(System.String)">
            <summary>
            获得单据明细
            </summary>
            <param name="billID">单据号</param>
            <returns>成功返回获取到的单据明细信息，失败返回NULL</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.GetBill(System.String)">
            <summary>
            获得单据信息
            </summary>
            <param name="billID">单据号</param>
            <returns>成功返回获取到的单据主表信息，失败返回null</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.DeleteBill(System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            批量删除单据信息
            </summary>
            <param name="billIDLis">批量删除单据号的集合</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>True 删除成功 False 删除失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.UpdateBill(ServerModule.YX_AfterServiceMakePartsBill,System.Data.DataTable,ServerModule.AfterServiceMakePartsBillStatus,System.String@)">
            <summary>
            更新单据状态
            </summary>
            <param name="bill">单据主表信息</param>
            <param name="listTable">单据明细信息</param>
            <param name="billStatus">单据状态</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>True 更新单据状态成功 False 更新单据状态失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.DeleteAllList(ServerModule.DepotManagementDataContext,System.String,System.String@)">
            <summary>
            删除对应的一条单据的所有明细
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">单据号</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>True  删除成功, False 删除失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.AddAllList(ServerModule.DepotManagementDataContext,System.String,System.Data.DataTable,System.String@)">
            <summary>
            添加表中的明细信息
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="billID">单据号</param>
            <param name="listTable">明细信息表</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>True 成功添加明细，False 添加明细失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.InsertBill(ServerModule.DepotManagementDataContext,ServerModule.YX_AfterServiceMakePartsBill,System.String@)">
            <summary>
            插入新单据
            </summary>
            <param name="ctx">数据上下文</param>
            <param name="bill">要插入的单据主表信息</param>
            <param name="error">出错时返回的错误信息</param>
            <returns>True 添加成功 False 添加失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.AutogenerationMaterialRequisition(System.String,System.String,System.String@)">
            <summary>
            自动生成领料单
            </summary>
            <param name="billID">售后服务配件申请单单号且为生成后的领料单的关联单据</param>
            <param name="storageID">库房ID</param>
            <param name="error">失败时返回的错误信息</param>
            <returns>True  自动生成成功，False 自动生成失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.InsertMaterialRequisitionList(ServerModule.DepotManagementDataContext,System.Data.DataTable@,System.String,System.String,System.String@)">
            <summary>
            插入领料单明细信息
            </summary>
            <param name="ctx">LINQ数据上下文</param>
            <param name="goodsTable">售后服务配件申请单分解的零件清单</param>
            <param name="storageID">库房ID</param>
            <param name="materialBillID">领料单单号</param>
            <param name="error">失败时返回的错误信息</param>
            <returns>返回TRUE表示成功,返回FALSE表示插入失败</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.GetSumRequestCount(System.String)">
            <summary>
            根据BOM拆分售后服务配件申请单中的总成获得
            各个零部件并且汇总申请单中的数量
            </summary>
            <param name="billID">申请单号</param>
            <returns>返回数据集或者NULL</returns>
        </member>
        <member name="M:ServerModule.AfterServiceMakePartsBill.GetListStorageID(System.String)">
            <summary>
            根据BOM拆分售后服务配件申请单中的总成获得
            各个零部件并且汇总申请单中的所属库房
            </summary>
            <param name="billID">申请单号</param>
            <returns>返回数据集或者NULL</returns>
        </member>
        <member name="T:ServerModule.SystemLogServer">
            <summary>
            系统日志操作组件
            </summary>
        </member>
        <member name="M:ServerModule.SystemLogServer.AddMainInfo``1(ServerModule.DepotManagementDataContext,System.Guid,GlobalObject.CE_OperatorMode)">
            <summary>
            添加基础信息日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="ctx">数据上下文</param>
            <param name="logID">日志唯一编码</param>
            <param name="mode">操作类型</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.AddPrimaryKeyInfo``1(ServerModule.DepotManagementDataContext,System.Guid,System.Object)">
            <summary>
            添加操作表主键日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="ctx">数据上下文</param>
            <param name="logID">日志唯一编码</param>
            <param name="singleKey">单一主键值</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.AddPrimaryKeyInfo``1(ServerModule.DepotManagementDataContext,System.Guid,``0)">
            <summary>
            添加操作表主键日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="ctx">数据上下文</param>
            <param name="logID">日志唯一编码</param>
            <param name="tObj">操作对象</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,``0,``0)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="operationContent">操作对象</param>
            <param name="NoUpdatedContent">操作前对象</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,``0,System.Collections.Generic.List{ServerModule.SystemLog_Content})">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="tObj">操作对象</param>
            <param name="listContent">操作内容日志列表</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,System.String,System.Object)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="explainContent">操作说明</param>
            <param name="singlePrimaryKeyContent">单一主键值</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog``1(GlobalObject.CE_OperatorMode,System.String)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="mode">操作模式</param>
            <param name="explainContent">操作说明</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog``1(System.String)">
            <summary>
            记录日志
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="explainContent">操作说明</param>
        </member>
        <member name="M:ServerModule.SystemLogServer.RecordLog(System.String)">
            <summary>
            记录日志
            </summary>
            <param name="explainContent">操作说明</param>
        </member>
    </members>
</doc>
