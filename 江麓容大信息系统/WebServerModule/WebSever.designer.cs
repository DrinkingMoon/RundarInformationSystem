#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8745
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServerModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class WebSeverDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCCAR_QuestionTrackBill(CCAR_QuestionTrackBill instance);
    partial void UpdateCCAR_QuestionTrackBill(CCAR_QuestionTrackBill instance);
    partial void DeleteCCAR_QuestionTrackBill(CCAR_QuestionTrackBill instance);
    partial void InsertCCAR_QuestionTrackList(CCAR_QuestionTrackList instance);
    partial void UpdateCCAR_QuestionTrackList(CCAR_QuestionTrackList instance);
    partial void DeleteCCAR_QuestionTrackList(CCAR_QuestionTrackList instance);
    partial void InsertOF_Answer(OF_Answer instance);
    partial void UpdateOF_Answer(OF_Answer instance);
    partial void DeleteOF_Answer(OF_Answer instance);
    partial void InsertOF_BillID_Status(OF_BillID_Status instance);
    partial void UpdateOF_BillID_Status(OF_BillID_Status instance);
    partial void DeleteOF_BillID_Status(OF_BillID_Status instance);
    partial void InsertOF_BugCode(OF_BugCode instance);
    partial void UpdateOF_BugCode(OF_BugCode instance);
    partial void DeleteOF_BugCode(OF_BugCode instance);
    partial void InsertOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void UpdateOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void DeleteOF_BugMessageInfo(OF_BugMessageInfo instance);
    partial void InsertOF_CarBugStatus(OF_CarBugStatus instance);
    partial void UpdateOF_CarBugStatus(OF_CarBugStatus instance);
    partial void DeleteOF_CarBugStatus(OF_CarBugStatus instance);
    partial void InsertOF_DownRecord(OF_DownRecord instance);
    partial void UpdateOF_DownRecord(OF_DownRecord instance);
    partial void DeleteOF_DownRecord(OF_DownRecord instance);
    partial void InsertOF_LoginLog(OF_LoginLog instance);
    partial void UpdateOF_LoginLog(OF_LoginLog instance);
    partial void DeleteOF_LoginLog(OF_LoginLog instance);
    partial void InsertOF_News(OF_News instance);
    partial void UpdateOF_News(OF_News instance);
    partial void DeleteOF_News(OF_News instance);
    partial void InsertOF_NewsAudience(OF_NewsAudience instance);
    partial void UpdateOF_NewsAudience(OF_NewsAudience instance);
    partial void DeleteOF_NewsAudience(OF_NewsAudience instance);
    partial void InsertOF_NewsFile(OF_NewsFile instance);
    partial void UpdateOF_NewsFile(OF_NewsFile instance);
    partial void DeleteOF_NewsFile(OF_NewsFile instance);
    partial void InsertOF_NewsType(OF_NewsType instance);
    partial void UpdateOF_NewsType(OF_NewsType instance);
    partial void DeleteOF_NewsType(OF_NewsType instance);
    partial void InsertOF_OrderForm_ArrivalInfo(OF_OrderForm_ArrivalInfo instance);
    partial void UpdateOF_OrderForm_ArrivalInfo(OF_OrderForm_ArrivalInfo instance);
    partial void DeleteOF_OrderForm_ArrivalInfo(OF_OrderForm_ArrivalInfo instance);
    partial void InsertOF_OrderFormGoods(OF_OrderFormGoods instance);
    partial void UpdateOF_OrderFormGoods(OF_OrderFormGoods instance);
    partial void DeleteOF_OrderFormGoods(OF_OrderFormGoods instance);
    partial void InsertOF_OrderFormInfo(OF_OrderFormInfo instance);
    partial void UpdateOF_OrderFormInfo(OF_OrderFormInfo instance);
    partial void DeleteOF_OrderFormInfo(OF_OrderFormInfo instance);
    partial void InsertS_AfterService(S_AfterService instance);
    partial void UpdateS_AfterService(S_AfterService instance);
    partial void DeleteS_AfterService(S_AfterService instance);
    partial void InsertS_Commtion(S_Commtion instance);
    partial void UpdateS_Commtion(S_Commtion instance);
    partial void DeleteS_Commtion(S_Commtion instance);
    partial void InsertS_MessageSource(S_MessageSource instance);
    partial void UpdateS_MessageSource(S_MessageSource instance);
    partial void DeleteS_MessageSource(S_MessageSource instance);
    partial void InsertS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void UpdateS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void DeleteS_ReplaceAccessory(S_ReplaceAccessory instance);
    partial void InsertS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void UpdateS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void DeleteS_ServiceFeedBack(S_ServiceFeedBack instance);
    partial void InsertS_ServiceFileDown(S_ServiceFileDown instance);
    partial void UpdateS_ServiceFileDown(S_ServiceFileDown instance);
    partial void DeleteS_ServiceFileDown(S_ServiceFileDown instance);
    partial void InsertTCU_UP_DownloadLog(TCU_UP_DownloadLog instance);
    partial void UpdateTCU_UP_DownloadLog(TCU_UP_DownloadLog instance);
    partial void DeleteTCU_UP_DownloadLog(TCU_UP_DownloadLog instance);
    partial void InsertTCU_UP_DownloadLogDataMonitor(TCU_UP_DownloadLogDataMonitor instance);
    partial void UpdateTCU_UP_DownloadLogDataMonitor(TCU_UP_DownloadLogDataMonitor instance);
    partial void DeleteTCU_UP_DownloadLogDataMonitor(TCU_UP_DownloadLogDataMonitor instance);
    partial void InsertTCU_UP_FILE(TCU_UP_FILE instance);
    partial void UpdateTCU_UP_FILE(TCU_UP_FILE instance);
    partial void DeleteTCU_UP_FILE(TCU_UP_FILE instance);
    partial void InsertTCU_UP_FILEDataMonitor(TCU_UP_FILEDataMonitor instance);
    partial void UpdateTCU_UP_FILEDataMonitor(TCU_UP_FILEDataMonitor instance);
    partial void DeleteTCU_UP_FILEDataMonitor(TCU_UP_FILEDataMonitor instance);
    partial void InsertTCU_UP_LOG(TCU_UP_LOG instance);
    partial void UpdateTCU_UP_LOG(TCU_UP_LOG instance);
    partial void DeleteTCU_UP_LOG(TCU_UP_LOG instance);
    partial void InsertTCU_UP_LOGDataMonitor(TCU_UP_LOGDataMonitor instance);
    partial void UpdateTCU_UP_LOGDataMonitor(TCU_UP_LOGDataMonitor instance);
    partial void DeleteTCU_UP_LOGDataMonitor(TCU_UP_LOGDataMonitor instance);
    partial void InsertTCU_UP_Program_Update_Log(TCU_UP_Program_Update_Log instance);
    partial void UpdateTCU_UP_Program_Update_Log(TCU_UP_Program_Update_Log instance);
    partial void DeleteTCU_UP_Program_Update_Log(TCU_UP_Program_Update_Log instance);
    partial void InsertTCU_UP_Program_Update_LogDataMonitor(TCU_UP_Program_Update_LogDataMonitor instance);
    partial void UpdateTCU_UP_Program_Update_LogDataMonitor(TCU_UP_Program_Update_LogDataMonitor instance);
    partial void DeleteTCU_UP_Program_Update_LogDataMonitor(TCU_UP_Program_Update_LogDataMonitor instance);
    partial void InsertTCU_UP_ProgramType(TCU_UP_ProgramType instance);
    partial void UpdateTCU_UP_ProgramType(TCU_UP_ProgramType instance);
    partial void DeleteTCU_UP_ProgramType(TCU_UP_ProgramType instance);
    partial void InsertTCU_UP_ProgramTypeDataMonitor(TCU_UP_ProgramTypeDataMonitor instance);
    partial void UpdateTCU_UP_ProgramTypeDataMonitor(TCU_UP_ProgramTypeDataMonitor instance);
    partial void DeleteTCU_UP_ProgramTypeDataMonitor(TCU_UP_ProgramTypeDataMonitor instance);
    partial void InsertTCU_UP_TcuNumberDataMonitor(TCU_UP_TcuNumberDataMonitor instance);
    partial void UpdateTCU_UP_TcuNumberDataMonitor(TCU_UP_TcuNumberDataMonitor instance);
    partial void DeleteTCU_UP_TcuNumberDataMonitor(TCU_UP_TcuNumberDataMonitor instance);
    partial void InsertTCU_UP_TcuProgramCode(TCU_UP_TcuProgramCode instance);
    partial void UpdateTCU_UP_TcuProgramCode(TCU_UP_TcuProgramCode instance);
    partial void DeleteTCU_UP_TcuProgramCode(TCU_UP_TcuProgramCode instance);
    partial void InsertTCU_UP_UserInfo(TCU_UP_UserInfo instance);
    partial void UpdateTCU_UP_UserInfo(TCU_UP_UserInfo instance);
    partial void DeleteTCU_UP_UserInfo(TCU_UP_UserInfo instance);
    partial void InsertTCU_UP_UserInfoDataMonitor(TCU_UP_UserInfoDataMonitor instance);
    partial void UpdateTCU_UP_UserInfoDataMonitor(TCU_UP_UserInfoDataMonitor instance);
    partial void DeleteTCU_UP_UserInfoDataMonitor(TCU_UP_UserInfoDataMonitor instance);
    partial void InsertTCU_UP_VehicleModel(TCU_UP_VehicleModel instance);
    partial void UpdateTCU_UP_VehicleModel(TCU_UP_VehicleModel instance);
    partial void DeleteTCU_UP_VehicleModel(TCU_UP_VehicleModel instance);
    #endregion
		
		public WebSeverDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSeverDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSeverDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebSeverDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CCAR_QuestionTrackBill> CCAR_QuestionTrackBill
		{
			get
			{
				return this.GetTable<CCAR_QuestionTrackBill>();
			}
		}
		
		public System.Data.Linq.Table<CCAR_QuestionTrackList> CCAR_QuestionTrackList
		{
			get
			{
				return this.GetTable<CCAR_QuestionTrackList>();
			}
		}
		
		public System.Data.Linq.Table<DotAd> DotAd
		{
			get
			{
				return this.GetTable<DotAd>();
			}
		}
		
		public System.Data.Linq.Table<DotAnnounce> DotAnnounce
		{
			get
			{
				return this.GetTable<DotAnnounce>();
			}
		}
		
		public System.Data.Linq.Table<DotBigClass> DotBigClass
		{
			get
			{
				return this.GetTable<DotBigClass>();
			}
		}
		
		public System.Data.Linq.Table<DotColTopics> DotColTopics
		{
			get
			{
				return this.GetTable<DotColTopics>();
			}
		}
		
		public System.Data.Linq.Table<DotConfig> DotConfig
		{
			get
			{
				return this.GetTable<DotConfig>();
			}
		}
		
		public System.Data.Linq.Table<DotFriend> DotFriend
		{
			get
			{
				return this.GetTable<DotFriend>();
			}
		}
		
		public System.Data.Linq.Table<DotLevelImg> DotLevelImg
		{
			get
			{
				return this.GetTable<DotLevelImg>();
			}
		}
		
		public System.Data.Linq.Table<DotLink> DotLink
		{
			get
			{
				return this.GetTable<DotLink>();
			}
		}
		
		public System.Data.Linq.Table<DotMail> DotMail
		{
			get
			{
				return this.GetTable<DotMail>();
			}
		}
		
		public System.Data.Linq.Table<DotMaxOnLine> DotMaxOnLine
		{
			get
			{
				return this.GetTable<DotMaxOnLine>();
			}
		}
		
		public System.Data.Linq.Table<DotOnLine> DotOnLine
		{
			get
			{
				return this.GetTable<DotOnLine>();
			}
		}
		
		public System.Data.Linq.Table<DotPreRnd> DotPreRnd
		{
			get
			{
				return this.GetTable<DotPreRnd>();
			}
		}
		
		public System.Data.Linq.Table<DotReply> DotReply
		{
			get
			{
				return this.GetTable<DotReply>();
			}
		}
		
		public System.Data.Linq.Table<DotSmallClass> DotSmallClass
		{
			get
			{
				return this.GetTable<DotSmallClass>();
			}
		}
		
		public System.Data.Linq.Table<DotTopic> DotTopic
		{
			get
			{
				return this.GetTable<DotTopic>();
			}
		}
		
		public System.Data.Linq.Table<DotUser> DotUser
		{
			get
			{
				return this.GetTable<DotUser>();
			}
		}
		
		public System.Data.Linq.Table<DotUserClass> DotUserClass
		{
			get
			{
				return this.GetTable<DotUserClass>();
			}
		}
		
		public System.Data.Linq.Table<DotUserClassItem> DotUserClassItem
		{
			get
			{
				return this.GetTable<DotUserClassItem>();
			}
		}
		
		public System.Data.Linq.Table<OF_Answer> OF_Answer
		{
			get
			{
				return this.GetTable<OF_Answer>();
			}
		}
		
		public System.Data.Linq.Table<OF_BillID_Status> OF_BillID_Status
		{
			get
			{
				return this.GetTable<OF_BillID_Status>();
			}
		}
		
		public System.Data.Linq.Table<OF_BugCode> OF_BugCode
		{
			get
			{
				return this.GetTable<OF_BugCode>();
			}
		}
		
		public System.Data.Linq.Table<OF_BugMessageInfo> OF_BugMessageInfo
		{
			get
			{
				return this.GetTable<OF_BugMessageInfo>();
			}
		}
		
		public System.Data.Linq.Table<OF_CarBugStatus> OF_CarBugStatus
		{
			get
			{
				return this.GetTable<OF_CarBugStatus>();
			}
		}
		
		public System.Data.Linq.Table<OF_DownRecord> OF_DownRecord
		{
			get
			{
				return this.GetTable<OF_DownRecord>();
			}
		}
		
		public System.Data.Linq.Table<OF_LoginLog> OF_LoginLog
		{
			get
			{
				return this.GetTable<OF_LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<OF_News> OF_News
		{
			get
			{
				return this.GetTable<OF_News>();
			}
		}
		
		public System.Data.Linq.Table<OF_NewsAudience> OF_NewsAudience
		{
			get
			{
				return this.GetTable<OF_NewsAudience>();
			}
		}
		
		public System.Data.Linq.Table<OF_NewsFile> OF_NewsFile
		{
			get
			{
				return this.GetTable<OF_NewsFile>();
			}
		}
		
		public System.Data.Linq.Table<OF_NewsType> OF_NewsType
		{
			get
			{
				return this.GetTable<OF_NewsType>();
			}
		}
		
		public System.Data.Linq.Table<OF_OrderForm_ArrivalInfo> OF_OrderForm_ArrivalInfo
		{
			get
			{
				return this.GetTable<OF_OrderForm_ArrivalInfo>();
			}
		}
		
		public System.Data.Linq.Table<OF_OrderFormGoods> OF_OrderFormGoods
		{
			get
			{
				return this.GetTable<OF_OrderFormGoods>();
			}
		}
		
		public System.Data.Linq.Table<OF_OrderFormInfo> OF_OrderFormInfo
		{
			get
			{
				return this.GetTable<OF_OrderFormInfo>();
			}
		}
		
		public System.Data.Linq.Table<Reply查询> Reply查询
		{
			get
			{
				return this.GetTable<Reply查询>();
			}
		}
		
		public System.Data.Linq.Table<S_AfterService> S_AfterService
		{
			get
			{
				return this.GetTable<S_AfterService>();
			}
		}
		
		public System.Data.Linq.Table<S_Commtion> S_Commtion
		{
			get
			{
				return this.GetTable<S_Commtion>();
			}
		}
		
		public System.Data.Linq.Table<S_MessageSource> S_MessageSource
		{
			get
			{
				return this.GetTable<S_MessageSource>();
			}
		}
		
		public System.Data.Linq.Table<S_ReplaceAccessory> S_ReplaceAccessory
		{
			get
			{
				return this.GetTable<S_ReplaceAccessory>();
			}
		}
		
		public System.Data.Linq.Table<S_ServiceFeedBack> S_ServiceFeedBack
		{
			get
			{
				return this.GetTable<S_ServiceFeedBack>();
			}
		}
		
		public System.Data.Linq.Table<S_ServiceFileDown> S_ServiceFileDown
		{
			get
			{
				return this.GetTable<S_ServiceFileDown>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_DownloadLog> TCU_UP_DownloadLog
		{
			get
			{
				return this.GetTable<TCU_UP_DownloadLog>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_DownloadLogDataMonitor> TCU_UP_DownloadLogDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_DownloadLogDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_FILE> TCU_UP_FILE
		{
			get
			{
				return this.GetTable<TCU_UP_FILE>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_FILEDataMonitor> TCU_UP_FILEDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_FILEDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_LOG> TCU_UP_LOG
		{
			get
			{
				return this.GetTable<TCU_UP_LOG>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_LOGDataMonitor> TCU_UP_LOGDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_LOGDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_Program_Update_Log> TCU_UP_Program_Update_Log
		{
			get
			{
				return this.GetTable<TCU_UP_Program_Update_Log>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_Program_Update_LogDataMonitor> TCU_UP_Program_Update_LogDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_Program_Update_LogDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_ProgramType> TCU_UP_ProgramType
		{
			get
			{
				return this.GetTable<TCU_UP_ProgramType>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_ProgramTypeDataMonitor> TCU_UP_ProgramTypeDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_ProgramTypeDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_TcuNumberDataMonitor> TCU_UP_TcuNumberDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_TcuNumberDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_TcuProgramCode> TCU_UP_TcuProgramCode
		{
			get
			{
				return this.GetTable<TCU_UP_TcuProgramCode>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_UserInfo> TCU_UP_UserInfo
		{
			get
			{
				return this.GetTable<TCU_UP_UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_UserInfoDataMonitor> TCU_UP_UserInfoDataMonitor
		{
			get
			{
				return this.GetTable<TCU_UP_UserInfoDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<TCU_UP_VehicleModel> TCU_UP_VehicleModel
		{
			get
			{
				return this.GetTable<TCU_UP_VehicleModel>();
			}
		}
		
		public System.Data.Linq.Table<View_CCAR_QuestionTrackList> View_CCAR_QuestionTrackList
		{
			get
			{
				return this.GetTable<View_CCAR_QuestionTrackList>();
			}
		}
		
		public System.Data.Linq.Table<View_OF_LoginLog> View_OF_LoginLog
		{
			get
			{
				return this.GetTable<View_OF_LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<View_OF_News> View_OF_News
		{
			get
			{
				return this.GetTable<View_OF_News>();
			}
		}
		
		public System.Data.Linq.Table<View_OF_OrderForm_ArrivalInfo> View_OF_OrderForm_ArrivalInfo
		{
			get
			{
				return this.GetTable<View_OF_OrderForm_ArrivalInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_OF_OrderForm_IntegratedArrivalInfo> View_OF_OrderForm_IntegratedArrivalInfo
		{
			get
			{
				return this.GetTable<View_OF_OrderForm_IntegratedArrivalInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_OF_OrderFormInfo> View_OF_OrderFormInfo
		{
			get
			{
				return this.GetTable<View_OF_OrderFormInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_S_AfterService> View_S_AfterService
		{
			get
			{
				return this.GetTable<View_S_AfterService>();
			}
		}
		
		public System.Data.Linq.Table<View_S_MessageSource> View_S_MessageSource
		{
			get
			{
				return this.GetTable<View_S_MessageSource>();
			}
		}
		
		public System.Data.Linq.Table<View_S_ReplaceAccessory> View_S_ReplaceAccessory
		{
			get
			{
				return this.GetTable<View_S_ReplaceAccessory>();
			}
		}
		
		public System.Data.Linq.Table<View_S_ServiceFeedBack> View_S_ServiceFeedBack
		{
			get
			{
				return this.GetTable<View_S_ServiceFeedBack>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_DownloadLog> View_TCU_UP_DownloadLog
		{
			get
			{
				return this.GetTable<View_TCU_UP_DownloadLog>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_DownloadLogDataMonitor> View_TCU_UP_DownloadLogDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_DownloadLogDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_FILE> View_TCU_UP_FILE
		{
			get
			{
				return this.GetTable<View_TCU_UP_FILE>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_FILEDataMonitor> View_TCU_UP_FILEDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_FILEDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_PROGRAM_UPDATE_LOG> View_TCU_UP_PROGRAM_UPDATE_LOG
		{
			get
			{
				return this.GetTable<View_TCU_UP_PROGRAM_UPDATE_LOG>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_PROGRAM_UPDATE_LOGDataMonitor> View_TCU_UP_PROGRAM_UPDATE_LOGDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_PROGRAM_UPDATE_LOGDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_ProgramType> View_TCU_UP_ProgramType
		{
			get
			{
				return this.GetTable<View_TCU_UP_ProgramType>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_ProgramTypeDataMonitor> View_TCU_UP_ProgramTypeDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_ProgramTypeDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_TcuNumberDataMonitor> View_TCU_UP_TcuNumberDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_TcuNumberDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_UserInfo> View_TCU_UP_UserInfo
		{
			get
			{
				return this.GetTable<View_TCU_UP_UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_UserInfoDataMonitor> View_TCU_UP_UserInfoDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_UserInfoDataMonitor>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_VehicleModel> View_TCU_UP_VehicleModel
		{
			get
			{
				return this.GetTable<View_TCU_UP_VehicleModel>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_WRITE_LOG> View_TCU_UP_WRITE_LOG
		{
			get
			{
				return this.GetTable<View_TCU_UP_WRITE_LOG>();
			}
		}
		
		public System.Data.Linq.Table<View_TCU_UP_WRITE_LOGDataMonitor> View_TCU_UP_WRITE_LOGDataMonitor
		{
			get
			{
				return this.GetTable<View_TCU_UP_WRITE_LOGDataMonitor>();
			}
		}
		
		[Function(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: Parameter(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
	
	[Table(Name="dbo.CCAR_QuestionTrackBill")]
	public partial class CCAR_QuestionTrackBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _JLRDChargeMan;
		
		private System.DateTime _CreateTime;
		
		private string _Provider;
		
		private string _QuestionTitle;
		
		private string _Status;
		
		private string _Remark;
		
		private EntitySet<CCAR_QuestionTrackList> _CCAR_QuestionTrackList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJLRDChargeManChanging(string value);
    partial void OnJLRDChargeManChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnQuestionTitleChanging(string value);
    partial void OnQuestionTitleChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CCAR_QuestionTrackBill()
		{
			this._CCAR_QuestionTrackList = new EntitySet<CCAR_QuestionTrackList>(new Action<CCAR_QuestionTrackList>(this.attach_CCAR_QuestionTrackList), new Action<CCAR_QuestionTrackList>(this.detach_CCAR_QuestionTrackList));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_JLRDChargeMan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JLRDChargeMan
		{
			get
			{
				return this._JLRDChargeMan;
			}
			set
			{
				if ((this._JLRDChargeMan != value))
				{
					this.OnJLRDChargeManChanging(value);
					this.SendPropertyChanging();
					this._JLRDChargeMan = value;
					this.SendPropertyChanged("JLRDChargeMan");
					this.OnJLRDChargeManChanged();
				}
			}
		}
		
		[Column(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Provider", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[Column(Storage="_QuestionTitle", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this.OnQuestionTitleChanging(value);
					this.SendPropertyChanging();
					this._QuestionTitle = value;
					this.SendPropertyChanged("QuestionTitle");
					this.OnQuestionTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_CCAR_QuestionTrackList_CCAR_QuestionTrackBill", Storage="_CCAR_QuestionTrackList", OtherKey="FatherID", DeleteRule="NO ACTION")]
		public EntitySet<CCAR_QuestionTrackList> CCAR_QuestionTrackList
		{
			get
			{
				return this._CCAR_QuestionTrackList;
			}
			set
			{
				this._CCAR_QuestionTrackList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CCAR_QuestionTrackList(CCAR_QuestionTrackList entity)
		{
			this.SendPropertyChanging();
			entity.CCAR_QuestionTrackBill = this;
		}
		
		private void detach_CCAR_QuestionTrackList(CCAR_QuestionTrackList entity)
		{
			this.SendPropertyChanging();
			entity.CCAR_QuestionTrackBill = null;
		}
	}
	
	[Table(Name="dbo.CCAR_QuestionTrackList")]
	public partial class CCAR_QuestionTrackList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FatherID;
		
		private string _ProviderMan;
		
		private string _AccessoryName;
		
		private string _AccessoryCode;
		
		private string _Spec;
		
		private string _Question;
		
		private string _Solution;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _GYSAcceptTime;
		
		private string _Sequence;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<System.DateTime> _LastCheckTime;
		
		private string _Remart;
		
		private EntityRef<CCAR_QuestionTrackBill> _CCAR_QuestionTrackBill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(int value);
    partial void OnFatherIDChanged();
    partial void OnProviderManChanging(string value);
    partial void OnProviderManChanged();
    partial void OnAccessoryNameChanging(string value);
    partial void OnAccessoryNameChanged();
    partial void OnAccessoryCodeChanging(string value);
    partial void OnAccessoryCodeChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnGYSAcceptTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnGYSAcceptTimeChanged();
    partial void OnSequenceChanging(string value);
    partial void OnSequenceChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnLastCheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckTimeChanged();
    partial void OnRemartChanging(string value);
    partial void OnRemartChanged();
    #endregion
		
		public CCAR_QuestionTrackList()
		{
			this._CCAR_QuestionTrackBill = default(EntityRef<CCAR_QuestionTrackBill>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FatherID", DbType="Int NOT NULL")]
		public int FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					if (this._CCAR_QuestionTrackBill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProviderMan", DbType="VarChar(50)")]
		public string ProviderMan
		{
			get
			{
				return this._ProviderMan;
			}
			set
			{
				if ((this._ProviderMan != value))
				{
					this.OnProviderManChanging(value);
					this.SendPropertyChanging();
					this._ProviderMan = value;
					this.SendPropertyChanged("ProviderMan");
					this.OnProviderManChanged();
				}
			}
		}
		
		[Column(Storage="_AccessoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessoryName
		{
			get
			{
				return this._AccessoryName;
			}
			set
			{
				if ((this._AccessoryName != value))
				{
					this.OnAccessoryNameChanging(value);
					this.SendPropertyChanging();
					this._AccessoryName = value;
					this.SendPropertyChanged("AccessoryName");
					this.OnAccessoryNameChanged();
				}
			}
		}
		
		[Column(Storage="_AccessoryCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessoryCode
		{
			get
			{
				return this._AccessoryCode;
			}
			set
			{
				if ((this._AccessoryCode != value))
				{
					this.OnAccessoryCodeChanging(value);
					this.SendPropertyChanging();
					this._AccessoryCode = value;
					this.SendPropertyChanged("AccessoryCode");
					this.OnAccessoryCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Spec", DbType="VarChar(50)")]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="NVarChar(2000)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_GYSAcceptTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> GYSAcceptTime
		{
			get
			{
				return this._GYSAcceptTime;
			}
			set
			{
				if ((this._GYSAcceptTime != value))
				{
					this.OnGYSAcceptTimeChanging(value);
					this.SendPropertyChanging();
					this._GYSAcceptTime = value;
					this.SendPropertyChanged("GYSAcceptTime");
					this.OnGYSAcceptTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Sequence", DbType="VarChar(50)")]
		public string Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastCheckTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckTime
		{
			get
			{
				return this._LastCheckTime;
			}
			set
			{
				if ((this._LastCheckTime != value))
				{
					this.OnLastCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._LastCheckTime = value;
					this.SendPropertyChanged("LastCheckTime");
					this.OnLastCheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Remart", DbType="VarChar(800)")]
		public string Remart
		{
			get
			{
				return this._Remart;
			}
			set
			{
				if ((this._Remart != value))
				{
					this.OnRemartChanging(value);
					this.SendPropertyChanging();
					this._Remart = value;
					this.SendPropertyChanged("Remart");
					this.OnRemartChanged();
				}
			}
		}
		
		[Association(Name="FK_CCAR_QuestionTrackList_CCAR_QuestionTrackBill", Storage="_CCAR_QuestionTrackBill", ThisKey="FatherID", IsForeignKey=true)]
		public CCAR_QuestionTrackBill CCAR_QuestionTrackBill
		{
			get
			{
				return this._CCAR_QuestionTrackBill.Entity;
			}
			set
			{
				CCAR_QuestionTrackBill previousValue = this._CCAR_QuestionTrackBill.Entity;
				if (((previousValue != value) 
							|| (this._CCAR_QuestionTrackBill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CCAR_QuestionTrackBill.Entity = null;
						previousValue.CCAR_QuestionTrackList.Remove(this);
					}
					this._CCAR_QuestionTrackBill.Entity = value;
					if ((value != null))
					{
						value.CCAR_QuestionTrackList.Add(this);
						this._FatherID = value.ID;
					}
					else
					{
						this._FatherID = default(int);
					}
					this.SendPropertyChanged("CCAR_QuestionTrackBill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DotAd")]
	public partial class DotAd
	{
		
		private int _ID;
		
		private string _AdName;
		
		private string _ADType;
		
		private string _AdText;
		
		private string _AdPic;
		
		private string _AdUrl;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		public DotAd()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AdName", DbType="NVarChar(50)")]
		public string AdName
		{
			get
			{
				return this._AdName;
			}
			set
			{
				if ((this._AdName != value))
				{
					this._AdName = value;
				}
			}
		}
		
		[Column(Storage="_ADType", DbType="NVarChar(50)")]
		public string ADType
		{
			get
			{
				return this._ADType;
			}
			set
			{
				if ((this._ADType != value))
				{
					this._ADType = value;
				}
			}
		}
		
		[Column(Storage="_AdText", DbType="NVarChar(50)")]
		public string AdText
		{
			get
			{
				return this._AdText;
			}
			set
			{
				if ((this._AdText != value))
				{
					this._AdText = value;
				}
			}
		}
		
		[Column(Storage="_AdPic", DbType="NVarChar(200)")]
		public string AdPic
		{
			get
			{
				return this._AdPic;
			}
			set
			{
				if ((this._AdPic != value))
				{
					this._AdPic = value;
				}
			}
		}
		
		[Column(Storage="_AdUrl", DbType="NVarChar(200)")]
		public string AdUrl
		{
			get
			{
				return this._AdUrl;
			}
			set
			{
				if ((this._AdUrl != value))
				{
					this._AdUrl = value;
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotAnnounce")]
	public partial class DotAnnounce
	{
		
		private int _ID;
		
		private string _Title;
		
		private string _Writer;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		public DotAnnounce()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Writer", DbType="NVarChar(50)")]
		public string Writer
		{
			get
			{
				return this._Writer;
			}
			set
			{
				if ((this._Writer != value))
				{
					this._Writer = value;
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotBigClass")]
	public partial class DotBigClass
	{
		
		private int _BigClassID;
		
		private string _BigClassName;
		
		private System.Nullable<short> _BigClassPos;
		
		private string _Info;
		
		private bool _IsShow;
		
		private string _BoardMasters;
		
		public DotBigClass()
		{
		}
		
		[Column(Storage="_BigClassID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int BigClassID
		{
			get
			{
				return this._BigClassID;
			}
			set
			{
				if ((this._BigClassID != value))
				{
					this._BigClassID = value;
				}
			}
		}
		
		[Column(Storage="_BigClassName", DbType="NVarChar(50)")]
		public string BigClassName
		{
			get
			{
				return this._BigClassName;
			}
			set
			{
				if ((this._BigClassName != value))
				{
					this._BigClassName = value;
				}
			}
		}
		
		[Column(Storage="_BigClassPos", DbType="SmallInt")]
		public System.Nullable<short> BigClassPos
		{
			get
			{
				return this._BigClassPos;
			}
			set
			{
				if ((this._BigClassPos != value))
				{
					this._BigClassPos = value;
				}
			}
		}
		
		[Column(Storage="_Info", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this._Info = value;
				}
			}
		}
		
		[Column(Storage="_IsShow", DbType="Bit NOT NULL")]
		public bool IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this._IsShow = value;
				}
			}
		}
		
		[Column(Storage="_BoardMasters", DbType="NVarChar(255)")]
		public string BoardMasters
		{
			get
			{
				return this._BoardMasters;
			}
			set
			{
				if ((this._BoardMasters != value))
				{
					this._BoardMasters = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotColTopics")]
	public partial class DotColTopics
	{
		
		private int _ID;
		
		private string _UserID;
		
		private System.Nullable<int> _TID;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		public DotColTopics()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(255)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_TID", DbType="Int")]
		public System.Nullable<int> TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this._TID = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotConfig")]
	public partial class DotConfig
	{
		
		private string _SiteName;
		
		private string _Logo;
		
		private string _SiteUrl;
		
		private string _SiteDescript;
		
		private string _SiteKeyWords;
		
		private string _FileType;
		
		private System.Nullable<short> _FileSize;
		
		private string _Filters;
		
		private string _FilterEvent;
		
		private string _BadWords;
		
		private string _DisallowIP;
		
		private bool _IsCloseReg;
		
		private bool _IsCloseBBS;
		
		private System.Nullable<byte> _PostPay;
		
		private System.Nullable<byte> _ReplyPay;
		
		private System.Nullable<byte> _GoodPay;
		
		private System.Nullable<byte> _DelPost;
		
		private System.Nullable<byte> _DelReply;
		
		private System.Nullable<byte> _CancelGood;
		
		private System.Nullable<int> _OnlineSep;
		
		private System.Nullable<int> _RegPayScore;
		
		private System.Nullable<int> _RegPayMoney;
		
		private System.Nullable<int> _LoginPayScore;
		
		private System.Nullable<int> _LoginPayMoney;
		
		private bool _IsCloseTopic;
		
		private bool _IsClosePost;
		
		private bool _IsUrlTrans;
		
		private string _UrlTransExt;
		
		private string _SkinName;
		
		private string _TitleExt;
		
		private System.Nullable<short> _TopicNumBase;
		
		private System.Nullable<short> _ReplyNumBase;
		
		private System.Nullable<short> _UserNumBase;
		
		private System.Nullable<bool> _IsShowRecentCount;
		
		public DotConfig()
		{
		}
		
		[Column(Storage="_SiteName", DbType="NVarChar(50)")]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this._SiteName = value;
				}
			}
		}
		
		[Column(Storage="_Logo", DbType="NVarChar(255)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[Column(Storage="_SiteUrl", DbType="NVarChar(50)")]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this._SiteUrl = value;
				}
			}
		}
		
		[Column(Storage="_SiteDescript", DbType="NVarChar(200)")]
		public string SiteDescript
		{
			get
			{
				return this._SiteDescript;
			}
			set
			{
				if ((this._SiteDescript != value))
				{
					this._SiteDescript = value;
				}
			}
		}
		
		[Column(Storage="_SiteKeyWords", DbType="NVarChar(200)")]
		public string SiteKeyWords
		{
			get
			{
				return this._SiteKeyWords;
			}
			set
			{
				if ((this._SiteKeyWords != value))
				{
					this._SiteKeyWords = value;
				}
			}
		}
		
		[Column(Storage="_FileType", DbType="NVarChar(50)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this._FileType = value;
				}
			}
		}
		
		[Column(Storage="_FileSize", DbType="SmallInt")]
		public System.Nullable<short> FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this._FileSize = value;
				}
			}
		}
		
		[Column(Storage="_Filters", DbType="NVarChar(200)")]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this._Filters = value;
				}
			}
		}
		
		[Column(Storage="_FilterEvent", DbType="NVarChar(200)")]
		public string FilterEvent
		{
			get
			{
				return this._FilterEvent;
			}
			set
			{
				if ((this._FilterEvent != value))
				{
					this._FilterEvent = value;
				}
			}
		}
		
		[Column(Storage="_BadWords", DbType="NVarChar(200)")]
		public string BadWords
		{
			get
			{
				return this._BadWords;
			}
			set
			{
				if ((this._BadWords != value))
				{
					this._BadWords = value;
				}
			}
		}
		
		[Column(Storage="_DisallowIP", DbType="NVarChar(200)")]
		public string DisallowIP
		{
			get
			{
				return this._DisallowIP;
			}
			set
			{
				if ((this._DisallowIP != value))
				{
					this._DisallowIP = value;
				}
			}
		}
		
		[Column(Storage="_IsCloseReg", DbType="Bit NOT NULL")]
		public bool IsCloseReg
		{
			get
			{
				return this._IsCloseReg;
			}
			set
			{
				if ((this._IsCloseReg != value))
				{
					this._IsCloseReg = value;
				}
			}
		}
		
		[Column(Storage="_IsCloseBBS", DbType="Bit NOT NULL")]
		public bool IsCloseBBS
		{
			get
			{
				return this._IsCloseBBS;
			}
			set
			{
				if ((this._IsCloseBBS != value))
				{
					this._IsCloseBBS = value;
				}
			}
		}
		
		[Column(Storage="_PostPay", DbType="TinyInt")]
		public System.Nullable<byte> PostPay
		{
			get
			{
				return this._PostPay;
			}
			set
			{
				if ((this._PostPay != value))
				{
					this._PostPay = value;
				}
			}
		}
		
		[Column(Storage="_ReplyPay", DbType="TinyInt")]
		public System.Nullable<byte> ReplyPay
		{
			get
			{
				return this._ReplyPay;
			}
			set
			{
				if ((this._ReplyPay != value))
				{
					this._ReplyPay = value;
				}
			}
		}
		
		[Column(Storage="_GoodPay", DbType="TinyInt")]
		public System.Nullable<byte> GoodPay
		{
			get
			{
				return this._GoodPay;
			}
			set
			{
				if ((this._GoodPay != value))
				{
					this._GoodPay = value;
				}
			}
		}
		
		[Column(Storage="_DelPost", DbType="TinyInt")]
		public System.Nullable<byte> DelPost
		{
			get
			{
				return this._DelPost;
			}
			set
			{
				if ((this._DelPost != value))
				{
					this._DelPost = value;
				}
			}
		}
		
		[Column(Storage="_DelReply", DbType="TinyInt")]
		public System.Nullable<byte> DelReply
		{
			get
			{
				return this._DelReply;
			}
			set
			{
				if ((this._DelReply != value))
				{
					this._DelReply = value;
				}
			}
		}
		
		[Column(Storage="_CancelGood", DbType="TinyInt")]
		public System.Nullable<byte> CancelGood
		{
			get
			{
				return this._CancelGood;
			}
			set
			{
				if ((this._CancelGood != value))
				{
					this._CancelGood = value;
				}
			}
		}
		
		[Column(Storage="_OnlineSep", DbType="Int")]
		public System.Nullable<int> OnlineSep
		{
			get
			{
				return this._OnlineSep;
			}
			set
			{
				if ((this._OnlineSep != value))
				{
					this._OnlineSep = value;
				}
			}
		}
		
		[Column(Storage="_RegPayScore", DbType="Int")]
		public System.Nullable<int> RegPayScore
		{
			get
			{
				return this._RegPayScore;
			}
			set
			{
				if ((this._RegPayScore != value))
				{
					this._RegPayScore = value;
				}
			}
		}
		
		[Column(Storage="_RegPayMoney", DbType="Int")]
		public System.Nullable<int> RegPayMoney
		{
			get
			{
				return this._RegPayMoney;
			}
			set
			{
				if ((this._RegPayMoney != value))
				{
					this._RegPayMoney = value;
				}
			}
		}
		
		[Column(Storage="_LoginPayScore", DbType="Int")]
		public System.Nullable<int> LoginPayScore
		{
			get
			{
				return this._LoginPayScore;
			}
			set
			{
				if ((this._LoginPayScore != value))
				{
					this._LoginPayScore = value;
				}
			}
		}
		
		[Column(Storage="_LoginPayMoney", DbType="Int")]
		public System.Nullable<int> LoginPayMoney
		{
			get
			{
				return this._LoginPayMoney;
			}
			set
			{
				if ((this._LoginPayMoney != value))
				{
					this._LoginPayMoney = value;
				}
			}
		}
		
		[Column(Storage="_IsCloseTopic", DbType="Bit NOT NULL")]
		public bool IsCloseTopic
		{
			get
			{
				return this._IsCloseTopic;
			}
			set
			{
				if ((this._IsCloseTopic != value))
				{
					this._IsCloseTopic = value;
				}
			}
		}
		
		[Column(Storage="_IsClosePost", DbType="Bit NOT NULL")]
		public bool IsClosePost
		{
			get
			{
				return this._IsClosePost;
			}
			set
			{
				if ((this._IsClosePost != value))
				{
					this._IsClosePost = value;
				}
			}
		}
		
		[Column(Storage="_IsUrlTrans", DbType="Bit NOT NULL")]
		public bool IsUrlTrans
		{
			get
			{
				return this._IsUrlTrans;
			}
			set
			{
				if ((this._IsUrlTrans != value))
				{
					this._IsUrlTrans = value;
				}
			}
		}
		
		[Column(Storage="_UrlTransExt", DbType="NVarChar(255)")]
		public string UrlTransExt
		{
			get
			{
				return this._UrlTransExt;
			}
			set
			{
				if ((this._UrlTransExt != value))
				{
					this._UrlTransExt = value;
				}
			}
		}
		
		[Column(Storage="_SkinName", DbType="NVarChar(255)")]
		public string SkinName
		{
			get
			{
				return this._SkinName;
			}
			set
			{
				if ((this._SkinName != value))
				{
					this._SkinName = value;
				}
			}
		}
		
		[Column(Storage="_TitleExt", DbType="NVarChar(255)")]
		public string TitleExt
		{
			get
			{
				return this._TitleExt;
			}
			set
			{
				if ((this._TitleExt != value))
				{
					this._TitleExt = value;
				}
			}
		}
		
		[Column(Storage="_TopicNumBase", DbType="SmallInt")]
		public System.Nullable<short> TopicNumBase
		{
			get
			{
				return this._TopicNumBase;
			}
			set
			{
				if ((this._TopicNumBase != value))
				{
					this._TopicNumBase = value;
				}
			}
		}
		
		[Column(Storage="_ReplyNumBase", DbType="SmallInt")]
		public System.Nullable<short> ReplyNumBase
		{
			get
			{
				return this._ReplyNumBase;
			}
			set
			{
				if ((this._ReplyNumBase != value))
				{
					this._ReplyNumBase = value;
				}
			}
		}
		
		[Column(Storage="_UserNumBase", DbType="SmallInt")]
		public System.Nullable<short> UserNumBase
		{
			get
			{
				return this._UserNumBase;
			}
			set
			{
				if ((this._UserNumBase != value))
				{
					this._UserNumBase = value;
				}
			}
		}
		
		[Column(Storage="_IsShowRecentCount", DbType="Bit")]
		public System.Nullable<bool> IsShowRecentCount
		{
			get
			{
				return this._IsShowRecentCount;
			}
			set
			{
				if ((this._IsShowRecentCount != value))
				{
					this._IsShowRecentCount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotFriend")]
	public partial class DotFriend
	{
		
		private int _ID;
		
		private string _UserID;
		
		private string _FriendUser;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		public DotFriend()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(255)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_FriendUser", DbType="NVarChar(255)")]
		public string FriendUser
		{
			get
			{
				return this._FriendUser;
			}
			set
			{
				if ((this._FriendUser != value))
				{
					this._FriendUser = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotLevelImg")]
	public partial class DotLevelImg
	{
		
		private int _ID;
		
		private string _LevelName;
		
		private string _ScoreArea;
		
		private string _Img;
		
		public DotLevelImg()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_LevelName", DbType="NVarChar(255)")]
		public string LevelName
		{
			get
			{
				return this._LevelName;
			}
			set
			{
				if ((this._LevelName != value))
				{
					this._LevelName = value;
				}
			}
		}
		
		[Column(Storage="_ScoreArea", DbType="NVarChar(255)")]
		public string ScoreArea
		{
			get
			{
				return this._ScoreArea;
			}
			set
			{
				if ((this._ScoreArea != value))
				{
					this._ScoreArea = value;
				}
			}
		}
		
		[Column(Storage="_Img", DbType="NVarChar(255)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this._Img = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotLink")]
	public partial class DotLink
	{
		
		private int _ID;
		
		private string _Type;
		
		private string _LText;
		
		private string _Pic;
		
		private string _Url;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _Webinfo;
		
		private bool _IsPass;
		
		private bool _IsIndex;
		
		public DotLink()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_LText", DbType="NVarChar(50)")]
		public string LText
		{
			get
			{
				return this._LText;
			}
			set
			{
				if ((this._LText != value))
				{
					this._LText = value;
				}
			}
		}
		
		[Column(Storage="_Pic", DbType="NVarChar(255)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this._Pic = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(50)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
		
		[Column(Name="webinfo", Storage="_Webinfo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Webinfo
		{
			get
			{
				return this._Webinfo;
			}
			set
			{
				if ((this._Webinfo != value))
				{
					this._Webinfo = value;
				}
			}
		}
		
		[Column(Storage="_IsPass", DbType="Bit NOT NULL")]
		public bool IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[Column(Storage="_IsIndex", DbType="Bit NOT NULL")]
		public bool IsIndex
		{
			get
			{
				return this._IsIndex;
			}
			set
			{
				if ((this._IsIndex != value))
				{
					this._IsIndex = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotMail")]
	public partial class DotMail
	{
		
		private int _MailID;
		
		private string _ToUser;
		
		private string _FromUser;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private bool _IsRead;
		
		private bool _IsDelete;
		
		public DotMail()
		{
		}
		
		[Column(Storage="_MailID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					this._MailID = value;
				}
			}
		}
		
		[Column(Storage="_ToUser", DbType="NVarChar(800)")]
		public string ToUser
		{
			get
			{
				return this._ToUser;
			}
			set
			{
				if ((this._ToUser != value))
				{
					this._ToUser = value;
				}
			}
		}
		
		[Column(Storage="_FromUser", DbType="NVarChar(800)")]
		public string FromUser
		{
			get
			{
				return this._FromUser;
			}
			set
			{
				if ((this._FromUser != value))
				{
					this._FromUser = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
		
		[Column(Storage="_IsRead", DbType="Bit NOT NULL")]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this._IsRead = value;
				}
			}
		}
		
		[Column(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this._IsDelete = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotMaxOnLine")]
	public partial class DotMaxOnLine
	{
		
		private int _MaxNum;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		public DotMaxOnLine()
		{
		}
		
		[Column(Storage="_MaxNum", DbType="Int NOT NULL")]
		public int MaxNum
		{
			get
			{
				return this._MaxNum;
			}
			set
			{
				if ((this._MaxNum != value))
				{
					this._MaxNum = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotOnLine")]
	public partial class DotOnLine
	{
		
		private string _UserID;
		
		private System.Nullable<System.DateTime> _LastActiveTime;
		
		private string _IP;
		
		private string _LocateType;
		
		private System.Nullable<int> _BigClassID;
		
		private System.Nullable<int> _SmallClassID;
		
		private string _LocateUrl;
		
		public DotOnLine()
		{
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_LastActiveTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastActiveTime
		{
			get
			{
				return this._LastActiveTime;
			}
			set
			{
				if ((this._LastActiveTime != value))
				{
					this._LastActiveTime = value;
				}
			}
		}
		
		[Column(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
		
		[Column(Storage="_LocateType", DbType="NVarChar(255)")]
		public string LocateType
		{
			get
			{
				return this._LocateType;
			}
			set
			{
				if ((this._LocateType != value))
				{
					this._LocateType = value;
				}
			}
		}
		
		[Column(Storage="_BigClassID", DbType="Int")]
		public System.Nullable<int> BigClassID
		{
			get
			{
				return this._BigClassID;
			}
			set
			{
				if ((this._BigClassID != value))
				{
					this._BigClassID = value;
				}
			}
		}
		
		[Column(Storage="_SmallClassID", DbType="Int")]
		public System.Nullable<int> SmallClassID
		{
			get
			{
				return this._SmallClassID;
			}
			set
			{
				if ((this._SmallClassID != value))
				{
					this._SmallClassID = value;
				}
			}
		}
		
		[Column(Storage="_LocateUrl", DbType="NVarChar(100)")]
		public string LocateUrl
		{
			get
			{
				return this._LocateUrl;
			}
			set
			{
				if ((this._LocateUrl != value))
				{
					this._LocateUrl = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotPreRnd")]
	public partial class DotPreRnd
	{
		
		private bool _IsFirst;
		
		private string _CookiePre;
		
		private System.Nullable<int> _SafeStart;
		
		public DotPreRnd()
		{
		}
		
		[Column(Storage="_IsFirst", DbType="Bit NOT NULL")]
		public bool IsFirst
		{
			get
			{
				return this._IsFirst;
			}
			set
			{
				if ((this._IsFirst != value))
				{
					this._IsFirst = value;
				}
			}
		}
		
		[Column(Storage="_CookiePre", DbType="NVarChar(255)")]
		public string CookiePre
		{
			get
			{
				return this._CookiePre;
			}
			set
			{
				if ((this._CookiePre != value))
				{
					this._CookiePre = value;
				}
			}
		}
		
		[Column(Storage="_SafeStart", DbType="Int")]
		public System.Nullable<int> SafeStart
		{
			get
			{
				return this._SafeStart;
			}
			set
			{
				if ((this._SafeStart != value))
				{
					this._SafeStart = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotReply")]
	public partial class DotReply
	{
		
		private int _ID;
		
		private System.Nullable<int> _TID;
		
		private string _UserID;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private string _AddOn;
		
		private bool _IsGuest;
		
		private bool _IsHideAddOn;
		
		private bool _IsScoreRank;
		
		private System.Nullable<int> _ScoreRank;
		
		private bool _IsMoneyRank;
		
		private System.Nullable<int> _MoneyRank;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		public DotReply()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_TID", DbType="Int")]
		public System.Nullable<int> TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this._TID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
		
		[Column(Storage="_AddOn", DbType="NVarChar(255)")]
		public string AddOn
		{
			get
			{
				return this._AddOn;
			}
			set
			{
				if ((this._AddOn != value))
				{
					this._AddOn = value;
				}
			}
		}
		
		[Column(Storage="_IsGuest", DbType="Bit NOT NULL")]
		public bool IsGuest
		{
			get
			{
				return this._IsGuest;
			}
			set
			{
				if ((this._IsGuest != value))
				{
					this._IsGuest = value;
				}
			}
		}
		
		[Column(Storage="_IsHideAddOn", DbType="Bit NOT NULL")]
		public bool IsHideAddOn
		{
			get
			{
				return this._IsHideAddOn;
			}
			set
			{
				if ((this._IsHideAddOn != value))
				{
					this._IsHideAddOn = value;
				}
			}
		}
		
		[Column(Storage="_IsScoreRank", DbType="Bit NOT NULL")]
		public bool IsScoreRank
		{
			get
			{
				return this._IsScoreRank;
			}
			set
			{
				if ((this._IsScoreRank != value))
				{
					this._IsScoreRank = value;
				}
			}
		}
		
		[Column(Storage="_ScoreRank", DbType="Int")]
		public System.Nullable<int> ScoreRank
		{
			get
			{
				return this._ScoreRank;
			}
			set
			{
				if ((this._ScoreRank != value))
				{
					this._ScoreRank = value;
				}
			}
		}
		
		[Column(Storage="_IsMoneyRank", DbType="Bit NOT NULL")]
		public bool IsMoneyRank
		{
			get
			{
				return this._IsMoneyRank;
			}
			set
			{
				if ((this._IsMoneyRank != value))
				{
					this._IsMoneyRank = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRank", DbType="Int")]
		public System.Nullable<int> MoneyRank
		{
			get
			{
				return this._MoneyRank;
			}
			set
			{
				if ((this._MoneyRank != value))
				{
					this._MoneyRank = value;
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotSmallClass")]
	public partial class DotSmallClass
	{
		
		private int _SmallClassID;
		
		private System.Nullable<int> _BigClassID;
		
		private string _SmallClassName;
		
		private System.Nullable<short> _SmallClassPos;
		
		private string _Info;
		
		private bool _IsShow;
		
		private bool _IsLock;
		
		private string _BoardMasters;
		
		public DotSmallClass()
		{
		}
		
		[Column(Storage="_SmallClassID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SmallClassID
		{
			get
			{
				return this._SmallClassID;
			}
			set
			{
				if ((this._SmallClassID != value))
				{
					this._SmallClassID = value;
				}
			}
		}
		
		[Column(Storage="_BigClassID", DbType="Int")]
		public System.Nullable<int> BigClassID
		{
			get
			{
				return this._BigClassID;
			}
			set
			{
				if ((this._BigClassID != value))
				{
					this._BigClassID = value;
				}
			}
		}
		
		[Column(Storage="_SmallClassName", DbType="NVarChar(50)")]
		public string SmallClassName
		{
			get
			{
				return this._SmallClassName;
			}
			set
			{
				if ((this._SmallClassName != value))
				{
					this._SmallClassName = value;
				}
			}
		}
		
		[Column(Storage="_SmallClassPos", DbType="SmallInt")]
		public System.Nullable<short> SmallClassPos
		{
			get
			{
				return this._SmallClassPos;
			}
			set
			{
				if ((this._SmallClassPos != value))
				{
					this._SmallClassPos = value;
				}
			}
		}
		
		[Column(Storage="_Info", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this._Info = value;
				}
			}
		}
		
		[Column(Storage="_IsShow", DbType="Bit NOT NULL")]
		public bool IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this._IsShow = value;
				}
			}
		}
		
		[Column(Storage="_IsLock", DbType="Bit NOT NULL")]
		public bool IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this._IsLock = value;
				}
			}
		}
		
		[Column(Storage="_BoardMasters", DbType="NVarChar(255)")]
		public string BoardMasters
		{
			get
			{
				return this._BoardMasters;
			}
			set
			{
				if ((this._BoardMasters != value))
				{
					this._BoardMasters = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotTopic")]
	public partial class DotTopic
	{
		
		private int _ID;
		
		private string _UserID;
		
		private System.Nullable<int> _BigClassID;
		
		private System.Nullable<int> _SmallClassID;
		
		private string _Title;
		
		private string _Content;
		
		private bool _IsLocked;
		
		private System.Nullable<short> _TopType;
		
		private bool _IsBest;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private System.Nullable<int> _ViewCount;
		
		private bool _IsBesting;
		
		private bool _IsDeleting;
		
		private bool _IsWorse;
		
		private bool _IsGuest;
		
		private bool _IsHide;
		
		private bool _IsHideAddon;
		
		private bool _IsReplyInMail;
		
		private bool _IsScoreRank;
		
		private System.Nullable<int> _ScoreRank;
		
		private bool _IsMoneyRank;
		
		private System.Nullable<int> _MoneyRank;
		
		private System.Nullable<int> _LastReplyID;
		
		private System.Nullable<System.DateTime> _LastReplyTime;
		
		private string _LastReplyUserID;
		
		private string _LastReplyContent;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		public DotTopic()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_BigClassID", DbType="Int")]
		public System.Nullable<int> BigClassID
		{
			get
			{
				return this._BigClassID;
			}
			set
			{
				if ((this._BigClassID != value))
				{
					this._BigClassID = value;
				}
			}
		}
		
		[Column(Storage="_SmallClassID", DbType="Int")]
		public System.Nullable<int> SmallClassID
		{
			get
			{
				return this._SmallClassID;
			}
			set
			{
				if ((this._SmallClassID != value))
				{
					this._SmallClassID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[Column(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this._IsLocked = value;
				}
			}
		}
		
		[Column(Storage="_TopType", DbType="SmallInt")]
		public System.Nullable<short> TopType
		{
			get
			{
				return this._TopType;
			}
			set
			{
				if ((this._TopType != value))
				{
					this._TopType = value;
				}
			}
		}
		
		[Column(Storage="_IsBest", DbType="Bit NOT NULL")]
		public bool IsBest
		{
			get
			{
				return this._IsBest;
			}
			set
			{
				if ((this._IsBest != value))
				{
					this._IsBest = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
		
		[Column(Storage="_ViewCount", DbType="Int")]
		public System.Nullable<int> ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this._ViewCount = value;
				}
			}
		}
		
		[Column(Storage="_IsBesting", DbType="Bit NOT NULL")]
		public bool IsBesting
		{
			get
			{
				return this._IsBesting;
			}
			set
			{
				if ((this._IsBesting != value))
				{
					this._IsBesting = value;
				}
			}
		}
		
		[Column(Storage="_IsDeleting", DbType="Bit NOT NULL")]
		public bool IsDeleting
		{
			get
			{
				return this._IsDeleting;
			}
			set
			{
				if ((this._IsDeleting != value))
				{
					this._IsDeleting = value;
				}
			}
		}
		
		[Column(Storage="_IsWorse", DbType="Bit NOT NULL")]
		public bool IsWorse
		{
			get
			{
				return this._IsWorse;
			}
			set
			{
				if ((this._IsWorse != value))
				{
					this._IsWorse = value;
				}
			}
		}
		
		[Column(Storage="_IsGuest", DbType="Bit NOT NULL")]
		public bool IsGuest
		{
			get
			{
				return this._IsGuest;
			}
			set
			{
				if ((this._IsGuest != value))
				{
					this._IsGuest = value;
				}
			}
		}
		
		[Column(Storage="_IsHide", DbType="Bit NOT NULL")]
		public bool IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
		
		[Column(Storage="_IsHideAddon", DbType="Bit NOT NULL")]
		public bool IsHideAddon
		{
			get
			{
				return this._IsHideAddon;
			}
			set
			{
				if ((this._IsHideAddon != value))
				{
					this._IsHideAddon = value;
				}
			}
		}
		
		[Column(Storage="_IsReplyInMail", DbType="Bit NOT NULL")]
		public bool IsReplyInMail
		{
			get
			{
				return this._IsReplyInMail;
			}
			set
			{
				if ((this._IsReplyInMail != value))
				{
					this._IsReplyInMail = value;
				}
			}
		}
		
		[Column(Storage="_IsScoreRank", DbType="Bit NOT NULL")]
		public bool IsScoreRank
		{
			get
			{
				return this._IsScoreRank;
			}
			set
			{
				if ((this._IsScoreRank != value))
				{
					this._IsScoreRank = value;
				}
			}
		}
		
		[Column(Storage="_ScoreRank", DbType="Int")]
		public System.Nullable<int> ScoreRank
		{
			get
			{
				return this._ScoreRank;
			}
			set
			{
				if ((this._ScoreRank != value))
				{
					this._ScoreRank = value;
				}
			}
		}
		
		[Column(Storage="_IsMoneyRank", DbType="Bit NOT NULL")]
		public bool IsMoneyRank
		{
			get
			{
				return this._IsMoneyRank;
			}
			set
			{
				if ((this._IsMoneyRank != value))
				{
					this._IsMoneyRank = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRank", DbType="Int")]
		public System.Nullable<int> MoneyRank
		{
			get
			{
				return this._MoneyRank;
			}
			set
			{
				if ((this._MoneyRank != value))
				{
					this._MoneyRank = value;
				}
			}
		}
		
		[Column(Storage="_LastReplyID", DbType="Int")]
		public System.Nullable<int> LastReplyID
		{
			get
			{
				return this._LastReplyID;
			}
			set
			{
				if ((this._LastReplyID != value))
				{
					this._LastReplyID = value;
				}
			}
		}
		
		[Column(Storage="_LastReplyTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastReplyTime
		{
			get
			{
				return this._LastReplyTime;
			}
			set
			{
				if ((this._LastReplyTime != value))
				{
					this._LastReplyTime = value;
				}
			}
		}
		
		[Column(Storage="_LastReplyUserID", DbType="NVarChar(255)")]
		public string LastReplyUserID
		{
			get
			{
				return this._LastReplyUserID;
			}
			set
			{
				if ((this._LastReplyUserID != value))
				{
					this._LastReplyUserID = value;
				}
			}
		}
		
		[Column(Storage="_LastReplyContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LastReplyContent
		{
			get
			{
				return this._LastReplyContent;
			}
			set
			{
				if ((this._LastReplyContent != value))
				{
					this._LastReplyContent = value;
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotUser")]
	public partial class DotUser
	{
		
		private int _UID;
		
		private string _UserID;
		
		private string _UserPass;
		
		private string _SysDotPass;
		
		private string _UserType;
		
		private string _EMail;
		
		private string _NickName;
		
		private string _RealName;
		
		private string _Sex;
		
		private string _PostCode;
		
		private string _School;
		
		private string _Pic;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _HomePage;
		
		private string _Info;
		
		private string _Signater;
		
		private string _Address;
		
		private string _Tel;
		
		private string _QQ;
		
		private string _MSN;
		
		private string _Question;
		
		private string _Answer;
		
		private bool _IsPassed;
		
		private bool _IsLocked;
		
		private System.Nullable<System.DateTime> _RegDate;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private string _LastIP;
		
		private System.Nullable<int> _Logtimes;
		
		private string _BigClassIDS;
		
		private string _SmallClassIDS;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<int> _DotMoney;
		
		public DotUser()
		{
		}
		
		[Column(Storage="_UID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_UserPass", DbType="NVarChar(50)")]
		public string UserPass
		{
			get
			{
				return this._UserPass;
			}
			set
			{
				if ((this._UserPass != value))
				{
					this._UserPass = value;
				}
			}
		}
		
		[Column(Storage="_SysDotPass", DbType="NVarChar(255)")]
		public string SysDotPass
		{
			get
			{
				return this._SysDotPass;
			}
			set
			{
				if ((this._SysDotPass != value))
				{
					this._SysDotPass = value;
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this._EMail = value;
				}
			}
		}
		
		[Column(Storage="_NickName", DbType="NVarChar(50)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this._NickName = value;
				}
			}
		}
		
		[Column(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="NVarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(50)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Storage="_School", DbType="NVarChar(50)")]
		public string School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this._School = value;
				}
			}
		}
		
		[Column(Storage="_Pic", DbType="NVarChar(255)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this._Pic = value;
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[Column(Storage="_HomePage", DbType="NVarChar(50)")]
		public string HomePage
		{
			get
			{
				return this._HomePage;
			}
			set
			{
				if ((this._HomePage != value))
				{
					this._HomePage = value;
				}
			}
		}
		
		[Column(Storage="_Info", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this._Info = value;
				}
			}
		}
		
		[Column(Storage="_Signater", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Signater
		{
			get
			{
				return this._Signater;
			}
			set
			{
				if ((this._Signater != value))
				{
					this._Signater = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="NVarChar(30)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[Column(Storage="_QQ", DbType="NVarChar(30)")]
		public string QQ
		{
			get
			{
				return this._QQ;
			}
			set
			{
				if ((this._QQ != value))
				{
					this._QQ = value;
				}
			}
		}
		
		[Column(Storage="_MSN", DbType="NVarChar(50)")]
		public string MSN
		{
			get
			{
				return this._MSN;
			}
			set
			{
				if ((this._MSN != value))
				{
					this._MSN = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(50)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[Column(Storage="_IsPassed", DbType="Bit NOT NULL")]
		public bool IsPassed
		{
			get
			{
				return this._IsPassed;
			}
			set
			{
				if ((this._IsPassed != value))
				{
					this._IsPassed = value;
				}
			}
		}
		
		[Column(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this._IsLocked = value;
				}
			}
		}
		
		[Column(Storage="_RegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this._RegDate = value;
				}
			}
		}
		
		[Column(Storage="_LastDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this._LastDate = value;
				}
			}
		}
		
		[Column(Storage="_LastIP", DbType="NVarChar(50)")]
		public string LastIP
		{
			get
			{
				return this._LastIP;
			}
			set
			{
				if ((this._LastIP != value))
				{
					this._LastIP = value;
				}
			}
		}
		
		[Column(Storage="_Logtimes", DbType="Int")]
		public System.Nullable<int> Logtimes
		{
			get
			{
				return this._Logtimes;
			}
			set
			{
				if ((this._Logtimes != value))
				{
					this._Logtimes = value;
				}
			}
		}
		
		[Column(Storage="_BigClassIDS", DbType="NVarChar(50)")]
		public string BigClassIDS
		{
			get
			{
				return this._BigClassIDS;
			}
			set
			{
				if ((this._BigClassIDS != value))
				{
					this._BigClassIDS = value;
				}
			}
		}
		
		[Column(Storage="_SmallClassIDS", DbType="NVarChar(50)")]
		public string SmallClassIDS
		{
			get
			{
				return this._SmallClassIDS;
			}
			set
			{
				if ((this._SmallClassIDS != value))
				{
					this._SmallClassIDS = value;
				}
			}
		}
		
		[Column(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[Column(Storage="_DotMoney", DbType="Int")]
		public System.Nullable<int> DotMoney
		{
			get
			{
				return this._DotMoney;
			}
			set
			{
				if ((this._DotMoney != value))
				{
					this._DotMoney = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotUserClass")]
	public partial class DotUserClass
	{
		
		private int _UcID;
		
		private string _UcName;
		
		private bool _IsDefault;
		
		public DotUserClass()
		{
		}
		
		[Column(Name="ucID", Storage="_UcID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UcID
		{
			get
			{
				return this._UcID;
			}
			set
			{
				if ((this._UcID != value))
				{
					this._UcID = value;
				}
			}
		}
		
		[Column(Name="ucName", Storage="_UcName", DbType="NVarChar(50)")]
		public string UcName
		{
			get
			{
				return this._UcName;
			}
			set
			{
				if ((this._UcName != value))
				{
					this._UcName = value;
				}
			}
		}
		
		[Column(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DotUserClassItem")]
	public partial class DotUserClassItem
	{
		
		private int _UiID;
		
		private System.Nullable<int> _UcID;
		
		private string _UiName;
		
		private string _UiArea;
		
		public DotUserClassItem()
		{
		}
		
		[Column(Name="uiID", Storage="_UiID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UiID
		{
			get
			{
				return this._UiID;
			}
			set
			{
				if ((this._UiID != value))
				{
					this._UiID = value;
				}
			}
		}
		
		[Column(Name="ucID", Storage="_UcID", DbType="Int")]
		public System.Nullable<int> UcID
		{
			get
			{
				return this._UcID;
			}
			set
			{
				if ((this._UcID != value))
				{
					this._UcID = value;
				}
			}
		}
		
		[Column(Name="uiName", Storage="_UiName", DbType="NVarChar(50)")]
		public string UiName
		{
			get
			{
				return this._UiName;
			}
			set
			{
				if ((this._UiName != value))
				{
					this._UiName = value;
				}
			}
		}
		
		[Column(Name="uiArea", Storage="_UiArea", DbType="NVarChar(50)")]
		public string UiArea
		{
			get
			{
				return this._UiArea;
			}
			set
			{
				if ((this._UiArea != value))
				{
					this._UiArea = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.OF_Answer")]
	public partial class OF_Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AnswerName;
		
		private string _Title;
		
		private string _AnswerContent;
		
		private System.Nullable<System.DateTime> _AnswerTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAnswerNameChanging(string value);
    partial void OnAnswerNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAnswerContentChanging(string value);
    partial void OnAnswerContentChanged();
    partial void OnAnswerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAnswerTimeChanged();
    #endregion
		
		public OF_Answer()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="answerName", Storage="_AnswerName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AnswerName
		{
			get
			{
				return this._AnswerName;
			}
			set
			{
				if ((this._AnswerName != value))
				{
					this.OnAnswerNameChanging(value);
					this.SendPropertyChanging();
					this._AnswerName = value;
					this.SendPropertyChanged("AnswerName");
					this.OnAnswerNameChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="answerContent", Storage="_AnswerContent", DbType="NVarChar(3000)")]
		public string AnswerContent
		{
			get
			{
				return this._AnswerContent;
			}
			set
			{
				if ((this._AnswerContent != value))
				{
					this.OnAnswerContentChanging(value);
					this.SendPropertyChanging();
					this._AnswerContent = value;
					this.SendPropertyChanged("AnswerContent");
					this.OnAnswerContentChanged();
				}
			}
		}
		
		[Column(Name="answerTime", Storage="_AnswerTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnswerTime
		{
			get
			{
				return this._AnswerTime;
			}
			set
			{
				if ((this._AnswerTime != value))
				{
					this.OnAnswerTimeChanging(value);
					this.SendPropertyChanging();
					this._AnswerTime = value;
					this.SendPropertyChanged("AnswerTime");
					this.OnAnswerTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_BillID_Status")]
	public partial class OF_BillID_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Bill_ID;
		
		private bool _UseStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBill_IDChanging(string value);
    partial void OnBill_IDChanged();
    partial void OnUseStatusChanging(bool value);
    partial void OnUseStatusChanged();
    #endregion
		
		public OF_BillID_Status()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Bill_ID", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UseStatus", DbType="Bit NOT NULL")]
		public bool UseStatus
		{
			get
			{
				return this._UseStatus;
			}
			set
			{
				if ((this._UseStatus != value))
				{
					this.OnUseStatusChanging(value);
					this.SendPropertyChanging();
					this._UseStatus = value;
					this.SendPropertyChanged("UseStatus");
					this.OnUseStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_BugCode")]
	public partial class OF_BugCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BugName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBugNameChanging(string value);
    partial void OnBugNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_BugCode()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugName
		{
			get
			{
				return this._BugName;
			}
			set
			{
				if ((this._BugName != value))
				{
					this.OnBugNameChanging(value);
					this.SendPropertyChanging();
					this._BugName = value;
					this.SendPropertyChanged("BugName");
					this.OnBugNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_BugMessageInfo")]
	public partial class OF_BugMessageInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _BugCode;
		
		private string _CarMainBug;
		
		private string _CarSecendBug;
		
		private string _Frequency;
		
		private string _Condition;
		
		private string _BugDeclare;
		
		private string _CVTOilDetection;
		
		private string _PressureSensor;
		
		private string _ActiveSensor;
		
		private string _PassivitySensor;
		
		private string _ShiftKnob;
		
		private string _OverLinkStatus;
		
		private string _OilSump;
		
		private string _PKey;
		
		private string _RKey;
		
		private string _NKey;
		
		private string _DKey;
		
		private string _SKey;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnCarMainBugChanging(string value);
    partial void OnCarMainBugChanged();
    partial void OnCarSecendBugChanging(string value);
    partial void OnCarSecendBugChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnBugDeclareChanging(string value);
    partial void OnBugDeclareChanged();
    partial void OnCVTOilDetectionChanging(string value);
    partial void OnCVTOilDetectionChanged();
    partial void OnPressureSensorChanging(string value);
    partial void OnPressureSensorChanged();
    partial void OnActiveSensorChanging(string value);
    partial void OnActiveSensorChanged();
    partial void OnPassivitySensorChanging(string value);
    partial void OnPassivitySensorChanged();
    partial void OnShiftKnobChanging(string value);
    partial void OnShiftKnobChanged();
    partial void OnOverLinkStatusChanging(string value);
    partial void OnOverLinkStatusChanged();
    partial void OnOilSumpChanging(string value);
    partial void OnOilSumpChanged();
    partial void OnPKeyChanging(string value);
    partial void OnPKeyChanged();
    partial void OnRKeyChanging(string value);
    partial void OnRKeyChanged();
    partial void OnNKeyChanging(string value);
    partial void OnNKeyChanged();
    partial void OnDKeyChanging(string value);
    partial void OnDKeyChanged();
    partial void OnSKeyChanging(string value);
    partial void OnSKeyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_BugMessageInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CarMainBug", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CarMainBug
		{
			get
			{
				return this._CarMainBug;
			}
			set
			{
				if ((this._CarMainBug != value))
				{
					this.OnCarMainBugChanging(value);
					this.SendPropertyChanging();
					this._CarMainBug = value;
					this.SendPropertyChanged("CarMainBug");
					this.OnCarMainBugChanged();
				}
			}
		}
		
		[Column(Storage="_CarSecendBug", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CarSecendBug
		{
			get
			{
				return this._CarSecendBug;
			}
			set
			{
				if ((this._CarSecendBug != value))
				{
					this.OnCarSecendBugChanging(value);
					this.SendPropertyChanging();
					this._CarSecendBug = value;
					this.SendPropertyChanged("CarSecendBug");
					this.OnCarSecendBugChanged();
				}
			}
		}
		
		[Column(Storage="_Frequency", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[Column(Storage="_BugDeclare", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugDeclare
		{
			get
			{
				return this._BugDeclare;
			}
			set
			{
				if ((this._BugDeclare != value))
				{
					this.OnBugDeclareChanging(value);
					this.SendPropertyChanging();
					this._BugDeclare = value;
					this.SendPropertyChanged("BugDeclare");
					this.OnBugDeclareChanged();
				}
			}
		}
		
		[Column(Storage="_CVTOilDetection", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CVTOilDetection
		{
			get
			{
				return this._CVTOilDetection;
			}
			set
			{
				if ((this._CVTOilDetection != value))
				{
					this.OnCVTOilDetectionChanging(value);
					this.SendPropertyChanging();
					this._CVTOilDetection = value;
					this.SendPropertyChanged("CVTOilDetection");
					this.OnCVTOilDetectionChanged();
				}
			}
		}
		
		[Column(Storage="_PressureSensor", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PressureSensor
		{
			get
			{
				return this._PressureSensor;
			}
			set
			{
				if ((this._PressureSensor != value))
				{
					this.OnPressureSensorChanging(value);
					this.SendPropertyChanging();
					this._PressureSensor = value;
					this.SendPropertyChanged("PressureSensor");
					this.OnPressureSensorChanged();
				}
			}
		}
		
		[Column(Storage="_ActiveSensor", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ActiveSensor
		{
			get
			{
				return this._ActiveSensor;
			}
			set
			{
				if ((this._ActiveSensor != value))
				{
					this.OnActiveSensorChanging(value);
					this.SendPropertyChanging();
					this._ActiveSensor = value;
					this.SendPropertyChanged("ActiveSensor");
					this.OnActiveSensorChanged();
				}
			}
		}
		
		[Column(Storage="_PassivitySensor", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PassivitySensor
		{
			get
			{
				return this._PassivitySensor;
			}
			set
			{
				if ((this._PassivitySensor != value))
				{
					this.OnPassivitySensorChanging(value);
					this.SendPropertyChanging();
					this._PassivitySensor = value;
					this.SendPropertyChanged("PassivitySensor");
					this.OnPassivitySensorChanged();
				}
			}
		}
		
		[Column(Storage="_ShiftKnob", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ShiftKnob
		{
			get
			{
				return this._ShiftKnob;
			}
			set
			{
				if ((this._ShiftKnob != value))
				{
					this.OnShiftKnobChanging(value);
					this.SendPropertyChanging();
					this._ShiftKnob = value;
					this.SendPropertyChanged("ShiftKnob");
					this.OnShiftKnobChanged();
				}
			}
		}
		
		[Column(Storage="_OverLinkStatus", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string OverLinkStatus
		{
			get
			{
				return this._OverLinkStatus;
			}
			set
			{
				if ((this._OverLinkStatus != value))
				{
					this.OnOverLinkStatusChanging(value);
					this.SendPropertyChanging();
					this._OverLinkStatus = value;
					this.SendPropertyChanged("OverLinkStatus");
					this.OnOverLinkStatusChanged();
				}
			}
		}
		
		[Column(Storage="_OilSump", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string OilSump
		{
			get
			{
				return this._OilSump;
			}
			set
			{
				if ((this._OilSump != value))
				{
					this.OnOilSumpChanging(value);
					this.SendPropertyChanging();
					this._OilSump = value;
					this.SendPropertyChanged("OilSump");
					this.OnOilSumpChanged();
				}
			}
		}
		
		[Column(Storage="_PKey", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PKey
		{
			get
			{
				return this._PKey;
			}
			set
			{
				if ((this._PKey != value))
				{
					this.OnPKeyChanging(value);
					this.SendPropertyChanging();
					this._PKey = value;
					this.SendPropertyChanged("PKey");
					this.OnPKeyChanged();
				}
			}
		}
		
		[Column(Storage="_RKey", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string RKey
		{
			get
			{
				return this._RKey;
			}
			set
			{
				if ((this._RKey != value))
				{
					this.OnRKeyChanging(value);
					this.SendPropertyChanging();
					this._RKey = value;
					this.SendPropertyChanged("RKey");
					this.OnRKeyChanged();
				}
			}
		}
		
		[Column(Storage="_NKey", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_DKey", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DKey
		{
			get
			{
				return this._DKey;
			}
			set
			{
				if ((this._DKey != value))
				{
					this.OnDKeyChanging(value);
					this.SendPropertyChanging();
					this._DKey = value;
					this.SendPropertyChanged("DKey");
					this.OnDKeyChanged();
				}
			}
		}
		
		[Column(Storage="_SKey", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SKey
		{
			get
			{
				return this._SKey;
			}
			set
			{
				if ((this._SKey != value))
				{
					this.OnSKeyChanging(value);
					this.SendPropertyChanging();
					this._SKey = value;
					this.SendPropertyChanged("SKey");
					this.OnSKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_CarBugStatus")]
	public partial class OF_CarBugStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BugCode;
		
		private string _BugName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnBugNameChanging(string value);
    partial void OnBugNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public OF_CarBugStatus()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BugName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BugName
		{
			get
			{
				return this._BugName;
			}
			set
			{
				if ((this._BugName != value))
				{
					this.OnBugNameChanging(value);
					this.SendPropertyChanging();
					this._BugName = value;
					this.SendPropertyChanged("BugName");
					this.OnBugNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_DownRecord")]
	public partial class OF_DownRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _FileID;
		
		private string _DownUser;
		
		private System.DateTime _DownTime;
		
		private string _DownContxt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFileIDChanging(System.Nullable<int> value);
    partial void OnFileIDChanged();
    partial void OnDownUserChanging(string value);
    partial void OnDownUserChanged();
    partial void OnDownTimeChanging(System.DateTime value);
    partial void OnDownTimeChanged();
    partial void OnDownContxtChanging(string value);
    partial void OnDownContxtChanged();
    #endregion
		
		public OF_DownRecord()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="Int")]
		public System.Nullable<int> FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_DownUser", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DownUser
		{
			get
			{
				return this._DownUser;
			}
			set
			{
				if ((this._DownUser != value))
				{
					this.OnDownUserChanging(value);
					this.SendPropertyChanging();
					this._DownUser = value;
					this.SendPropertyChanged("DownUser");
					this.OnDownUserChanged();
				}
			}
		}
		
		[Column(Storage="_DownTime", DbType="DateTime NOT NULL")]
		public System.DateTime DownTime
		{
			get
			{
				return this._DownTime;
			}
			set
			{
				if ((this._DownTime != value))
				{
					this.OnDownTimeChanging(value);
					this.SendPropertyChanging();
					this._DownTime = value;
					this.SendPropertyChanged("DownTime");
					this.OnDownTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DownContxt", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DownContxt
		{
			get
			{
				return this._DownContxt;
			}
			set
			{
				if ((this._DownContxt != value))
				{
					this.OnDownContxtChanging(value);
					this.SendPropertyChanging();
					this._DownContxt = value;
					this.SendPropertyChanged("DownContxt");
					this.OnDownContxtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_LoginLog")]
	public partial class OF_LoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserCode;
		
		private string _TrueName;
		
		private System.DateTime _Date;
		
		private string _IP;
		
		private int _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnTrueNameChanging(string value);
    partial void OnTrueNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    #endregion
		
		public OF_LoginLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TrueName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TrueName
		{
			get
			{
				return this._TrueName;
			}
			set
			{
				if ((this._TrueName != value))
				{
					this.OnTrueNameChanging(value);
					this.SendPropertyChanging();
					this._TrueName = value;
					this.SendPropertyChanged("TrueName");
					this.OnTrueNameChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_IP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_News")]
	public partial class OF_News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _NewsUrl;
		
		private System.DateTime _NewsDate;
		
		private int _NewsType;
		
		private EntityRef<OF_NewsType> _OF_NewsType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNewsUrlChanging(string value);
    partial void OnNewsUrlChanged();
    partial void OnNewsDateChanging(System.DateTime value);
    partial void OnNewsDateChanged();
    partial void OnNewsTypeChanging(int value);
    partial void OnNewsTypeChanged();
    #endregion
		
		public OF_News()
		{
			this._OF_NewsType = default(EntityRef<OF_NewsType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_NewsUrl", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string NewsUrl
		{
			get
			{
				return this._NewsUrl;
			}
			set
			{
				if ((this._NewsUrl != value))
				{
					this.OnNewsUrlChanging(value);
					this.SendPropertyChanging();
					this._NewsUrl = value;
					this.SendPropertyChanged("NewsUrl");
					this.OnNewsUrlChanged();
				}
			}
		}
		
		[Column(Storage="_NewsDate", DbType="DateTime NOT NULL")]
		public System.DateTime NewsDate
		{
			get
			{
				return this._NewsDate;
			}
			set
			{
				if ((this._NewsDate != value))
				{
					this.OnNewsDateChanging(value);
					this.SendPropertyChanging();
					this._NewsDate = value;
					this.SendPropertyChanged("NewsDate");
					this.OnNewsDateChanged();
				}
			}
		}
		
		[Column(Storage="_NewsType", DbType="Int NOT NULL")]
		public int NewsType
		{
			get
			{
				return this._NewsType;
			}
			set
			{
				if ((this._NewsType != value))
				{
					if (this._OF_NewsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewsTypeChanging(value);
					this.SendPropertyChanging();
					this._NewsType = value;
					this.SendPropertyChanged("NewsType");
					this.OnNewsTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_OF_News_OF_NewsType", Storage="_OF_NewsType", ThisKey="NewsType", IsForeignKey=true, DeleteOnNull=true)]
		public OF_NewsType OF_NewsType
		{
			get
			{
				return this._OF_NewsType.Entity;
			}
			set
			{
				OF_NewsType previousValue = this._OF_NewsType.Entity;
				if (((previousValue != value) 
							|| (this._OF_NewsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OF_NewsType.Entity = null;
						previousValue.OF_News.Remove(this);
					}
					this._OF_NewsType.Entity = value;
					if ((value != null))
					{
						value.OF_News.Add(this);
						this._NewsType = value.TypeID;
					}
					else
					{
						this._NewsType = default(int);
					}
					this.SendPropertyChanged("OF_NewsType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_NewsAudience")]
	public partial class OF_NewsAudience : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _NewsID;
		
		private string _AudienceType;
		
		private string _AudienceName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnAudienceTypeChanging(string value);
    partial void OnAudienceTypeChanged();
    partial void OnAudienceNameChanging(string value);
    partial void OnAudienceNameChanged();
    #endregion
		
		public OF_NewsAudience()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewsID", DbType="Int NOT NULL")]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[Column(Storage="_AudienceType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AudienceType
		{
			get
			{
				return this._AudienceType;
			}
			set
			{
				if ((this._AudienceType != value))
				{
					this.OnAudienceTypeChanging(value);
					this.SendPropertyChanging();
					this._AudienceType = value;
					this.SendPropertyChanged("AudienceType");
					this.OnAudienceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AudienceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AudienceName
		{
			get
			{
				return this._AudienceName;
			}
			set
			{
				if ((this._AudienceName != value))
				{
					this.OnAudienceNameChanging(value);
					this.SendPropertyChanging();
					this._AudienceName = value;
					this.SendPropertyChanged("AudienceName");
					this.OnAudienceNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_NewsFile")]
	public partial class OF_NewsFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Sender;
		
		private string _Title;
		
		private string _Contents;
		
		private string _FileNames;
		
		private string _FilePath;
		
		private string _Receiver;
		
		private System.Nullable<System.DateTime> _ReleaseTime;
		
		private string _NewsType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnFileNamesChanging(string value);
    partial void OnFileNamesChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnReleaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseTimeChanged();
    partial void OnNewsTypeChanging(string value);
    partial void OnNewsTypeChanged();
    #endregion
		
		public OF_NewsFile()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="sender", Storage="_Sender", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="contents", Storage="_Contents", DbType="NVarChar(3000)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[Column(Name="fileNames", Storage="_FileNames", DbType="VarChar(100)")]
		public string FileNames
		{
			get
			{
				return this._FileNames;
			}
			set
			{
				if ((this._FileNames != value))
				{
					this.OnFileNamesChanging(value);
					this.SendPropertyChanging();
					this._FileNames = value;
					this.SendPropertyChanged("FileNames");
					this.OnFileNamesChanged();
				}
			}
		}
		
		[Column(Name="filePath", Storage="_FilePath", DbType="VarChar(200)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Name="receiver", Storage="_Receiver", DbType="VarChar(30)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[Column(Name="releaseTime", Storage="_ReleaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseTime
		{
			get
			{
				return this._ReleaseTime;
			}
			set
			{
				if ((this._ReleaseTime != value))
				{
					this.OnReleaseTimeChanging(value);
					this.SendPropertyChanging();
					this._ReleaseTime = value;
					this.SendPropertyChanged("ReleaseTime");
					this.OnReleaseTimeChanged();
				}
			}
		}
		
		[Column(Name="newsType", Storage="_NewsType", DbType="VarChar(50)")]
		public string NewsType
		{
			get
			{
				return this._NewsType;
			}
			set
			{
				if ((this._NewsType != value))
				{
					this.OnNewsTypeChanging(value);
					this.SendPropertyChanging();
					this._NewsType = value;
					this.SendPropertyChanged("NewsType");
					this.OnNewsTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_NewsType")]
	public partial class OF_NewsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private EntitySet<OF_News> _OF_News;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public OF_NewsType()
		{
			this._OF_News = new EntitySet<OF_News>(new Action<OF_News>(this.attach_OF_News), new Action<OF_News>(this.detach_OF_News));
			OnCreated();
		}
		
		[Column(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Association(Name="FK_OF_News_OF_NewsType", Storage="_OF_News", OtherKey="NewsType", DeleteRule="CASCADE")]
		public EntitySet<OF_News> OF_News
		{
			get
			{
				return this._OF_News;
			}
			set
			{
				this._OF_News.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OF_News(OF_News entity)
		{
			this.SendPropertyChanging();
			entity.OF_NewsType = this;
		}
		
		private void detach_OF_News(OF_News entity)
		{
			this.SendPropertyChanging();
			entity.OF_NewsType = null;
		}
	}
	
	[Table(Name="dbo.OF_OrderForm_ArrivalInfo")]
	public partial class OF_OrderForm_ArrivalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ListID;
		
		private string _InBillID;
		
		private string _BatchNo;
		
		private System.DateTime _ActualDate;
		
		private decimal _ActuaQuantity;
		
		private decimal _EligibilityQuantity;
		
		private decimal _ConcessionQuantity;
		
		private decimal _DestructQuantity;
		
		private decimal _RejectQuantity;
		
		private string _QualityInfo;
		
		private EntityRef<OF_OrderFormGoods> _OF_OrderFormGoods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnListIDChanging(int value);
    partial void OnListIDChanged();
    partial void OnInBillIDChanging(string value);
    partial void OnInBillIDChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnActualDateChanging(System.DateTime value);
    partial void OnActualDateChanged();
    partial void OnActuaQuantityChanging(decimal value);
    partial void OnActuaQuantityChanged();
    partial void OnEligibilityQuantityChanging(decimal value);
    partial void OnEligibilityQuantityChanged();
    partial void OnConcessionQuantityChanging(decimal value);
    partial void OnConcessionQuantityChanged();
    partial void OnDestructQuantityChanging(decimal value);
    partial void OnDestructQuantityChanged();
    partial void OnRejectQuantityChanging(decimal value);
    partial void OnRejectQuantityChanged();
    partial void OnQualityInfoChanging(string value);
    partial void OnQualityInfoChanged();
    #endregion
		
		public OF_OrderForm_ArrivalInfo()
		{
			this._OF_OrderFormGoods = default(EntityRef<OF_OrderFormGoods>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ListID", DbType="Int NOT NULL")]
		public int ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					if (this._OF_OrderFormGoods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[Column(Storage="_InBillID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InBillID
		{
			get
			{
				return this._InBillID;
			}
			set
			{
				if ((this._InBillID != value))
				{
					this.OnInBillIDChanging(value);
					this.SendPropertyChanging();
					this._InBillID = value;
					this.SendPropertyChanged("InBillID");
					this.OnInBillIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[Column(Storage="_ActualDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActualDate
		{
			get
			{
				return this._ActualDate;
			}
			set
			{
				if ((this._ActualDate != value))
				{
					this.OnActualDateChanging(value);
					this.SendPropertyChanging();
					this._ActualDate = value;
					this.SendPropertyChanged("ActualDate");
					this.OnActualDateChanged();
				}
			}
		}
		
		[Column(Storage="_ActuaQuantity", DbType="Decimal(18,2) NOT NULL")]
		public decimal ActuaQuantity
		{
			get
			{
				return this._ActuaQuantity;
			}
			set
			{
				if ((this._ActuaQuantity != value))
				{
					this.OnActuaQuantityChanging(value);
					this.SendPropertyChanging();
					this._ActuaQuantity = value;
					this.SendPropertyChanged("ActuaQuantity");
					this.OnActuaQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_EligibilityQuantity", DbType="Decimal(18,3) NOT NULL")]
		public decimal EligibilityQuantity
		{
			get
			{
				return this._EligibilityQuantity;
			}
			set
			{
				if ((this._EligibilityQuantity != value))
				{
					this.OnEligibilityQuantityChanging(value);
					this.SendPropertyChanging();
					this._EligibilityQuantity = value;
					this.SendPropertyChanged("EligibilityQuantity");
					this.OnEligibilityQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_ConcessionQuantity", DbType="Decimal(18,2) NOT NULL")]
		public decimal ConcessionQuantity
		{
			get
			{
				return this._ConcessionQuantity;
			}
			set
			{
				if ((this._ConcessionQuantity != value))
				{
					this.OnConcessionQuantityChanging(value);
					this.SendPropertyChanging();
					this._ConcessionQuantity = value;
					this.SendPropertyChanged("ConcessionQuantity");
					this.OnConcessionQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_DestructQuantity", DbType="Decimal(18,2) NOT NULL")]
		public decimal DestructQuantity
		{
			get
			{
				return this._DestructQuantity;
			}
			set
			{
				if ((this._DestructQuantity != value))
				{
					this.OnDestructQuantityChanging(value);
					this.SendPropertyChanging();
					this._DestructQuantity = value;
					this.SendPropertyChanged("DestructQuantity");
					this.OnDestructQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_RejectQuantity", DbType="Decimal(18,2) NOT NULL")]
		public decimal RejectQuantity
		{
			get
			{
				return this._RejectQuantity;
			}
			set
			{
				if ((this._RejectQuantity != value))
				{
					this.OnRejectQuantityChanging(value);
					this.SendPropertyChanging();
					this._RejectQuantity = value;
					this.SendPropertyChanged("RejectQuantity");
					this.OnRejectQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_QualityInfo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QualityInfo
		{
			get
			{
				return this._QualityInfo;
			}
			set
			{
				if ((this._QualityInfo != value))
				{
					this.OnQualityInfoChanging(value);
					this.SendPropertyChanging();
					this._QualityInfo = value;
					this.SendPropertyChanged("QualityInfo");
					this.OnQualityInfoChanged();
				}
			}
		}
		
		[Association(Name="FK_OF_OrderForm_ArrivalInfo_OF_OrderFormGoods", Storage="_OF_OrderFormGoods", ThisKey="ListID", IsForeignKey=true, DeleteOnNull=true)]
		public OF_OrderFormGoods OF_OrderFormGoods
		{
			get
			{
				return this._OF_OrderFormGoods.Entity;
			}
			set
			{
				OF_OrderFormGoods previousValue = this._OF_OrderFormGoods.Entity;
				if (((previousValue != value) 
							|| (this._OF_OrderFormGoods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OF_OrderFormGoods.Entity = null;
						previousValue.OF_OrderForm_ArrivalInfo.Remove(this);
					}
					this._OF_OrderFormGoods.Entity = value;
					if ((value != null))
					{
						value.OF_OrderForm_ArrivalInfo.Add(this);
						this._ListID = value.ID;
					}
					else
					{
						this._ListID = default(int);
					}
					this.SendPropertyChanged("OF_OrderFormGoods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OF_OrderFormGoods")]
	public partial class OF_OrderFormGoods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OrderFormNumber;
		
		private string _GoodsCode;
		
		private string _GoodsName;
		
		private string _Spec;
		
		private System.DateTime _ArriveTime;
		
		private decimal _OrderCount;
		
		private bool _IsIncept;
		
		private string _Status;
		
		private EntitySet<OF_OrderForm_ArrivalInfo> _OF_OrderForm_ArrivalInfo;
		
		private EntityRef<OF_OrderFormInfo> _OF_OrderFormInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderFormNumberChanging(string value);
    partial void OnOrderFormNumberChanged();
    partial void OnGoodsCodeChanging(string value);
    partial void OnGoodsCodeChanged();
    partial void OnGoodsNameChanging(string value);
    partial void OnGoodsNameChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnArriveTimeChanging(System.DateTime value);
    partial void OnArriveTimeChanged();
    partial void OnOrderCountChanging(decimal value);
    partial void OnOrderCountChanged();
    partial void OnIsInceptChanging(bool value);
    partial void OnIsInceptChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public OF_OrderFormGoods()
		{
			this._OF_OrderForm_ArrivalInfo = new EntitySet<OF_OrderForm_ArrivalInfo>(new Action<OF_OrderForm_ArrivalInfo>(this.attach_OF_OrderForm_ArrivalInfo), new Action<OF_OrderForm_ArrivalInfo>(this.detach_OF_OrderForm_ArrivalInfo));
			this._OF_OrderFormInfo = default(EntityRef<OF_OrderFormInfo>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrderFormNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderFormNumber
		{
			get
			{
				return this._OrderFormNumber;
			}
			set
			{
				if ((this._OrderFormNumber != value))
				{
					if (this._OF_OrderFormInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderFormNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderFormNumber = value;
					this.SendPropertyChanged("OrderFormNumber");
					this.OnOrderFormNumberChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GoodsCode
		{
			get
			{
				return this._GoodsCode;
			}
			set
			{
				if ((this._GoodsCode != value))
				{
					this.OnGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._GoodsCode = value;
					this.SendPropertyChanged("GoodsCode");
					this.OnGoodsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GoodsName
		{
			get
			{
				return this._GoodsName;
			}
			set
			{
				if ((this._GoodsName != value))
				{
					this.OnGoodsNameChanging(value);
					this.SendPropertyChanging();
					this._GoodsName = value;
					this.SendPropertyChanged("GoodsName");
					this.OnGoodsNameChanged();
				}
			}
		}
		
		[Column(Storage="_Spec", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[Column(Storage="_ArriveTime", DbType="DateTime NOT NULL")]
		public System.DateTime ArriveTime
		{
			get
			{
				return this._ArriveTime;
			}
			set
			{
				if ((this._ArriveTime != value))
				{
					this.OnArriveTimeChanging(value);
					this.SendPropertyChanging();
					this._ArriveTime = value;
					this.SendPropertyChanged("ArriveTime");
					this.OnArriveTimeChanged();
				}
			}
		}
		
		[Column(Storage="_OrderCount", DbType="Decimal(18,3) NOT NULL")]
		public decimal OrderCount
		{
			get
			{
				return this._OrderCount;
			}
			set
			{
				if ((this._OrderCount != value))
				{
					this.OnOrderCountChanging(value);
					this.SendPropertyChanging();
					this._OrderCount = value;
					this.SendPropertyChanged("OrderCount");
					this.OnOrderCountChanged();
				}
			}
		}
		
		[Column(Storage="_IsIncept", DbType="Bit NOT NULL")]
		public bool IsIncept
		{
			get
			{
				return this._IsIncept;
			}
			set
			{
				if ((this._IsIncept != value))
				{
					this.OnIsInceptChanging(value);
					this.SendPropertyChanging();
					this._IsIncept = value;
					this.SendPropertyChanged("IsIncept");
					this.OnIsInceptChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="FK_OF_OrderForm_ArrivalInfo_OF_OrderFormGoods", Storage="_OF_OrderForm_ArrivalInfo", OtherKey="ListID", DeleteRule="CASCADE")]
		public EntitySet<OF_OrderForm_ArrivalInfo> OF_OrderForm_ArrivalInfo
		{
			get
			{
				return this._OF_OrderForm_ArrivalInfo;
			}
			set
			{
				this._OF_OrderForm_ArrivalInfo.Assign(value);
			}
		}
		
		[Association(Name="FK_OF_OrderFormGoods_OF_OrderFormInfo", Storage="_OF_OrderFormInfo", ThisKey="OrderFormNumber", IsForeignKey=true, DeleteOnNull=true)]
		public OF_OrderFormInfo OF_OrderFormInfo
		{
			get
			{
				return this._OF_OrderFormInfo.Entity;
			}
			set
			{
				OF_OrderFormInfo previousValue = this._OF_OrderFormInfo.Entity;
				if (((previousValue != value) 
							|| (this._OF_OrderFormInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OF_OrderFormInfo.Entity = null;
						previousValue.OF_OrderFormGoods.Remove(this);
					}
					this._OF_OrderFormInfo.Entity = value;
					if ((value != null))
					{
						value.OF_OrderFormGoods.Add(this);
						this._OrderFormNumber = value.OrderFormNumber;
					}
					else
					{
						this._OrderFormNumber = default(string);
					}
					this.SendPropertyChanged("OF_OrderFormInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OF_OrderForm_ArrivalInfo(OF_OrderForm_ArrivalInfo entity)
		{
			this.SendPropertyChanging();
			entity.OF_OrderFormGoods = this;
		}
		
		private void detach_OF_OrderForm_ArrivalInfo(OF_OrderForm_ArrivalInfo entity)
		{
			this.SendPropertyChanging();
			entity.OF_OrderFormGoods = null;
		}
	}
	
	[Table(Name="dbo.OF_OrderFormInfo")]
	public partial class OF_OrderFormInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderFormNumber;
		
		private string _Provider;
		
		private string _Buyer;
		
		private string _ProviderLinkMan;
		
		private string _ProviderLinkMode;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntitySet<OF_OrderFormGoods> _OF_OrderFormGoods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderFormNumberChanging(string value);
    partial void OnOrderFormNumberChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnBuyerChanging(string value);
    partial void OnBuyerChanged();
    partial void OnProviderLinkManChanging(string value);
    partial void OnProviderLinkManChanged();
    partial void OnProviderLinkModeChanging(string value);
    partial void OnProviderLinkModeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public OF_OrderFormInfo()
		{
			this._OF_OrderFormGoods = new EntitySet<OF_OrderFormGoods>(new Action<OF_OrderFormGoods>(this.attach_OF_OrderFormGoods), new Action<OF_OrderFormGoods>(this.detach_OF_OrderFormGoods));
			OnCreated();
		}
		
		[Column(Storage="_OrderFormNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderFormNumber
		{
			get
			{
				return this._OrderFormNumber;
			}
			set
			{
				if ((this._OrderFormNumber != value))
				{
					this.OnOrderFormNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderFormNumber = value;
					this.SendPropertyChanged("OrderFormNumber");
					this.OnOrderFormNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Provider", DbType="VarChar(50)")]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[Column(Storage="_Buyer", DbType="VarChar(50)")]
		public string Buyer
		{
			get
			{
				return this._Buyer;
			}
			set
			{
				if ((this._Buyer != value))
				{
					this.OnBuyerChanging(value);
					this.SendPropertyChanging();
					this._Buyer = value;
					this.SendPropertyChanged("Buyer");
					this.OnBuyerChanged();
				}
			}
		}
		
		[Column(Storage="_ProviderLinkMan", DbType="VarChar(50)")]
		public string ProviderLinkMan
		{
			get
			{
				return this._ProviderLinkMan;
			}
			set
			{
				if ((this._ProviderLinkMan != value))
				{
					this.OnProviderLinkManChanging(value);
					this.SendPropertyChanging();
					this._ProviderLinkMan = value;
					this.SendPropertyChanged("ProviderLinkMan");
					this.OnProviderLinkManChanged();
				}
			}
		}
		
		[Column(Storage="_ProviderLinkMode", DbType="VarChar(50)")]
		public string ProviderLinkMode
		{
			get
			{
				return this._ProviderLinkMode;
			}
			set
			{
				if ((this._ProviderLinkMode != value))
				{
					this.OnProviderLinkModeChanging(value);
					this.SendPropertyChanging();
					this._ProviderLinkMode = value;
					this.SendPropertyChanged("ProviderLinkMode");
					this.OnProviderLinkModeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Association(Name="FK_OF_OrderFormGoods_OF_OrderFormInfo", Storage="_OF_OrderFormGoods", OtherKey="OrderFormNumber", DeleteRule="CASCADE")]
		public EntitySet<OF_OrderFormGoods> OF_OrderFormGoods
		{
			get
			{
				return this._OF_OrderFormGoods;
			}
			set
			{
				this._OF_OrderFormGoods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OF_OrderFormGoods(OF_OrderFormGoods entity)
		{
			this.SendPropertyChanging();
			entity.OF_OrderFormInfo = this;
		}
		
		private void detach_OF_OrderFormGoods(OF_OrderFormGoods entity)
		{
			this.SendPropertyChanging();
			entity.OF_OrderFormInfo = null;
		}
	}
	
	[Table(Name="dbo.Reply 查询")]
	public partial class Reply查询
	{
		
		private int _Uid;
		
		private string _Smallclassids;
		
		public Reply查询()
		{
		}
		
		[Column(Name="uid", Storage="_Uid", DbType="Int NOT NULL")]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this._Uid = value;
				}
			}
		}
		
		[Column(Name="smallclassids", Storage="_Smallclassids", DbType="NVarChar(50)")]
		public string Smallclassids
		{
			get
			{
				return this._Smallclassids;
			}
			set
			{
				if ((this._Smallclassids != value))
				{
					this._Smallclassids = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.S_AfterService")]
	public partial class S_AfterService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _MessageSource;
		
		private string _ServerType;
		
		private string _ContentType;
		
		private string _AcceptName;
		
		private System.Nullable<System.DateTime> _AcceptTime;
		
		private string _SiteName;
		
		private string _LinkTel;
		
		private string _UserName;
		
		private string _UserTel;
		
		private string _UserAddress;
		
		private string _CarModel;
		
		private string _CVTCode;
		
		private string _CVTID;
		
		private string _ChassisNum;
		
		private string _BugAddress;
		
		private string _BuyCarTime;
		
		private string _RunMileage;
		
		private string _UseProperty;
		
		private string _UserAttitude;
		
		private string _BugDescribe;
		
		private string _ServiceIdea;
		
		private string _HelpMoney;
		
		private string _ProcessMode;
		
		private string _ProcessName;
		
		private System.Nullable<System.DateTime> _ProcessTime;
		
		private string _DiagnoseSituation;
		
		private string _LocaleProcess;
		
		private string _Solution;
		
		private string _ProcessResult;
		
		private string _CheckName;
		
		private System.Nullable<System.DateTime> _CheckTime;
		
		private string _RepairQuality;
		
		private string _ServiceAttitude;
		
		private string _IsCharge;
		
		private string _CVTStatus;
		
		private System.Nullable<decimal> _Amount;
		
		private string _FailureResults;
		
		private string _ReturnName;
		
		private System.Nullable<System.DateTime> _ReturnTime;
		
		private string _FKBillID;
		
		private string _Status;
		
		private string _PY;
		
		private string _WB;
		
		private System.Nullable<System.DateTime> _CustomerDate;
		
		private System.Nullable<System.DateTime> _NoticeDate;
		
		private System.Nullable<System.DateTime> _StrategyDate;
		
		private System.Nullable<System.DateTime> _ApplicantDate;
		
		private string _Applicant;
		
		private string _TCUCode;
		
		private string _NewSoftware;
		
		private string _IsThreeGuarantees;
		
		private string _NewSanB;
		
		private System.Nullable<bool> _IsServiceStock;
		
		private System.Nullable<bool> _IsCVTBug;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnMessageSourceChanging(string value);
    partial void OnMessageSourceChanged();
    partial void OnServerTypeChanging(string value);
    partial void OnServerTypeChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnAcceptNameChanging(string value);
    partial void OnAcceptNameChanged();
    partial void OnAcceptTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptTimeChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnLinkTelChanging(string value);
    partial void OnLinkTelChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTelChanging(string value);
    partial void OnUserTelChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnCarModelChanging(string value);
    partial void OnCarModelChanged();
    partial void OnCVTCodeChanging(string value);
    partial void OnCVTCodeChanged();
    partial void OnCVTIDChanging(string value);
    partial void OnCVTIDChanged();
    partial void OnChassisNumChanging(string value);
    partial void OnChassisNumChanged();
    partial void OnBugAddressChanging(string value);
    partial void OnBugAddressChanged();
    partial void OnBuyCarTimeChanging(string value);
    partial void OnBuyCarTimeChanged();
    partial void OnRunMileageChanging(string value);
    partial void OnRunMileageChanged();
    partial void OnUsePropertyChanging(string value);
    partial void OnUsePropertyChanged();
    partial void OnUserAttitudeChanging(string value);
    partial void OnUserAttitudeChanged();
    partial void OnBugDescribeChanging(string value);
    partial void OnBugDescribeChanged();
    partial void OnServiceIdeaChanging(string value);
    partial void OnServiceIdeaChanged();
    partial void OnHelpMoneyChanging(string value);
    partial void OnHelpMoneyChanged();
    partial void OnProcessModeChanging(string value);
    partial void OnProcessModeChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessTimeChanged();
    partial void OnDiagnoseSituationChanging(string value);
    partial void OnDiagnoseSituationChanged();
    partial void OnLocaleProcessChanging(string value);
    partial void OnLocaleProcessChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnProcessResultChanging(string value);
    partial void OnProcessResultChanged();
    partial void OnCheckNameChanging(string value);
    partial void OnCheckNameChanged();
    partial void OnCheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckTimeChanged();
    partial void OnRepairQualityChanging(string value);
    partial void OnRepairQualityChanged();
    partial void OnServiceAttitudeChanging(string value);
    partial void OnServiceAttitudeChanged();
    partial void OnIsChargeChanging(string value);
    partial void OnIsChargeChanged();
    partial void OnCVTStatusChanging(string value);
    partial void OnCVTStatusChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnFailureResultsChanging(string value);
    partial void OnFailureResultsChanged();
    partial void OnReturnNameChanging(string value);
    partial void OnReturnNameChanged();
    partial void OnReturnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnTimeChanged();
    partial void OnFKBillIDChanging(string value);
    partial void OnFKBillIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPYChanging(string value);
    partial void OnPYChanged();
    partial void OnWBChanging(string value);
    partial void OnWBChanged();
    partial void OnCustomerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerDateChanged();
    partial void OnNoticeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNoticeDateChanged();
    partial void OnStrategyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStrategyDateChanged();
    partial void OnApplicantDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicantDateChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnTCUCodeChanging(string value);
    partial void OnTCUCodeChanged();
    partial void OnNewSoftwareChanging(string value);
    partial void OnNewSoftwareChanged();
    partial void OnIsThreeGuaranteesChanging(string value);
    partial void OnIsThreeGuaranteesChanged();
    partial void OnNewSanBChanging(string value);
    partial void OnNewSanBChanged();
    partial void OnIsServiceStockChanging(System.Nullable<bool> value);
    partial void OnIsServiceStockChanged();
    partial void OnIsCVTBugChanging(System.Nullable<bool> value);
    partial void OnIsCVTBugChanged();
    #endregion
		
		public S_AfterService()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageSource", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageSource
		{
			get
			{
				return this._MessageSource;
			}
			set
			{
				if ((this._MessageSource != value))
				{
					this.OnMessageSourceChanging(value);
					this.SendPropertyChanging();
					this._MessageSource = value;
					this.SendPropertyChanged("MessageSource");
					this.OnMessageSourceChanged();
				}
			}
		}
		
		[Column(Storage="_ServerType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ServerType
		{
			get
			{
				return this._ServerType;
			}
			set
			{
				if ((this._ServerType != value))
				{
					this.OnServerTypeChanging(value);
					this.SendPropertyChanging();
					this._ServerType = value;
					this.SendPropertyChanged("ServerType");
					this.OnServerTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AcceptName
		{
			get
			{
				return this._AcceptName;
			}
			set
			{
				if ((this._AcceptName != value))
				{
					this.OnAcceptNameChanging(value);
					this.SendPropertyChanging();
					this._AcceptName = value;
					this.SendPropertyChanged("AcceptName");
					this.OnAcceptNameChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptTime
		{
			get
			{
				return this._AcceptTime;
			}
			set
			{
				if ((this._AcceptTime != value))
				{
					this.OnAcceptTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptTime = value;
					this.SendPropertyChanged("AcceptTime");
					this.OnAcceptTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_LinkTel", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LinkTel
		{
			get
			{
				return this._LinkTel;
			}
			set
			{
				if ((this._LinkTel != value))
				{
					this.OnLinkTelChanging(value);
					this.SendPropertyChanging();
					this._LinkTel = value;
					this.SendPropertyChanged("LinkTel");
					this.OnLinkTelChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserTel", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserTel
		{
			get
			{
				return this._UserTel;
			}
			set
			{
				if ((this._UserTel != value))
				{
					this.OnUserTelChanging(value);
					this.SendPropertyChanging();
					this._UserTel = value;
					this.SendPropertyChanged("UserTel");
					this.OnUserTelChanged();
				}
			}
		}
		
		[Column(Storage="_UserAddress", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[Column(Storage="_CarModel", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CarModel
		{
			get
			{
				return this._CarModel;
			}
			set
			{
				if ((this._CarModel != value))
				{
					this.OnCarModelChanging(value);
					this.SendPropertyChanging();
					this._CarModel = value;
					this.SendPropertyChanged("CarModel");
					this.OnCarModelChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCode", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CVTCode
		{
			get
			{
				return this._CVTCode;
			}
			set
			{
				if ((this._CVTCode != value))
				{
					this.OnCVTCodeChanging(value);
					this.SendPropertyChanging();
					this._CVTCode = value;
					this.SendPropertyChanged("CVTCode");
					this.OnCVTCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTID", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CVTID
		{
			get
			{
				return this._CVTID;
			}
			set
			{
				if ((this._CVTID != value))
				{
					this.OnCVTIDChanging(value);
					this.SendPropertyChanging();
					this._CVTID = value;
					this.SendPropertyChanged("CVTID");
					this.OnCVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChassisNum", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ChassisNum
		{
			get
			{
				return this._ChassisNum;
			}
			set
			{
				if ((this._ChassisNum != value))
				{
					this.OnChassisNumChanging(value);
					this.SendPropertyChanging();
					this._ChassisNum = value;
					this.SendPropertyChanged("ChassisNum");
					this.OnChassisNumChanged();
				}
			}
		}
		
		[Column(Storage="_BugAddress", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugAddress
		{
			get
			{
				return this._BugAddress;
			}
			set
			{
				if ((this._BugAddress != value))
				{
					this.OnBugAddressChanging(value);
					this.SendPropertyChanging();
					this._BugAddress = value;
					this.SendPropertyChanged("BugAddress");
					this.OnBugAddressChanged();
				}
			}
		}
		
		[Column(Storage="_BuyCarTime", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BuyCarTime
		{
			get
			{
				return this._BuyCarTime;
			}
			set
			{
				if ((this._BuyCarTime != value))
				{
					this.OnBuyCarTimeChanging(value);
					this.SendPropertyChanging();
					this._BuyCarTime = value;
					this.SendPropertyChanged("BuyCarTime");
					this.OnBuyCarTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RunMileage", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string RunMileage
		{
			get
			{
				return this._RunMileage;
			}
			set
			{
				if ((this._RunMileage != value))
				{
					this.OnRunMileageChanging(value);
					this.SendPropertyChanging();
					this._RunMileage = value;
					this.SendPropertyChanged("RunMileage");
					this.OnRunMileageChanged();
				}
			}
		}
		
		[Column(Storage="_UseProperty", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UseProperty
		{
			get
			{
				return this._UseProperty;
			}
			set
			{
				if ((this._UseProperty != value))
				{
					this.OnUsePropertyChanging(value);
					this.SendPropertyChanging();
					this._UseProperty = value;
					this.SendPropertyChanged("UseProperty");
					this.OnUsePropertyChanged();
				}
			}
		}
		
		[Column(Storage="_UserAttitude", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserAttitude
		{
			get
			{
				return this._UserAttitude;
			}
			set
			{
				if ((this._UserAttitude != value))
				{
					this.OnUserAttitudeChanging(value);
					this.SendPropertyChanging();
					this._UserAttitude = value;
					this.SendPropertyChanged("UserAttitude");
					this.OnUserAttitudeChanged();
				}
			}
		}
		
		[Column(Storage="_BugDescribe", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugDescribe
		{
			get
			{
				return this._BugDescribe;
			}
			set
			{
				if ((this._BugDescribe != value))
				{
					this.OnBugDescribeChanging(value);
					this.SendPropertyChanging();
					this._BugDescribe = value;
					this.SendPropertyChanged("BugDescribe");
					this.OnBugDescribeChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceIdea", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ServiceIdea
		{
			get
			{
				return this._ServiceIdea;
			}
			set
			{
				if ((this._ServiceIdea != value))
				{
					this.OnServiceIdeaChanging(value);
					this.SendPropertyChanging();
					this._ServiceIdea = value;
					this.SendPropertyChanged("ServiceIdea");
					this.OnServiceIdeaChanged();
				}
			}
		}
		
		[Column(Storage="_HelpMoney", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string HelpMoney
		{
			get
			{
				return this._HelpMoney;
			}
			set
			{
				if ((this._HelpMoney != value))
				{
					this.OnHelpMoneyChanging(value);
					this.SendPropertyChanging();
					this._HelpMoney = value;
					this.SendPropertyChanged("HelpMoney");
					this.OnHelpMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessMode", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessMode
		{
			get
			{
				return this._ProcessMode;
			}
			set
			{
				if ((this._ProcessMode != value))
				{
					this.OnProcessModeChanging(value);
					this.SendPropertyChanging();
					this._ProcessMode = value;
					this.SendPropertyChanged("ProcessMode");
					this.OnProcessModeChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessTime
		{
			get
			{
				return this._ProcessTime;
			}
			set
			{
				if ((this._ProcessTime != value))
				{
					this.OnProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessTime = value;
					this.SendPropertyChanged("ProcessTime");
					this.OnProcessTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DiagnoseSituation", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DiagnoseSituation
		{
			get
			{
				return this._DiagnoseSituation;
			}
			set
			{
				if ((this._DiagnoseSituation != value))
				{
					this.OnDiagnoseSituationChanging(value);
					this.SendPropertyChanging();
					this._DiagnoseSituation = value;
					this.SendPropertyChanged("DiagnoseSituation");
					this.OnDiagnoseSituationChanged();
				}
			}
		}
		
		[Column(Storage="_LocaleProcess", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LocaleProcess
		{
			get
			{
				return this._LocaleProcess;
			}
			set
			{
				if ((this._LocaleProcess != value))
				{
					this.OnLocaleProcessChanging(value);
					this.SendPropertyChanging();
					this._LocaleProcess = value;
					this.SendPropertyChanged("LocaleProcess");
					this.OnLocaleProcessChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessResult", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessResult
		{
			get
			{
				return this._ProcessResult;
			}
			set
			{
				if ((this._ProcessResult != value))
				{
					this.OnProcessResultChanging(value);
					this.SendPropertyChanging();
					this._ProcessResult = value;
					this.SendPropertyChanged("ProcessResult");
					this.OnProcessResultChanged();
				}
			}
		}
		
		[Column(Storage="_CheckName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CheckName
		{
			get
			{
				return this._CheckName;
			}
			set
			{
				if ((this._CheckName != value))
				{
					this.OnCheckNameChanging(value);
					this.SendPropertyChanging();
					this._CheckName = value;
					this.SendPropertyChanged("CheckName");
					this.OnCheckNameChanged();
				}
			}
		}
		
		[Column(Storage="_CheckTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckTime
		{
			get
			{
				return this._CheckTime;
			}
			set
			{
				if ((this._CheckTime != value))
				{
					this.OnCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckTime = value;
					this.SendPropertyChanged("CheckTime");
					this.OnCheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RepairQuality", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string RepairQuality
		{
			get
			{
				return this._RepairQuality;
			}
			set
			{
				if ((this._RepairQuality != value))
				{
					this.OnRepairQualityChanging(value);
					this.SendPropertyChanging();
					this._RepairQuality = value;
					this.SendPropertyChanged("RepairQuality");
					this.OnRepairQualityChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceAttitude", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ServiceAttitude
		{
			get
			{
				return this._ServiceAttitude;
			}
			set
			{
				if ((this._ServiceAttitude != value))
				{
					this.OnServiceAttitudeChanging(value);
					this.SendPropertyChanging();
					this._ServiceAttitude = value;
					this.SendPropertyChanged("ServiceAttitude");
					this.OnServiceAttitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsCharge", DbType="Char(2)")]
		public string IsCharge
		{
			get
			{
				return this._IsCharge;
			}
			set
			{
				if ((this._IsCharge != value))
				{
					this.OnIsChargeChanging(value);
					this.SendPropertyChanging();
					this._IsCharge = value;
					this.SendPropertyChanged("IsCharge");
					this.OnIsChargeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTStatus", DbType="VarChar(50)")]
		public string CVTStatus
		{
			get
			{
				return this._CVTStatus;
			}
			set
			{
				if ((this._CVTStatus != value))
				{
					this.OnCVTStatusChanging(value);
					this.SendPropertyChanging();
					this._CVTStatus = value;
					this.SendPropertyChanged("CVTStatus");
					this.OnCVTStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_FailureResults", DbType="VarChar(200)")]
		public string FailureResults
		{
			get
			{
				return this._FailureResults;
			}
			set
			{
				if ((this._FailureResults != value))
				{
					this.OnFailureResultsChanging(value);
					this.SendPropertyChanging();
					this._FailureResults = value;
					this.SendPropertyChanged("FailureResults");
					this.OnFailureResultsChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnName", DbType="VarChar(50)")]
		public string ReturnName
		{
			get
			{
				return this._ReturnName;
			}
			set
			{
				if ((this._ReturnName != value))
				{
					this.OnReturnNameChanging(value);
					this.SendPropertyChanging();
					this._ReturnName = value;
					this.SendPropertyChanged("ReturnName");
					this.OnReturnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnTime
		{
			get
			{
				return this._ReturnTime;
			}
			set
			{
				if ((this._ReturnTime != value))
				{
					this.OnReturnTimeChanging(value);
					this.SendPropertyChanging();
					this._ReturnTime = value;
					this.SendPropertyChanged("ReturnTime");
					this.OnReturnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FKBillID", DbType="VarChar(50)")]
		public string FKBillID
		{
			get
			{
				return this._FKBillID;
			}
			set
			{
				if ((this._FKBillID != value))
				{
					this.OnFKBillIDChanging(value);
					this.SendPropertyChanging();
					this._FKBillID = value;
					this.SendPropertyChanged("FKBillID");
					this.OnFKBillIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_PY", DbType="VarChar(50)")]
		public string PY
		{
			get
			{
				return this._PY;
			}
			set
			{
				if ((this._PY != value))
				{
					this.OnPYChanging(value);
					this.SendPropertyChanging();
					this._PY = value;
					this.SendPropertyChanged("PY");
					this.OnPYChanged();
				}
			}
		}
		
		[Column(Storage="_WB", DbType="VarChar(50)")]
		public string WB
		{
			get
			{
				return this._WB;
			}
			set
			{
				if ((this._WB != value))
				{
					this.OnWBChanging(value);
					this.SendPropertyChanging();
					this._WB = value;
					this.SendPropertyChanged("WB");
					this.OnWBChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomerDate
		{
			get
			{
				return this._CustomerDate;
			}
			set
			{
				if ((this._CustomerDate != value))
				{
					this.OnCustomerDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerDate = value;
					this.SendPropertyChanged("CustomerDate");
					this.OnCustomerDateChanged();
				}
			}
		}
		
		[Column(Storage="_NoticeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoticeDate
		{
			get
			{
				return this._NoticeDate;
			}
			set
			{
				if ((this._NoticeDate != value))
				{
					this.OnNoticeDateChanging(value);
					this.SendPropertyChanging();
					this._NoticeDate = value;
					this.SendPropertyChanged("NoticeDate");
					this.OnNoticeDateChanged();
				}
			}
		}
		
		[Column(Storage="_StrategyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StrategyDate
		{
			get
			{
				return this._StrategyDate;
			}
			set
			{
				if ((this._StrategyDate != value))
				{
					this.OnStrategyDateChanging(value);
					this.SendPropertyChanging();
					this._StrategyDate = value;
					this.SendPropertyChanged("StrategyDate");
					this.OnStrategyDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicantDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicantDate
		{
			get
			{
				return this._ApplicantDate;
			}
			set
			{
				if ((this._ApplicantDate != value))
				{
					this.OnApplicantDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicantDate = value;
					this.SendPropertyChanged("ApplicantDate");
					this.OnApplicantDateChanged();
				}
			}
		}
		
		[Column(Storage="_Applicant", DbType="VarChar(50)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[Column(Storage="_TCUCode", DbType="VarChar(50)")]
		public string TCUCode
		{
			get
			{
				return this._TCUCode;
			}
			set
			{
				if ((this._TCUCode != value))
				{
					this.OnTCUCodeChanging(value);
					this.SendPropertyChanging();
					this._TCUCode = value;
					this.SendPropertyChanged("TCUCode");
					this.OnTCUCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSoftware", DbType="VarChar(50)")]
		public string NewSoftware
		{
			get
			{
				return this._NewSoftware;
			}
			set
			{
				if ((this._NewSoftware != value))
				{
					this.OnNewSoftwareChanging(value);
					this.SendPropertyChanging();
					this._NewSoftware = value;
					this.SendPropertyChanged("NewSoftware");
					this.OnNewSoftwareChanged();
				}
			}
		}
		
		[Column(Storage="_IsThreeGuarantees", DbType="VarChar(50)")]
		public string IsThreeGuarantees
		{
			get
			{
				return this._IsThreeGuarantees;
			}
			set
			{
				if ((this._IsThreeGuarantees != value))
				{
					this.OnIsThreeGuaranteesChanging(value);
					this.SendPropertyChanging();
					this._IsThreeGuarantees = value;
					this.SendPropertyChanged("IsThreeGuarantees");
					this.OnIsThreeGuaranteesChanged();
				}
			}
		}
		
		[Column(Storage="_NewSanB", DbType="VarChar(50)")]
		public string NewSanB
		{
			get
			{
				return this._NewSanB;
			}
			set
			{
				if ((this._NewSanB != value))
				{
					this.OnNewSanBChanging(value);
					this.SendPropertyChanging();
					this._NewSanB = value;
					this.SendPropertyChanged("NewSanB");
					this.OnNewSanBChanged();
				}
			}
		}
		
		[Column(Storage="_IsServiceStock", DbType="Bit")]
		public System.Nullable<bool> IsServiceStock
		{
			get
			{
				return this._IsServiceStock;
			}
			set
			{
				if ((this._IsServiceStock != value))
				{
					this.OnIsServiceStockChanging(value);
					this.SendPropertyChanging();
					this._IsServiceStock = value;
					this.SendPropertyChanged("IsServiceStock");
					this.OnIsServiceStockChanged();
				}
			}
		}
		
		[Column(Storage="_IsCVTBug", DbType="Bit")]
		public System.Nullable<bool> IsCVTBug
		{
			get
			{
				return this._IsCVTBug;
			}
			set
			{
				if ((this._IsCVTBug != value))
				{
					this.OnIsCVTBugChanging(value);
					this.SendPropertyChanging();
					this._IsCVTBug = value;
					this.SendPropertyChanged("IsCVTBug");
					this.OnIsCVTBugChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_Commtion")]
	public partial class S_Commtion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private string _Remarl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRemarlChanging(string value);
    partial void OnRemarlChanged();
    #endregion
		
		public S_Commtion()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Remarl", DbType="VarChar(50)")]
		public string Remarl
		{
			get
			{
				return this._Remarl;
			}
			set
			{
				if ((this._Remarl != value))
				{
					this.OnRemarlChanging(value);
					this.SendPropertyChanging();
					this._Remarl = value;
					this.SendPropertyChanged("Remarl");
					this.OnRemarlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_MessageSource")]
	public partial class S_MessageSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MessageCode;
		
		private string _MessageName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMessageCodeChanging(string value);
    partial void OnMessageCodeChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public S_MessageSource()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageCode
		{
			get
			{
				return this._MessageCode;
			}
			set
			{
				if ((this._MessageCode != value))
				{
					this.OnMessageCodeChanging(value);
					this.SendPropertyChanging();
					this._MessageCode = value;
					this.SendPropertyChanged("MessageCode");
					this.OnMessageCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MessageName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ReplaceAccessory")]
	public partial class S_ReplaceAccessory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _OldGoodsName;
		
		private string _OldGoodsCode;
		
		private string _OldSpec;
		
		private string _OldGoodsID;
		
		private string _OldCvtID;
		
		private System.Nullable<System.DateTime> _GiveOutDate;
		
		private System.Nullable<System.DateTime> _BackTime;
		
		private string _NewGoodsName;
		
		private string _NewGoodsCode;
		
		private string _NewSpec;
		
		private string _NewGoodsID;
		
		private string _NewCvtID;
		
		private System.Nullable<int> _Count;
		
		private string _Unit;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnOldGoodsNameChanging(string value);
    partial void OnOldGoodsNameChanged();
    partial void OnOldGoodsCodeChanging(string value);
    partial void OnOldGoodsCodeChanged();
    partial void OnOldSpecChanging(string value);
    partial void OnOldSpecChanged();
    partial void OnOldGoodsIDChanging(string value);
    partial void OnOldGoodsIDChanged();
    partial void OnOldCvtIDChanging(string value);
    partial void OnOldCvtIDChanged();
    partial void OnGiveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGiveOutDateChanged();
    partial void OnBackTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBackTimeChanged();
    partial void OnNewGoodsNameChanging(string value);
    partial void OnNewGoodsNameChanged();
    partial void OnNewGoodsCodeChanging(string value);
    partial void OnNewGoodsCodeChanged();
    partial void OnNewSpecChanging(string value);
    partial void OnNewSpecChanged();
    partial void OnNewGoodsIDChanging(string value);
    partial void OnNewGoodsIDChanged();
    partial void OnNewCvtIDChanging(string value);
    partial void OnNewCvtIDChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public S_ReplaceAccessory()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldGoodsName
		{
			get
			{
				return this._OldGoodsName;
			}
			set
			{
				if ((this._OldGoodsName != value))
				{
					this.OnOldGoodsNameChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsName = value;
					this.SendPropertyChanged("OldGoodsName");
					this.OnOldGoodsNameChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldGoodsCode
		{
			get
			{
				return this._OldGoodsCode;
			}
			set
			{
				if ((this._OldGoodsCode != value))
				{
					this.OnOldGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsCode = value;
					this.SendPropertyChanged("OldGoodsCode");
					this.OnOldGoodsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OldSpec", DbType="VarChar(50)")]
		public string OldSpec
		{
			get
			{
				return this._OldSpec;
			}
			set
			{
				if ((this._OldSpec != value))
				{
					this.OnOldSpecChanging(value);
					this.SendPropertyChanging();
					this._OldSpec = value;
					this.SendPropertyChanged("OldSpec");
					this.OnOldSpecChanged();
				}
			}
		}
		
		[Column(Storage="_OldGoodsID", DbType="VarChar(50)")]
		public string OldGoodsID
		{
			get
			{
				return this._OldGoodsID;
			}
			set
			{
				if ((this._OldGoodsID != value))
				{
					this.OnOldGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._OldGoodsID = value;
					this.SendPropertyChanged("OldGoodsID");
					this.OnOldGoodsIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldCvtID", DbType="VarChar(50)")]
		public string OldCvtID
		{
			get
			{
				return this._OldCvtID;
			}
			set
			{
				if ((this._OldCvtID != value))
				{
					this.OnOldCvtIDChanging(value);
					this.SendPropertyChanging();
					this._OldCvtID = value;
					this.SendPropertyChanged("OldCvtID");
					this.OnOldCvtIDChanged();
				}
			}
		}
		
		[Column(Storage="_GiveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GiveOutDate
		{
			get
			{
				return this._GiveOutDate;
			}
			set
			{
				if ((this._GiveOutDate != value))
				{
					this.OnGiveOutDateChanging(value);
					this.SendPropertyChanging();
					this._GiveOutDate = value;
					this.SendPropertyChanged("GiveOutDate");
					this.OnGiveOutDateChanged();
				}
			}
		}
		
		[Column(Storage="_BackTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BackTime
		{
			get
			{
				return this._BackTime;
			}
			set
			{
				if ((this._BackTime != value))
				{
					this.OnBackTimeChanging(value);
					this.SendPropertyChanging();
					this._BackTime = value;
					this.SendPropertyChanged("BackTime");
					this.OnBackTimeChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsName", DbType="VarChar(50)")]
		public string NewGoodsName
		{
			get
			{
				return this._NewGoodsName;
			}
			set
			{
				if ((this._NewGoodsName != value))
				{
					this.OnNewGoodsNameChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsName = value;
					this.SendPropertyChanged("NewGoodsName");
					this.OnNewGoodsNameChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsCode", DbType="VarChar(50)")]
		public string NewGoodsCode
		{
			get
			{
				return this._NewGoodsCode;
			}
			set
			{
				if ((this._NewGoodsCode != value))
				{
					this.OnNewGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsCode = value;
					this.SendPropertyChanged("NewGoodsCode");
					this.OnNewGoodsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSpec", DbType="VarChar(50)")]
		public string NewSpec
		{
			get
			{
				return this._NewSpec;
			}
			set
			{
				if ((this._NewSpec != value))
				{
					this.OnNewSpecChanging(value);
					this.SendPropertyChanging();
					this._NewSpec = value;
					this.SendPropertyChanged("NewSpec");
					this.OnNewSpecChanged();
				}
			}
		}
		
		[Column(Storage="_NewGoodsID", DbType="VarChar(50)")]
		public string NewGoodsID
		{
			get
			{
				return this._NewGoodsID;
			}
			set
			{
				if ((this._NewGoodsID != value))
				{
					this.OnNewGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._NewGoodsID = value;
					this.SendPropertyChanged("NewGoodsID");
					this.OnNewGoodsIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewCvtID", DbType="VarChar(50)")]
		public string NewCvtID
		{
			get
			{
				return this._NewCvtID;
			}
			set
			{
				if ((this._NewCvtID != value))
				{
					this.OnNewCvtIDChanging(value);
					this.SendPropertyChanging();
					this._NewCvtID = value;
					this.SendPropertyChanged("NewCvtID");
					this.OnNewCvtIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ServiceFeedBack")]
	public partial class S_ServiceFeedBack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FK_Bill_ID;
		
		private string _ServiceID;
		
		private string _MessageSource;
		
		private string _SiteName;
		
		private string _CarModel;
		
		private string _CVTCode;
		
		private string _CVTID;
		
		private string _ChassisNum;
		
		private string _TCUCode;
		
		private string _NewSoftware;
		
		private string _BugCode;
		
		private string _CVTCondition;
		
		private string _UserName;
		
		private string _Linkman;
		
		private string _LinkTel;
		
		private string _BugNumber;
		
		private string _BatchNumber;
		
		private System.Nullable<System.DateTime> _BuyCarTime;
		
		private string _RunMileage;
		
		private string _ProcessName;
		
		private System.Nullable<System.DateTime> _ProcessTime;
		
		private string _ProcessMode;
		
		private string _DiagnoseSituation;
		
		private string _Solution;
		
		private string _IsBack;
		
		private string _YXChargeSuggestion;
		
		private string _ZGChargeSuggestion;
		
		private string _DutyDept;
		
		private System.Nullable<System.DateTime> _ReplyTime;
		
		private System.Nullable<int> _AppearCount;
		
		private string _DutyDeptCharge;
		
		private string _DutyPerson;
		
		private string _FinishClaim;
		
		private string _StockSuggestion;
		
		private string _Temporary;
		
		private string _Analyse;
		
		private string _ForeverImplement;
		
		private string _IsFMEAfile;
		
		private string _IsOpen;
		
		private string _ZGCheckName;
		
		private string _IsClose;
		
		private string _Practicable;
		
		private string _Status;
		
		private string _YXSignature;
		
		private System.Nullable<System.DateTime> _YXSignatureDate;
		
		private string _Signature;
		
		private System.Nullable<System.DateTime> _SignatureDate;
		
		private System.Nullable<System.DateTime> _DutyDeptChargeDate;
		
		private System.Nullable<System.DateTime> _DutyPersonDate;
		
		private System.Nullable<System.DateTime> _ZGCheckDate;
		
		private string _SameBillNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_Bill_IDChanging(string value);
    partial void OnFK_Bill_IDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnMessageSourceChanging(string value);
    partial void OnMessageSourceChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnCarModelChanging(string value);
    partial void OnCarModelChanged();
    partial void OnCVTCodeChanging(string value);
    partial void OnCVTCodeChanged();
    partial void OnCVTIDChanging(string value);
    partial void OnCVTIDChanged();
    partial void OnChassisNumChanging(string value);
    partial void OnChassisNumChanged();
    partial void OnTCUCodeChanging(string value);
    partial void OnTCUCodeChanged();
    partial void OnNewSoftwareChanging(string value);
    partial void OnNewSoftwareChanged();
    partial void OnBugCodeChanging(string value);
    partial void OnBugCodeChanged();
    partial void OnCVTConditionChanging(string value);
    partial void OnCVTConditionChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLinkmanChanging(string value);
    partial void OnLinkmanChanged();
    partial void OnLinkTelChanging(string value);
    partial void OnLinkTelChanged();
    partial void OnBugNumberChanging(string value);
    partial void OnBugNumberChanged();
    partial void OnBatchNumberChanging(string value);
    partial void OnBatchNumberChanged();
    partial void OnBuyCarTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBuyCarTimeChanged();
    partial void OnRunMileageChanging(string value);
    partial void OnRunMileageChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessTimeChanged();
    partial void OnProcessModeChanging(string value);
    partial void OnProcessModeChanged();
    partial void OnDiagnoseSituationChanging(string value);
    partial void OnDiagnoseSituationChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnIsBackChanging(string value);
    partial void OnIsBackChanged();
    partial void OnYXChargeSuggestionChanging(string value);
    partial void OnYXChargeSuggestionChanged();
    partial void OnZGChargeSuggestionChanging(string value);
    partial void OnZGChargeSuggestionChanged();
    partial void OnDutyDeptChanging(string value);
    partial void OnDutyDeptChanged();
    partial void OnReplyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyTimeChanged();
    partial void OnAppearCountChanging(System.Nullable<int> value);
    partial void OnAppearCountChanged();
    partial void OnDutyDeptChargeChanging(string value);
    partial void OnDutyDeptChargeChanged();
    partial void OnDutyPersonChanging(string value);
    partial void OnDutyPersonChanged();
    partial void OnFinishClaimChanging(string value);
    partial void OnFinishClaimChanged();
    partial void OnStockSuggestionChanging(string value);
    partial void OnStockSuggestionChanged();
    partial void OnTemporaryChanging(string value);
    partial void OnTemporaryChanged();
    partial void OnAnalyseChanging(string value);
    partial void OnAnalyseChanged();
    partial void OnForeverImplementChanging(string value);
    partial void OnForeverImplementChanged();
    partial void OnIsFMEAfileChanging(string value);
    partial void OnIsFMEAfileChanged();
    partial void OnIsOpenChanging(string value);
    partial void OnIsOpenChanged();
    partial void OnZGCheckNameChanging(string value);
    partial void OnZGCheckNameChanged();
    partial void OnIsCloseChanging(string value);
    partial void OnIsCloseChanged();
    partial void OnPracticableChanging(string value);
    partial void OnPracticableChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnYXSignatureChanging(string value);
    partial void OnYXSignatureChanged();
    partial void OnYXSignatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnYXSignatureDateChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnSignatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignatureDateChanged();
    partial void OnDutyDeptChargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDutyDeptChargeDateChanged();
    partial void OnDutyPersonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDutyPersonDateChanged();
    partial void OnZGCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnZGCheckDateChanged();
    partial void OnSameBillNoChanging(string value);
    partial void OnSameBillNoChanged();
    #endregion
		
		public S_ServiceFeedBack()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FK_Bill_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FK_Bill_ID
		{
			get
			{
				return this._FK_Bill_ID;
			}
			set
			{
				if ((this._FK_Bill_ID != value))
				{
					this.OnFK_Bill_IDChanging(value);
					this.SendPropertyChanging();
					this._FK_Bill_ID = value;
					this.SendPropertyChanged("FK_Bill_ID");
					this.OnFK_Bill_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50)")]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageSource", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageSource
		{
			get
			{
				return this._MessageSource;
			}
			set
			{
				if ((this._MessageSource != value))
				{
					this.OnMessageSourceChanging(value);
					this.SendPropertyChanging();
					this._MessageSource = value;
					this.SendPropertyChanged("MessageSource");
					this.OnMessageSourceChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_CarModel", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CarModel
		{
			get
			{
				return this._CarModel;
			}
			set
			{
				if ((this._CarModel != value))
				{
					this.OnCarModelChanging(value);
					this.SendPropertyChanging();
					this._CarModel = value;
					this.SendPropertyChanged("CarModel");
					this.OnCarModelChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCode", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CVTCode
		{
			get
			{
				return this._CVTCode;
			}
			set
			{
				if ((this._CVTCode != value))
				{
					this.OnCVTCodeChanging(value);
					this.SendPropertyChanging();
					this._CVTCode = value;
					this.SendPropertyChanged("CVTCode");
					this.OnCVTCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTID", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CVTID
		{
			get
			{
				return this._CVTID;
			}
			set
			{
				if ((this._CVTID != value))
				{
					this.OnCVTIDChanging(value);
					this.SendPropertyChanging();
					this._CVTID = value;
					this.SendPropertyChanged("CVTID");
					this.OnCVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChassisNum", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ChassisNum
		{
			get
			{
				return this._ChassisNum;
			}
			set
			{
				if ((this._ChassisNum != value))
				{
					this.OnChassisNumChanging(value);
					this.SendPropertyChanging();
					this._ChassisNum = value;
					this.SendPropertyChanged("ChassisNum");
					this.OnChassisNumChanged();
				}
			}
		}
		
		[Column(Storage="_TCUCode", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string TCUCode
		{
			get
			{
				return this._TCUCode;
			}
			set
			{
				if ((this._TCUCode != value))
				{
					this.OnTCUCodeChanging(value);
					this.SendPropertyChanging();
					this._TCUCode = value;
					this.SendPropertyChanged("TCUCode");
					this.OnTCUCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewSoftware", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NewSoftware
		{
			get
			{
				return this._NewSoftware;
			}
			set
			{
				if ((this._NewSoftware != value))
				{
					this.OnNewSoftwareChanging(value);
					this.SendPropertyChanging();
					this._NewSoftware = value;
					this.SendPropertyChanged("NewSoftware");
					this.OnNewSoftwareChanged();
				}
			}
		}
		
		[Column(Storage="_BugCode", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugCode
		{
			get
			{
				return this._BugCode;
			}
			set
			{
				if ((this._BugCode != value))
				{
					this.OnBugCodeChanging(value);
					this.SendPropertyChanging();
					this._BugCode = value;
					this.SendPropertyChanged("BugCode");
					this.OnBugCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTCondition", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CVTCondition
		{
			get
			{
				return this._CVTCondition;
			}
			set
			{
				if ((this._CVTCondition != value))
				{
					this.OnCVTConditionChanging(value);
					this.SendPropertyChanging();
					this._CVTCondition = value;
					this.SendPropertyChanged("CVTCondition");
					this.OnCVTConditionChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Linkman", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Linkman
		{
			get
			{
				return this._Linkman;
			}
			set
			{
				if ((this._Linkman != value))
				{
					this.OnLinkmanChanging(value);
					this.SendPropertyChanging();
					this._Linkman = value;
					this.SendPropertyChanged("Linkman");
					this.OnLinkmanChanged();
				}
			}
		}
		
		[Column(Storage="_LinkTel", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LinkTel
		{
			get
			{
				return this._LinkTel;
			}
			set
			{
				if ((this._LinkTel != value))
				{
					this.OnLinkTelChanging(value);
					this.SendPropertyChanging();
					this._LinkTel = value;
					this.SendPropertyChanged("LinkTel");
					this.OnLinkTelChanged();
				}
			}
		}
		
		[Column(Storage="_BugNumber", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BugNumber
		{
			get
			{
				return this._BugNumber;
			}
			set
			{
				if ((this._BugNumber != value))
				{
					this.OnBugNumberChanging(value);
					this.SendPropertyChanging();
					this._BugNumber = value;
					this.SendPropertyChanged("BugNumber");
					this.OnBugNumberChanged();
				}
			}
		}
		
		[Column(Storage="_BatchNumber", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[Column(Storage="_BuyCarTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyCarTime
		{
			get
			{
				return this._BuyCarTime;
			}
			set
			{
				if ((this._BuyCarTime != value))
				{
					this.OnBuyCarTimeChanging(value);
					this.SendPropertyChanging();
					this._BuyCarTime = value;
					this.SendPropertyChanged("BuyCarTime");
					this.OnBuyCarTimeChanged();
				}
			}
		}
		
		[Column(Storage="_RunMileage", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string RunMileage
		{
			get
			{
				return this._RunMileage;
			}
			set
			{
				if ((this._RunMileage != value))
				{
					this.OnRunMileageChanging(value);
					this.SendPropertyChanging();
					this._RunMileage = value;
					this.SendPropertyChanged("RunMileage");
					this.OnRunMileageChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessTime
		{
			get
			{
				return this._ProcessTime;
			}
			set
			{
				if ((this._ProcessTime != value))
				{
					this.OnProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessTime = value;
					this.SendPropertyChanged("ProcessTime");
					this.OnProcessTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessMode", DbType="VarChar(50)")]
		public string ProcessMode
		{
			get
			{
				return this._ProcessMode;
			}
			set
			{
				if ((this._ProcessMode != value))
				{
					this.OnProcessModeChanging(value);
					this.SendPropertyChanging();
					this._ProcessMode = value;
					this.SendPropertyChanged("ProcessMode");
					this.OnProcessModeChanged();
				}
			}
		}
		
		[Column(Storage="_DiagnoseSituation", DbType="VarChar(1000)")]
		public string DiagnoseSituation
		{
			get
			{
				return this._DiagnoseSituation;
			}
			set
			{
				if ((this._DiagnoseSituation != value))
				{
					this.OnDiagnoseSituationChanging(value);
					this.SendPropertyChanging();
					this._DiagnoseSituation = value;
					this.SendPropertyChanged("DiagnoseSituation");
					this.OnDiagnoseSituationChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="VarChar(1000)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_IsBack", DbType="VarChar(50)")]
		public string IsBack
		{
			get
			{
				return this._IsBack;
			}
			set
			{
				if ((this._IsBack != value))
				{
					this.OnIsBackChanging(value);
					this.SendPropertyChanging();
					this._IsBack = value;
					this.SendPropertyChanged("IsBack");
					this.OnIsBackChanged();
				}
			}
		}
		
		[Column(Storage="_YXChargeSuggestion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string YXChargeSuggestion
		{
			get
			{
				return this._YXChargeSuggestion;
			}
			set
			{
				if ((this._YXChargeSuggestion != value))
				{
					this.OnYXChargeSuggestionChanging(value);
					this.SendPropertyChanging();
					this._YXChargeSuggestion = value;
					this.SendPropertyChanged("YXChargeSuggestion");
					this.OnYXChargeSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_ZGChargeSuggestion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ZGChargeSuggestion
		{
			get
			{
				return this._ZGChargeSuggestion;
			}
			set
			{
				if ((this._ZGChargeSuggestion != value))
				{
					this.OnZGChargeSuggestionChanging(value);
					this.SendPropertyChanging();
					this._ZGChargeSuggestion = value;
					this.SendPropertyChanged("ZGChargeSuggestion");
					this.OnZGChargeSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDept", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DutyDept
		{
			get
			{
				return this._DutyDept;
			}
			set
			{
				if ((this._DutyDept != value))
				{
					this.OnDutyDeptChanging(value);
					this.SendPropertyChanging();
					this._DutyDept = value;
					this.SendPropertyChanged("DutyDept");
					this.OnDutyDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ReplyTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_AppearCount", DbType="Int")]
		public System.Nullable<int> AppearCount
		{
			get
			{
				return this._AppearCount;
			}
			set
			{
				if ((this._AppearCount != value))
				{
					this.OnAppearCountChanging(value);
					this.SendPropertyChanging();
					this._AppearCount = value;
					this.SendPropertyChanged("AppearCount");
					this.OnAppearCountChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDeptCharge", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DutyDeptCharge
		{
			get
			{
				return this._DutyDeptCharge;
			}
			set
			{
				if ((this._DutyDeptCharge != value))
				{
					this.OnDutyDeptChargeChanging(value);
					this.SendPropertyChanging();
					this._DutyDeptCharge = value;
					this.SendPropertyChanged("DutyDeptCharge");
					this.OnDutyDeptChargeChanged();
				}
			}
		}
		
		[Column(Storage="_DutyPerson", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DutyPerson
		{
			get
			{
				return this._DutyPerson;
			}
			set
			{
				if ((this._DutyPerson != value))
				{
					this.OnDutyPersonChanging(value);
					this.SendPropertyChanging();
					this._DutyPerson = value;
					this.SendPropertyChanged("DutyPerson");
					this.OnDutyPersonChanged();
				}
			}
		}
		
		[Column(Storage="_FinishClaim", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FinishClaim
		{
			get
			{
				return this._FinishClaim;
			}
			set
			{
				if ((this._FinishClaim != value))
				{
					this.OnFinishClaimChanging(value);
					this.SendPropertyChanging();
					this._FinishClaim = value;
					this.SendPropertyChanged("FinishClaim");
					this.OnFinishClaimChanged();
				}
			}
		}
		
		[Column(Storage="_StockSuggestion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string StockSuggestion
		{
			get
			{
				return this._StockSuggestion;
			}
			set
			{
				if ((this._StockSuggestion != value))
				{
					this.OnStockSuggestionChanging(value);
					this.SendPropertyChanging();
					this._StockSuggestion = value;
					this.SendPropertyChanged("StockSuggestion");
					this.OnStockSuggestionChanged();
				}
			}
		}
		
		[Column(Storage="_Temporary", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Temporary
		{
			get
			{
				return this._Temporary;
			}
			set
			{
				if ((this._Temporary != value))
				{
					this.OnTemporaryChanging(value);
					this.SendPropertyChanging();
					this._Temporary = value;
					this.SendPropertyChanged("Temporary");
					this.OnTemporaryChanged();
				}
			}
		}
		
		[Column(Storage="_Analyse", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Analyse
		{
			get
			{
				return this._Analyse;
			}
			set
			{
				if ((this._Analyse != value))
				{
					this.OnAnalyseChanging(value);
					this.SendPropertyChanging();
					this._Analyse = value;
					this.SendPropertyChanged("Analyse");
					this.OnAnalyseChanged();
				}
			}
		}
		
		[Column(Name="foreverImplement", Storage="_ForeverImplement", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ForeverImplement
		{
			get
			{
				return this._ForeverImplement;
			}
			set
			{
				if ((this._ForeverImplement != value))
				{
					this.OnForeverImplementChanging(value);
					this.SendPropertyChanging();
					this._ForeverImplement = value;
					this.SendPropertyChanged("ForeverImplement");
					this.OnForeverImplementChanged();
				}
			}
		}
		
		[Column(Storage="_IsFMEAfile", DbType="Char(2)")]
		public string IsFMEAfile
		{
			get
			{
				return this._IsFMEAfile;
			}
			set
			{
				if ((this._IsFMEAfile != value))
				{
					this.OnIsFMEAfileChanging(value);
					this.SendPropertyChanging();
					this._IsFMEAfile = value;
					this.SendPropertyChanged("IsFMEAfile");
					this.OnIsFMEAfileChanged();
				}
			}
		}
		
		[Column(Storage="_IsOpen", DbType="Char(2)")]
		public string IsOpen
		{
			get
			{
				return this._IsOpen;
			}
			set
			{
				if ((this._IsOpen != value))
				{
					this.OnIsOpenChanging(value);
					this.SendPropertyChanging();
					this._IsOpen = value;
					this.SendPropertyChanged("IsOpen");
					this.OnIsOpenChanged();
				}
			}
		}
		
		[Column(Storage="_ZGCheckName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ZGCheckName
		{
			get
			{
				return this._ZGCheckName;
			}
			set
			{
				if ((this._ZGCheckName != value))
				{
					this.OnZGCheckNameChanging(value);
					this.SendPropertyChanging();
					this._ZGCheckName = value;
					this.SendPropertyChanged("ZGCheckName");
					this.OnZGCheckNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsClose", DbType="Char(2)")]
		public string IsClose
		{
			get
			{
				return this._IsClose;
			}
			set
			{
				if ((this._IsClose != value))
				{
					this.OnIsCloseChanging(value);
					this.SendPropertyChanging();
					this._IsClose = value;
					this.SendPropertyChanged("IsClose");
					this.OnIsCloseChanged();
				}
			}
		}
		
		[Column(Storage="_Practicable", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Practicable
		{
			get
			{
				return this._Practicable;
			}
			set
			{
				if ((this._Practicable != value))
				{
					this.OnPracticableChanging(value);
					this.SendPropertyChanging();
					this._Practicable = value;
					this.SendPropertyChanged("Practicable");
					this.OnPracticableChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_YXSignature", DbType="VarChar(50)")]
		public string YXSignature
		{
			get
			{
				return this._YXSignature;
			}
			set
			{
				if ((this._YXSignature != value))
				{
					this.OnYXSignatureChanging(value);
					this.SendPropertyChanging();
					this._YXSignature = value;
					this.SendPropertyChanged("YXSignature");
					this.OnYXSignatureChanged();
				}
			}
		}
		
		[Column(Storage="_YXSignatureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> YXSignatureDate
		{
			get
			{
				return this._YXSignatureDate;
			}
			set
			{
				if ((this._YXSignatureDate != value))
				{
					this.OnYXSignatureDateChanging(value);
					this.SendPropertyChanging();
					this._YXSignatureDate = value;
					this.SendPropertyChanged("YXSignatureDate");
					this.OnYXSignatureDateChanged();
				}
			}
		}
		
		[Column(Storage="_Signature", DbType="VarChar(50)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[Column(Storage="_SignatureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignatureDate
		{
			get
			{
				return this._SignatureDate;
			}
			set
			{
				if ((this._SignatureDate != value))
				{
					this.OnSignatureDateChanging(value);
					this.SendPropertyChanging();
					this._SignatureDate = value;
					this.SendPropertyChanged("SignatureDate");
					this.OnSignatureDateChanged();
				}
			}
		}
		
		[Column(Storage="_DutyDeptChargeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DutyDeptChargeDate
		{
			get
			{
				return this._DutyDeptChargeDate;
			}
			set
			{
				if ((this._DutyDeptChargeDate != value))
				{
					this.OnDutyDeptChargeDateChanging(value);
					this.SendPropertyChanging();
					this._DutyDeptChargeDate = value;
					this.SendPropertyChanged("DutyDeptChargeDate");
					this.OnDutyDeptChargeDateChanged();
				}
			}
		}
		
		[Column(Storage="_DutyPersonDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DutyPersonDate
		{
			get
			{
				return this._DutyPersonDate;
			}
			set
			{
				if ((this._DutyPersonDate != value))
				{
					this.OnDutyPersonDateChanging(value);
					this.SendPropertyChanging();
					this._DutyPersonDate = value;
					this.SendPropertyChanged("DutyPersonDate");
					this.OnDutyPersonDateChanged();
				}
			}
		}
		
		[Column(Storage="_ZGCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ZGCheckDate
		{
			get
			{
				return this._ZGCheckDate;
			}
			set
			{
				if ((this._ZGCheckDate != value))
				{
					this.OnZGCheckDateChanging(value);
					this.SendPropertyChanging();
					this._ZGCheckDate = value;
					this.SendPropertyChanged("ZGCheckDate");
					this.OnZGCheckDateChanged();
				}
			}
		}
		
		[Column(Storage="_SameBillNo", DbType="VarChar(50)")]
		public string SameBillNo
		{
			get
			{
				return this._SameBillNo;
			}
			set
			{
				if ((this._SameBillNo != value))
				{
					this.OnSameBillNoChanging(value);
					this.SendPropertyChanging();
					this._SameBillNo = value;
					this.SendPropertyChanged("SameBillNo");
					this.OnSameBillNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.S_ServiceFileDown")]
	public partial class S_ServiceFileDown : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceID;
		
		private string _FileNames;
		
		private string _FileAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnFileNamesChanging(string value);
    partial void OnFileNamesChanged();
    partial void OnFileAddressChanging(string value);
    partial void OnFileAddressChanged();
    #endregion
		
		public S_ServiceFileDown()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileNames", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileNames
		{
			get
			{
				return this._FileNames;
			}
			set
			{
				if ((this._FileNames != value))
				{
					this.OnFileNamesChanging(value);
					this.SendPropertyChanging();
					this._FileNames = value;
					this.SendPropertyChanged("FileNames");
					this.OnFileNamesChanged();
				}
			}
		}
		
		[Column(Storage="_FileAddress", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string FileAddress
		{
			get
			{
				return this._FileAddress;
			}
			set
			{
				if ((this._FileAddress != value))
				{
					this.OnFileAddressChanging(value);
					this.SendPropertyChanging();
					this._FileAddress = value;
					this.SendPropertyChanged("FileAddress");
					this.OnFileAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_DownloadLog")]
	public partial class TCU_UP_DownloadLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MachineCode;
		
		private int _ProgramType;
		
		private double _ProgramVersion;
		
		private string _DownloadDate;
		
		private string _IpAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnDownloadDateChanging(string value);
    partial void OnDownloadDateChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    #endregion
		
		public TCU_UP_DownloadLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL")]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_DownloadDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DownloadDate
		{
			get
			{
				return this._DownloadDate;
			}
			set
			{
				if ((this._DownloadDate != value))
				{
					this.OnDownloadDateChanging(value);
					this.SendPropertyChanging();
					this._DownloadDate = value;
					this.SendPropertyChanged("DownloadDate");
					this.OnDownloadDateChanged();
				}
			}
		}
		
		[Column(Storage="_IpAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_DownloadLog(DataMonitor)")]
	public partial class TCU_UP_DownloadLogDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MachineCode;
		
		private int _ProgramType;
		
		private double _ProgramVersion;
		
		private string _DownloadDate;
		
		private string _IpAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnDownloadDateChanging(string value);
    partial void OnDownloadDateChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    #endregion
		
		public TCU_UP_DownloadLogDataMonitor()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL")]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_DownloadDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DownloadDate
		{
			get
			{
				return this._DownloadDate;
			}
			set
			{
				if ((this._DownloadDate != value))
				{
					this.OnDownloadDateChanging(value);
					this.SendPropertyChanging();
					this._DownloadDate = value;
					this.SendPropertyChanged("DownloadDate");
					this.OnDownloadDateChanged();
				}
			}
		}
		
		[Column(Storage="_IpAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_FILE")]
	public partial class TCU_UP_FILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProgramType;
		
		private double _ProgramVersion;
		
		private string _VersionDetail;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _FileContent;
		
		private int _FileLength;
		
		private string _FileLengthDetail;
		
		private System.DateTime _Date;
		
		private string _Remark;
		
		private string _UpdateLog;
		
		private EntityRef<TCU_UP_ProgramType> _TCU_UP_ProgramType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnVersionDetailChanging(string value);
    partial void OnVersionDetailChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(System.Data.Linq.Binary value);
    partial void OnFileContentChanged();
    partial void OnFileLengthChanging(int value);
    partial void OnFileLengthChanged();
    partial void OnFileLengthDetailChanging(string value);
    partial void OnFileLengthDetailChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateLogChanging(string value);
    partial void OnUpdateLogChanged();
    #endregion
		
		public TCU_UP_FILE()
		{
			this._TCU_UP_ProgramType = default(EntityRef<TCU_UP_ProgramType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL")]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					if (this._TCU_UP_ProgramType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_VersionDetail", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string VersionDetail
		{
			get
			{
				return this._VersionDetail;
			}
			set
			{
				if ((this._VersionDetail != value))
				{
					this.OnVersionDetailChanging(value);
					this.SendPropertyChanging();
					this._VersionDetail = value;
					this.SendPropertyChanged("VersionDetail");
					this.OnVersionDetailChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_FileContent", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[Column(Storage="_FileLength", DbType="Int NOT NULL")]
		public int FileLength
		{
			get
			{
				return this._FileLength;
			}
			set
			{
				if ((this._FileLength != value))
				{
					this.OnFileLengthChanging(value);
					this.SendPropertyChanging();
					this._FileLength = value;
					this.SendPropertyChanged("FileLength");
					this.OnFileLengthChanged();
				}
			}
		}
		
		[Column(Storage="_FileLengthDetail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileLengthDetail
		{
			get
			{
				return this._FileLengthDetail;
			}
			set
			{
				if ((this._FileLengthDetail != value))
				{
					this.OnFileLengthDetailChanging(value);
					this.SendPropertyChanging();
					this._FileLengthDetail = value;
					this.SendPropertyChanged("FileLengthDetail");
					this.OnFileLengthDetailChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this.OnUpdateLogChanging(value);
					this.SendPropertyChanging();
					this._UpdateLog = value;
					this.SendPropertyChanged("UpdateLog");
					this.OnUpdateLogChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_FILE_TCU_UP_ProgramType", Storage="_TCU_UP_ProgramType", ThisKey="ProgramType", IsForeignKey=true, DeleteOnNull=true)]
		public TCU_UP_ProgramType TCU_UP_ProgramType
		{
			get
			{
				return this._TCU_UP_ProgramType.Entity;
			}
			set
			{
				TCU_UP_ProgramType previousValue = this._TCU_UP_ProgramType.Entity;
				if (((previousValue != value) 
							|| (this._TCU_UP_ProgramType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCU_UP_ProgramType.Entity = null;
						previousValue.TCU_UP_FILE = null;
					}
					this._TCU_UP_ProgramType.Entity = value;
					if ((value != null))
					{
						value.TCU_UP_FILE = this;
						this._ProgramType = value.ProgramType;
					}
					else
					{
						this._ProgramType = default(int);
					}
					this.SendPropertyChanged("TCU_UP_ProgramType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_FILE(DataMonitor)")]
	public partial class TCU_UP_FILEDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProgramType;
		
		private double _ProgramVersion;
		
		private string _VersionDetail;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _FileContent;
		
		private int _FileLength;
		
		private string _FileLengthDetail;
		
		private System.DateTime _Date;
		
		private string _Remark;
		
		private string _UpdateLog;
		
		private EntityRef<TCU_UP_ProgramTypeDataMonitor> _TCU_UP_ProgramTypeDataMonitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnVersionDetailChanging(string value);
    partial void OnVersionDetailChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(System.Data.Linq.Binary value);
    partial void OnFileContentChanged();
    partial void OnFileLengthChanging(int value);
    partial void OnFileLengthChanged();
    partial void OnFileLengthDetailChanging(string value);
    partial void OnFileLengthDetailChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateLogChanging(string value);
    partial void OnUpdateLogChanged();
    #endregion
		
		public TCU_UP_FILEDataMonitor()
		{
			this._TCU_UP_ProgramTypeDataMonitor = default(EntityRef<TCU_UP_ProgramTypeDataMonitor>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL")]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					if (this._TCU_UP_ProgramTypeDataMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_VersionDetail", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string VersionDetail
		{
			get
			{
				return this._VersionDetail;
			}
			set
			{
				if ((this._VersionDetail != value))
				{
					this.OnVersionDetailChanging(value);
					this.SendPropertyChanging();
					this._VersionDetail = value;
					this.SendPropertyChanged("VersionDetail");
					this.OnVersionDetailChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_FileContent", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[Column(Storage="_FileLength", DbType="Int NOT NULL")]
		public int FileLength
		{
			get
			{
				return this._FileLength;
			}
			set
			{
				if ((this._FileLength != value))
				{
					this.OnFileLengthChanging(value);
					this.SendPropertyChanging();
					this._FileLength = value;
					this.SendPropertyChanged("FileLength");
					this.OnFileLengthChanged();
				}
			}
		}
		
		[Column(Storage="_FileLengthDetail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileLengthDetail
		{
			get
			{
				return this._FileLengthDetail;
			}
			set
			{
				if ((this._FileLengthDetail != value))
				{
					this.OnFileLengthDetailChanging(value);
					this.SendPropertyChanging();
					this._FileLengthDetail = value;
					this.SendPropertyChanged("FileLengthDetail");
					this.OnFileLengthDetailChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this.OnUpdateLogChanging(value);
					this.SendPropertyChanging();
					this._UpdateLog = value;
					this.SendPropertyChanged("UpdateLog");
					this.OnUpdateLogChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_FILE(DataMonitor)_TCU_UP_ProgramType(DataMonitor)", Storage="_TCU_UP_ProgramTypeDataMonitor", ThisKey="ProgramType", IsForeignKey=true, DeleteOnNull=true)]
		public TCU_UP_ProgramTypeDataMonitor TCU_UP_ProgramTypeDataMonitor
		{
			get
			{
				return this._TCU_UP_ProgramTypeDataMonitor.Entity;
			}
			set
			{
				TCU_UP_ProgramTypeDataMonitor previousValue = this._TCU_UP_ProgramTypeDataMonitor.Entity;
				if (((previousValue != value) 
							|| (this._TCU_UP_ProgramTypeDataMonitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCU_UP_ProgramTypeDataMonitor.Entity = null;
						previousValue.TCU_UP_FILEDataMonitor.Remove(this);
					}
					this._TCU_UP_ProgramTypeDataMonitor.Entity = value;
					if ((value != null))
					{
						value.TCU_UP_FILEDataMonitor.Add(this);
						this._ProgramType = value.ProgramType;
					}
					else
					{
						this._ProgramType = default(int);
					}
					this.SendPropertyChanged("TCU_UP_ProgramTypeDataMonitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_LOG")]
	public partial class TCU_UP_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MachineCode;
		
		private string _TcuNumber;
		
		private string _VehicleModel;
		
		private string _Version;
		
		private int _WriteCount;
		
		private string _WriteDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnTcuNumberChanging(string value);
    partial void OnTcuNumberChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnWriteCountChanging(int value);
    partial void OnWriteCountChanged();
    partial void OnWriteDateChanging(string value);
    partial void OnWriteDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TCU_UP_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TcuNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TcuNumber
		{
			get
			{
				return this._TcuNumber;
			}
			set
			{
				if ((this._TcuNumber != value))
				{
					this.OnTcuNumberChanging(value);
					this.SendPropertyChanging();
					this._TcuNumber = value;
					this.SendPropertyChanged("TcuNumber");
					this.OnTcuNumberChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleModel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_WriteCount", DbType="Int NOT NULL")]
		public int WriteCount
		{
			get
			{
				return this._WriteCount;
			}
			set
			{
				if ((this._WriteCount != value))
				{
					this.OnWriteCountChanging(value);
					this.SendPropertyChanging();
					this._WriteCount = value;
					this.SendPropertyChanged("WriteCount");
					this.OnWriteCountChanged();
				}
			}
		}
		
		[Column(Storage="_WriteDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WriteDate
		{
			get
			{
				return this._WriteDate;
			}
			set
			{
				if ((this._WriteDate != value))
				{
					this.OnWriteDateChanging(value);
					this.SendPropertyChanging();
					this._WriteDate = value;
					this.SendPropertyChanged("WriteDate");
					this.OnWriteDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_LOG(DataMonitor)")]
	public partial class TCU_UP_LOGDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MachineCode;
		
		private string _TcuNumber;
		
		private string _VehicleModel;
		
		private string _Version;
		
		private int _WriteCount;
		
		private string _WriteDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnTcuNumberChanging(string value);
    partial void OnTcuNumberChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnWriteCountChanging(int value);
    partial void OnWriteCountChanged();
    partial void OnWriteDateChanging(string value);
    partial void OnWriteDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TCU_UP_LOGDataMonitor()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TcuNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TcuNumber
		{
			get
			{
				return this._TcuNumber;
			}
			set
			{
				if ((this._TcuNumber != value))
				{
					this.OnTcuNumberChanging(value);
					this.SendPropertyChanging();
					this._TcuNumber = value;
					this.SendPropertyChanged("TcuNumber");
					this.OnTcuNumberChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleModel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_WriteCount", DbType="Int NOT NULL")]
		public int WriteCount
		{
			get
			{
				return this._WriteCount;
			}
			set
			{
				if ((this._WriteCount != value))
				{
					this.OnWriteCountChanging(value);
					this.SendPropertyChanging();
					this._WriteCount = value;
					this.SendPropertyChanged("WriteCount");
					this.OnWriteCountChanged();
				}
			}
		}
		
		[Column(Storage="_WriteDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WriteDate
		{
			get
			{
				return this._WriteDate;
			}
			set
			{
				if ((this._WriteDate != value))
				{
					this.OnWriteDateChanging(value);
					this.SendPropertyChanging();
					this._WriteDate = value;
					this.SendPropertyChanged("WriteDate");
					this.OnWriteDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_Program_Update_Log")]
	public partial class TCU_UP_Program_Update_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VehicleModel;
		
		private double _ProgramVersion;
		
		private string _UpdateDetail;
		
		private System.DateTime _UpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnUpdateDetailChanging(string value);
    partial void OnUpdateDetailChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public TCU_UP_Program_Update_Log()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleModel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDetail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string UpdateDetail
		{
			get
			{
				return this._UpdateDetail;
			}
			set
			{
				if ((this._UpdateDetail != value))
				{
					this.OnUpdateDetailChanging(value);
					this.SendPropertyChanging();
					this._UpdateDetail = value;
					this.SendPropertyChanged("UpdateDetail");
					this.OnUpdateDetailChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_Program_Update_Log(DataMonitor)")]
	public partial class TCU_UP_Program_Update_LogDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VehicleModel;
		
		private double _ProgramVersion;
		
		private string _UpdateDetail;
		
		private System.DateTime _UpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnProgramVersionChanging(double value);
    partial void OnProgramVersionChanged();
    partial void OnUpdateDetailChanging(string value);
    partial void OnUpdateDetailChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public TCU_UP_Program_Update_LogDataMonitor()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleModel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramVersion", DbType="Float NOT NULL")]
		public double ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDetail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string UpdateDetail
		{
			get
			{
				return this._UpdateDetail;
			}
			set
			{
				if ((this._UpdateDetail != value))
				{
					this.OnUpdateDetailChanging(value);
					this.SendPropertyChanging();
					this._UpdateDetail = value;
					this.SendPropertyChanged("UpdateDetail");
					this.OnUpdateDetailChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_ProgramType")]
	public partial class TCU_UP_ProgramType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramType;
		
		private string _ProgramTypeName;
		
		private string _Remark;
		
		private EntityRef<TCU_UP_FILE> _TCU_UP_FILE;
		
		private EntitySet<TCU_UP_UserInfo> _TCU_UP_UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramTypeNameChanging(string value);
    partial void OnProgramTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TCU_UP_ProgramType()
		{
			this._TCU_UP_FILE = default(EntityRef<TCU_UP_FILE>);
			this._TCU_UP_UserInfo = new EntitySet<TCU_UP_UserInfo>(new Action<TCU_UP_UserInfo>(this.attach_TCU_UP_UserInfo), new Action<TCU_UP_UserInfo>(this.detach_TCU_UP_UserInfo));
			OnCreated();
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramTypeName
		{
			get
			{
				return this._ProgramTypeName;
			}
			set
			{
				if ((this._ProgramTypeName != value))
				{
					this.OnProgramTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeName = value;
					this.SendPropertyChanged("ProgramTypeName");
					this.OnProgramTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_FILE_TCU_UP_ProgramType", Storage="_TCU_UP_FILE", ThisKey="ProgramType", OtherKey="ProgramType", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public TCU_UP_FILE TCU_UP_FILE
		{
			get
			{
				return this._TCU_UP_FILE.Entity;
			}
			set
			{
				TCU_UP_FILE previousValue = this._TCU_UP_FILE.Entity;
				if (((previousValue != value) 
							|| (this._TCU_UP_FILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCU_UP_FILE.Entity = null;
						previousValue.TCU_UP_ProgramType = null;
					}
					this._TCU_UP_FILE.Entity = value;
					if ((value != null))
					{
						value.TCU_UP_ProgramType = this;
					}
					this.SendPropertyChanged("TCU_UP_FILE");
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_UserInfo_TCU_UP_ProgramType", Storage="_TCU_UP_UserInfo", OtherKey="AllowProgramType", DeleteRule="CASCADE")]
		public EntitySet<TCU_UP_UserInfo> TCU_UP_UserInfo
		{
			get
			{
				return this._TCU_UP_UserInfo;
			}
			set
			{
				this._TCU_UP_UserInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCU_UP_UserInfo(TCU_UP_UserInfo entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramType = this;
		}
		
		private void detach_TCU_UP_UserInfo(TCU_UP_UserInfo entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramType = null;
		}
	}
	
	[Table(Name="dbo.TCU_UP_ProgramType(DataMonitor)")]
	public partial class TCU_UP_ProgramTypeDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramType;
		
		private string _ProgramTypeName;
		
		private string _Remark;
		
		private EntitySet<TCU_UP_FILEDataMonitor> _TCU_UP_FILEDataMonitor;
		
		private EntitySet<TCU_UP_UserInfoDataMonitor> _TCU_UP_UserInfoDataMonitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramTypeChanging(int value);
    partial void OnProgramTypeChanged();
    partial void OnProgramTypeNameChanging(string value);
    partial void OnProgramTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TCU_UP_ProgramTypeDataMonitor()
		{
			this._TCU_UP_FILEDataMonitor = new EntitySet<TCU_UP_FILEDataMonitor>(new Action<TCU_UP_FILEDataMonitor>(this.attach_TCU_UP_FILEDataMonitor), new Action<TCU_UP_FILEDataMonitor>(this.detach_TCU_UP_FILEDataMonitor));
			this._TCU_UP_UserInfoDataMonitor = new EntitySet<TCU_UP_UserInfoDataMonitor>(new Action<TCU_UP_UserInfoDataMonitor>(this.attach_TCU_UP_UserInfoDataMonitor), new Action<TCU_UP_UserInfoDataMonitor>(this.detach_TCU_UP_UserInfoDataMonitor));
			OnCreated();
		}
		
		[Column(Storage="_ProgramType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramType
		{
			get
			{
				return this._ProgramType;
			}
			set
			{
				if ((this._ProgramType != value))
				{
					this.OnProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._ProgramType = value;
					this.SendPropertyChanged("ProgramType");
					this.OnProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProgramTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramTypeName
		{
			get
			{
				return this._ProgramTypeName;
			}
			set
			{
				if ((this._ProgramTypeName != value))
				{
					this.OnProgramTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeName = value;
					this.SendPropertyChanged("ProgramTypeName");
					this.OnProgramTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_FILE(DataMonitor)_TCU_UP_ProgramType(DataMonitor)", Storage="_TCU_UP_FILEDataMonitor", OtherKey="ProgramType", DeleteRule="CASCADE")]
		public EntitySet<TCU_UP_FILEDataMonitor> TCU_UP_FILEDataMonitor
		{
			get
			{
				return this._TCU_UP_FILEDataMonitor;
			}
			set
			{
				this._TCU_UP_FILEDataMonitor.Assign(value);
			}
		}
		
		[Association(Name="FK_TCU_UP_UserInfo(DataMonitor)_TCU_UP_ProgramType(DataMonitor)", Storage="_TCU_UP_UserInfoDataMonitor", OtherKey="AllowProgramType", DeleteRule="NO ACTION")]
		public EntitySet<TCU_UP_UserInfoDataMonitor> TCU_UP_UserInfoDataMonitor
		{
			get
			{
				return this._TCU_UP_UserInfoDataMonitor;
			}
			set
			{
				this._TCU_UP_UserInfoDataMonitor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCU_UP_FILEDataMonitor(TCU_UP_FILEDataMonitor entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramTypeDataMonitor = this;
		}
		
		private void detach_TCU_UP_FILEDataMonitor(TCU_UP_FILEDataMonitor entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramTypeDataMonitor = null;
		}
		
		private void attach_TCU_UP_UserInfoDataMonitor(TCU_UP_UserInfoDataMonitor entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramTypeDataMonitor = this;
		}
		
		private void detach_TCU_UP_UserInfoDataMonitor(TCU_UP_UserInfoDataMonitor entity)
		{
			this.SendPropertyChanging();
			entity.TCU_UP_ProgramTypeDataMonitor = null;
		}
	}
	
	[Table(Name="dbo.TCU_UP_TcuNumber(DataMonitor)")]
	public partial class TCU_UP_TcuNumberDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TcuNumber;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTcuNumberChanging(string value);
    partial void OnTcuNumberChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TCU_UP_TcuNumberDataMonitor()
		{
			OnCreated();
		}
		
		[Column(Storage="_TcuNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TcuNumber
		{
			get
			{
				return this._TcuNumber;
			}
			set
			{
				if ((this._TcuNumber != value))
				{
					this.OnTcuNumberChanging(value);
					this.SendPropertyChanging();
					this._TcuNumber = value;
					this.SendPropertyChanged("TcuNumber");
					this.OnTcuNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_TcuProgramCode")]
	public partial class TCU_UP_TcuProgramCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VehicleName;
		
		private string _VehicleCode;
		
		private string _CVTModel;
		
		private string _ClientGoodsCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleNameChanging(string value);
    partial void OnVehicleNameChanged();
    partial void OnVehicleCodeChanging(string value);
    partial void OnVehicleCodeChanged();
    partial void OnCVTModelChanging(string value);
    partial void OnCVTModelChanged();
    partial void OnClientGoodsCodeChanging(string value);
    partial void OnClientGoodsCodeChanged();
    #endregion
		
		public TCU_UP_TcuProgramCode()
		{
			OnCreated();
		}
		
		[Column(Storage="_VehicleName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VehicleName
		{
			get
			{
				return this._VehicleName;
			}
			set
			{
				if ((this._VehicleName != value))
				{
					this.OnVehicleNameChanging(value);
					this.SendPropertyChanging();
					this._VehicleName = value;
					this.SendPropertyChanged("VehicleName");
					this.OnVehicleNameChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleCode
		{
			get
			{
				return this._VehicleCode;
			}
			set
			{
				if ((this._VehicleCode != value))
				{
					this.OnVehicleCodeChanging(value);
					this.SendPropertyChanging();
					this._VehicleCode = value;
					this.SendPropertyChanged("VehicleCode");
					this.OnVehicleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CVTModel", DbType="VarChar(50)")]
		public string CVTModel
		{
			get
			{
				return this._CVTModel;
			}
			set
			{
				if ((this._CVTModel != value))
				{
					this.OnCVTModelChanging(value);
					this.SendPropertyChanging();
					this._CVTModel = value;
					this.SendPropertyChanged("CVTModel");
					this.OnCVTModelChanged();
				}
			}
		}
		
		[Column(Storage="_ClientGoodsCode", DbType="VarChar(50)")]
		public string ClientGoodsCode
		{
			get
			{
				return this._ClientGoodsCode;
			}
			set
			{
				if ((this._ClientGoodsCode != value))
				{
					this.OnClientGoodsCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientGoodsCode = value;
					this.SendPropertyChanged("ClientGoodsCode");
					this.OnClientGoodsCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_UserInfo")]
	public partial class TCU_UP_UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MachineCode;
		
		private string _UserName;
		
		private string _Company;
		
		private string _Contact;
		
		private string _ContactAddress;
		
		private bool _IsEnable;
		
		private int _CheckType;
		
		private int _AllowCount;
		
		private System.DateTime _EndDate;
		
		private int _AllowProgramType;
		
		private string _Remark;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateLog;
		
		private EntityRef<TCU_UP_ProgramType> _TCU_UP_ProgramType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnContactAddressChanging(string value);
    partial void OnContactAddressChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    partial void OnCheckTypeChanging(int value);
    partial void OnCheckTypeChanged();
    partial void OnAllowCountChanging(int value);
    partial void OnAllowCountChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnAllowProgramTypeChanging(int value);
    partial void OnAllowProgramTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateLogChanging(string value);
    partial void OnUpdateLogChanged();
    #endregion
		
		public TCU_UP_UserInfo()
		{
			this._TCU_UP_ProgramType = default(EntityRef<TCU_UP_ProgramType>);
			OnCreated();
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[Column(Storage="_ContactAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactAddress
		{
			get
			{
				return this._ContactAddress;
			}
			set
			{
				if ((this._ContactAddress != value))
				{
					this.OnContactAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactAddress = value;
					this.SendPropertyChanged("ContactAddress");
					this.OnContactAddressChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Column(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AllowCount", DbType="Int NOT NULL")]
		public int AllowCount
		{
			get
			{
				return this._AllowCount;
			}
			set
			{
				if ((this._AllowCount != value))
				{
					this.OnAllowCountChanging(value);
					this.SendPropertyChanging();
					this._AllowCount = value;
					this.SendPropertyChanged("AllowCount");
					this.OnAllowCountChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_AllowProgramType", DbType="Int NOT NULL")]
		public int AllowProgramType
		{
			get
			{
				return this._AllowProgramType;
			}
			set
			{
				if ((this._AllowProgramType != value))
				{
					if (this._TCU_UP_ProgramType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._AllowProgramType = value;
					this.SendPropertyChanged("AllowProgramType");
					this.OnAllowProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this.OnUpdateLogChanging(value);
					this.SendPropertyChanging();
					this._UpdateLog = value;
					this.SendPropertyChanged("UpdateLog");
					this.OnUpdateLogChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_UserInfo_TCU_UP_ProgramType", Storage="_TCU_UP_ProgramType", ThisKey="AllowProgramType", IsForeignKey=true, DeleteOnNull=true)]
		public TCU_UP_ProgramType TCU_UP_ProgramType
		{
			get
			{
				return this._TCU_UP_ProgramType.Entity;
			}
			set
			{
				TCU_UP_ProgramType previousValue = this._TCU_UP_ProgramType.Entity;
				if (((previousValue != value) 
							|| (this._TCU_UP_ProgramType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCU_UP_ProgramType.Entity = null;
						previousValue.TCU_UP_UserInfo.Remove(this);
					}
					this._TCU_UP_ProgramType.Entity = value;
					if ((value != null))
					{
						value.TCU_UP_UserInfo.Add(this);
						this._AllowProgramType = value.ProgramType;
					}
					else
					{
						this._AllowProgramType = default(int);
					}
					this.SendPropertyChanged("TCU_UP_ProgramType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_UserInfo(DataMonitor)")]
	public partial class TCU_UP_UserInfoDataMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MachineCode;
		
		private string _UserName;
		
		private string _Company;
		
		private string _Contact;
		
		private string _ContactAddress;
		
		private bool _IsEnable;
		
		private bool _IsAdvancedUser;
		
		private int _CheckType;
		
		private int _AllowCount;
		
		private System.DateTime _EndDate;
		
		private int _AllowProgramType;
		
		private string _Remark;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateLog;
		
		private EntityRef<TCU_UP_ProgramTypeDataMonitor> _TCU_UP_ProgramTypeDataMonitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineCodeChanging(string value);
    partial void OnMachineCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnContactAddressChanging(string value);
    partial void OnContactAddressChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    partial void OnIsAdvancedUserChanging(bool value);
    partial void OnIsAdvancedUserChanged();
    partial void OnCheckTypeChanging(int value);
    partial void OnCheckTypeChanged();
    partial void OnAllowCountChanging(int value);
    partial void OnAllowCountChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnAllowProgramTypeChanging(int value);
    partial void OnAllowProgramTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateLogChanging(string value);
    partial void OnUpdateLogChanged();
    #endregion
		
		public TCU_UP_UserInfoDataMonitor()
		{
			this._TCU_UP_ProgramTypeDataMonitor = default(EntityRef<TCU_UP_ProgramTypeDataMonitor>);
			OnCreated();
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this.OnMachineCodeChanging(value);
					this.SendPropertyChanging();
					this._MachineCode = value;
					this.SendPropertyChanged("MachineCode");
					this.OnMachineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[Column(Storage="_ContactAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactAddress
		{
			get
			{
				return this._ContactAddress;
			}
			set
			{
				if ((this._ContactAddress != value))
				{
					this.OnContactAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactAddress = value;
					this.SendPropertyChanged("ContactAddress");
					this.OnContactAddressChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Column(Storage="_IsAdvancedUser", DbType="Bit NOT NULL")]
		public bool IsAdvancedUser
		{
			get
			{
				return this._IsAdvancedUser;
			}
			set
			{
				if ((this._IsAdvancedUser != value))
				{
					this.OnIsAdvancedUserChanging(value);
					this.SendPropertyChanging();
					this._IsAdvancedUser = value;
					this.SendPropertyChanged("IsAdvancedUser");
					this.OnIsAdvancedUserChanged();
				}
			}
		}
		
		[Column(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AllowCount", DbType="Int NOT NULL")]
		public int AllowCount
		{
			get
			{
				return this._AllowCount;
			}
			set
			{
				if ((this._AllowCount != value))
				{
					this.OnAllowCountChanging(value);
					this.SendPropertyChanging();
					this._AllowCount = value;
					this.SendPropertyChanged("AllowCount");
					this.OnAllowCountChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_AllowProgramType", DbType="Int NOT NULL")]
		public int AllowProgramType
		{
			get
			{
				return this._AllowProgramType;
			}
			set
			{
				if ((this._AllowProgramType != value))
				{
					if (this._TCU_UP_ProgramTypeDataMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowProgramTypeChanging(value);
					this.SendPropertyChanging();
					this._AllowProgramType = value;
					this.SendPropertyChanged("AllowProgramType");
					this.OnAllowProgramTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this.OnUpdateLogChanging(value);
					this.SendPropertyChanging();
					this._UpdateLog = value;
					this.SendPropertyChanged("UpdateLog");
					this.OnUpdateLogChanged();
				}
			}
		}
		
		[Association(Name="FK_TCU_UP_UserInfo(DataMonitor)_TCU_UP_ProgramType(DataMonitor)", Storage="_TCU_UP_ProgramTypeDataMonitor", ThisKey="AllowProgramType", IsForeignKey=true)]
		public TCU_UP_ProgramTypeDataMonitor TCU_UP_ProgramTypeDataMonitor
		{
			get
			{
				return this._TCU_UP_ProgramTypeDataMonitor.Entity;
			}
			set
			{
				TCU_UP_ProgramTypeDataMonitor previousValue = this._TCU_UP_ProgramTypeDataMonitor.Entity;
				if (((previousValue != value) 
							|| (this._TCU_UP_ProgramTypeDataMonitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCU_UP_ProgramTypeDataMonitor.Entity = null;
						previousValue.TCU_UP_UserInfoDataMonitor.Remove(this);
					}
					this._TCU_UP_ProgramTypeDataMonitor.Entity = value;
					if ((value != null))
					{
						value.TCU_UP_UserInfoDataMonitor.Add(this);
						this._AllowProgramType = value.ProgramType;
					}
					else
					{
						this._AllowProgramType = default(int);
					}
					this.SendPropertyChanged("TCU_UP_ProgramTypeDataMonitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TCU_UP_VehicleModel")]
	public partial class TCU_UP_VehicleModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VehicleModel;
		
		private string _Remark;
		
		private string _VehicleCode;
		
		private System.Nullable<System.DateTime> _RecordTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnVehicleCodeChanging(string value);
    partial void OnVehicleCodeChanged();
    partial void OnRecordTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordTimeChanged();
    #endregion
		
		public TCU_UP_VehicleModel()
		{
			OnCreated();
		}
		
		[Column(Storage="_VehicleModel", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleCode", DbType="VarChar(20)")]
		public string VehicleCode
		{
			get
			{
				return this._VehicleCode;
			}
			set
			{
				if ((this._VehicleCode != value))
				{
					this.OnVehicleCodeChanging(value);
					this.SendPropertyChanging();
					this._VehicleCode = value;
					this.SendPropertyChanged("VehicleCode");
					this.OnVehicleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RecordTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.View_CCAR_QuestionTrackList")]
	public partial class View_CCAR_QuestionTrackList
	{
		
		private int _序号;
		
		private int _父级编号;
		
		private string _供应商负责人;
		
		private string _零件名称;
		
		private string _图形型号;
		
		private string _规格;
		
		private string _问题描述;
		
		private System.Nullable<System.DateTime> _供应商接受时间;
		
		private string _解决方案;
		
		private System.DateTime _发现时间;
		
		private string _进行状态;
		
		private System.Nullable<System.DateTime> _供应商结束时间;
		
		private System.Nullable<System.DateTime> _最后审核时间;
		
		private string _备注;
		
		public View_CCAR_QuestionTrackList()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL IDENTITY")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_父级编号", DbType="Int NOT NULL")]
		public int 父级编号
		{
			get
			{
				return this._父级编号;
			}
			set
			{
				if ((this._父级编号 != value))
				{
					this._父级编号 = value;
				}
			}
		}
		
		[Column(Storage="_供应商负责人", DbType="VarChar(50)")]
		public string 供应商负责人
		{
			get
			{
				return this._供应商负责人;
			}
			set
			{
				if ((this._供应商负责人 != value))
				{
					this._供应商负责人 = value;
				}
			}
		}
		
		[Column(Storage="_零件名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 零件名称
		{
			get
			{
				return this._零件名称;
			}
			set
			{
				if ((this._零件名称 != value))
				{
					this._零件名称 = value;
				}
			}
		}
		
		[Column(Storage="_图形型号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 图形型号
		{
			get
			{
				return this._图形型号;
			}
			set
			{
				if ((this._图形型号 != value))
				{
					this._图形型号 = value;
				}
			}
		}
		
		[Column(Storage="_规格", DbType="VarChar(50)")]
		public string 规格
		{
			get
			{
				return this._规格;
			}
			set
			{
				if ((this._规格 != value))
				{
					this._规格 = value;
				}
			}
		}
		
		[Column(Storage="_问题描述", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string 问题描述
		{
			get
			{
				return this._问题描述;
			}
			set
			{
				if ((this._问题描述 != value))
				{
					this._问题描述 = value;
				}
			}
		}
		
		[Column(Storage="_供应商接受时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 供应商接受时间
		{
			get
			{
				return this._供应商接受时间;
			}
			set
			{
				if ((this._供应商接受时间 != value))
				{
					this._供应商接受时间 = value;
				}
			}
		}
		
		[Column(Storage="_解决方案", DbType="NVarChar(2000)")]
		public string 解决方案
		{
			get
			{
				return this._解决方案;
			}
			set
			{
				if ((this._解决方案 != value))
				{
					this._解决方案 = value;
				}
			}
		}
		
		[Column(Storage="_发现时间", DbType="DateTime NOT NULL")]
		public System.DateTime 发现时间
		{
			get
			{
				return this._发现时间;
			}
			set
			{
				if ((this._发现时间 != value))
				{
					this._发现时间 = value;
				}
			}
		}
		
		[Column(Storage="_进行状态", DbType="VarChar(50)")]
		public string 进行状态
		{
			get
			{
				return this._进行状态;
			}
			set
			{
				if ((this._进行状态 != value))
				{
					this._进行状态 = value;
				}
			}
		}
		
		[Column(Storage="_供应商结束时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 供应商结束时间
		{
			get
			{
				return this._供应商结束时间;
			}
			set
			{
				if ((this._供应商结束时间 != value))
				{
					this._供应商结束时间 = value;
				}
			}
		}
		
		[Column(Storage="_最后审核时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 最后审核时间
		{
			get
			{
				return this._最后审核时间;
			}
			set
			{
				if ((this._最后审核时间 != value))
				{
					this._最后审核时间 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(800)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_OF_LoginLog")]
	public partial class View_OF_LoginLog
	{
		
		private int _序号;
		
		private string _用户编码;
		
		private string _用户姓名;
		
		private System.DateTime _最近登录日期;
		
		private string _登录IP地址;
		
		private int _登录次数;
		
		public View_OF_LoginLog()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL IDENTITY")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_用户编码", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 用户编码
		{
			get
			{
				return this._用户编码;
			}
			set
			{
				if ((this._用户编码 != value))
				{
					this._用户编码 = value;
				}
			}
		}
		
		[Column(Storage="_用户姓名", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 用户姓名
		{
			get
			{
				return this._用户姓名;
			}
			set
			{
				if ((this._用户姓名 != value))
				{
					this._用户姓名 = value;
				}
			}
		}
		
		[Column(Storage="_最近登录日期", DbType="DateTime NOT NULL")]
		public System.DateTime 最近登录日期
		{
			get
			{
				return this._最近登录日期;
			}
			set
			{
				if ((this._最近登录日期 != value))
				{
					this._最近登录日期 = value;
				}
			}
		}
		
		[Column(Storage="_登录IP地址", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 登录IP地址
		{
			get
			{
				return this._登录IP地址;
			}
			set
			{
				if ((this._登录IP地址 != value))
				{
					this._登录IP地址 = value;
				}
			}
		}
		
		[Column(Storage="_登录次数", DbType="Int NOT NULL")]
		public int 登录次数
		{
			get
			{
				return this._登录次数;
			}
			set
			{
				if ((this._登录次数 != value))
				{
					this._登录次数 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_OF_News")]
	public partial class View_OF_News
	{
		
		private int _新闻ID;
		
		private string _新闻标题;
		
		private string _新闻URL;
		
		private System.DateTime _发布时间;
		
		private int _新闻类别;
		
		private string _新闻类别名称;
		
		public View_OF_News()
		{
		}
		
		[Column(Storage="_新闻ID", DbType="Int NOT NULL")]
		public int 新闻ID
		{
			get
			{
				return this._新闻ID;
			}
			set
			{
				if ((this._新闻ID != value))
				{
					this._新闻ID = value;
				}
			}
		}
		
		[Column(Storage="_新闻标题", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string 新闻标题
		{
			get
			{
				return this._新闻标题;
			}
			set
			{
				if ((this._新闻标题 != value))
				{
					this._新闻标题 = value;
				}
			}
		}
		
		[Column(Storage="_新闻URL", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 新闻URL
		{
			get
			{
				return this._新闻URL;
			}
			set
			{
				if ((this._新闻URL != value))
				{
					this._新闻URL = value;
				}
			}
		}
		
		[Column(Storage="_发布时间", DbType="DateTime NOT NULL")]
		public System.DateTime 发布时间
		{
			get
			{
				return this._发布时间;
			}
			set
			{
				if ((this._发布时间 != value))
				{
					this._发布时间 = value;
				}
			}
		}
		
		[Column(Storage="_新闻类别", DbType="Int NOT NULL")]
		public int 新闻类别
		{
			get
			{
				return this._新闻类别;
			}
			set
			{
				if ((this._新闻类别 != value))
				{
					this._新闻类别 = value;
				}
			}
		}
		
		[Column(Storage="_新闻类别名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 新闻类别名称
		{
			get
			{
				return this._新闻类别名称;
			}
			set
			{
				if ((this._新闻类别名称 != value))
				{
					this._新闻类别名称 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_OF_OrderForm_ArrivalInfo")]
	public partial class View_OF_OrderForm_ArrivalInfo
	{
		
		private int _订单物品列表ID;
		
		private string _入库单号;
		
		private string _批次号;
		
		private System.DateTime _实际到货日期;
		
		private decimal _实际到货数;
		
		private decimal _合格数;
		
		private decimal _让步数;
		
		private decimal _检验破坏数;
		
		private decimal _退货数;
		
		private string _质量信息;
		
		public View_OF_OrderForm_ArrivalInfo()
		{
		}
		
		[Column(Storage="_订单物品列表ID", DbType="Int NOT NULL")]
		public int 订单物品列表ID
		{
			get
			{
				return this._订单物品列表ID;
			}
			set
			{
				if ((this._订单物品列表ID != value))
				{
					this._订单物品列表ID = value;
				}
			}
		}
		
		[Column(Storage="_入库单号", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 入库单号
		{
			get
			{
				return this._入库单号;
			}
			set
			{
				if ((this._入库单号 != value))
				{
					this._入库单号 = value;
				}
			}
		}
		
		[Column(Storage="_批次号", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 批次号
		{
			get
			{
				return this._批次号;
			}
			set
			{
				if ((this._批次号 != value))
				{
					this._批次号 = value;
				}
			}
		}
		
		[Column(Storage="_实际到货日期", DbType="DateTime NOT NULL")]
		public System.DateTime 实际到货日期
		{
			get
			{
				return this._实际到货日期;
			}
			set
			{
				if ((this._实际到货日期 != value))
				{
					this._实际到货日期 = value;
				}
			}
		}
		
		[Column(Storage="_实际到货数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 实际到货数
		{
			get
			{
				return this._实际到货数;
			}
			set
			{
				if ((this._实际到货数 != value))
				{
					this._实际到货数 = value;
				}
			}
		}
		
		[Column(Storage="_合格数", DbType="Decimal(18,3) NOT NULL")]
		public decimal 合格数
		{
			get
			{
				return this._合格数;
			}
			set
			{
				if ((this._合格数 != value))
				{
					this._合格数 = value;
				}
			}
		}
		
		[Column(Storage="_让步数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 让步数
		{
			get
			{
				return this._让步数;
			}
			set
			{
				if ((this._让步数 != value))
				{
					this._让步数 = value;
				}
			}
		}
		
		[Column(Storage="_检验破坏数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 检验破坏数
		{
			get
			{
				return this._检验破坏数;
			}
			set
			{
				if ((this._检验破坏数 != value))
				{
					this._检验破坏数 = value;
				}
			}
		}
		
		[Column(Storage="_退货数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 退货数
		{
			get
			{
				return this._退货数;
			}
			set
			{
				if ((this._退货数 != value))
				{
					this._退货数 = value;
				}
			}
		}
		
		[Column(Storage="_质量信息", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 质量信息
		{
			get
			{
				return this._质量信息;
			}
			set
			{
				if ((this._质量信息 != value))
				{
					this._质量信息 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_OF_OrderForm_IntegratedArrivalInfo")]
	public partial class View_OF_OrderForm_IntegratedArrivalInfo
	{
		
		private string _订单号;
		
		private string _图号型号;
		
		private string _物品名称;
		
		private string _规格;
		
		private System.DateTime _要求到货日期;
		
		private decimal _订货数量;
		
		private string _入库单号;
		
		private string _批次号;
		
		private System.DateTime _实际到货日期;
		
		private decimal _实际到货数;
		
		private decimal _合格数;
		
		private decimal _让步数;
		
		private decimal _检验破坏数;
		
		private decimal _退货数;
		
		private string _质量信息;
		
		private string _供货单位;
		
		private string _采购员;
		
		public View_OF_OrderForm_IntegratedArrivalInfo()
		{
		}
		
		[Column(Storage="_订单号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 订单号
		{
			get
			{
				return this._订单号;
			}
			set
			{
				if ((this._订单号 != value))
				{
					this._订单号 = value;
				}
			}
		}
		
		[Column(Storage="_图号型号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 图号型号
		{
			get
			{
				return this._图号型号;
			}
			set
			{
				if ((this._图号型号 != value))
				{
					this._图号型号 = value;
				}
			}
		}
		
		[Column(Storage="_物品名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 物品名称
		{
			get
			{
				return this._物品名称;
			}
			set
			{
				if ((this._物品名称 != value))
				{
					this._物品名称 = value;
				}
			}
		}
		
		[Column(Storage="_规格", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 规格
		{
			get
			{
				return this._规格;
			}
			set
			{
				if ((this._规格 != value))
				{
					this._规格 = value;
				}
			}
		}
		
		[Column(Storage="_要求到货日期", DbType="DateTime NOT NULL")]
		public System.DateTime 要求到货日期
		{
			get
			{
				return this._要求到货日期;
			}
			set
			{
				if ((this._要求到货日期 != value))
				{
					this._要求到货日期 = value;
				}
			}
		}
		
		[Column(Storage="_订货数量", DbType="Decimal(18,3) NOT NULL")]
		public decimal 订货数量
		{
			get
			{
				return this._订货数量;
			}
			set
			{
				if ((this._订货数量 != value))
				{
					this._订货数量 = value;
				}
			}
		}
		
		[Column(Storage="_入库单号", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 入库单号
		{
			get
			{
				return this._入库单号;
			}
			set
			{
				if ((this._入库单号 != value))
				{
					this._入库单号 = value;
				}
			}
		}
		
		[Column(Storage="_批次号", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 批次号
		{
			get
			{
				return this._批次号;
			}
			set
			{
				if ((this._批次号 != value))
				{
					this._批次号 = value;
				}
			}
		}
		
		[Column(Storage="_实际到货日期", DbType="DateTime NOT NULL")]
		public System.DateTime 实际到货日期
		{
			get
			{
				return this._实际到货日期;
			}
			set
			{
				if ((this._实际到货日期 != value))
				{
					this._实际到货日期 = value;
				}
			}
		}
		
		[Column(Storage="_实际到货数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 实际到货数
		{
			get
			{
				return this._实际到货数;
			}
			set
			{
				if ((this._实际到货数 != value))
				{
					this._实际到货数 = value;
				}
			}
		}
		
		[Column(Storage="_合格数", DbType="Decimal(18,3) NOT NULL")]
		public decimal 合格数
		{
			get
			{
				return this._合格数;
			}
			set
			{
				if ((this._合格数 != value))
				{
					this._合格数 = value;
				}
			}
		}
		
		[Column(Storage="_让步数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 让步数
		{
			get
			{
				return this._让步数;
			}
			set
			{
				if ((this._让步数 != value))
				{
					this._让步数 = value;
				}
			}
		}
		
		[Column(Storage="_检验破坏数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 检验破坏数
		{
			get
			{
				return this._检验破坏数;
			}
			set
			{
				if ((this._检验破坏数 != value))
				{
					this._检验破坏数 = value;
				}
			}
		}
		
		[Column(Storage="_退货数", DbType="Decimal(18,2) NOT NULL")]
		public decimal 退货数
		{
			get
			{
				return this._退货数;
			}
			set
			{
				if ((this._退货数 != value))
				{
					this._退货数 = value;
				}
			}
		}
		
		[Column(Storage="_质量信息", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 质量信息
		{
			get
			{
				return this._质量信息;
			}
			set
			{
				if ((this._质量信息 != value))
				{
					this._质量信息 = value;
				}
			}
		}
		
		[Column(Storage="_供货单位", DbType="VarChar(50)")]
		public string 供货单位
		{
			get
			{
				return this._供货单位;
			}
			set
			{
				if ((this._供货单位 != value))
				{
					this._供货单位 = value;
				}
			}
		}
		
		[Column(Storage="_采购员", DbType="VarChar(50)")]
		public string 采购员
		{
			get
			{
				return this._采购员;
			}
			set
			{
				if ((this._采购员 != value))
				{
					this._采购员 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_OF_OrderFormInfo")]
	public partial class View_OF_OrderFormInfo
	{
		
		private string _订单号;
		
		private string _供应商;
		
		private bool _确认订单;
		
		private string _供应商处理状态;
		
		private int _物品列表ID;
		
		private string _图号型号;
		
		private string _物品名称;
		
		private string _规格;
		
		private decimal _订货数量;
		
		private System.DateTime _要求到货日期;
		
		private decimal _入库数;
		
		private decimal _让步数;
		
		private decimal _退货数;
		
		private decimal _检验破坏数;
		
		private string _订货人编号;
		
		private string _订货人;
		
		private System.Nullable<System.DateTime> _创建日期;
		
		private string _供应商联系人;
		
		private string _供应商联系方式;
		
		private string _备注;
		
		public View_OF_OrderFormInfo()
		{
		}
		
		[Column(Storage="_订单号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 订单号
		{
			get
			{
				return this._订单号;
			}
			set
			{
				if ((this._订单号 != value))
				{
					this._订单号 = value;
				}
			}
		}
		
		[Column(Storage="_供应商", DbType="VarChar(50)")]
		public string 供应商
		{
			get
			{
				return this._供应商;
			}
			set
			{
				if ((this._供应商 != value))
				{
					this._供应商 = value;
				}
			}
		}
		
		[Column(Storage="_确认订单", DbType="Bit NOT NULL")]
		public bool 确认订单
		{
			get
			{
				return this._确认订单;
			}
			set
			{
				if ((this._确认订单 != value))
				{
					this._确认订单 = value;
				}
			}
		}
		
		[Column(Storage="_供应商处理状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 供应商处理状态
		{
			get
			{
				return this._供应商处理状态;
			}
			set
			{
				if ((this._供应商处理状态 != value))
				{
					this._供应商处理状态 = value;
				}
			}
		}
		
		[Column(Storage="_物品列表ID", DbType="Int NOT NULL")]
		public int 物品列表ID
		{
			get
			{
				return this._物品列表ID;
			}
			set
			{
				if ((this._物品列表ID != value))
				{
					this._物品列表ID = value;
				}
			}
		}
		
		[Column(Storage="_图号型号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 图号型号
		{
			get
			{
				return this._图号型号;
			}
			set
			{
				if ((this._图号型号 != value))
				{
					this._图号型号 = value;
				}
			}
		}
		
		[Column(Storage="_物品名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 物品名称
		{
			get
			{
				return this._物品名称;
			}
			set
			{
				if ((this._物品名称 != value))
				{
					this._物品名称 = value;
				}
			}
		}
		
		[Column(Storage="_规格", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 规格
		{
			get
			{
				return this._规格;
			}
			set
			{
				if ((this._规格 != value))
				{
					this._规格 = value;
				}
			}
		}
		
		[Column(Storage="_订货数量", DbType="Decimal(18,3) NOT NULL")]
		public decimal 订货数量
		{
			get
			{
				return this._订货数量;
			}
			set
			{
				if ((this._订货数量 != value))
				{
					this._订货数量 = value;
				}
			}
		}
		
		[Column(Storage="_要求到货日期", DbType="DateTime NOT NULL")]
		public System.DateTime 要求到货日期
		{
			get
			{
				return this._要求到货日期;
			}
			set
			{
				if ((this._要求到货日期 != value))
				{
					this._要求到货日期 = value;
				}
			}
		}
		
		[Column(Storage="_入库数", DbType="Decimal(38,3) NOT NULL")]
		public decimal 入库数
		{
			get
			{
				return this._入库数;
			}
			set
			{
				if ((this._入库数 != value))
				{
					this._入库数 = value;
				}
			}
		}
		
		[Column(Storage="_让步数", DbType="Decimal(38,2) NOT NULL")]
		public decimal 让步数
		{
			get
			{
				return this._让步数;
			}
			set
			{
				if ((this._让步数 != value))
				{
					this._让步数 = value;
				}
			}
		}
		
		[Column(Storage="_退货数", DbType="Decimal(38,2) NOT NULL")]
		public decimal 退货数
		{
			get
			{
				return this._退货数;
			}
			set
			{
				if ((this._退货数 != value))
				{
					this._退货数 = value;
				}
			}
		}
		
		[Column(Storage="_检验破坏数", DbType="Decimal(38,2) NOT NULL")]
		public decimal 检验破坏数
		{
			get
			{
				return this._检验破坏数;
			}
			set
			{
				if ((this._检验破坏数 != value))
				{
					this._检验破坏数 = value;
				}
			}
		}
		
		[Column(Storage="_订货人编号", DbType="VarChar(50)")]
		public string 订货人编号
		{
			get
			{
				return this._订货人编号;
			}
			set
			{
				if ((this._订货人编号 != value))
				{
					this._订货人编号 = value;
				}
			}
		}
		
		[Column(Storage="_订货人", DbType="NVarChar(50)")]
		public string 订货人
		{
			get
			{
				return this._订货人;
			}
			set
			{
				if ((this._订货人 != value))
				{
					this._订货人 = value;
				}
			}
		}
		
		[Column(Storage="_创建日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 创建日期
		{
			get
			{
				return this._创建日期;
			}
			set
			{
				if ((this._创建日期 != value))
				{
					this._创建日期 = value;
				}
			}
		}
		
		[Column(Storage="_供应商联系人", DbType="VarChar(50)")]
		public string 供应商联系人
		{
			get
			{
				return this._供应商联系人;
			}
			set
			{
				if ((this._供应商联系人 != value))
				{
					this._供应商联系人 = value;
				}
			}
		}
		
		[Column(Storage="_供应商联系方式", DbType="VarChar(50)")]
		public string 供应商联系方式
		{
			get
			{
				return this._供应商联系方式;
			}
			set
			{
				if ((this._供应商联系方式 != value))
				{
					this._供应商联系方式 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_S_AfterService")]
	public partial class View_S_AfterService
	{
		
		private string _单据号;
		
		private string _单据状态;
		
		private string _信息来源;
		
		private string _函电类别;
		
		private string _内容类别;
		
		private string _接函电人;
		
		private System.Nullable<System.DateTime> _接函电时间;
		
		private System.Nullable<System.DateTime> _处理意见提出时间;
		
		private System.Nullable<System.DateTime> _通报时间;
		
		private System.Nullable<System.DateTime> _提出应对方案时间;
		
		private System.Nullable<System.DateTime> _函电录入时间;
		
		private string _函电录入人;
		
		private string _服务站名称;
		
		private string _联系电话;
		
		private string _用户姓名;
		
		private string _用户电话;
		
		private string _用户住址;
		
		private string _车型;
		
		private string _变速箱型号;
		
		private string _变速箱编号;
		
		private string _车架号;
		
		private string _故障地点;
		
		private string _购车时间;
		
		private string _行驶里程;
		
		private string _总成状态;
		
		private string _使用性质;
		
		private string _用户态度;
		
		private string _故障简叙;
		
		private System.Nullable<bool> _是否CVT故障;
		
		private string _客服中心处理意见;
		
		private string _处理方式;
		
		private string _接单处理人;
		
		private string _三包凭证号;
		
		private System.Nullable<System.DateTime> _接单时间;
		
		private string _诊断及测试情况;
		
		private string _处理方案;
		
		private string _处理结果;
		
		private string _审核人;
		
		private System.Nullable<System.DateTime> _审核回访时间;
		
		private string _维修质量;
		
		private string _服务态度;
		
		private string _是否收费;
		
		private System.Nullable<decimal> _金额;
		
		private string _故障处理效果确认;
		
		private string _回访人;
		
		private System.Nullable<System.DateTime> _回访时间;
		
		private string _反馈单号;
		
		private string _救援金额;
		
		private string _现场处理;
		
		private string _接函电人编号;
		
		private string _录入人编号;
		
		private string _处理人编号;
		
		private string _审核人编号;
		
		private string _回访人编号;
		
		private string _是否三包内;
		
		private string _新三包;
		
		private System.Nullable<bool> _是否由售后库房发出;
		
		public View_S_AfterService()
		{
		}
		
		[Column(Storage="_单据号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 单据号
		{
			get
			{
				return this._单据号;
			}
			set
			{
				if ((this._单据号 != value))
				{
					this._单据号 = value;
				}
			}
		}
		
		[Column(Storage="_单据状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 单据状态
		{
			get
			{
				return this._单据状态;
			}
			set
			{
				if ((this._单据状态 != value))
				{
					this._单据状态 = value;
				}
			}
		}
		
		[Column(Storage="_信息来源", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 信息来源
		{
			get
			{
				return this._信息来源;
			}
			set
			{
				if ((this._信息来源 != value))
				{
					this._信息来源 = value;
				}
			}
		}
		
		[Column(Storage="_函电类别", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 函电类别
		{
			get
			{
				return this._函电类别;
			}
			set
			{
				if ((this._函电类别 != value))
				{
					this._函电类别 = value;
				}
			}
		}
		
		[Column(Storage="_内容类别", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 内容类别
		{
			get
			{
				return this._内容类别;
			}
			set
			{
				if ((this._内容类别 != value))
				{
					this._内容类别 = value;
				}
			}
		}
		
		[Column(Storage="_接函电人", DbType="NVarChar(50)")]
		public string 接函电人
		{
			get
			{
				return this._接函电人;
			}
			set
			{
				if ((this._接函电人 != value))
				{
					this._接函电人 = value;
				}
			}
		}
		
		[Column(Storage="_接函电时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 接函电时间
		{
			get
			{
				return this._接函电时间;
			}
			set
			{
				if ((this._接函电时间 != value))
				{
					this._接函电时间 = value;
				}
			}
		}
		
		[Column(Storage="_处理意见提出时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 处理意见提出时间
		{
			get
			{
				return this._处理意见提出时间;
			}
			set
			{
				if ((this._处理意见提出时间 != value))
				{
					this._处理意见提出时间 = value;
				}
			}
		}
		
		[Column(Storage="_通报时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 通报时间
		{
			get
			{
				return this._通报时间;
			}
			set
			{
				if ((this._通报时间 != value))
				{
					this._通报时间 = value;
				}
			}
		}
		
		[Column(Storage="_提出应对方案时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 提出应对方案时间
		{
			get
			{
				return this._提出应对方案时间;
			}
			set
			{
				if ((this._提出应对方案时间 != value))
				{
					this._提出应对方案时间 = value;
				}
			}
		}
		
		[Column(Storage="_函电录入时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 函电录入时间
		{
			get
			{
				return this._函电录入时间;
			}
			set
			{
				if ((this._函电录入时间 != value))
				{
					this._函电录入时间 = value;
				}
			}
		}
		
		[Column(Storage="_函电录入人", DbType="NVarChar(50)")]
		public string 函电录入人
		{
			get
			{
				return this._函电录入人;
			}
			set
			{
				if ((this._函电录入人 != value))
				{
					this._函电录入人 = value;
				}
			}
		}
		
		[Column(Storage="_服务站名称", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 服务站名称
		{
			get
			{
				return this._服务站名称;
			}
			set
			{
				if ((this._服务站名称 != value))
				{
					this._服务站名称 = value;
				}
			}
		}
		
		[Column(Storage="_联系电话", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 联系电话
		{
			get
			{
				return this._联系电话;
			}
			set
			{
				if ((this._联系电话 != value))
				{
					this._联系电话 = value;
				}
			}
		}
		
		[Column(Storage="_用户姓名", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 用户姓名
		{
			get
			{
				return this._用户姓名;
			}
			set
			{
				if ((this._用户姓名 != value))
				{
					this._用户姓名 = value;
				}
			}
		}
		
		[Column(Storage="_用户电话", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 用户电话
		{
			get
			{
				return this._用户电话;
			}
			set
			{
				if ((this._用户电话 != value))
				{
					this._用户电话 = value;
				}
			}
		}
		
		[Column(Storage="_用户住址", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 用户住址
		{
			get
			{
				return this._用户住址;
			}
			set
			{
				if ((this._用户住址 != value))
				{
					this._用户住址 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_变速箱型号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 变速箱型号
		{
			get
			{
				return this._变速箱型号;
			}
			set
			{
				if ((this._变速箱型号 != value))
				{
					this._变速箱型号 = value;
				}
			}
		}
		
		[Column(Storage="_变速箱编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 变速箱编号
		{
			get
			{
				return this._变速箱编号;
			}
			set
			{
				if ((this._变速箱编号 != value))
				{
					this._变速箱编号 = value;
				}
			}
		}
		
		[Column(Storage="_车架号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 车架号
		{
			get
			{
				return this._车架号;
			}
			set
			{
				if ((this._车架号 != value))
				{
					this._车架号 = value;
				}
			}
		}
		
		[Column(Storage="_故障地点", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障地点
		{
			get
			{
				return this._故障地点;
			}
			set
			{
				if ((this._故障地点 != value))
				{
					this._故障地点 = value;
				}
			}
		}
		
		[Column(Storage="_购车时间", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 购车时间
		{
			get
			{
				return this._购车时间;
			}
			set
			{
				if ((this._购车时间 != value))
				{
					this._购车时间 = value;
				}
			}
		}
		
		[Column(Storage="_行驶里程", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 行驶里程
		{
			get
			{
				return this._行驶里程;
			}
			set
			{
				if ((this._行驶里程 != value))
				{
					this._行驶里程 = value;
				}
			}
		}
		
		[Column(Storage="_总成状态", DbType="VarChar(50)")]
		public string 总成状态
		{
			get
			{
				return this._总成状态;
			}
			set
			{
				if ((this._总成状态 != value))
				{
					this._总成状态 = value;
				}
			}
		}
		
		[Column(Storage="_使用性质", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 使用性质
		{
			get
			{
				return this._使用性质;
			}
			set
			{
				if ((this._使用性质 != value))
				{
					this._使用性质 = value;
				}
			}
		}
		
		[Column(Storage="_用户态度", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 用户态度
		{
			get
			{
				return this._用户态度;
			}
			set
			{
				if ((this._用户态度 != value))
				{
					this._用户态度 = value;
				}
			}
		}
		
		[Column(Storage="_故障简叙", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障简叙
		{
			get
			{
				return this._故障简叙;
			}
			set
			{
				if ((this._故障简叙 != value))
				{
					this._故障简叙 = value;
				}
			}
		}
		
		[Column(Storage="_是否CVT故障", DbType="Bit")]
		public System.Nullable<bool> 是否CVT故障
		{
			get
			{
				return this._是否CVT故障;
			}
			set
			{
				if ((this._是否CVT故障 != value))
				{
					this._是否CVT故障 = value;
				}
			}
		}
		
		[Column(Storage="_客服中心处理意见", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 客服中心处理意见
		{
			get
			{
				return this._客服中心处理意见;
			}
			set
			{
				if ((this._客服中心处理意见 != value))
				{
					this._客服中心处理意见 = value;
				}
			}
		}
		
		[Column(Storage="_处理方式", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 处理方式
		{
			get
			{
				return this._处理方式;
			}
			set
			{
				if ((this._处理方式 != value))
				{
					this._处理方式 = value;
				}
			}
		}
		
		[Column(Storage="_接单处理人", DbType="NVarChar(50)")]
		public string 接单处理人
		{
			get
			{
				return this._接单处理人;
			}
			set
			{
				if ((this._接单处理人 != value))
				{
					this._接单处理人 = value;
				}
			}
		}
		
		[Column(Storage="_三包凭证号", DbType="VarChar(50)")]
		public string 三包凭证号
		{
			get
			{
				return this._三包凭证号;
			}
			set
			{
				if ((this._三包凭证号 != value))
				{
					this._三包凭证号 = value;
				}
			}
		}
		
		[Column(Storage="_接单时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 接单时间
		{
			get
			{
				return this._接单时间;
			}
			set
			{
				if ((this._接单时间 != value))
				{
					this._接单时间 = value;
				}
			}
		}
		
		[Column(Storage="_诊断及测试情况", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 诊断及测试情况
		{
			get
			{
				return this._诊断及测试情况;
			}
			set
			{
				if ((this._诊断及测试情况 != value))
				{
					this._诊断及测试情况 = value;
				}
			}
		}
		
		[Column(Storage="_处理方案", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 处理方案
		{
			get
			{
				return this._处理方案;
			}
			set
			{
				if ((this._处理方案 != value))
				{
					this._处理方案 = value;
				}
			}
		}
		
		[Column(Storage="_处理结果", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 处理结果
		{
			get
			{
				return this._处理结果;
			}
			set
			{
				if ((this._处理结果 != value))
				{
					this._处理结果 = value;
				}
			}
		}
		
		[Column(Storage="_审核人", DbType="NVarChar(50)")]
		public string 审核人
		{
			get
			{
				return this._审核人;
			}
			set
			{
				if ((this._审核人 != value))
				{
					this._审核人 = value;
				}
			}
		}
		
		[Column(Storage="_审核回访时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 审核回访时间
		{
			get
			{
				return this._审核回访时间;
			}
			set
			{
				if ((this._审核回访时间 != value))
				{
					this._审核回访时间 = value;
				}
			}
		}
		
		[Column(Storage="_维修质量", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 维修质量
		{
			get
			{
				return this._维修质量;
			}
			set
			{
				if ((this._维修质量 != value))
				{
					this._维修质量 = value;
				}
			}
		}
		
		[Column(Storage="_服务态度", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 服务态度
		{
			get
			{
				return this._服务态度;
			}
			set
			{
				if ((this._服务态度 != value))
				{
					this._服务态度 = value;
				}
			}
		}
		
		[Column(Storage="_是否收费", DbType="Char(2)")]
		public string 是否收费
		{
			get
			{
				return this._是否收费;
			}
			set
			{
				if ((this._是否收费 != value))
				{
					this._是否收费 = value;
				}
			}
		}
		
		[Column(Storage="_金额", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> 金额
		{
			get
			{
				return this._金额;
			}
			set
			{
				if ((this._金额 != value))
				{
					this._金额 = value;
				}
			}
		}
		
		[Column(Storage="_故障处理效果确认", DbType="VarChar(200)")]
		public string 故障处理效果确认
		{
			get
			{
				return this._故障处理效果确认;
			}
			set
			{
				if ((this._故障处理效果确认 != value))
				{
					this._故障处理效果确认 = value;
				}
			}
		}
		
		[Column(Storage="_回访人", DbType="NVarChar(50)")]
		public string 回访人
		{
			get
			{
				return this._回访人;
			}
			set
			{
				if ((this._回访人 != value))
				{
					this._回访人 = value;
				}
			}
		}
		
		[Column(Storage="_回访时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 回访时间
		{
			get
			{
				return this._回访时间;
			}
			set
			{
				if ((this._回访时间 != value))
				{
					this._回访时间 = value;
				}
			}
		}
		
		[Column(Storage="_反馈单号", DbType="VarChar(50)")]
		public string 反馈单号
		{
			get
			{
				return this._反馈单号;
			}
			set
			{
				if ((this._反馈单号 != value))
				{
					this._反馈单号 = value;
				}
			}
		}
		
		[Column(Storage="_救援金额", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 救援金额
		{
			get
			{
				return this._救援金额;
			}
			set
			{
				if ((this._救援金额 != value))
				{
					this._救援金额 = value;
				}
			}
		}
		
		[Column(Storage="_现场处理", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 现场处理
		{
			get
			{
				return this._现场处理;
			}
			set
			{
				if ((this._现场处理 != value))
				{
					this._现场处理 = value;
				}
			}
		}
		
		[Column(Storage="_接函电人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 接函电人编号
		{
			get
			{
				return this._接函电人编号;
			}
			set
			{
				if ((this._接函电人编号 != value))
				{
					this._接函电人编号 = value;
				}
			}
		}
		
		[Column(Storage="_录入人编号", DbType="VarChar(50)")]
		public string 录入人编号
		{
			get
			{
				return this._录入人编号;
			}
			set
			{
				if ((this._录入人编号 != value))
				{
					this._录入人编号 = value;
				}
			}
		}
		
		[Column(Storage="_处理人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 处理人编号
		{
			get
			{
				return this._处理人编号;
			}
			set
			{
				if ((this._处理人编号 != value))
				{
					this._处理人编号 = value;
				}
			}
		}
		
		[Column(Storage="_审核人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 审核人编号
		{
			get
			{
				return this._审核人编号;
			}
			set
			{
				if ((this._审核人编号 != value))
				{
					this._审核人编号 = value;
				}
			}
		}
		
		[Column(Storage="_回访人编号", DbType="VarChar(50)")]
		public string 回访人编号
		{
			get
			{
				return this._回访人编号;
			}
			set
			{
				if ((this._回访人编号 != value))
				{
					this._回访人编号 = value;
				}
			}
		}
		
		[Column(Storage="_是否三包内", DbType="VarChar(50)")]
		public string 是否三包内
		{
			get
			{
				return this._是否三包内;
			}
			set
			{
				if ((this._是否三包内 != value))
				{
					this._是否三包内 = value;
				}
			}
		}
		
		[Column(Storage="_新三包", DbType="VarChar(50)")]
		public string 新三包
		{
			get
			{
				return this._新三包;
			}
			set
			{
				if ((this._新三包 != value))
				{
					this._新三包 = value;
				}
			}
		}
		
		[Column(Storage="_是否由售后库房发出", DbType="Bit")]
		public System.Nullable<bool> 是否由售后库房发出
		{
			get
			{
				return this._是否由售后库房发出;
			}
			set
			{
				if ((this._是否由售后库房发出 != value))
				{
					this._是否由售后库房发出 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_S_MessageSource")]
	public partial class View_S_MessageSource
	{
		
		private string _来源编号;
		
		private string _来源;
		
		public View_S_MessageSource()
		{
		}
		
		[Column(Storage="_来源编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 来源编号
		{
			get
			{
				return this._来源编号;
			}
			set
			{
				if ((this._来源编号 != value))
				{
					this._来源编号 = value;
				}
			}
		}
		
		[Column(Storage="_来源", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 来源
		{
			get
			{
				return this._来源;
			}
			set
			{
				if ((this._来源 != value))
				{
					this._来源 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_S_ReplaceAccessory")]
	public partial class View_S_ReplaceAccessory
	{
		
		private int _序号;
		
		private string _关联单号;
		
		private string _返回件名称;
		
		private string _返回件图号;
		
		private string _返回规格;
		
		private string _返回件编号;
		
		private string _返回件变速箱编号;
		
		private System.Nullable<System.DateTime> _旧件发出时间;
		
		private System.Nullable<System.DateTime> _返回时间;
		
		private string _更新件名称;
		
		private string _更新件图号;
		
		private string _更新件规格;
		
		private string _更新件编号;
		
		private string _更新件变速箱编号;
		
		private System.Nullable<int> _更换数量;
		
		private string _单位;
		
		private string _备注;
		
		public View_S_ReplaceAccessory()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL IDENTITY")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_关联单号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 关联单号
		{
			get
			{
				return this._关联单号;
			}
			set
			{
				if ((this._关联单号 != value))
				{
					this._关联单号 = value;
				}
			}
		}
		
		[Column(Storage="_返回件名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 返回件名称
		{
			get
			{
				return this._返回件名称;
			}
			set
			{
				if ((this._返回件名称 != value))
				{
					this._返回件名称 = value;
				}
			}
		}
		
		[Column(Storage="_返回件图号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 返回件图号
		{
			get
			{
				return this._返回件图号;
			}
			set
			{
				if ((this._返回件图号 != value))
				{
					this._返回件图号 = value;
				}
			}
		}
		
		[Column(Storage="_返回规格", DbType="VarChar(50)")]
		public string 返回规格
		{
			get
			{
				return this._返回规格;
			}
			set
			{
				if ((this._返回规格 != value))
				{
					this._返回规格 = value;
				}
			}
		}
		
		[Column(Storage="_返回件编号", DbType="VarChar(50)")]
		public string 返回件编号
		{
			get
			{
				return this._返回件编号;
			}
			set
			{
				if ((this._返回件编号 != value))
				{
					this._返回件编号 = value;
				}
			}
		}
		
		[Column(Storage="_返回件变速箱编号", DbType="VarChar(50)")]
		public string 返回件变速箱编号
		{
			get
			{
				return this._返回件变速箱编号;
			}
			set
			{
				if ((this._返回件变速箱编号 != value))
				{
					this._返回件变速箱编号 = value;
				}
			}
		}
		
		[Column(Storage="_旧件发出时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 旧件发出时间
		{
			get
			{
				return this._旧件发出时间;
			}
			set
			{
				if ((this._旧件发出时间 != value))
				{
					this._旧件发出时间 = value;
				}
			}
		}
		
		[Column(Storage="_返回时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 返回时间
		{
			get
			{
				return this._返回时间;
			}
			set
			{
				if ((this._返回时间 != value))
				{
					this._返回时间 = value;
				}
			}
		}
		
		[Column(Storage="_更新件名称", DbType="VarChar(50)")]
		public string 更新件名称
		{
			get
			{
				return this._更新件名称;
			}
			set
			{
				if ((this._更新件名称 != value))
				{
					this._更新件名称 = value;
				}
			}
		}
		
		[Column(Storage="_更新件图号", DbType="VarChar(50)")]
		public string 更新件图号
		{
			get
			{
				return this._更新件图号;
			}
			set
			{
				if ((this._更新件图号 != value))
				{
					this._更新件图号 = value;
				}
			}
		}
		
		[Column(Storage="_更新件规格", DbType="VarChar(50)")]
		public string 更新件规格
		{
			get
			{
				return this._更新件规格;
			}
			set
			{
				if ((this._更新件规格 != value))
				{
					this._更新件规格 = value;
				}
			}
		}
		
		[Column(Storage="_更新件编号", DbType="VarChar(50)")]
		public string 更新件编号
		{
			get
			{
				return this._更新件编号;
			}
			set
			{
				if ((this._更新件编号 != value))
				{
					this._更新件编号 = value;
				}
			}
		}
		
		[Column(Storage="_更新件变速箱编号", DbType="VarChar(50)")]
		public string 更新件变速箱编号
		{
			get
			{
				return this._更新件变速箱编号;
			}
			set
			{
				if ((this._更新件变速箱编号 != value))
				{
					this._更新件变速箱编号 = value;
				}
			}
		}
		
		[Column(Storage="_更换数量", DbType="Int")]
		public System.Nullable<int> 更换数量
		{
			get
			{
				return this._更换数量;
			}
			set
			{
				if ((this._更换数量 != value))
				{
					this._更换数量 = value;
				}
			}
		}
		
		[Column(Storage="_单位", DbType="VarChar(50)")]
		public string 单位
		{
			get
			{
				return this._单位;
			}
			set
			{
				if ((this._单位 != value))
				{
					this._单位 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(50)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_S_ServiceFeedBack")]
	public partial class View_S_ServiceFeedBack
	{
		
		private string _反馈单号;
		
		private string _单据状态;
		
		private string _关联号;
		
		private string _信息来源;
		
		private string _服务站名;
		
		private string _车型;
		
		private string _CVT型号;
		
		private string _CVT编号;
		
		private string _车架号;
		
		private string _客户姓名;
		
		private string _新三包;
		
		private string _反馈人;
		
		private System.Nullable<System.DateTime> _反馈日期;
		
		private string _责任部门;
		
		private string _责任人;
		
		private System.Nullable<System.DateTime> _责任人确认时间;
		
		private string _变速箱状态;
		
		private string _联系人;
		
		private string _联系电话;
		
		private string _问题数量;
		
		private System.Nullable<System.DateTime> _购买日期;
		
		private string _行驶里程;
		
		private string _处理状态;
		
		private System.Nullable<System.DateTime> _旧件发出时间;
		
		private System.Nullable<System.DateTime> _返回时间;
		
		private string _故障代码;
		
		private string _主观故障;
		
		private System.Nullable<bool> _是否CVT故障;
		
		private string _是否返回总成;
		
		private string _客观故障;
		
		private string _故障出现频次;
		
		private string _故障出现的特定条件;
		
		private string _故障说明;
		
		private string _CVT油量;
		
		private string _压力传感器;
		
		private string _主动传感器;
		
		private string _被动传感器;
		
		private string _档位开关;
		
		private string _线速连接状况;
		
		private string _油底壳壳体;
		
		private string _P档;
		
		private string _R档;
		
		private string _N档;
		
		private string _D档;
		
		private string _S档;
		
		private string _诊断及测试情况;
		
		private string _处理措施;
		
		private string _营销主管意见;
		
		private string _营销售后审核人;
		
		private System.Nullable<System.DateTime> _售后审核时间;
		
		private string _质管部意见;
		
		private string _质管意见提出人;
		
		private System.Nullable<System.DateTime> _质管提出时间;
		
		private System.Nullable<System.DateTime> _要求回复时间;
		
		private System.Nullable<int> _出现次数;
		
		private string _责任部门主管;
		
		private System.Nullable<System.DateTime> _责任部门确认时间;
		
		private string _完成要求;
		
		private string _库存产品处理意见;
		
		private string _临时措施;
		
		private string _原因分析;
		
		private string _永久性措施;
		
		private string _是否列入FMEA文件;
		
		private string _质管检查人;
		
		private System.Nullable<System.DateTime> _质管检查时间;
		
		private string _落实情况;
		
		private string _反馈人编号;
		
		private string _责任人编号;
		
		private string _营销售后审核人编号;
		
		private string _质管意见提出人编号;
		
		private string _责任部门主管编号;
		
		private string _部门编码;
		
		private string _质管检查人编号;
		
		private string _是否水平展开;
		
		public View_S_ServiceFeedBack()
		{
		}
		
		[Column(Storage="_反馈单号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 反馈单号
		{
			get
			{
				return this._反馈单号;
			}
			set
			{
				if ((this._反馈单号 != value))
				{
					this._反馈单号 = value;
				}
			}
		}
		
		[Column(Storage="_单据状态", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 单据状态
		{
			get
			{
				return this._单据状态;
			}
			set
			{
				if ((this._单据状态 != value))
				{
					this._单据状态 = value;
				}
			}
		}
		
		[Column(Storage="_关联号", DbType="VarChar(50)")]
		public string 关联号
		{
			get
			{
				return this._关联号;
			}
			set
			{
				if ((this._关联号 != value))
				{
					this._关联号 = value;
				}
			}
		}
		
		[Column(Storage="_信息来源", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 信息来源
		{
			get
			{
				return this._信息来源;
			}
			set
			{
				if ((this._信息来源 != value))
				{
					this._信息来源 = value;
				}
			}
		}
		
		[Column(Storage="_服务站名", DbType="NVarChar(50)")]
		public string 服务站名
		{
			get
			{
				return this._服务站名;
			}
			set
			{
				if ((this._服务站名 != value))
				{
					this._服务站名 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_CVT型号", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CVT型号
		{
			get
			{
				return this._CVT型号;
			}
			set
			{
				if ((this._CVT型号 != value))
				{
					this._CVT型号 = value;
				}
			}
		}
		
		[Column(Storage="_CVT编号", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CVT编号
		{
			get
			{
				return this._CVT编号;
			}
			set
			{
				if ((this._CVT编号 != value))
				{
					this._CVT编号 = value;
				}
			}
		}
		
		[Column(Storage="_车架号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 车架号
		{
			get
			{
				return this._车架号;
			}
			set
			{
				if ((this._车架号 != value))
				{
					this._车架号 = value;
				}
			}
		}
		
		[Column(Storage="_客户姓名", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 客户姓名
		{
			get
			{
				return this._客户姓名;
			}
			set
			{
				if ((this._客户姓名 != value))
				{
					this._客户姓名 = value;
				}
			}
		}
		
		[Column(Storage="_新三包", DbType="VarChar(50)")]
		public string 新三包
		{
			get
			{
				return this._新三包;
			}
			set
			{
				if ((this._新三包 != value))
				{
					this._新三包 = value;
				}
			}
		}
		
		[Column(Storage="_反馈人", DbType="VarChar(50)")]
		public string 反馈人
		{
			get
			{
				return this._反馈人;
			}
			set
			{
				if ((this._反馈人 != value))
				{
					this._反馈人 = value;
				}
			}
		}
		
		[Column(Storage="_反馈日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 反馈日期
		{
			get
			{
				return this._反馈日期;
			}
			set
			{
				if ((this._反馈日期 != value))
				{
					this._反馈日期 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门", DbType="VarChar(50)")]
		public string 责任部门
		{
			get
			{
				return this._责任部门;
			}
			set
			{
				if ((this._责任部门 != value))
				{
					this._责任部门 = value;
				}
			}
		}
		
		[Column(Storage="_责任人", DbType="VarChar(50)")]
		public string 责任人
		{
			get
			{
				return this._责任人;
			}
			set
			{
				if ((this._责任人 != value))
				{
					this._责任人 = value;
				}
			}
		}
		
		[Column(Storage="_责任人确认时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 责任人确认时间
		{
			get
			{
				return this._责任人确认时间;
			}
			set
			{
				if ((this._责任人确认时间 != value))
				{
					this._责任人确认时间 = value;
				}
			}
		}
		
		[Column(Storage="_变速箱状态", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 变速箱状态
		{
			get
			{
				return this._变速箱状态;
			}
			set
			{
				if ((this._变速箱状态 != value))
				{
					this._变速箱状态 = value;
				}
			}
		}
		
		[Column(Storage="_联系人", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 联系人
		{
			get
			{
				return this._联系人;
			}
			set
			{
				if ((this._联系人 != value))
				{
					this._联系人 = value;
				}
			}
		}
		
		[Column(Storage="_联系电话", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 联系电话
		{
			get
			{
				return this._联系电话;
			}
			set
			{
				if ((this._联系电话 != value))
				{
					this._联系电话 = value;
				}
			}
		}
		
		[Column(Storage="_问题数量", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 问题数量
		{
			get
			{
				return this._问题数量;
			}
			set
			{
				if ((this._问题数量 != value))
				{
					this._问题数量 = value;
				}
			}
		}
		
		[Column(Storage="_购买日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 购买日期
		{
			get
			{
				return this._购买日期;
			}
			set
			{
				if ((this._购买日期 != value))
				{
					this._购买日期 = value;
				}
			}
		}
		
		[Column(Storage="_行驶里程", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 行驶里程
		{
			get
			{
				return this._行驶里程;
			}
			set
			{
				if ((this._行驶里程 != value))
				{
					this._行驶里程 = value;
				}
			}
		}
		
		[Column(Storage="_处理状态", DbType="VarChar(50)")]
		public string 处理状态
		{
			get
			{
				return this._处理状态;
			}
			set
			{
				if ((this._处理状态 != value))
				{
					this._处理状态 = value;
				}
			}
		}
		
		[Column(Storage="_旧件发出时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 旧件发出时间
		{
			get
			{
				return this._旧件发出时间;
			}
			set
			{
				if ((this._旧件发出时间 != value))
				{
					this._旧件发出时间 = value;
				}
			}
		}
		
		[Column(Storage="_返回时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 返回时间
		{
			get
			{
				return this._返回时间;
			}
			set
			{
				if ((this._返回时间 != value))
				{
					this._返回时间 = value;
				}
			}
		}
		
		[Column(Storage="_故障代码", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障代码
		{
			get
			{
				return this._故障代码;
			}
			set
			{
				if ((this._故障代码 != value))
				{
					this._故障代码 = value;
				}
			}
		}
		
		[Column(Storage="_主观故障", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 主观故障
		{
			get
			{
				return this._主观故障;
			}
			set
			{
				if ((this._主观故障 != value))
				{
					this._主观故障 = value;
				}
			}
		}
		
		[Column(Storage="_是否CVT故障", DbType="Bit")]
		public System.Nullable<bool> 是否CVT故障
		{
			get
			{
				return this._是否CVT故障;
			}
			set
			{
				if ((this._是否CVT故障 != value))
				{
					this._是否CVT故障 = value;
				}
			}
		}
		
		[Column(Storage="_是否返回总成", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string 是否返回总成
		{
			get
			{
				return this._是否返回总成;
			}
			set
			{
				if ((this._是否返回总成 != value))
				{
					this._是否返回总成 = value;
				}
			}
		}
		
		[Column(Storage="_客观故障", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 客观故障
		{
			get
			{
				return this._客观故障;
			}
			set
			{
				if ((this._客观故障 != value))
				{
					this._客观故障 = value;
				}
			}
		}
		
		[Column(Storage="_故障出现频次", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障出现频次
		{
			get
			{
				return this._故障出现频次;
			}
			set
			{
				if ((this._故障出现频次 != value))
				{
					this._故障出现频次 = value;
				}
			}
		}
		
		[Column(Storage="_故障出现的特定条件", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障出现的特定条件
		{
			get
			{
				return this._故障出现的特定条件;
			}
			set
			{
				if ((this._故障出现的特定条件 != value))
				{
					this._故障出现的特定条件 = value;
				}
			}
		}
		
		[Column(Storage="_故障说明", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 故障说明
		{
			get
			{
				return this._故障说明;
			}
			set
			{
				if ((this._故障说明 != value))
				{
					this._故障说明 = value;
				}
			}
		}
		
		[Column(Storage="_CVT油量", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CVT油量
		{
			get
			{
				return this._CVT油量;
			}
			set
			{
				if ((this._CVT油量 != value))
				{
					this._CVT油量 = value;
				}
			}
		}
		
		[Column(Storage="_压力传感器", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 压力传感器
		{
			get
			{
				return this._压力传感器;
			}
			set
			{
				if ((this._压力传感器 != value))
				{
					this._压力传感器 = value;
				}
			}
		}
		
		[Column(Storage="_主动传感器", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 主动传感器
		{
			get
			{
				return this._主动传感器;
			}
			set
			{
				if ((this._主动传感器 != value))
				{
					this._主动传感器 = value;
				}
			}
		}
		
		[Column(Storage="_被动传感器", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 被动传感器
		{
			get
			{
				return this._被动传感器;
			}
			set
			{
				if ((this._被动传感器 != value))
				{
					this._被动传感器 = value;
				}
			}
		}
		
		[Column(Storage="_档位开关", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 档位开关
		{
			get
			{
				return this._档位开关;
			}
			set
			{
				if ((this._档位开关 != value))
				{
					this._档位开关 = value;
				}
			}
		}
		
		[Column(Storage="_线速连接状况", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 线速连接状况
		{
			get
			{
				return this._线速连接状况;
			}
			set
			{
				if ((this._线速连接状况 != value))
				{
					this._线速连接状况 = value;
				}
			}
		}
		
		[Column(Storage="_油底壳壳体", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 油底壳壳体
		{
			get
			{
				return this._油底壳壳体;
			}
			set
			{
				if ((this._油底壳壳体 != value))
				{
					this._油底壳壳体 = value;
				}
			}
		}
		
		[Column(Storage="_P档", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string P档
		{
			get
			{
				return this._P档;
			}
			set
			{
				if ((this._P档 != value))
				{
					this._P档 = value;
				}
			}
		}
		
		[Column(Storage="_R档", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string R档
		{
			get
			{
				return this._R档;
			}
			set
			{
				if ((this._R档 != value))
				{
					this._R档 = value;
				}
			}
		}
		
		[Column(Storage="_N档", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string N档
		{
			get
			{
				return this._N档;
			}
			set
			{
				if ((this._N档 != value))
				{
					this._N档 = value;
				}
			}
		}
		
		[Column(Storage="_D档", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string D档
		{
			get
			{
				return this._D档;
			}
			set
			{
				if ((this._D档 != value))
				{
					this._D档 = value;
				}
			}
		}
		
		[Column(Storage="_S档", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string S档
		{
			get
			{
				return this._S档;
			}
			set
			{
				if ((this._S档 != value))
				{
					this._S档 = value;
				}
			}
		}
		
		[Column(Storage="_诊断及测试情况", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 诊断及测试情况
		{
			get
			{
				return this._诊断及测试情况;
			}
			set
			{
				if ((this._诊断及测试情况 != value))
				{
					this._诊断及测试情况 = value;
				}
			}
		}
		
		[Column(Storage="_处理措施", DbType="VarChar(1000)")]
		public string 处理措施
		{
			get
			{
				return this._处理措施;
			}
			set
			{
				if ((this._处理措施 != value))
				{
					this._处理措施 = value;
				}
			}
		}
		
		[Column(Storage="_营销主管意见", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 营销主管意见
		{
			get
			{
				return this._营销主管意见;
			}
			set
			{
				if ((this._营销主管意见 != value))
				{
					this._营销主管意见 = value;
				}
			}
		}
		
		[Column(Storage="_营销售后审核人", DbType="VarChar(50)")]
		public string 营销售后审核人
		{
			get
			{
				return this._营销售后审核人;
			}
			set
			{
				if ((this._营销售后审核人 != value))
				{
					this._营销售后审核人 = value;
				}
			}
		}
		
		[Column(Storage="_售后审核时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 售后审核时间
		{
			get
			{
				return this._售后审核时间;
			}
			set
			{
				if ((this._售后审核时间 != value))
				{
					this._售后审核时间 = value;
				}
			}
		}
		
		[Column(Storage="_质管部意见", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 质管部意见
		{
			get
			{
				return this._质管部意见;
			}
			set
			{
				if ((this._质管部意见 != value))
				{
					this._质管部意见 = value;
				}
			}
		}
		
		[Column(Storage="_质管意见提出人", DbType="VarChar(50)")]
		public string 质管意见提出人
		{
			get
			{
				return this._质管意见提出人;
			}
			set
			{
				if ((this._质管意见提出人 != value))
				{
					this._质管意见提出人 = value;
				}
			}
		}
		
		[Column(Storage="_质管提出时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 质管提出时间
		{
			get
			{
				return this._质管提出时间;
			}
			set
			{
				if ((this._质管提出时间 != value))
				{
					this._质管提出时间 = value;
				}
			}
		}
		
		[Column(Storage="_要求回复时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 要求回复时间
		{
			get
			{
				return this._要求回复时间;
			}
			set
			{
				if ((this._要求回复时间 != value))
				{
					this._要求回复时间 = value;
				}
			}
		}
		
		[Column(Storage="_出现次数", DbType="Int")]
		public System.Nullable<int> 出现次数
		{
			get
			{
				return this._出现次数;
			}
			set
			{
				if ((this._出现次数 != value))
				{
					this._出现次数 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门主管", DbType="VarChar(50)")]
		public string 责任部门主管
		{
			get
			{
				return this._责任部门主管;
			}
			set
			{
				if ((this._责任部门主管 != value))
				{
					this._责任部门主管 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门确认时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 责任部门确认时间
		{
			get
			{
				return this._责任部门确认时间;
			}
			set
			{
				if ((this._责任部门确认时间 != value))
				{
					this._责任部门确认时间 = value;
				}
			}
		}
		
		[Column(Storage="_完成要求", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 完成要求
		{
			get
			{
				return this._完成要求;
			}
			set
			{
				if ((this._完成要求 != value))
				{
					this._完成要求 = value;
				}
			}
		}
		
		[Column(Storage="_库存产品处理意见", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 库存产品处理意见
		{
			get
			{
				return this._库存产品处理意见;
			}
			set
			{
				if ((this._库存产品处理意见 != value))
				{
					this._库存产品处理意见 = value;
				}
			}
		}
		
		[Column(Storage="_临时措施", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 临时措施
		{
			get
			{
				return this._临时措施;
			}
			set
			{
				if ((this._临时措施 != value))
				{
					this._临时措施 = value;
				}
			}
		}
		
		[Column(Storage="_原因分析", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 原因分析
		{
			get
			{
				return this._原因分析;
			}
			set
			{
				if ((this._原因分析 != value))
				{
					this._原因分析 = value;
				}
			}
		}
		
		[Column(Storage="_永久性措施", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 永久性措施
		{
			get
			{
				return this._永久性措施;
			}
			set
			{
				if ((this._永久性措施 != value))
				{
					this._永久性措施 = value;
				}
			}
		}
		
		[Column(Storage="_是否列入FMEA文件", DbType="Char(2)")]
		public string 是否列入FMEA文件
		{
			get
			{
				return this._是否列入FMEA文件;
			}
			set
			{
				if ((this._是否列入FMEA文件 != value))
				{
					this._是否列入FMEA文件 = value;
				}
			}
		}
		
		[Column(Storage="_质管检查人", DbType="VarChar(50)")]
		public string 质管检查人
		{
			get
			{
				return this._质管检查人;
			}
			set
			{
				if ((this._质管检查人 != value))
				{
					this._质管检查人 = value;
				}
			}
		}
		
		[Column(Storage="_质管检查时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 质管检查时间
		{
			get
			{
				return this._质管检查时间;
			}
			set
			{
				if ((this._质管检查时间 != value))
				{
					this._质管检查时间 = value;
				}
			}
		}
		
		[Column(Storage="_落实情况", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 落实情况
		{
			get
			{
				return this._落实情况;
			}
			set
			{
				if ((this._落实情况 != value))
				{
					this._落实情况 = value;
				}
			}
		}
		
		[Column(Storage="_反馈人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 反馈人编号
		{
			get
			{
				return this._反馈人编号;
			}
			set
			{
				if ((this._反馈人编号 != value))
				{
					this._反馈人编号 = value;
				}
			}
		}
		
		[Column(Storage="_责任人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 责任人编号
		{
			get
			{
				return this._责任人编号;
			}
			set
			{
				if ((this._责任人编号 != value))
				{
					this._责任人编号 = value;
				}
			}
		}
		
		[Column(Storage="_营销售后审核人编号", DbType="VarChar(50)")]
		public string 营销售后审核人编号
		{
			get
			{
				return this._营销售后审核人编号;
			}
			set
			{
				if ((this._营销售后审核人编号 != value))
				{
					this._营销售后审核人编号 = value;
				}
			}
		}
		
		[Column(Storage="_质管意见提出人编号", DbType="VarChar(50)")]
		public string 质管意见提出人编号
		{
			get
			{
				return this._质管意见提出人编号;
			}
			set
			{
				if ((this._质管意见提出人编号 != value))
				{
					this._质管意见提出人编号 = value;
				}
			}
		}
		
		[Column(Storage="_责任部门主管编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 责任部门主管编号
		{
			get
			{
				return this._责任部门主管编号;
			}
			set
			{
				if ((this._责任部门主管编号 != value))
				{
					this._责任部门主管编号 = value;
				}
			}
		}
		
		[Column(Storage="_部门编码", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 部门编码
		{
			get
			{
				return this._部门编码;
			}
			set
			{
				if ((this._部门编码 != value))
				{
					this._部门编码 = value;
				}
			}
		}
		
		[Column(Storage="_质管检查人编号", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string 质管检查人编号
		{
			get
			{
				return this._质管检查人编号;
			}
			set
			{
				if ((this._质管检查人编号 != value))
				{
					this._质管检查人编号 = value;
				}
			}
		}
		
		[Column(Storage="_是否水平展开", DbType="Char(2)")]
		public string 是否水平展开
		{
			get
			{
				return this._是否水平展开;
			}
			set
			{
				if ((this._是否水平展开 != value))
				{
					this._是否水平展开 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_DownloadLog")]
	public partial class View_TCU_UP_DownloadLog
	{
		
		private int _序号;
		
		private string _用户名;
		
		private string _公司名称;
		
		private string _联系方式;
		
		private string _联系地址;
		
		private string _备注;
		
		private string _数据包类型名称;
		
		private double _数据包版本;
		
		private string _下载日期;
		
		private string _IP地址;
		
		public View_TCU_UP_DownloadLog()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_用户名", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this._用户名 = value;
				}
			}
		}
		
		[Column(Storage="_公司名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 公司名称
		{
			get
			{
				return this._公司名称;
			}
			set
			{
				if ((this._公司名称 != value))
				{
					this._公司名称 = value;
				}
			}
		}
		
		[Column(Storage="_联系方式", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系方式
		{
			get
			{
				return this._联系方式;
			}
			set
			{
				if ((this._联系方式 != value))
				{
					this._联系方式 = value;
				}
			}
		}
		
		[Column(Storage="_联系地址", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系地址
		{
			get
			{
				return this._联系地址;
			}
			set
			{
				if ((this._联系地址 != value))
				{
					this._联系地址 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_数据包版本", DbType="Float NOT NULL")]
		public double 数据包版本
		{
			get
			{
				return this._数据包版本;
			}
			set
			{
				if ((this._数据包版本 != value))
				{
					this._数据包版本 = value;
				}
			}
		}
		
		[Column(Storage="_下载日期", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 下载日期
		{
			get
			{
				return this._下载日期;
			}
			set
			{
				if ((this._下载日期 != value))
				{
					this._下载日期 = value;
				}
			}
		}
		
		[Column(Storage="_IP地址", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP地址
		{
			get
			{
				return this._IP地址;
			}
			set
			{
				if ((this._IP地址 != value))
				{
					this._IP地址 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_DownloadLog(DataMonitor)")]
	public partial class View_TCU_UP_DownloadLogDataMonitor
	{
		
		private int _序号;
		
		private string _用户名;
		
		private string _公司名称;
		
		private string _联系方式;
		
		private string _联系地址;
		
		private string _备注;
		
		private string _数据包类型名称;
		
		private double _数据包版本;
		
		private string _下载日期;
		
		private string _IP地址;
		
		public View_TCU_UP_DownloadLogDataMonitor()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_用户名", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this._用户名 = value;
				}
			}
		}
		
		[Column(Storage="_公司名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 公司名称
		{
			get
			{
				return this._公司名称;
			}
			set
			{
				if ((this._公司名称 != value))
				{
					this._公司名称 = value;
				}
			}
		}
		
		[Column(Storage="_联系方式", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系方式
		{
			get
			{
				return this._联系方式;
			}
			set
			{
				if ((this._联系方式 != value))
				{
					this._联系方式 = value;
				}
			}
		}
		
		[Column(Storage="_联系地址", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系地址
		{
			get
			{
				return this._联系地址;
			}
			set
			{
				if ((this._联系地址 != value))
				{
					this._联系地址 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_数据包版本", DbType="Float NOT NULL")]
		public double 数据包版本
		{
			get
			{
				return this._数据包版本;
			}
			set
			{
				if ((this._数据包版本 != value))
				{
					this._数据包版本 = value;
				}
			}
		}
		
		[Column(Storage="_下载日期", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 下载日期
		{
			get
			{
				return this._下载日期;
			}
			set
			{
				if ((this._下载日期 != value))
				{
					this._下载日期 = value;
				}
			}
		}
		
		[Column(Storage="_IP地址", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP地址
		{
			get
			{
				return this._IP地址;
			}
			set
			{
				if ((this._IP地址 != value))
				{
					this._IP地址 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_FILE")]
	public partial class View_TCU_UP_FILE
	{
		
		private int _序号;
		
		private int _数据包类型编号;
		
		private string _数据包类型名称;
		
		private double _程序版本;
		
		private string _版本说明;
		
		private string _文件名称;
		
		private System.Data.Linq.Binary _文件内容;
		
		private int _文件大小;
		
		private string _文件大小说明;
		
		private System.DateTime _上传日期;
		
		private string _备注;
		
		private string _更新日志;
		
		public View_TCU_UP_FILE()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型编号", DbType="Int NOT NULL")]
		public int 数据包类型编号
		{
			get
			{
				return this._数据包类型编号;
			}
			set
			{
				if ((this._数据包类型编号 != value))
				{
					this._数据包类型编号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_程序版本", DbType="Float NOT NULL")]
		public double 程序版本
		{
			get
			{
				return this._程序版本;
			}
			set
			{
				if ((this._程序版本 != value))
				{
					this._程序版本 = value;
				}
			}
		}
		
		[Column(Storage="_版本说明", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 版本说明
		{
			get
			{
				return this._版本说明;
			}
			set
			{
				if ((this._版本说明 != value))
				{
					this._版本说明 = value;
				}
			}
		}
		
		[Column(Storage="_文件名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 文件名称
		{
			get
			{
				return this._文件名称;
			}
			set
			{
				if ((this._文件名称 != value))
				{
					this._文件名称 = value;
				}
			}
		}
		
		[Column(Storage="_文件内容", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary 文件内容
		{
			get
			{
				return this._文件内容;
			}
			set
			{
				if ((this._文件内容 != value))
				{
					this._文件内容 = value;
				}
			}
		}
		
		[Column(Storage="_文件大小", DbType="Int NOT NULL")]
		public int 文件大小
		{
			get
			{
				return this._文件大小;
			}
			set
			{
				if ((this._文件大小 != value))
				{
					this._文件大小 = value;
				}
			}
		}
		
		[Column(Storage="_文件大小说明", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 文件大小说明
		{
			get
			{
				return this._文件大小说明;
			}
			set
			{
				if ((this._文件大小说明 != value))
				{
					this._文件大小说明 = value;
				}
			}
		}
		
		[Column(Storage="_上传日期", DbType="DateTime NOT NULL")]
		public System.DateTime 上传日期
		{
			get
			{
				return this._上传日期;
			}
			set
			{
				if ((this._上传日期 != value))
				{
					this._上传日期 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_更新日志", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 更新日志
		{
			get
			{
				return this._更新日志;
			}
			set
			{
				if ((this._更新日志 != value))
				{
					this._更新日志 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_FILE(DataMonitor)")]
	public partial class View_TCU_UP_FILEDataMonitor
	{
		
		private int _序号;
		
		private int _数据包类型编号;
		
		private string _数据包类型名称;
		
		private double _程序版本;
		
		private string _版本说明;
		
		private string _文件名称;
		
		private System.Data.Linq.Binary _文件内容;
		
		private int _文件大小;
		
		private string _文件大小说明;
		
		private System.DateTime _上传日期;
		
		private string _备注;
		
		private string _更新日志;
		
		public View_TCU_UP_FILEDataMonitor()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型编号", DbType="Int NOT NULL")]
		public int 数据包类型编号
		{
			get
			{
				return this._数据包类型编号;
			}
			set
			{
				if ((this._数据包类型编号 != value))
				{
					this._数据包类型编号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_程序版本", DbType="Float NOT NULL")]
		public double 程序版本
		{
			get
			{
				return this._程序版本;
			}
			set
			{
				if ((this._程序版本 != value))
				{
					this._程序版本 = value;
				}
			}
		}
		
		[Column(Storage="_版本说明", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 版本说明
		{
			get
			{
				return this._版本说明;
			}
			set
			{
				if ((this._版本说明 != value))
				{
					this._版本说明 = value;
				}
			}
		}
		
		[Column(Storage="_文件名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 文件名称
		{
			get
			{
				return this._文件名称;
			}
			set
			{
				if ((this._文件名称 != value))
				{
					this._文件名称 = value;
				}
			}
		}
		
		[Column(Storage="_文件内容", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary 文件内容
		{
			get
			{
				return this._文件内容;
			}
			set
			{
				if ((this._文件内容 != value))
				{
					this._文件内容 = value;
				}
			}
		}
		
		[Column(Storage="_文件大小", DbType="Int NOT NULL")]
		public int 文件大小
		{
			get
			{
				return this._文件大小;
			}
			set
			{
				if ((this._文件大小 != value))
				{
					this._文件大小 = value;
				}
			}
		}
		
		[Column(Storage="_文件大小说明", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 文件大小说明
		{
			get
			{
				return this._文件大小说明;
			}
			set
			{
				if ((this._文件大小说明 != value))
				{
					this._文件大小说明 = value;
				}
			}
		}
		
		[Column(Storage="_上传日期", DbType="DateTime NOT NULL")]
		public System.DateTime 上传日期
		{
			get
			{
				return this._上传日期;
			}
			set
			{
				if ((this._上传日期 != value))
				{
					this._上传日期 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_更新日志", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 更新日志
		{
			get
			{
				return this._更新日志;
			}
			set
			{
				if ((this._更新日志 != value))
				{
					this._更新日志 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_PROGRAM_UPDATE_LOG")]
	public partial class View_TCU_UP_PROGRAM_UPDATE_LOG
	{
		
		private int _序号;
		
		private string _车型;
		
		private double _程序版本;
		
		private System.DateTime _更新日期;
		
		private string _更新说明;
		
		public View_TCU_UP_PROGRAM_UPDATE_LOG()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL IDENTITY")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_程序版本", DbType="Float NOT NULL")]
		public double 程序版本
		{
			get
			{
				return this._程序版本;
			}
			set
			{
				if ((this._程序版本 != value))
				{
					this._程序版本 = value;
				}
			}
		}
		
		[Column(Storage="_更新日期", DbType="DateTime NOT NULL")]
		public System.DateTime 更新日期
		{
			get
			{
				return this._更新日期;
			}
			set
			{
				if ((this._更新日期 != value))
				{
					this._更新日期 = value;
				}
			}
		}
		
		[Column(Storage="_更新说明", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string 更新说明
		{
			get
			{
				return this._更新说明;
			}
			set
			{
				if ((this._更新说明 != value))
				{
					this._更新说明 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_PROGRAM_UPDATE_LOG(DataMonitor)")]
	public partial class View_TCU_UP_PROGRAM_UPDATE_LOGDataMonitor
	{
		
		private int _序号;
		
		private string _车型;
		
		private double _程序版本;
		
		private System.DateTime _更新日期;
		
		private string _更新说明;
		
		public View_TCU_UP_PROGRAM_UPDATE_LOGDataMonitor()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL IDENTITY")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_程序版本", DbType="Float NOT NULL")]
		public double 程序版本
		{
			get
			{
				return this._程序版本;
			}
			set
			{
				if ((this._程序版本 != value))
				{
					this._程序版本 = value;
				}
			}
		}
		
		[Column(Storage="_更新日期", DbType="DateTime NOT NULL")]
		public System.DateTime 更新日期
		{
			get
			{
				return this._更新日期;
			}
			set
			{
				if ((this._更新日期 != value))
				{
					this._更新日期 = value;
				}
			}
		}
		
		[Column(Storage="_更新说明", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string 更新说明
		{
			get
			{
				return this._更新说明;
			}
			set
			{
				if ((this._更新说明 != value))
				{
					this._更新说明 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_ProgramType")]
	public partial class View_TCU_UP_ProgramType
	{
		
		private int _数据包类型编号;
		
		private string _数据包类型名称;
		
		private string _备注;
		
		public View_TCU_UP_ProgramType()
		{
		}
		
		[Column(Storage="_数据包类型编号", DbType="Int NOT NULL")]
		public int 数据包类型编号
		{
			get
			{
				return this._数据包类型编号;
			}
			set
			{
				if ((this._数据包类型编号 != value))
				{
					this._数据包类型编号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_ProgramType(DataMonitor)")]
	public partial class View_TCU_UP_ProgramTypeDataMonitor
	{
		
		private int _数据包类型编号;
		
		private string _数据包类型名称;
		
		private string _备注;
		
		public View_TCU_UP_ProgramTypeDataMonitor()
		{
		}
		
		[Column(Storage="_数据包类型编号", DbType="Int NOT NULL")]
		public int 数据包类型编号
		{
			get
			{
				return this._数据包类型编号;
			}
			set
			{
				if ((this._数据包类型编号 != value))
				{
					this._数据包类型编号 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类型名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类型名称
		{
			get
			{
				return this._数据包类型名称;
			}
			set
			{
				if ((this._数据包类型名称 != value))
				{
					this._数据包类型名称 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_TcuNumber(DataMonitor)")]
	public partial class View_TCU_UP_TcuNumberDataMonitor
	{
		
		private string _TCU编号;
		
		private string _备注;
		
		public View_TCU_UP_TcuNumberDataMonitor()
		{
		}
		
		[Column(Storage="_TCU编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TCU编号
		{
			get
			{
				return this._TCU编号;
			}
			set
			{
				if ((this._TCU编号 != value))
				{
					this._TCU编号 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_UserInfo")]
	public partial class View_TCU_UP_UserInfo
	{
		
		private string _MachineCode;
		
		private string _UserName;
		
		private bool _IsEnable;
		
		private int _CheckType;
		
		private int _AllowCount;
		
		private System.DateTime _EndDate;
		
		private int _AllowProgramType;
		
		private string _ProgramTypeName;
		
		private string _Company;
		
		private string _Contact;
		
		private string _ContactAddress;
		
		private string _Remark;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateLog;
		
		public View_TCU_UP_UserInfo()
		{
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this._MachineCode = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this._IsEnable = value;
				}
			}
		}
		
		[Column(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this._CheckType = value;
				}
			}
		}
		
		[Column(Storage="_AllowCount", DbType="Int NOT NULL")]
		public int AllowCount
		{
			get
			{
				return this._AllowCount;
			}
			set
			{
				if ((this._AllowCount != value))
				{
					this._AllowCount = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_AllowProgramType", DbType="Int NOT NULL")]
		public int AllowProgramType
		{
			get
			{
				return this._AllowProgramType;
			}
			set
			{
				if ((this._AllowProgramType != value))
				{
					this._AllowProgramType = value;
				}
			}
		}
		
		[Column(Storage="_ProgramTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramTypeName
		{
			get
			{
				return this._ProgramTypeName;
			}
			set
			{
				if ((this._ProgramTypeName != value))
				{
					this._ProgramTypeName = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[Column(Storage="_ContactAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactAddress
		{
			get
			{
				return this._ContactAddress;
			}
			set
			{
				if ((this._ContactAddress != value))
				{
					this._ContactAddress = value;
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this._UpdateLog = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_UserInfo(DataMonitor)")]
	public partial class View_TCU_UP_UserInfoDataMonitor
	{
		
		private string _MachineCode;
		
		private string _UserName;
		
		private bool _IsEnable;
		
		private bool _IsAdvancedUser;
		
		private int _CheckType;
		
		private int _AllowCount;
		
		private System.DateTime _EndDate;
		
		private int _AllowProgramType;
		
		private string _ProgramTypeName;
		
		private string _Company;
		
		private string _Contact;
		
		private string _ContactAddress;
		
		private string _Remark;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateLog;
		
		public View_TCU_UP_UserInfoDataMonitor()
		{
		}
		
		[Column(Storage="_MachineCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string MachineCode
		{
			get
			{
				return this._MachineCode;
			}
			set
			{
				if ((this._MachineCode != value))
				{
					this._MachineCode = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this._IsEnable = value;
				}
			}
		}
		
		[Column(Storage="_IsAdvancedUser", DbType="Bit NOT NULL")]
		public bool IsAdvancedUser
		{
			get
			{
				return this._IsAdvancedUser;
			}
			set
			{
				if ((this._IsAdvancedUser != value))
				{
					this._IsAdvancedUser = value;
				}
			}
		}
		
		[Column(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this._CheckType = value;
				}
			}
		}
		
		[Column(Storage="_AllowCount", DbType="Int NOT NULL")]
		public int AllowCount
		{
			get
			{
				return this._AllowCount;
			}
			set
			{
				if ((this._AllowCount != value))
				{
					this._AllowCount = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_AllowProgramType", DbType="Int NOT NULL")]
		public int AllowProgramType
		{
			get
			{
				return this._AllowProgramType;
			}
			set
			{
				if ((this._AllowProgramType != value))
				{
					this._AllowProgramType = value;
				}
			}
		}
		
		[Column(Storage="_ProgramTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramTypeName
		{
			get
			{
				return this._ProgramTypeName;
			}
			set
			{
				if ((this._ProgramTypeName != value))
				{
					this._ProgramTypeName = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[Column(Storage="_ContactAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactAddress
		{
			get
			{
				return this._ContactAddress;
			}
			set
			{
				if ((this._ContactAddress != value))
				{
					this._ContactAddress = value;
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[Column(Storage="_UpdateLog", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateLog
		{
			get
			{
				return this._UpdateLog;
			}
			set
			{
				if ((this._UpdateLog != value))
				{
					this._UpdateLog = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_VehicleModel")]
	public partial class View_TCU_UP_VehicleModel
	{
		
		private string _车型;
		
		private string _备注;
		
		private string _车型代号;
		
		private System.Nullable<System.DateTime> _登记时间;
		
		public View_TCU_UP_VehicleModel()
		{
		}
		
		[Column(Storage="_车型", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[Column(Storage="_车型代号", DbType="VarChar(20)")]
		public string 车型代号
		{
			get
			{
				return this._车型代号;
			}
			set
			{
				if ((this._车型代号 != value))
				{
					this._车型代号 = value;
				}
			}
		}
		
		[Column(Storage="_登记时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 登记时间
		{
			get
			{
				return this._登记时间;
			}
			set
			{
				if ((this._登记时间 != value))
				{
					this._登记时间 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_WRITE_LOG")]
	public partial class View_TCU_UP_WRITE_LOG
	{
		
		private int _序号;
		
		private string _TCU编号;
		
		private string _车型;
		
		private string _烧写版本;
		
		private int _烧写次数;
		
		private string _烧写日期;
		
		private string _烧写备注;
		
		private string _用户名;
		
		private string _数据包类别;
		
		private string _公司名称;
		
		private string _联系方式;
		
		private string _联系地址;
		
		private string _用户备注;
		
		public View_TCU_UP_WRITE_LOG()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_TCU编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TCU编号
		{
			get
			{
				return this._TCU编号;
			}
			set
			{
				if ((this._TCU编号 != value))
				{
					this._TCU编号 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_烧写版本", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 烧写版本
		{
			get
			{
				return this._烧写版本;
			}
			set
			{
				if ((this._烧写版本 != value))
				{
					this._烧写版本 = value;
				}
			}
		}
		
		[Column(Storage="_烧写次数", DbType="Int NOT NULL")]
		public int 烧写次数
		{
			get
			{
				return this._烧写次数;
			}
			set
			{
				if ((this._烧写次数 != value))
				{
					this._烧写次数 = value;
				}
			}
		}
		
		[Column(Storage="_烧写日期", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 烧写日期
		{
			get
			{
				return this._烧写日期;
			}
			set
			{
				if ((this._烧写日期 != value))
				{
					this._烧写日期 = value;
				}
			}
		}
		
		[Column(Storage="_烧写备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 烧写备注
		{
			get
			{
				return this._烧写备注;
			}
			set
			{
				if ((this._烧写备注 != value))
				{
					this._烧写备注 = value;
				}
			}
		}
		
		[Column(Storage="_用户名", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this._用户名 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类别", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类别
		{
			get
			{
				return this._数据包类别;
			}
			set
			{
				if ((this._数据包类别 != value))
				{
					this._数据包类别 = value;
				}
			}
		}
		
		[Column(Storage="_公司名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 公司名称
		{
			get
			{
				return this._公司名称;
			}
			set
			{
				if ((this._公司名称 != value))
				{
					this._公司名称 = value;
				}
			}
		}
		
		[Column(Storage="_联系方式", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系方式
		{
			get
			{
				return this._联系方式;
			}
			set
			{
				if ((this._联系方式 != value))
				{
					this._联系方式 = value;
				}
			}
		}
		
		[Column(Storage="_联系地址", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系地址
		{
			get
			{
				return this._联系地址;
			}
			set
			{
				if ((this._联系地址 != value))
				{
					this._联系地址 = value;
				}
			}
		}
		
		[Column(Storage="_用户备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 用户备注
		{
			get
			{
				return this._用户备注;
			}
			set
			{
				if ((this._用户备注 != value))
				{
					this._用户备注 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TCU_UP_WRITE_LOG(DataMonitor)")]
	public partial class View_TCU_UP_WRITE_LOGDataMonitor
	{
		
		private int _序号;
		
		private string _TCU编号;
		
		private string _车型;
		
		private string _烧写版本;
		
		private int _烧写次数;
		
		private string _烧写日期;
		
		private string _烧写备注;
		
		private string _用户名;
		
		private string _数据包类别;
		
		private string _公司名称;
		
		private string _联系方式;
		
		private string _联系地址;
		
		private string _用户备注;
		
		public View_TCU_UP_WRITE_LOGDataMonitor()
		{
		}
		
		[Column(Storage="_序号", DbType="Int NOT NULL")]
		public int 序号
		{
			get
			{
				return this._序号;
			}
			set
			{
				if ((this._序号 != value))
				{
					this._序号 = value;
				}
			}
		}
		
		[Column(Storage="_TCU编号", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TCU编号
		{
			get
			{
				return this._TCU编号;
			}
			set
			{
				if ((this._TCU编号 != value))
				{
					this._TCU编号 = value;
				}
			}
		}
		
		[Column(Storage="_车型", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 车型
		{
			get
			{
				return this._车型;
			}
			set
			{
				if ((this._车型 != value))
				{
					this._车型 = value;
				}
			}
		}
		
		[Column(Storage="_烧写版本", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 烧写版本
		{
			get
			{
				return this._烧写版本;
			}
			set
			{
				if ((this._烧写版本 != value))
				{
					this._烧写版本 = value;
				}
			}
		}
		
		[Column(Storage="_烧写次数", DbType="Int NOT NULL")]
		public int 烧写次数
		{
			get
			{
				return this._烧写次数;
			}
			set
			{
				if ((this._烧写次数 != value))
				{
					this._烧写次数 = value;
				}
			}
		}
		
		[Column(Storage="_烧写日期", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 烧写日期
		{
			get
			{
				return this._烧写日期;
			}
			set
			{
				if ((this._烧写日期 != value))
				{
					this._烧写日期 = value;
				}
			}
		}
		
		[Column(Storage="_烧写备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 烧写备注
		{
			get
			{
				return this._烧写备注;
			}
			set
			{
				if ((this._烧写备注 != value))
				{
					this._烧写备注 = value;
				}
			}
		}
		
		[Column(Storage="_用户名", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this._用户名 = value;
				}
			}
		}
		
		[Column(Storage="_数据包类别", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 数据包类别
		{
			get
			{
				return this._数据包类别;
			}
			set
			{
				if ((this._数据包类别 != value))
				{
					this._数据包类别 = value;
				}
			}
		}
		
		[Column(Storage="_公司名称", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 公司名称
		{
			get
			{
				return this._公司名称;
			}
			set
			{
				if ((this._公司名称 != value))
				{
					this._公司名称 = value;
				}
			}
		}
		
		[Column(Storage="_联系方式", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系方式
		{
			get
			{
				return this._联系方式;
			}
			set
			{
				if ((this._联系方式 != value))
				{
					this._联系方式 = value;
				}
			}
		}
		
		[Column(Storage="_联系地址", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string 联系地址
		{
			get
			{
				return this._联系地址;
			}
			set
			{
				if ((this._联系地址 != value))
				{
					this._联系地址 = value;
				}
			}
		}
		
		[Column(Storage="_用户备注", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 用户备注
		{
			get
			{
				return this._用户备注;
			}
			set
			{
				if ((this._用户备注 != value))
				{
					this._用户备注 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
